{"internalDocumentIDStore":{"internalIdToId":["15621935-2","15621935-3","15621935-4","15621935-5","15621935-6","15621935-7","15621935-8","15621935-9","15621935-10","15621935-11","15621935-12","15621935-13","15621935-14","15621935-15","15621935-16","15621935-17","15621935-18","15621935-19","15621935-20","15621935-21","15621935-22","15621935-23","15621935-24","15621935-25","15621935-26","15621935-27","15621935-28","15621935-29","15621935-30","15621935-31","15621935-32","15621935-33","15621935-34","15621935-35","15621935-36","15621935-37","15621935-38","15621935-39","15621935-40","15621935-41","15621935-42","15621935-43","15621935-44","15621935-45","15621935-46","15621935-47","15621935-48","15621935-49","15621935-50","15621935-51","15621935-52","15621935-53","15621935-54","15621935-55","15621935-56","15621935-57","15621935-58","15621935-59","15621935-60","15621935-61","15621935-62","15621935-63","15621935-64","15621935-65","15621935-66","15621935-67","15621935-68","15621935-69","15621935-70","15621935-71","15621935-72","15621935-73","15621935-74","15621935-75","15621935-76","15621935-77","15621935-78","15621935-79","15621935-80","15621935-81","15621935-82","15621935-83","15621935-84","15621935-85","15621935-86","15621935-87","15621935-88","15621935-89","15621935-90","15621935-91","15621935-92","15621935-93","15621935-94","15621935-95","15621935-96","15621935-97","15621935-98","15621935-99","15621935-100","15621935-101","15621935-102","15621935-103","15621935-104","15621935-105","15621935-106","15621935-107","15621935-108","15621935-109","15621935-110","15621935-111","15621935-112","15621935-113","15621935-114","15621935-115","15621935-116","15621935-117","15621935-118","15621935-119","15621935-120","15621935-121","15621935-122","15621935-123","15621935-124","15621935-125","15621935-126","15621935-127","15621935-128","15621935-129","15621935-130","15621935-131","15621935-132","15621935-133","15621935-134","15621935-135","15621935-136","15621935-137","15621935-138","15621935-139","15621935-140","15621935-141","15621935-142","15621935-143","15621935-144","15621935-145","15621935-146","15621935-147","15621935-148","15621935-149","15621935-150","15621935-151","15621935-152","15621935-153","15621935-154","15621935-155","15621935-156","15621935-157","15621935-158","15621935-159","15621935-160","15621935-161","15621935-162","15621935-163","15621935-164","15621935-165","15621935-166","15621935-167","15621935-168","15621935-169","15621935-170","15621935-171","15621935-172","15621935-173","15621935-174","15621935-175","15621935-176","15621935-177","15621935-178","15621935-179","15621935-180","15621935-181","15621935-182","15621935-183","15621935-184","15621935-185","15621935-186","15621935-187","15621935-188","15621935-189","15621935-190","15621935-191","15621935-192","15621935-193","15621935-194","15621935-195","15621935-196","15621935-197","15621935-198","15621935-199","15621935-200","15621935-201","15621935-202","15621935-203","15621935-204","15621935-205","15621935-206","15621935-207","15621935-208","15621935-209","15621935-210","15621935-211","15621935-212","15621935-213","15621935-214","15621935-215","15621935-216","15621935-217","15621935-218","15621935-219","15621935-220","15621935-221","15621935-222","15621935-223","15621935-224","15621935-225","15621935-226","15621935-227","15621935-228","15621935-229","15621935-230","15621935-231","15621935-232","15621935-233","15621935-234","15621935-235","15621935-236","15621935-237","15621935-238","15621935-239","15621935-240","15621935-241","15621935-242","15621935-243","15621935-244","15621935-245","15621935-246","15621935-247","15621935-248","15621935-249","15621935-250","15621935-251","15621935-252","15621935-253","15621935-254","15621935-255","15621935-256","15621935-257","15621935-258","15621935-259","15621935-260","15621935-261","15621935-262","15621935-263","15621935-264","15621935-265","15621935-266","15621935-267","15621935-268","15621935-269","15621935-270","15621935-271","15621935-272","15621935-273","15621935-274","15621935-275","15621935-276","15621935-277","15621935-278","15621935-279"]},"index":{"indexes":{"title":{"type":"Radix","node":{"w":"","s":"","c":{"0":{"w":"0","s":"0","c":{},"d":[74,138],"e":true},"2":{"w":"2","s":"2","c":{},"d":[148],"e":true},"a":{"w":"a","s":"a","c":{"p":{"w":"ap","s":"p","c":{"i":{"w":"api","s":"i","c":{},"d":[1,56],"e":true},"p":{"w":"appl","s":"pl","c":{"y":{"w":"applyaction","s":"yaction","c":{},"d":[178],"e":true},"i":{"w":"application","s":"ication","c":{"s":{"w":"applications","s":"s","c":{},"d":[242],"e":true}},"d":[241],"e":true}},"d":[],"e":false}},"d":[],"e":false},"c":{"w":"ac","s":"c","c":{"t":{"w":"action","s":"tion","c":{"r":{"w":"actionresult","s":"result","c":{},"d":[8],"e":true},"s":{"w":"actions","s":"s","c":{},"d":[55,211],"e":true}},"d":[61,248],"e":true},"c":{"w":"accessors","s":"cessors","c":{},"d":[142],"e":true}},"d":[],"e":false},"r":{"w":"ar","s":"r","c":{"r":{"w":"array","s":"ray","c":{"p":{"w":"arrayproxy","s":"proxy","c":{},"d":[19,101],"e":true},"s":{"w":"arrays","s":"s","c":{},"d":[147,233],"e":true}},"d":[194],"e":true},"o":{"w":"around","s":"ound","c":{},"d":[62],"e":true},"g":{"w":"arguments","s":"guments","c":{},"d":[99],"e":true},"e":{"w":"aren't","s":"en't","c":{},"d":[109],"e":true}},"d":[],"e":false},"d":{"w":"ad","s":"d","c":{"a":{"w":"adapter","s":"apter","c":{},"d":[2],"e":true},"d":{"w":"addi","s":"di","c":{"t":{"w":"additional","s":"tional","c":{},"d":[59,62],"e":true},"n":{"w":"adding","s":"ng","c":{},"d":[277],"e":true}},"d":[],"e":false}},"d":[],"e":false},"n":{"w":"an","s":"n","c":{"d":{"w":"and","s":"d","c":{},"d":[23,24,31,42,50,74,102,133,147,159,174,194,226,231,234],"e":true},"y":{"w":"any","s":"y","c":{"m":{"w":"anymore","s":"more","c":{},"d":[109,113],"e":true}},"d":[67,65],"e":true}},"d":[56,105,152],"e":true},"w":{"w":"awesome","s":"wesome","c":{},"d":[30],"e":true},"b":{"w":"about","s":"bout","c":{},"d":[62,272],"e":true},"m":{"w":"am","s":"m","c":{},"d":[64],"e":true},"s":{"w":"as","s":"s","c":{"y":{"w":"asynchronous","s":"ynchronous","c":{},"d":[174],"e":true}},"d":[63],"e":true},"l":{"w":"al","s":"l","c":{"r":{"w":"already","s":"ready","c":{},"d":[64],"e":true},"l":{"w":"allerrors","s":"lerrors","c":{},"d":[82],"e":true}},"d":[],"e":false},"f":{"w":"after","s":"fter","c":{},"d":[53],"e":true},"g":{"w":"again","s":"gain","c":{},"d":[81],"e":true},"v":{"w":"available","s":"vailable","c":{},"d":[131],"e":true},"u":{"w":"auto","s":"uto","c":{"m":{"w":"automatic","s":"matic","c":{},"d":[139],"e":true},"f":{"w":"autofocusonerror","s":"focusonerror","c":{},"d":[191],"e":true}},"d":[],"e":false}},"d":[27,28,25,34,41,43,39,42,47,58,60,61,63,67,65,100,120,125,167,246,266,267],"e":true},"s":{"w":"s","s":"s","c":{"u":{"w":"su","s":"u","c":{"p":{"w":"sup","s":"p","c":{"e":{"w":"super","s":"er","c":{"v":{"w":"supervalidate","s":"validate","c":{"d":{"w":"supervalidated","s":"d","c":{},"d":[97],"e":true},"s":{"w":"supervalidatesync","s":"sync","c":{},"d":[98,141],"e":true}},"d":[2,3,4,94],"e":true},"f":{"w":"superform","s":"form","c":{"s":{"w":"superforms","s":"s","c":{},"d":[67,73,91,133,264],"e":true}},"d":[10,18,19,78,112,113,266],"e":true},"d":{"w":"superdebug","s":"debug","c":{},"d":[22,121,122,129,150],"e":true}},"d":[118,119,121],"e":true},"p":{"w":"support","s":"port","c":{},"d":[113,126,134,135,136,133,145,151,149],"e":true}},"d":[],"e":false},"b":{"w":"submit","s":"bmit","c":{"t":{"w":"submitt","s":"t","c":{"i":{"w":"submitting","s":"ing","c":{},"d":[63],"e":true},"e":{"w":"submitted","s":"ed","c":{},"d":[53],"e":true}},"d":[],"e":false}},"d":[57,251,256],"e":true}},"d":[],"e":false},"e":{"w":"se","s":"e","c":{"t":{"w":"set","s":"t","c":{"e":{"w":"seterror","s":"error","c":{},"d":[5,80,81,185],"e":true},"m":{"w":"setmessage","s":"message","c":{},"d":[84],"e":true},"t":{"w":"setting","s":"ting","c":{},"d":[195,224],"e":true}},"d":[],"e":false},"e":{"w":"see","s":"e","c":{},"d":[52],"e":true},"p":{"w":"separate","s":"parate","c":{},"d":[58],"e":true},"r":{"w":"server","s":"rver","c":{},"d":[62,52,89,186,244],"e":true},"l":{"w":"select","s":"lect","c":{},"d":[65],"e":true}},"d":[],"e":false},"t":{"w":"st","s":"t","c":{"r":{"w":"str","s":"r","c":{"i":{"w":"stri","s":"i","c":{"n":{"w":"string","s":"ng","c":{"p":{"w":"stringproxy","s":"proxy","c":{},"d":[17],"e":true}},"d":[100,142],"e":true},"c":{"w":"strict","s":"ct","c":{},"d":[249],"e":true}},"d":[],"e":false},"o":{"w":"strongly","s":"ongly","c":{},"d":[220],"e":true}},"d":[],"e":false},"a":{"w":"sta","s":"a","c":{"t":{"w":"stat","s":"t","c":{"u":{"w":"status","s":"us","c":{},"d":[8,106,217],"e":true},"e":{"w":"state","s":"e","c":{},"d":[256],"e":true}},"d":[],"e":false},"c":{"w":"stackblitz","s":"ckblitz","c":{},"d":[37],"e":true},"r":{"w":"start","s":"rt","c":{"e":{"w":"started","s":"ed","c":{},"d":[35,264,265],"e":true}},"d":[39],"e":true}},"d":[],"e":false},"y":{"w":"styling","s":"yling","c":{},"d":[130],"e":true},"o":{"w":"store","s":"ore","c":{"s":{"w":"stores","s":"s","c":{},"d":[129],"e":true}},"d":[143],"e":true},"i":{"w":"stickynavbar","s":"ickynavbar","c":{},"d":[192],"e":true},"e":{"w":"steps","s":"eps","c":{},"d":[278],"e":true}},"d":[],"e":false},"c":{"w":"sc","s":"c","c":{"h":{"w":"schema","s":"hema","c":{"s":{"w":"schemas","s":"s","c":{},"d":[40,104,169,234],"e":true}},"d":[7,66,95,107,167,197,250,268,267],"e":true},"r":{"w":"scrolltoerror","s":"rolltoerror","c":{},"d":[190],"e":true}},"d":[],"e":false},"p":{"w":"sp","s":"p","c":{"o":{"w":"sponsor","s":"onsor","c":{"i":{"w":"sponsoring","s":"ing","c":{},"d":[31],"e":true},"s":{"w":"sponsors","s":"s","c":{},"d":[118,119],"e":true}},"d":[120],"e":true},"e":{"w":"speci","s":"eci","c":{"f":{"w":"specific","s":"fic","c":{},"d":[113],"e":true},"a":{"w":"special","s":"al","c":{},"d":[166],"e":true}},"d":[],"e":false},"a":{"w":"spa","s":"a","c":{},"d":[248,241,242],"e":true}},"d":[],"e":false},"v":{"w":"sveltekit","s":"veltekit","c":{},"d":[38,183],"e":true},"y":{"w":"syncflashmessage","s":"yncflashmessage","c":{},"d":[71],"e":true},"i":{"w":"si","s":"i","c":{"d":{"w":"side-effects","s":"de-effects","c":{},"d":[108],"e":true},"m":{"w":"simplified","s":"mplified","c":{},"d":[160],"e":true},"n":{"w":"single","s":"ngle","c":{"-":{"w":"single-page","s":"-page","c":{},"d":[241,242],"e":true}},"d":[213],"e":true}},"d":[],"e":false},"w":{"w":"switching","s":"witching","c":{},"d":[169],"e":true},"a":{"w":"same","s":"ame","c":{},"d":[223],"e":true},"n":{"w":"snapshots","s":"napshots","c":{},"d":[238],"e":true}},"d":[],"e":false},"m":{"w":"m","s":"m","c":{"e":{"w":"me","s":"e","c":{"s":{"w":"message","s":"ssage","c":{"s":{"w":"messages","s":"s","c":{},"d":[66,69,197,217],"e":true}},"d":[6,84,114,115,219,220,221],"e":true},"t":{"w":"met","s":"t","c":{"a":{"w":"meta","s":"a","c":{},"d":[85],"e":true},"h":{"w":"method","s":"hod","c":{},"d":[99,156,158],"e":true}},"d":[],"e":false}},"d":[],"e":false},"i":{"w":"migrat","s":"igrat","c":{"e":{"w":"migrate","s":"e","c":{},"d":[74,161],"e":true},"i":{"w":"migration","s":"ion","c":{},"d":[76,91],"e":true}},"d":[],"e":false},"u":{"w":"mu","s":"u","c":{"s":{"w":"must","s":"st","c":{},"d":[105,100,152],"e":true},"l":{"w":"multi","s":"lti","c":{"-":{"w":"multi-type","s":"-type","c":{},"d":[153],"e":true},"p":{"w":"multiple","s":"ple","c":{"s":{"w":"multiplesubmits","s":"submits","c":{},"d":[253],"e":true}},"d":[214,223],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"mo","s":"o","c":{"v":{"w":"moved","s":"ved","c":{},"d":[103],"e":true},"d":{"w":"mod","s":"d","c":{"i":{"w":"modifying","s":"ifying","c":{},"d":[177],"e":true},"e":{"w":"mode","s":"e","c":{},"d":[241,249],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"ma","s":"a","c":{"k":{"w":"making","s":"king","c":{},"d":[183],"e":true},"n":{"w":"manually","s":"nually","c":{},"d":[215],"e":true}},"d":[],"e":false}},"d":[],"e":false},"d":{"w":"d","s":"d","c":{"e":{"w":"de","s":"e","c":{"f":{"w":"default","s":"fault","c":{"v":{"w":"defaultval","s":"val","c":{"u":{"w":"defaultvalues","s":"ues","c":{},"d":[7,140],"e":true},"i":{"w":"defaultvalidators","s":"idators","c":{},"d":[103],"e":true}},"d":[],"e":false},"s":{"w":"defaults","s":"s","c":{},"d":[11,49,98,182],"e":true},"d":{"w":"defaultdata","s":"data","c":{},"d":[83],"e":true}},"d":[46,47,109,108,105,154,152,183],"e":true},"s":{"w":"designing","s":"signing","c":{},"d":[34],"e":true},"l":{"w":"delet","s":"let","c":{"i":{"w":"deleting","s":"ing","c":{},"d":[43],"e":true},"e":{"w":"delete","s":"e","c":{},"d":[67],"e":true}},"d":[],"e":false},"b":{"w":"deb","s":"b","c":{"u":{"w":"debug","s":"ug","c":{"g":{"w":"debugging","s":"ging","c":{},"d":[121,274],"e":true}},"d":[127],"e":true},"o":{"w":"debouncing","s":"ouncing","c":{},"d":[174],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"dat","s":"at","c":{"e":{"w":"date","s":"e","c":{"p":{"w":"dateproxy","s":"proxy","c":{},"d":[16],"e":true}},"d":[237],"e":true},"a":{"w":"data","s":"a","c":{"b":{"w":"database","s":"base","c":{},"d":[40,39,41,271],"e":true},"t":{"w":"datatype","s":"type","c":{},"d":[153,229],"e":true}},"d":[2,8,52,59,67,62,132,127,221,228,247,275],"e":true}},"d":[],"e":false},"o":{"w":"do","s":"o","c":{"n":{"w":"donat","s":"nat","c":{"i":{"w":"donati","s":"i","c":{"o":{"w":"donations","s":"ons","c":{},"d":[33],"e":true},"n":{"w":"donating","s":"ng","c":{},"d":[31],"e":true}},"d":[],"e":false},"e":{"w":"donate","s":"e","c":{},"d":[120],"e":true}},"d":[],"e":false},"e":{"w":"does","s":"es","c":{},"d":[65,113],"e":true}},"d":[68],"e":true},"i":{"w":"di","s":"i","c":{"r":{"w":"directly","s":"rectly","c":{},"d":[66],"e":true},"s":{"w":"displaying","s":"splaying","c":{},"d":[128,245,273,276],"e":true}},"d":[],"e":false}},"d":[],"e":false},"l":{"w":"l","s":"l","c":{"o":{"w":"lo","s":"o","c":{"g":{"w":"login","s":"gin","c":{},"d":[9],"e":true},"a":{"w":"load","s":"ad","c":{"i":{"w":"loading","s":"ing","c":{},"d":[254,257],"e":true}},"d":[60,269],"e":true},"v":{"w":"loves","s":"ves","c":{},"d":[129],"e":true}},"d":[],"e":false},"i":{"w":"li","s":"i","c":{"s":{"w":"listing","s":"sting","c":{},"d":[44,196],"e":true},"m":{"w":"limit","s":"mit","c":{"i":{"w":"limiting","s":"ing","c":{},"d":[117],"e":true},"a":{"w":"limitations","s":"ations","c":{},"d":[222],"e":true}},"d":[],"e":false},"k":{"w":"like","s":"ke","c":{},"d":[183],"e":true}},"d":[],"e":false},"e":{"w":"legacy","s":"egacy","c":{},"d":[75],"e":true},"a":{"w":"label","s":"abel","c":{},"d":[125],"e":true}},"d":[],"e":false},"p":{"w":"p","s":"p","c":{"r":{"w":"pr","s":"r","c":{"o":{"w":"pro","s":"o","c":{"x":{"w":"prox","s":"x","c":{"y":{"w":"proxy","s":"y","c":{},"d":[12,21,81,235],"e":true},"i":{"w":"proxies","s":"ies","c":{},"d":[145,236],"e":true}},"d":[],"e":false},"j":{"w":"project","s":"ject","c":{},"d":[38],"e":true},"g":{"w":"progr","s":"gr","c":{"a":{"w":"programmatically","s":"ammatically","c":{},"d":[57,221],"e":true},"e":{"w":"progressive","s":"essive","c":{},"d":[176,277],"e":true}},"d":[],"e":false},"b":{"w":"problems","s":"blems","c":{},"d":[111],"e":true},"p":{"w":"props","s":"ps","c":{},"d":[123],"e":true},"m":{"w":"promise","s":"mise","c":{},"d":[126],"e":true}},"d":[],"e":false},"e":{"w":"prevent","s":"event","c":{"i":{"w":"preventing","s":"ing","c":{},"d":[216,263],"e":true}},"d":[53],"e":true},"i":{"w":"primitive","s":"imitive","c":{},"d":[233],"e":true}},"d":[],"e":false},"a":{"w":"pa","s":"a","c":{"t":{"w":"path","s":"th","c":{"s":{"w":"paths","s":"s","c":{},"d":[29,234],"e":true}},"d":[142],"e":true},"r":{"w":"par","s":"r","c":{"s":{"w":"parse","s":"se","c":{},"d":[63],"e":true},"a":{"w":"parameter","s":"ameter","c":{"s":{"w":"parameters","s":"s","c":{},"d":[97],"e":true}},"d":[114,115],"e":true}},"d":[],"e":false},"g":{"w":"page","s":"ge","c":{},"d":[132,223,244,246],"e":true}},"d":[],"e":false},"l":{"w":"playground","s":"layground","c":{},"d":[45],"e":true},"o":{"w":"po","s":"o","c":{"s":{"w":"post","s":"st","c":{"i":{"w":"posting","s":"ing","c":{},"d":[62,275],"e":true},"e":{"w":"posted","s":"ed","c":{},"d":[52],"e":true}},"d":[56],"e":true},"p":{"w":"populate","s":"pulate","c":{},"d":[271],"e":true}},"d":[],"e":false}},"d":[],"e":false},"i":{"w":"i","s":"i","c":{"n":{"w":"in","s":"n","c":{"t":{"w":"int","s":"t","c":{"p":{"w":"intproxy","s":"proxy","c":{},"d":[13,102,159],"e":true},"e":{"w":"inte","s":"e","c":{"r":{"w":"interface","s":"rface","c":{},"d":[34],"e":true},"g":{"w":"integrate","s":"grate","c":{},"d":[73],"e":true}},"d":[],"e":false},"o":{"w":"into","s":"o","c":{},"d":[58],"e":true}},"d":[],"e":false},"p":{"w":"input","s":"put","c":{"s":{"w":"inputs","s":"s","c":{},"d":[50],"e":true}},"d":[166,213,237],"e":true},"s":{"w":"instead","s":"stead","c":{},"d":[55,244],"e":true},"v":{"w":"invalidateall","s":"validateall","c":{},"d":[179],"e":true},"i":{"w":"initial","s":"itial","c":{"i":{"w":"initializing","s":"izing","c":{},"d":[269],"e":true}},"d":[187,247],"e":true},"d":{"w":"indicators","s":"dicators","c":{},"d":[257],"e":true}},"d":[23,24,30,52,66,67,104,111,197,211,269],"e":true},"'":{"w":"i'm","s":"'m","c":{},"d":[63,64],"e":true},"t":{"w":"it","s":"t","c":{"'":{"w":"it's","s":"'s","c":{},"d":[52,53],"e":true}},"d":[175,198,227,240],"e":true},"d":{"w":"id","s":"d","c":{},"d":[100,139,224],"e":true},"s":{"w":"is","s":"s","c":{"t":{"w":"istainted","s":"tainted","c":{},"d":[106,156],"e":true},"s":{"w":"issues","s":"sues","c":{},"d":[237],"e":true}},"d":[98,112,114,99,154,153,262],"e":true},"m":{"w":"import","s":"mport","c":{"s":{"w":"imports","s":"s","c":{},"d":[111,160],"e":true},"a":{"w":"important","s":"ant","c":{},"d":[93,272],"e":true}},"d":[],"e":false},"f":{"w":"if","s":"f","c":{},"d":[262],"e":true}},"d":[52,68,55,56,53,59,65],"e":true},"n":{"w":"n","s":"n","c":{"u":{"w":"nu","s":"u","c":{"m":{"w":"numberproxy","s":"mberproxy","c":{},"d":[14,102,159],"e":true},"l":{"w":"nullable","s":"llable","c":{},"d":[48],"e":true}},"d":[],"e":false},"a":{"w":"narrowing","s":"arrowing","c":{},"d":[29],"e":true},"e":{"w":"ne","s":"e","c":{"w":{"w":"new","s":"w","c":{},"d":[38,116,143,138,156,158,148],"e":true},"s":{"w":"nested","s":"sted","c":{},"d":[228,231,234,236],"e":true},"x":{"w":"next","s":"xt","c":{},"d":[278],"e":true}},"d":[],"e":false},"o":{"w":"no","s":"o","c":{"t":{"w":"not","s":"t","c":{"e":{"w":"note","s":"e","c":{"s":{"w":"notes","s":"s","c":{},"d":[162],"e":true}},"d":[272],"e":true}},"d":[52,113],"e":true},"e":{"w":"noerrors","s":"errors","c":{},"d":[90],"e":true},"w":{"w":"now","s":"w","c":{},"d":[161],"e":true}},"d":[108,99],"e":true}},"d":[],"e":false},"b":{"w":"b","s":"b","c":{"o":{"w":"bo","s":"o","c":{"o":{"w":"booleanproxy","s":"oleanproxy","c":{},"d":[15],"e":true},"d":{"w":"body","s":"dy","c":{},"d":[64],"e":true}},"d":[],"e":false},"e":{"w":"be","s":"e","c":{"i":{"w":"being","s":"ing","c":{},"d":[53],"e":true},"e":{"w":"been","s":"en","c":{},"d":[64],"e":true},"t":{"w":"better","s":"tter","c":{},"d":[145],"e":true},"h":{"w":"behav","s":"hav","c":{"e":{"w":"behave","s":"e","c":{},"d":[183],"e":true},"i":{"w":"behavior","s":"ior","c":{},"d":[177,251],"e":true}},"d":[],"e":false}},"d":[58,100,120,153],"e":true},"u":{"w":"bu","s":"u","c":{"t":{"w":"but","s":"t","c":{"t":{"w":"button","s":"ton","c":{},"d":[67],"e":true}},"d":[52],"e":true},"g":{"w":"bug","s":"g","c":{},"d":[137],"e":true},"i":{"w":"built-in","s":"ilt-in","c":{},"d":[164],"e":true}},"d":[],"e":false},"i":{"w":"biggest","s":"iggest","c":{},"d":[93],"e":true},"y":{"w":"by","s":"y","c":{},"d":[154],"e":true},"r":{"w":"browser","s":"rowser","c":{},"d":[164],"e":true}},"d":[],"e":false},"f":{"w":"f","s":"f","c":{"o":{"w":"for","s":"or","c":{"m":{"w":"form","s":"m","c":{"f":{"w":"formfieldproxy","s":"fieldproxy","c":{},"d":[18,28],"e":true},"s":{"w":"forms","s":"s","c":{"n":{"w":"formsnap","s":"nap","c":{},"d":[73],"e":true}},"d":[23,24,223],"e":true},"a":{"w":"formats","s":"ats","c":{},"d":[166],"e":true},"-":{"w":"form-level","s":"-level","c":{},"d":[194],"e":true}},"d":[5,6,13,14,15,16,17,26,25,40,58,61,65,57,52,53,55,59,63,139,146,154,183,187,211,245,248,261,262,263,270,271,269,273],"e":true}},"d":[29,67,108,131,133,147,144,145,159,264],"e":true},"i":{"w":"fi","s":"i","c":{"e":{"w":"field","s":"eld","c":{"p":{"w":"fieldproxy","s":"proxy","c":{},"d":[20,27],"e":true},"n":{"w":"fieldname","s":"name","c":{},"d":[13,14,15,16,17,18,19,20],"e":true},"s":{"w":"fields","s":"s","c":{},"d":[23,24,26,109,112,113,259],"e":true}},"d":[5,30,195],"e":true},"l":{"w":"file","s":"le","c":{"s":{"w":"files","s":"s","c":{},"d":[128,211,214,215],"e":true}},"d":[54,149,210,213,216,246],"e":true},"r":{"w":"firsterror","s":"rsterror","c":{},"d":[79],"e":true}},"d":[],"e":false},"a":{"w":"fa","s":"a","c":{"c":{"w":"factor","s":"ctor","c":{"i":{"w":"factoring","s":"ing","c":{},"d":[25,26],"e":true},"e":{"w":"factored","s":"ed","c":{},"d":[58],"e":true}},"d":[],"e":false},"q":{"w":"faq","s":"q","c":{},"d":[51],"e":true}},"d":[],"e":false},"r":{"w":"fr","s":"r","c":{"o":{"w":"from","s":"om","c":{},"d":[41,60,61,53,271],"e":true},"e":{"w":"free","s":"ee","c":{},"d":[135],"e":true}},"d":[],"e":false},"u":{"w":"function","s":"unction","c":{"s":{"w":"functions","s":"s","c":{},"d":[81],"e":true}},"d":[60,269],"e":true},"l":{"w":"fl","s":"l","c":{"a":{"w":"flash","s":"ash","c":{"m":{"w":"flashmessage","s":"message","c":{},"d":[72,115],"e":true}},"d":[69],"e":true},"o":{"w":"flowchart","s":"owchart","c":{},"d":[200],"e":true}},"d":[],"e":false},"e":{"w":"features","s":"eatures","c":{},"d":[116],"e":true}},"d":[],"e":false},"r":{"w":"r","s":"r","c":{"e":{"w":"re","s":"e","c":{"f":{"w":"ref","s":"f","c":{"e":{"w":"reference","s":"erence","c":{},"d":[1,123],"e":true},"i":{"w":"refine","s":"ine","c":{},"d":[195],"e":true}},"d":[],"e":false},"t":{"w":"return","s":"turn","c":{"i":{"w":"returning","s":"ing","c":{},"d":[211],"e":true}},"d":[4,59,272],"e":true},"q":{"w":"requ","s":"qu","c":{"e":{"w":"request","s":"est","c":{},"d":[9],"e":true},"i":{"w":"require","s":"ire","c":{"d":{"w":"required","s":"d","c":{},"d":[109],"e":true},"m":{"w":"requirements","s":"ments","c":{},"d":[230],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"reading","s":"ading","c":{},"d":[41],"e":true},"u":{"w":"reuse","s":"use","c":{},"d":[68],"e":true},"s":{"w":"res","s":"s","c":{"p":{"w":"response","s":"ponse","c":{},"d":[63],"e":true},"e":{"w":"reset","s":"et","c":{"f":{"w":"resetform","s":"form","c":{},"d":[87,181],"e":true}},"d":[53,144,154],"e":true}},"d":[],"e":false},"n":{"w":"renamed","s":"named","c":{},"d":[98,115,99],"e":true},"m":{"w":"removed","s":"moved","c":{},"d":[112,114],"e":true},"p":{"w":"reporting","s":"porting","c":{},"d":[137],"e":true},"l":{"w":"release","s":"lease","c":{},"d":[162],"e":true}},"d":[],"e":false},"o":{"w":"row","s":"ow","c":{},"d":[67],"e":true},"a":{"w":"rate","s":"ate","c":{},"d":[117],"e":true}},"d":[],"e":false},"o":{"w":"o","s":"o","c":{"p":{"w":"opti","s":"pti","c":{"o":{"w":"option","s":"on","c":{"s":{"w":"options","s":"s","c":{},"d":[3,10,6,2,8,13,14,15,16,17,18,19,5,68,86,89,144],"e":true},"a":{"w":"optional","s":"al","c":{},"d":[48],"e":true}},"d":[100,103,159],"e":true},"m":{"w":"optimi","s":"mi","c":{"z":{"w":"optimized","s":"zed","c":{},"d":[96],"e":true},"s":{"w":"optimistic","s":"stic","c":{},"d":[180],"e":true}},"d":[],"e":false}},"d":[],"e":false},"b":{"w":"object","s":"bject","c":{"s":{"w":"objects","s":"s","c":{},"d":[12,147,235],"e":true}},"d":[20],"e":true},"u":{"w":"out","s":"ut","c":{},"d":[25,26,58,175,198,227,240],"e":true},"t":{"w":"other","s":"ther","c":{},"d":[62],"e":true},"f":{"w":"of","s":"f","c":{},"d":[55,111,244],"e":true},"n":{"w":"on","s":"n","c":{"e":{"w":"onerror","s":"error","c":{},"d":[72,114,115,208],"e":true},"c":{"w":"onchange","s":"change","c":{},"d":[157,209],"e":true},"l":{"w":"only","s":"ly","c":{},"d":[153],"e":true},"s":{"w":"onsubmit","s":"submit","c":{},"d":[201],"e":true},"r":{"w":"onresult","s":"result","c":{},"d":[204],"e":true},"u":{"w":"onupdate","s":"update","c":{"d":{"w":"onupdated","s":"d","c":{},"d":[207],"e":true}},"d":[206],"e":true}},"d":[67,146,223,224],"e":true}},"d":[],"e":false},"t":{"w":"t","s":"t","c":{"y":{"w":"type","s":"ype","c":{"e":{"w":"typeerror","s":"error","c":{},"d":[64],"e":true},"d":{"w":"typed","s":"d","c":{},"d":[220],"e":true}},"d":[8,4,29,97],"e":true},"h":{"w":"th","s":"h","c":{"e":{"w":"the","s":"e","c":{},"d":[30,44,41,52,62,65,57,53,64,66,59,93,103,121,146,177,183,182,197,219,221,223,224,245,258,261,262,263,269,273],"e":true},"a":{"w":"that","s":"at","c":{},"d":[68],"e":true}},"d":[],"e":false},"u":{"w":"tutorial","s":"utorial","c":{},"d":[36,264],"e":true},"e":{"w":"test","s":"est","c":{},"d":[39,175,198,227,240],"e":true},"o":{"w":"to","s":"o","c":{"g":{"w":"together","s":"gether","c":{},"d":[59],"e":true},"p":{"w":"top-level","s":"p-level","c":{},"d":[247],"e":true}},"d":[54,57,66,68,56,62,52,74,106,98,115,99,120,182],"e":true},"a":{"w":"ta","s":"a","c":{"i":{"w":"taint","s":"int","c":{"e":{"w":"tainted","s":"ed","c":{},"d":[65,106,155,259,262],"e":true},"i":{"w":"tainting","s":"ing","c":{},"d":[263],"e":true}},"d":[],"e":false},"b":{"w":"table","s":"ble","c":{},"d":[67],"e":true}},"d":[],"e":false},"r":{"w":"troubleshooting","s":"roubleshooting","c":{},"d":[226],"e":true},"s":{"w":"ts","s":"s","c":{},"d":[244,246],"e":true},"i":{"w":"timers","s":"imers","c":{},"d":[254,258],"e":true}},"d":[],"e":false},"e":{"w":"e","s":"e","c":{"x":{"w":"ex","s":"x","c":{"a":{"w":"example","s":"ample","c":{"s":{"w":"examples","s":"s","c":{},"d":[124,212],"e":true}},"d":[21,9,67,232],"e":true},"p":{"w":"explicit","s":"plicit","c":{},"d":[49,105,152],"e":true},"t":{"w":"ext","s":"t","c":{"e":{"w":"external","s":"ernal","c":{},"d":[56],"e":true},"r":{"w":"extra","s":"ra","c":{},"d":[144],"e":true}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"error","s":"rror","c":{"s":{"w":"errors","s":"s","c":{"e":{"w":"errorselector","s":"elector","c":{},"d":[88,189],"e":true}},"d":[63,147,186,196,187,195,194,231,276],"e":true}},"d":[5,66,184,197],"e":true},"n":{"w":"en","s":"n","c":{"u":{"w":"enums","s":"ums","c":{},"d":[50,104,105],"e":true},"d":{"w":"endpoints","s":"dpoints","c":{},"d":[55],"e":true},"h":{"w":"enhance","s":"hance","c":{"m":{"w":"enhancement","s":"ment","c":{},"d":[176,277],"e":true}},"d":[177,225],"e":true}},"d":[],"e":false},"a":{"w":"ea","s":"a","c":{"s":{"w":"easily","s":"sily","c":{},"d":[68],"e":true},"c":{"w":"each","s":"ch","c":{},"d":[67],"e":true}},"d":[],"e":false},"l":{"w":"element","s":"lement","c":{},"d":[65],"e":true},"m":{"w":"empty","s":"mpty","c":{},"d":[79,145,159,270],"e":true},"v":{"w":"event","s":"vent","c":{"s":{"w":"events","s":"s","c":{},"d":[199],"e":true}},"d":[157,200],"e":true}},"d":[],"e":false},"u":{"w":"u","s":"u","c":{"s":{"w":"us","s":"s","c":{"i":{"w":"using","s":"ing","c":{},"d":[27,28,30,167,221,244],"e":true},"e":{"w":"use","s":"e","c":{"r":{"w":"user","s":"r","c":{"s":{"w":"users","s":"s","c":{},"d":[44],"e":true}},"d":[41,43,42],"e":true},"d":{"w":"used","s":"d","c":{},"d":[153],"e":true}},"d":[55,67,65,106,177,225],"e":true},"a":{"w":"usage","s":"age","c":{},"d":[70,188,205,218,239,243,255,260],"e":true}},"d":[],"e":false},"p":{"w":"up","s":"p","c":{"d":{"w":"updat","s":"dat","c":{"i":{"w":"updating","s":"ing","c":{},"d":[42,77],"e":true},"e":{"w":"update","s":"e","c":{"s":{"w":"updates","s":"s","c":{},"d":[155,180],"e":true}},"d":[111],"e":true}},"d":[],"e":false},"l":{"w":"upload","s":"load","c":{"s":{"w":"uploads","s":"s","c":{},"d":[54,210,216],"e":true}},"d":[149],"e":true}},"d":[],"e":false},"n":{"w":"un","s":"n","c":{"t":{"w":"untainting","s":"tainting","c":{},"d":[113,261],"e":true},"i":{"w":"union","s":"ion","c":{"s":{"w":"unions","s":"s","c":{},"d":[152,153],"e":true}},"d":[151],"e":true}},"d":[],"e":false}},"d":[],"e":false},"c":{"w":"c","s":"c","c":{"o":{"w":"co","s":"o","c":{"m":{"w":"com","s":"m","c":{"p":{"w":"compo","s":"po","c":{"n":{"w":"component","s":"nent","c":{"i":{"w":"componentized","s":"ized","c":{},"d":[30],"e":true},"s":{"w":"components","s":"s","c":{},"d":[23,24,110],"e":true}},"d":[58,121],"e":true},"s":{"w":"composing","s":"sing","c":{},"d":[127],"e":true}},"d":[],"e":false},"m":{"w":"comm","s":"m","c":{"o":{"w":"common","s":"on","c":{},"d":[68,205],"e":true},"e":{"w":"commercial","s":"ercial","c":{},"d":[136],"e":true}},"d":[],"e":false}},"d":[],"e":false},"n":{"w":"con","s":"n","c":{"t":{"w":"contributing","s":"tributing","c":{},"d":[31,32],"e":true},"s":{"w":"cons","s":"s","c":{"u":{"w":"consumed","s":"umed","c":{},"d":[64],"e":true},"t":{"w":"constraints","s":"traints","c":{},"d":[165,231],"e":true}},"d":[],"e":false},"f":{"w":"configuration","s":"figuration","c":{},"d":[226],"e":true}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"cr","s":"r","c":{"e":{"w":"creating","s":"eating","c":{},"d":[42,39,266,267],"e":true},"u":{"w":"crud","s":"ud","c":{},"d":[34],"e":true}},"d":[],"e":false},"h":{"w":"ch","s":"h","c":{"a":{"w":"chang","s":"ang","c":{"i":{"w":"changing","s":"ing","c":{},"d":[47],"e":true},"e":{"w":"change","s":"e","c":{"s":{"w":"changes","s":"s","c":{},"d":[65,92,107],"e":true},"d":{"w":"changed","s":"d","c":{},"d":[97],"e":true}},"d":[93,182],"e":true}},"d":[],"e":false},"e":{"w":"check","s":"eck","c":{},"d":[106,262],"e":true}},"d":[],"e":false},"a":{"w":"ca","s":"a","c":{"n":{"w":"can","s":"n","c":{},"d":[55,56,58,67,53,59,153],"e":true},"c":{"w":"caching","s":"ching","c":{},"d":[95,268],"e":true},"s":{"w":"case","s":"se","c":{},"d":[111],"e":true},"t":{"w":"catch-all","s":"tch-all","c":{},"d":[250],"e":true}},"d":[],"e":false},"u":{"w":"custom","s":"ustom","c":{"i":{"w":"customiz","s":"iz","c":{"e":{"w":"customize","s":"e","c":{},"d":[66],"e":true},"a":{"w":"customization","s":"ation","c":{},"d":[131],"e":true},"i":{"w":"customizing","s":"ing","c":{},"d":[197],"e":true}},"d":[],"e":false},"v":{"w":"customvalidity","s":"validity","c":{},"d":[171,193],"e":true}},"d":[130],"e":true},"l":{"w":"cl","s":"l","c":{"i":{"w":"client","s":"ient","c":{"-":{"w":"client-side","s":"-side","c":{},"d":[96,163],"e":true}},"d":[86,146,188,224],"e":true},"e":{"w":"clearonsubmit","s":"earonsubmit","c":{},"d":[252],"e":true}},"d":[],"e":false},"s":{"w":"css","s":"ss","c":{},"d":[131],"e":true}},"d":[],"e":false},"w":{"w":"w","s":"w","c":{"a":{"w":"wa","s":"a","c":{"y":{"w":"way","s":"y","c":{"s":{"w":"ways","s":"s","c":{},"d":[30],"e":true}},"d":[62],"e":true},"n":{"w":"want","s":"nt","c":{},"d":[68],"e":true}},"d":[],"e":false},"h":{"w":"wh","s":"h","c":{"a":{"w":"what","s":"at","c":{"'":{"w":"what's","s":"'s","c":{},"d":[138,148],"e":true}},"d":[62],"e":true},"y":{"w":"why","s":"y","c":{},"d":[64,65,63],"e":true},"e":{"w":"when","s":"en","c":{},"d":[63,65,153,182],"e":true},"o":{"w":"whole","s":"ole","c":{},"d":[146],"e":true}},"d":[],"e":false},"i":{"w":"with","s":"ith","c":{"o":{"w":"without","s":"out","c":{},"d":[67,65,225,246],"e":true}},"d":[59,67,73,109,99,125,195,233,247],"e":true}},"d":[],"e":false},"g":{"w":"g","s":"g","c":{"e":{"w":"get","s":"et","c":{"t":{"w":"getting","s":"ting","c":{},"d":[35,63,64],"e":true}},"d":[65,264,265],"e":true},"r":{"w":"group","s":"roup","c":{},"d":[50],"e":true},"u":{"w":"guide","s":"uide","c":{},"d":[76,91],"e":true}},"d":[],"e":false},"v":{"w":"v","s":"v","c":{"1":{"w":"v1","s":"1","c":{},"d":[138],"e":true},"2":{"w":"v2","s":"2","c":{},"d":[91],"e":true},"i":{"w":"vi","s":"i","c":{"d":{"w":"video","s":"deo","c":{},"d":[36],"e":true},"s":{"w":"visualizing","s":"sualizing","c":{},"d":[258],"e":true}},"d":[],"e":false},"s":{"w":"vs","s":"s","c":{},"d":[40,48],"e":true},"a":{"w":"va","s":"a","c":{"l":{"w":"val","s":"l","c":{"u":{"w":"value","s":"ue","c":{"s":{"w":"values","s":"s","c":{},"d":[46,109,108,233,272],"e":true}},"d":[47,105,145,152],"e":true},"i":{"w":"valid","s":"id","c":{"a":{"w":"validat","s":"at","c":{"i":{"w":"validati","s":"i","c":{"o":{"w":"validation","s":"on","c":{"m":{"w":"validationmethod","s":"method","c":{},"d":[170],"e":true}},"d":[66,107,96,163,174,164,167,234,267],"e":true},"n":{"w":"validating","s":"ng","c":{},"d":[215],"e":true}},"d":[],"e":false},"e":{"w":"validate","s":"e","c":{"f":{"w":"validateform","s":"form","c":{},"d":[99,158,173],"e":true}},"d":[81,99,146,172],"e":true},"o":{"w":"validators","s":"ors","c":{},"d":[168,203],"e":true}},"d":[],"e":false}},"d":[79],"e":true}},"d":[],"e":false},"r":{"w":"variables","s":"riables","c":{},"d":[131],"e":true}},"d":[],"e":false},"e":{"w":"version","s":"ersion","c":{},"d":[74,75,148],"e":true}},"d":[],"e":false},"-":{"w":"-","s":"-","c":{},"d":[39,91,121,138,148,264],"e":true},"h":{"w":"h","s":"h","c":{"o":{"w":"how","s":"ow","c":{},"d":[53,54,57,59,66,68,74],"e":true},"a":{"w":"ha","s":"a","c":{"n":{"w":"handl","s":"ndl","c":{"e":{"w":"handle","s":"e","c":{},"d":[54],"e":true},"i":{"w":"handling","s":"ing","c":{},"d":[184],"e":true}},"d":[],"e":false},"s":{"w":"has","s":"s","c":{},"d":[64,103],"e":true},"v":{"w":"have","s":"ve","c":{},"d":[105,97,152],"e":true}},"d":[],"e":false},"e":{"w":"help","s":"elp","c":{"e":{"w":"helper","s":"er","c":{},"d":[219],"e":true}},"d":[133,134],"e":true}},"d":[],"e":false},"y":{"w":"you","s":"you","c":{"r":{"w":"your","s":"r","c":{},"d":[111],"e":true}},"d":[67],"e":true},"j":{"w":"json","s":"json","c":{"d":{"w":"jsondata","s":"data","c":{},"d":[202],"e":true}},"d":[63],"e":true},"x":{"w":"x","s":"x","c":{},"d":[74],"e":true},"'":{"w":"'","s":"'","c":{"p":{"w":"'posted'","s":"posted'","c":{},"d":[143],"e":true},"z":{"w":"'zero'","s":"zero'","c":{},"d":[159],"e":true},"j":{"w":"'json'","s":"json'","c":{},"d":[153],"e":true}},"d":[],"e":false}},"d":[],"e":false},"isArray":false},"hash":{"type":"Radix","node":{"w":"","s":"","c":{"d":{"w":"d","s":"d","c":{"e":{"w":"de","s":"e","c":{"f":{"w":"default","s":"fault","c":{"s":{"w":"defaults","s":"s","c":{},"d":[11],"e":true},"v":{"w":"defaultvalues","s":"values","c":{"s":{"w":"defaultvaluesschema","s":"schema","c":{},"d":[7],"e":true}},"d":[140],"e":true},"-":{"w":"default-values","s":"-values","c":{},"d":[46],"e":true},"d":{"w":"defaultdata","s":"data","c":{},"d":[83],"e":true}},"d":[],"e":false},"l":{"w":"deleting-a-user","s":"leting-a-user","c":{},"d":[43],"e":true},"s":{"w":"designing-a-crud-interface","s":"signing-a-crud-interface","c":{},"d":[34],"e":true},"b":{"w":"debugging","s":"bugging","c":{},"d":[274],"e":true}},"d":[],"e":false},"a":{"w":"dat","s":"at","c":{"e":{"w":"date","s":"e","c":{"p":{"w":"dateproxyform-fieldname-options","s":"proxyform-fieldname-options","c":{},"d":[16],"e":true},"-":{"w":"date-input-issues","s":"-input-issues","c":{},"d":[237],"e":true}},"d":[],"e":false},"a":{"w":"datatype","s":"atype","c":{},"d":[229],"e":true}},"d":[],"e":false},"o":{"w":"donat","s":"onat","c":{"i":{"w":"donations","s":"ions","c":{},"d":[33],"e":true},"e":{"w":"donate-to-be-a-sponsor","s":"e-to-be-a-sponsor","c":{},"d":[120],"e":true}},"d":[],"e":false},"i":{"w":"displaying-","s":"isplaying-","c":{"f":{"w":"displaying-files","s":"files","c":{},"d":[128],"e":true},"t":{"w":"displaying-the-form","s":"the-form","c":{},"d":[245,273],"e":true},"e":{"w":"displaying-errors","s":"errors","c":{},"d":[276],"e":true}},"d":[],"e":false}},"d":[],"e":false},"s":{"w":"s","s":"s","c":{"u":{"w":"su","s":"u","c":{"p":{"w":"super","s":"per","c":{"d":{"w":"superdebug","s":"debug","c":{"-":{"w":"superdebug-","s":"-","c":{"l":{"w":"superdebug-loves-stores","s":"loves-stores","c":{},"d":[129],"e":true},"-":{"w":"superdebug---the-super-debugging-component","s":"--the-super-debugging-component","c":{},"d":[121],"e":true}},"d":[],"e":false}},"d":[22,122,150],"e":true},"v":{"w":"supervalidate","s":"validate","c":{"-":{"w":"supervalidate-","s":"-","c":{"o":{"w":"supervalidate-options","s":"options","c":{},"d":[3],"e":true},"r":{"w":"supervalidate-return-type","s":"return-type","c":{},"d":[4],"e":true}},"d":[],"e":false},"a":{"w":"supervalidateadapter--data-adapter--options-options","s":"adapter--data-adapter--options-options","c":{},"d":[2],"e":true},"d":{"w":"supervalidated-type-parameters-have-changed","s":"d-type-parameters-have-changed","c":{},"d":[97],"e":true},"s":{"w":"supervalidatesync","s":"sync","c":{"-":{"w":"supervalidatesync-is-renamed-to-defaults","s":"-is-renamed-to-defaults","c":{},"d":[98],"e":true}},"d":[141],"e":true}},"d":[94],"e":true},"f":{"w":"superform","s":"form","c":{"-":{"w":"superform-","s":"-","c":{"o":{"w":"superform-options","s":"options","c":{},"d":[10],"e":true},"d":{"w":"superform-does-not-support-untainting-specific-fields-anymore","s":"does-not-support-untainting-specific-fields-anymore","c":{},"d":[113],"e":true}},"d":[],"e":false},"f":{"w":"superformfields-is-removed","s":"fields-is-removed","c":{},"d":[112],"e":true},"s":{"w":"superforms-v2---migration-guide","s":"s-v2---migration-guide","c":{},"d":[91],"e":true}},"d":[78],"e":true},"-":{"w":"super-sponsors","s":"-sponsors","c":{},"d":[118,119],"e":true}},"d":[],"e":false},"b":{"w":"submit-","s":"bmit-","c":{"b":{"w":"submit-behavior","s":"behavior","c":{},"d":[251],"e":true},"s":{"w":"submit-state","s":"state","c":{},"d":[256],"e":true}},"d":[],"e":false}},"d":[],"e":false},"t":{"w":"st","s":"t","c":{"r":{"w":"str","s":"r","c":{"i":{"w":"stri","s":"i","c":{"n":{"w":"string","s":"ng","c":{"p":{"w":"stringproxyform-fieldname-options","s":"proxyform-fieldname-options","c":{},"d":[17],"e":true},"-":{"w":"string-path-accessors","s":"-path-accessors","c":{},"d":[142],"e":true}},"d":[],"e":false},"c":{"w":"strict-mode","s":"ct-mode","c":{},"d":[249],"e":true}},"d":[],"e":false},"o":{"w":"strongly-typed-message","s":"ongly-typed-message","c":{},"d":[220],"e":true}},"d":[],"e":false},"a":{"w":"sta","s":"a","c":{"c":{"w":"stackblitz","s":"ckblitz","c":{},"d":[37],"e":true},"r":{"w":"start---creating-a-test-database","s":"rt---creating-a-test-database","c":{},"d":[39],"e":true},"t":{"w":"status-messages","s":"tus-messages","c":{},"d":[217],"e":true}},"d":[],"e":false},"i":{"w":"stickynavbar","s":"ickynavbar","c":{},"d":[192],"e":true}},"d":[],"e":false},"e":{"w":"se","s":"e","c":{"t":{"w":"set","s":"t","c":{"e":{"w":"seterror","s":"error","c":{"f":{"w":"seterrorform-field-error-options","s":"form-field-error-options","c":{},"d":[5],"e":true},"-":{"w":"seterror-again-validate-proxy-functions","s":"-again-validate-proxy-functions","c":{},"d":[81],"e":true}},"d":[80,185],"e":true},"t":{"w":"setting-","s":"ting-","c":{"f":{"w":"setting-field-errors-with-refine","s":"field-errors-with-refine","c":{},"d":[195],"e":true},"i":{"w":"setting-id-on-the-client","s":"id-on-the-client","c":{},"d":[224],"e":true}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"server-","s":"rver-","c":{"o":{"w":"server-options","s":"options","c":{},"d":[89],"e":true},"e":{"w":"server-errors","s":"errors","c":{},"d":[186],"e":true}},"d":[],"e":false}},"d":[],"e":false},"y":{"w":"syncflashmessage","s":"yncflashmessage","c":{},"d":[71],"e":true},"c":{"w":"sc","s":"c","c":{"h":{"w":"schema","s":"hema","c":{"-":{"w":"schema-caching","s":"-caching","c":{},"d":[95,268],"e":true},"v":{"w":"schemavalidation-changes","s":"validation-changes","c":{},"d":[107],"e":true}},"d":[],"e":false},"r":{"w":"scrolltoerror","s":"rolltoerror","c":{},"d":[190],"e":true}},"d":[],"e":false},"i":{"w":"si","s":"i","c":{"m":{"w":"simplified-imports","s":"mplified-imports","c":{},"d":[160],"e":true},"n":{"w":"single-","s":"ngle-","c":{"f":{"w":"single-file-input","s":"file-input","c":{},"d":[213],"e":true},"p":{"w":"single-page-application","s":"page-application","c":{"s":{"w":"single-page-applications-spa","s":"s-spa","c":{},"d":[242],"e":true},"-":{"w":"single-page-application-spa-mode","s":"-spa-mode","c":{},"d":[241],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"w":{"w":"switching-schemas","s":"witching-schemas","c":{},"d":[169],"e":true},"p":{"w":"sp","s":"p","c":{"e":{"w":"special-input-formats","s":"ecial-input-formats","c":{},"d":[166],"e":true},"a":{"w":"spa-action-form","s":"a-action-form","c":{},"d":[248],"e":true}},"d":[],"e":false},"n":{"w":"snapshots","s":"napshots","c":{},"d":[238],"e":true}},"d":[],"e":false},"a":{"w":"a","s":"a","c":{"p":{"w":"ap","s":"p","c":{"i":{"w":"api-reference","s":"i-reference","c":{},"d":[1],"e":true},"p":{"w":"applyaction","s":"plyaction","c":{},"d":[178],"e":true}},"d":[],"e":false},"r":{"w":"array","s":"rray","c":{"p":{"w":"arrayproxy","s":"proxy","c":{"s":{"w":"arrayproxysuperform-fieldname-options","s":"superform-fieldname-options","c":{},"d":[19],"e":true}},"d":[101],"e":true},"s":{"w":"arrays-with-primitive-values","s":"s-with-primitive-values","c":{},"d":[233],"e":true}},"d":[],"e":false},"c":{"w":"actionresulttype-data-options--status","s":"ctionresulttype-data-options--status","c":{},"d":[8],"e":true},"l":{"w":"allerrors","s":"llerrors","c":{},"d":[82],"e":true},"u":{"w":"auto","s":"uto","c":{"m":{"w":"automatic-form-id","s":"matic-form-id","c":{},"d":[139],"e":true},"f":{"w":"autofocusonerror","s":"focusonerror","c":{},"d":[191],"e":true}},"d":[],"e":false},"s":{"w":"asynchronous-validation-and-debouncing","s":"synchronous-validation-and-debouncing","c":{},"d":[174],"e":true},"d":{"w":"adding-progressive-enhancement","s":"dding-progressive-enhancement","c":{},"d":[277],"e":true}},"d":[],"e":false},"p":{"w":"p","s":"p","c":{"r":{"w":"pr","s":"r","c":{"o":{"w":"pro","s":"o","c":{"x":{"w":"proxy-","s":"xy-","c":{"o":{"w":"proxy-objects","s":"objects","c":{},"d":[12,235],"e":true},"e":{"w":"proxy-example","s":"example","c":{},"d":[21],"e":true}},"d":[],"e":false},"p":{"w":"props-reference","s":"ps-reference","c":{},"d":[123],"e":true},"m":{"w":"promise-support","s":"mise-support","c":{},"d":[126],"e":true},"g":{"w":"progressive-enhancement","s":"gressive-enhancement","c":{},"d":[176],"e":true}},"d":[],"e":false},"e":{"w":"preventing-","s":"eventing-","c":{"f":{"w":"preventing-file-uploads","s":"file-uploads","c":{},"d":[216],"e":true},"t":{"w":"preventing-tainting-the-form","s":"tainting-the-form","c":{},"d":[263],"e":true}},"d":[],"e":false}},"d":[],"e":false},"l":{"w":"playground","s":"layground","c":{},"d":[45],"e":true},"a":{"w":"page-data","s":"age-data","c":{},"d":[132],"e":true},"o":{"w":"po","s":"o","c":{"s":{"w":"posting-data","s":"sting-data","c":{},"d":[275],"e":true},"p":{"w":"populate-form-from-database","s":"pulate-form-from-database","c":{},"d":[271],"e":true}},"d":[],"e":false}},"d":[],"e":false},"m":{"w":"m","s":"m","c":{"e":{"w":"me","s":"e","c":{"s":{"w":"message","s":"ssage","c":{"f":{"w":"messageform-message-options","s":"form-message-options","c":{},"d":[6],"e":true},"-":{"w":"message-setmessage","s":"-setmessage","c":{},"d":[84],"e":true}},"d":[],"e":false},"t":{"w":"meta","s":"ta","c":{},"d":[85],"e":true}},"d":[],"e":false},"i":{"w":"migrat","s":"igrat","c":{"i":{"w":"migration-guide","s":"ion-guide","c":{},"d":[76],"e":true},"e":{"w":"migrate-now","s":"e-now","c":{},"d":[161],"e":true}},"d":[],"e":false},"u":{"w":"multi","s":"ulti","c":{"-":{"w":"multi-type-unions-can-only-be-used-when-datatype-is-json","s":"-type-unions-can-only-be-used-when-datatype-is-json","c":{},"d":[153],"e":true},"p":{"w":"multiple","s":"ple","c":{"-":{"w":"multiple-f","s":"-f","c":{"i":{"w":"multiple-files","s":"iles","c":{},"d":[214],"e":true},"o":{"w":"multiple-forms-on-the-same-page","s":"orms-on-the-same-page","c":{},"d":[223],"e":true}},"d":[],"e":false},"s":{"w":"multiplesubmits","s":"submits","c":{},"d":[253],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"modifying-the-useenhance-behavior","s":"odifying-the-useenhance-behavior","c":{},"d":[177],"e":true},"a":{"w":"making-the-form-behave-like-the-sveltekit-default","s":"aking-the-form-behave-like-the-sveltekit-default","c":{},"d":[183],"e":true}},"d":[],"e":false},"l":{"w":"l","s":"l","c":{"o":{"w":"lo","s":"o","c":{"g":{"w":"login-request-example","s":"gin-request-example","c":{},"d":[9],"e":true},"a":{"w":"loading-","s":"ading-","c":{"t":{"w":"loading-timers","s":"timers","c":{},"d":[254],"e":true},"i":{"w":"loading-indicators","s":"indicators","c":{},"d":[257],"e":true}},"d":[],"e":false}},"d":[],"e":false},"i":{"w":"li","s":"i","c":{"s":{"w":"listing-","s":"sting-","c":{"t":{"w":"listing-the-users","s":"the-users","c":{},"d":[44],"e":true},"e":{"w":"listing-errors","s":"errors","c":{},"d":[196],"e":true}},"d":[],"e":false},"m":{"w":"limitations","s":"mitations","c":{},"d":[222],"e":true}},"d":[],"e":false},"e":{"w":"legacy-version","s":"egacy-version","c":{},"d":[75],"e":true}},"d":[],"e":false},"f":{"w":"f","s":"f","c":{"i":{"w":"fi","s":"i","c":{"e":{"w":"field","s":"eld","c":{"p":{"w":"fieldproxyobject-fieldname","s":"proxyobject-fieldname","c":{},"d":[20],"e":true},"s":{"w":"fields-with-default-values-arent-required-anymore","s":"s-with-default-values-arent-required-anymore","c":{},"d":[109],"e":true}},"d":[],"e":false},"l":{"w":"file-upload","s":"le-upload","c":{"-":{"w":"file-upload-support","s":"-support","c":{},"d":[149],"e":true},"s":{"w":"file-uploads","s":"s","c":{},"d":[210],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"form","s":"orm","c":{"f":{"w":"formfieldproxysuperform-fieldname-options","s":"fieldproxysuperform-fieldname-options","c":{},"d":[18],"e":true},"s":{"w":"forms-and-fields-in-components","s":"s-and-fields-in-components","c":{},"d":[23,24],"e":true},"-":{"w":"form-","s":"-","c":{"v":{"w":"form-vs-database-schemas","s":"vs-database-schemas","c":{},"d":[40],"e":true},"i":{"w":"form-is-reset-by-default","s":"is-reset-by-default","c":{},"d":[154],"e":true},"l":{"w":"form-level-and-array-errors","s":"level-and-array-errors","c":{},"d":[194],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"fa","s":"a","c":{"c":{"w":"factoring-out-","s":"ctoring-out-","c":{"a":{"w":"factoring-out-a-form","s":"a-form","c":{},"d":[25],"e":true},"f":{"w":"factoring-out-form-fields","s":"form-fields","c":{},"d":[26],"e":true}},"d":[],"e":false},"q":{"w":"faq","s":"q","c":{},"d":[51],"e":true}},"d":[],"e":false},"r":{"w":"fr","s":"r","c":{"o":{"w":"from-a-","s":"om-a-","c":{"l":{"w":"from-a-load-function","s":"load-function","c":{},"d":[60],"e":true},"f":{"w":"from-a-form-action","s":"form-action","c":{},"d":[61],"e":true}},"d":[],"e":false},"e":{"w":"free-support","s":"ee-support","c":{},"d":[135],"e":true}},"d":[],"e":false},"l":{"w":"flash","s":"lash","c":{"-":{"w":"flash-messages","s":"-messages","c":{},"d":[69],"e":true},"m":{"w":"flashmessageonerror","s":"messageonerror","c":{"-":{"w":"flashmessageonerror-message-parameter-renamed-to-flashmessage","s":"-message-parameter-renamed-to-flashmessage","c":{},"d":[115],"e":true}},"d":[72],"e":true}},"d":[],"e":false}},"d":[],"e":false},"i":{"w":"i","s":"i","c":{"n":{"w":"in","s":"n","c":{"t":{"w":"int","s":"t","c":{"p":{"w":"intproxy","s":"proxy","c":{"f":{"w":"intproxyform-fieldname-options","s":"form-fieldname-options","c":{},"d":[13],"e":true},"-":{"w":"intproxy-and-numberproxy","s":"-and-numberproxy","c":{},"d":[102],"e":true}},"d":[],"e":false},"e":{"w":"integrate-superforms-with-formsnap","s":"egrate-superforms-with-formsnap","c":{},"d":[73],"e":true}},"d":[],"e":false},"v":{"w":"invalidateall","s":"validateall","c":{},"d":[179],"e":true},"i":{"w":"initial","s":"itial","c":{"-":{"w":"initial-form-errors","s":"-form-errors","c":{},"d":[187],"e":true},"i":{"w":"initializing-the-form-in-the-load-function","s":"izing-the-form-in-the-load-function","c":{},"d":[269],"e":true}},"d":[],"e":false}},"d":[],"e":false},"-":{"w":"i-","s":"-","c":{"w":{"w":"i-want-to-reuse-common-options-how-to-do-that-easily","s":"want-to-reuse-common-options-how-to-do-that-easily","c":{},"d":[68],"e":true},"s":{"w":"i-see-the-data-in-form-but-its-not-posted-to-the-server","s":"see-the-data-in-form-but-its-not-posted-to-the-server","c":{},"d":[52],"e":true}},"d":[],"e":false},"m":{"w":"im","s":"m","c":{"-":{"w":"im-getting-jsonparse-errors-as-response-when-submitting-a-form-why","s":"-getting-jsonparse-errors-as-response-when-submitting-a-form-why","c":{},"d":[63],"e":true},"p":{"w":"important-note-about-return-values","s":"portant-note-about-return-values","c":{},"d":[272],"e":true}},"d":[],"e":false},"d":{"w":"id-option-must-be-a-string","s":"d-option-must-be-a-string","c":{},"d":[100],"e":true}},"d":[],"e":false},"n":{"w":"n","s":"n","c":{"u":{"w":"numberproxyform-fieldname-options","s":"umberproxyform-fieldname-options","c":{},"d":[14],"e":true},"e":{"w":"ne","s":"e","c":{"w":{"w":"new-","s":"w-","c":{"s":{"w":"new-sveltekit-project","s":"sveltekit-project","c":{},"d":[38],"e":true},"f":{"w":"new-features","s":"features","c":{},"d":[116],"e":true},"p":{"w":"new-posted-store","s":"posted-store","c":{},"d":[143],"e":true},"i":{"w":"new-istainted-method","s":"istainted-method","c":{},"d":[156],"e":true},"v":{"w":"new-validateform-method","s":"validateform-method","c":{},"d":[158],"e":true}},"d":[],"e":false},"s":{"w":"nested-","s":"sted-","c":{"d":{"w":"nested-data","s":"data","c":{},"d":[228],"e":true},"e":{"w":"nested-errors-and-constraints","s":"errors-and-constraints","c":{},"d":[231],"e":true},"p":{"w":"nested-proxies","s":"proxies","c":{},"d":[236],"e":true}},"d":[],"e":false},"x":{"w":"next-steps","s":"xt-steps","c":{},"d":[278],"e":true}},"d":[],"e":false},"o":{"w":"no","s":"o","c":{"e":{"w":"noerrors","s":"errors","c":{},"d":[90],"e":true},"-":{"w":"no-side-effects-for-default-values","s":"-side-effects-for-default-values","c":{},"d":[108],"e":true}},"d":[],"e":false}},"d":[],"e":false},"b":{"w":"b","s":"b","c":{"o":{"w":"booleanproxyform-fieldname-options","s":"ooleanproxyform-fieldname-options","c":{},"d":[15],"e":true},"u":{"w":"bu","s":"u","c":{"g":{"w":"bug-reporting","s":"g-reporting","c":{},"d":[137],"e":true},"i":{"w":"built-in-browser-validation","s":"ilt-in-browser-validation","c":{},"d":[164],"e":true}},"d":[],"e":false},"e":{"w":"better-empty-value-support-for-proxies","s":"etter-empty-value-support-for-proxies","c":{},"d":[145],"e":true}},"d":[],"e":false},"u":{"w":"u","s":"u","c":{"s":{"w":"us","s":"s","c":{"i":{"w":"using-","s":"ing-","c":{"a":{"w":"using-a-","s":"a-","c":{"f":{"w":"using-a-f","s":"f","c":{"i":{"w":"using-a-fieldproxy","s":"ieldproxy","c":{},"d":[27],"e":true},"o":{"w":"using-a-formfieldproxy","s":"ormfieldproxy","c":{},"d":[28],"e":true}},"d":[],"e":false},"v":{"w":"using-a-validation-schema","s":"validation-schema","c":{},"d":[167],"e":true}},"d":[],"e":false},"t":{"w":"using-the-","s":"the-","c":{"c":{"w":"using-the-componentized-field-in-awesome-ways","s":"componentized-field-in-awesome-ways","c":{},"d":[30],"e":true},"m":{"w":"using-the-message-data-programmatically","s":"message-data-programmatically","c":{},"d":[221],"e":true}},"d":[],"e":false},"p":{"w":"using-pagets-instead-of-pageserverts","s":"pagets-instead-of-pageserverts","c":{},"d":[244],"e":true}},"d":[],"e":false},"a":{"w":"usage","s":"age","c":{"-":{"w":"usage-client","s":"-client","c":{},"d":[188],"e":true}},"d":[70,218,239,243,255,260],"e":true},"e":{"w":"use-istainted-to-check-tainted-status","s":"e-istainted-to-check-tainted-status","c":{},"d":[106],"e":true}},"d":[],"e":false},"p":{"w":"updat","s":"pdat","c":{"i":{"w":"updating","s":"ing","c":{},"d":[77],"e":true},"e":{"w":"update-your-imports-in-case-of-problems","s":"e-your-imports-in-case-of-problems","c":{},"d":[111],"e":true}},"d":[],"e":false},"n":{"w":"un","s":"n","c":{"i":{"w":"union","s":"ion","c":{"-":{"w":"union-support","s":"-support","c":{},"d":[151],"e":true},"s":{"w":"unions-must-have-an-explicit-default-value","s":"s-must-have-an-explicit-default-value","c":{},"d":[152],"e":true}},"d":[],"e":false},"t":{"w":"untainting-the-form","s":"tainting-the-form","c":{},"d":[261],"e":true}},"d":[],"e":false}},"d":[],"e":false},"t":{"w":"t","s":"t","c":{"y":{"w":"type-narrowing-for-paths","s":"ype-narrowing-for-paths","c":{},"d":[29],"e":true},"h":{"w":"the-","s":"he-","c":{"b":{"w":"the-biggest-change-important","s":"biggest-change-important","c":{},"d":[93],"e":true},"d":{"w":"the-defaultvalidators-option-has-moved","s":"defaultvalidators-option-has-moved","c":{},"d":[103],"e":true},"m":{"w":"the-message-helper","s":"message-helper","c":{},"d":[219],"e":true}},"d":[],"e":false},"a":{"w":"tainted-","s":"ainted-","c":{"u":{"w":"tainted-updates","s":"updates","c":{},"d":[155],"e":true},"f":{"w":"tainted-fields","s":"fields","c":{},"d":[259],"e":true}},"d":[],"e":false},"e":{"w":"test-it-out","s":"est-it-out","c":{},"d":[175,198,227,240],"e":true}},"d":[],"e":false},"c":{"w":"c","s":"c","c":{"o":{"w":"co","s":"o","c":{"n":{"w":"con","s":"n","c":{"t":{"w":"contributing","s":"tributing","c":{"-":{"w":"contributing-donating-and-sponsoring","s":"-donating-and-sponsoring","c":{},"d":[31],"e":true}},"d":[32],"e":true},"s":{"w":"constraints","s":"straints","c":{},"d":[165],"e":true},"f":{"w":"configuration-and-troubleshooting","s":"figuration-and-troubleshooting","c":{},"d":[226],"e":true}},"d":[],"e":false},"m":{"w":"com","s":"m","c":{"p":{"w":"compo","s":"po","c":{"n":{"w":"components","s":"nents","c":{},"d":[110],"e":true},"s":{"w":"composing-debug-data","s":"sing-debug-data","c":{},"d":[127],"e":true}},"d":[],"e":false},"m":{"w":"comm","s":"m","c":{"e":{"w":"commercial-support","s":"ercial-support","c":{},"d":[136],"e":true},"o":{"w":"common-usage","s":"on-usage","c":{},"d":[205],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"creating-a","s":"reating-a","c":{"n":{"w":"creating-and-updating-a-user","s":"nd-updating-a-user","c":{},"d":[42],"e":true},"-":{"w":"creating-a-","s":"-","c":{"s":{"w":"creating-a-superform","s":"superform","c":{},"d":[266],"e":true},"v":{"w":"creating-a-validation-schema","s":"validation-schema","c":{},"d":[267],"e":true}},"d":[],"e":false}},"d":[],"e":false},"h":{"w":"ch","s":"h","c":{"a":{"w":"chang","s":"ang","c":{"i":{"w":"changing-a-default-value","s":"ing-a-default-value","c":{},"d":[47],"e":true},"e":{"w":"changes","s":"es","c":{},"d":[92],"e":true}},"d":[],"e":false},"e":{"w":"check-if-the-form-is-tainted","s":"eck-if-the-form-is-tainted","c":{},"d":[262],"e":true}},"d":[],"e":false},"a":{"w":"ca","s":"a","c":{"n":{"w":"can-","s":"n-","c":{"i":{"w":"can-i-","s":"i-","c":{"p":{"w":"can-i-post-to-an-external-api","s":"post-to-an-external-api","c":{},"d":[56],"e":true},"u":{"w":"can-i-use-endpoints-instead-of-form-actions","s":"use-endpoints-instead-of-form-actions","c":{},"d":[55],"e":true}},"d":[],"e":false},"a":{"w":"can-a-form-be-factored-out-into-a-separate-component","s":"a-form-be-factored-out-into-a-separate-component","c":{},"d":[58],"e":true},"y":{"w":"can-you-use-superforms-without-any-data-for-example-with-a-delete-button-on-each-row-in-a-table","s":"you-use-superforms-without-any-data-for-example-with-a-delete-button-on-each-row-in-a-table","c":{},"d":[67],"e":true}},"d":[],"e":false},"t":{"w":"catch-all-schema","s":"tch-all-schema","c":{},"d":[250],"e":true}},"d":[],"e":false},"l":{"w":"cl","s":"l","c":{"i":{"w":"client-","s":"ient-","c":{"o":{"w":"client-options","s":"options","c":{},"d":[86],"e":true},"s":{"w":"client-side-validation","s":"side-validation","c":{},"d":[163],"e":true}},"d":[],"e":false},"e":{"w":"clearonsubmit","s":"earonsubmit","c":{},"d":[252],"e":true}},"d":[],"e":false},"u":{"w":"custom","s":"ustom","c":{"-":{"w":"custom-styling","s":"-styling","c":{},"d":[130],"e":true},"v":{"w":"customvalidity","s":"validity","c":{},"d":[171,193],"e":true},"i":{"w":"customizing-error-messages-in-the-schema","s":"izing-error-messages-in-the-schema","c":{},"d":[197],"e":true}},"d":[],"e":false},"s":{"w":"css-variables-available-for-customization","s":"ss-variables-available-for-customization","c":{},"d":[131],"e":true}},"d":[],"e":false},"g":{"w":"get","s":"get","c":{"t":{"w":"getting-started","s":"ting-started","c":{},"d":[35],"e":true},"-":{"w":"get-started","s":"-started","c":{"-":{"w":"get-started---tutorial-for-superforms","s":"---tutorial-for-superforms","c":{},"d":[264],"e":true}},"d":[265],"e":true}},"d":[],"e":false},"v":{"w":"v","s":"v","c":{"1":{"w":"v10---whats-new","s":"10---whats-new","c":{},"d":[138],"e":true},"i":{"w":"vi","s":"i","c":{"d":{"w":"video-tutorial","s":"deo-tutorial","c":{},"d":[36],"e":true},"s":{"w":"visualizing-the-timers","s":"sualizing-the-timers","c":{},"d":[258],"e":true}},"d":[],"e":false},"e":{"w":"version-","s":"ersion-","c":{"0":{"w":"version-0x-and-how-to-migrate","s":"0x-and-how-to-migrate","c":{},"d":[74],"e":true},"2":{"w":"version-2---whats-new","s":"2---whats-new","c":{},"d":[148],"e":true}},"d":[],"e":false},"a":{"w":"valid","s":"alid","c":{"-":{"w":"valid-empty-firsterror","s":"-empty-firsterror","c":{},"d":[79],"e":true},"a":{"w":"validat","s":"at","c":{"e":{"w":"validate","s":"e","c":{"-":{"w":"validate-","s":"-","c":{"m":{"w":"validate-method-with-no-arguments-is-renamed-to-validateform","s":"method-with-no-arguments-is-renamed-to-validateform","c":{},"d":[99],"e":true},"t":{"w":"validate-the-whole-form-on-the-client","s":"the-whole-form-on-the-client","c":{},"d":[146],"e":true}},"d":[],"e":false},"f":{"w":"validateform","s":"form","c":{},"d":[173],"e":true}},"d":[172],"e":true},"o":{"w":"validators","s":"ors","c":{},"d":[168,203],"e":true},"i":{"w":"validati","s":"i","c":{"o":{"w":"validation","s":"on","c":{"m":{"w":"validationmethod","s":"method","c":{},"d":[170],"e":true},"-":{"w":"validation-schemas-and-nested-paths","s":"-schemas-and-nested-paths","c":{},"d":[234],"e":true}},"d":[],"e":false},"n":{"w":"validating-files-manually","s":"ng-files-manually","c":{},"d":[215],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"r","s":"r","c":{"e":{"w":"re","s":"e","c":{"a":{"w":"reading-a-user-from-the-database","s":"ading-a-user-from-the-database","c":{},"d":[41],"e":true},"s":{"w":"resetform","s":"setform","c":{},"d":[87,181],"e":true},"l":{"w":"release-notes","s":"lease-notes","c":{},"d":[162],"e":true},"t":{"w":"returning-files-in-form-actions","s":"turning-files-in-form-actions","c":{},"d":[211],"e":true},"q":{"w":"requirements","s":"quirements","c":{},"d":[230],"e":true}},"d":[],"e":false},"a":{"w":"rate-limiting","s":"ate-limiting","c":{},"d":[117],"e":true}},"d":[],"e":false},"e":{"w":"e","s":"e","c":{"x":{"w":"ex","s":"x","c":{"p":{"w":"explicit-defaults","s":"plicit-defaults","c":{},"d":[49],"e":true},"a":{"w":"example","s":"ample","c":{"s":{"w":"examples","s":"s","c":{},"d":[124,212],"e":true}},"d":[232],"e":true},"t":{"w":"extra-options-for-reset","s":"tra-options-for-reset","c":{},"d":[144],"e":true}},"d":[],"e":false},"n":{"w":"enums-","s":"nums-","c":{"a":{"w":"enums-and-group-inputs","s":"and-group-inputs","c":{},"d":[50],"e":true},"i":{"w":"enums-in-schemas","s":"in-schemas","c":{},"d":[104],"e":true},"m":{"w":"enums-must-have-an-explicit-default-value","s":"must-have-an-explicit-default-value","c":{},"d":[105],"e":true}},"d":[],"e":false},"r":{"w":"error","s":"rror","c":{"s":{"w":"errors","s":"s","c":{"e":{"w":"errorselector","s":"elector","c":{},"d":[88,189],"e":true},"-":{"w":"errors-for-arrays-and-objects","s":"-for-arrays-and-objects","c":{},"d":[147],"e":true}},"d":[],"e":false},"-":{"w":"error-handling","s":"-handling","c":{},"d":[184],"e":true}},"d":[],"e":false},"m":{"w":"empty-","s":"mpty-","c":{"z":{"w":"empty-zero-option-for-intproxy-and-numberproxy","s":"zero-option-for-intproxy-and-numberproxy","c":{},"d":[159],"e":true},"f":{"w":"empty-form","s":"form","c":{},"d":[270],"e":true}},"d":[],"e":false},"v":{"w":"event","s":"vent","c":{"s":{"w":"events","s":"s","c":{},"d":[199],"e":true},"-":{"w":"event-flowchart","s":"-flowchart","c":{},"d":[200],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"o","s":"o","c":{"p":{"w":"opti","s":"pti","c":{"o":{"w":"optional-vs-nullable","s":"onal-vs-nullable","c":{},"d":[48],"e":true},"m":{"w":"optimi","s":"mi","c":{"z":{"w":"optimized-client-side-validation","s":"zed-client-side-validation","c":{},"d":[96],"e":true},"s":{"w":"optimistic-updates","s":"stic-updates","c":{},"d":[180],"e":true}},"d":[],"e":false}},"d":[],"e":false},"n":{"w":"on","s":"n","c":{"e":{"w":"onerror","s":"error","c":{"-":{"w":"onerror-message-parameter-is-removed","s":"-message-parameter-is-removed","c":{},"d":[114],"e":true}},"d":[208],"e":true},"c":{"w":"onchange","s":"change","c":{"-":{"w":"onchange-event","s":"-event","c":{},"d":[157],"e":true}},"d":[209],"e":true},"s":{"w":"onsubmit","s":"submit","c":{},"d":[201],"e":true},"r":{"w":"onresult","s":"result","c":{},"d":[204],"e":true},"u":{"w":"onupdate","s":"update","c":{"d":{"w":"onupdated","s":"d","c":{},"d":[207],"e":true}},"d":[206],"e":true}},"d":[],"e":false}},"d":[],"e":false},"h":{"w":"h","s":"h","c":{"o":{"w":"how-","s":"ow-","c":{"t":{"w":"how-to-","s":"to-","c":{"h":{"w":"how-to-handle-file-uploads","s":"handle-file-uploads","c":{},"d":[54],"e":true},"s":{"w":"how-to-submit-the-form-programmatically","s":"submit-the-form-programmatically","c":{},"d":[57],"e":true},"c":{"w":"how-to-customize-error-messages-directly-in-the-validation-schema","s":"customize-error-messages-directly-in-the-validation-schema","c":{},"d":[66],"e":true}},"d":[],"e":false},"c":{"w":"how-can-i-","s":"can-i-","c":{"r":{"w":"how-can-i-return-additional-data-together-with-the-form","s":"return-additional-data-together-with-the-form","c":{},"d":[59],"e":true},"p":{"w":"how-can-i-prevent-the-form-from-being-reset-after-its-submitted","s":"prevent-the-form-from-being-reset-after-its-submitted","c":{},"d":[53],"e":true}},"d":[],"e":false}},"d":[],"e":false},"e":{"w":"help-","s":"elp-","c":{"-":{"w":"help--support","s":"-support","c":{},"d":[134],"e":true},"a":{"w":"help-and-support-for-superforms","s":"and-support-for-superforms","c":{},"d":[133],"e":true}},"d":[],"e":false}},"d":[],"e":false},"w":{"w":"w","s":"w","c":{"h":{"w":"wh","s":"h","c":{"a":{"w":"what-about-the-other-way-around-posting-additional-data-to-the-server","s":"at-about-the-other-way-around-posting-additional-data-to-the-server","c":{},"d":[62],"e":true},"y":{"w":"why-","s":"y-","c":{"a":{"w":"why-am-im-getting-typeerror-the-body-has-already-been-consumed","s":"am-im-getting-typeerror-the-body-has-already-been-consumed","c":{},"d":[64],"e":true},"d":{"w":"why-does-the-form-get-tainted-without-any-changes-when-i-use-a-select-element","s":"does-the-form-get-tainted-without-any-changes-when-i-use-a-select-element","c":{},"d":[65],"e":true}},"d":[],"e":false},"e":{"w":"when-to-change-the-defaults","s":"en-to-change-the-defaults","c":{},"d":[182],"e":true}},"d":[],"e":false},"i":{"w":"with","s":"ith","c":{"-":{"w":"with-","s":"-","c":{"a":{"w":"with-a-label","s":"a-label","c":{},"d":[125],"e":true},"i":{"w":"with-initial-top-level-data","s":"initial-top-level-data","c":{},"d":[247],"e":true}},"d":[],"e":false},"o":{"w":"without-","s":"out-","c":{"u":{"w":"without-useenhance","s":"useenhance","c":{},"d":[225],"e":true},"a":{"w":"without-a-pagets-file","s":"a-pagets-file","c":{},"d":[246],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"j":{"w":"jsondata","s":"jsondata","c":{},"d":[202],"e":true}},"d":[],"e":false},"isArray":false},"url":{"type":"Radix","node":{"w":"","s":"","c":{"a":{"w":"api","s":"api","c":{},"d":[11,22,1,3,7,10,12,21,4,6,9,20,2,13,14,15,16,17,18,19,5,8],"e":true},"c":{"w":"c","s":"c","c":{"o":{"w":"co","s":"o","c":{"m":{"w":"components","s":"mponents","c":{},"d":[27,28,25,26,29,23,24,30],"e":true},"n":{"w":"con","s":"n","c":{"t":{"w":"contributing","s":"tributing","c":{},"d":[32,33,31],"e":true},"c":{"w":"concepts","s":"cepts","c":{},"d":[165,168,170,171,172,173,163,169,164,166,175,167,174,178,179,181,176,180,177,182,183,185,189,190,191,192,193,184,186,188,196,187,198,194,195,197,199,201,202,203,204,206,207,208,209,200,205,212,210,214,213,215,216,211,218,222,217,219,220,221,225,226,227,224,223,229,230,232,228,231,233,234,235,236,237,238,239,240,243,242,245,248,241,247,246,244,249,250,252,253,251,255,254,256,257,258,260,259,261,263,262],"e":true}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"crud","s":"rud","c":{},"d":[37,35,36,38,43,44,34,40,42,39,41],"e":true},"l":{"w":"client-validation","s":"lient-validation","c":{},"d":[165,168,170,171,172,173,163,169,164,166,175,167,174],"e":true}},"d":[],"e":false},"e":{"w":"e","s":"e","c":{"x":{"w":"examples","s":"xamples","c":{},"d":[45],"e":true},"n":{"w":"enhance","s":"nhance","c":{},"d":[178,179,181,176,180,177,182,183],"e":true},"r":{"w":"error-handling","s":"rror-handling","c":{},"d":[185,189,190,191,192,193,184,186,188,196,187,198,194,195,197],"e":true},"v":{"w":"events","s":"vents","c":{},"d":[199,201,202,203,204,206,207,208,209,200,205],"e":true}},"d":[],"e":false},"d":{"w":"default-values","s":"default-values","c":{},"d":[46,49,48,47,50],"e":true},"f":{"w":"f","s":"f","c":{"a":{"w":"faq","s":"aq","c":{},"d":[51,60,61,54,57,56,55,58,59,66,68,62,64,52,53,63,65,67],"e":true},"l":{"w":"flash-messages","s":"lash-messages","c":{},"d":[70,71,69,72],"e":true},"o":{"w":"formsnap","s":"ormsnap","c":{},"d":[73],"e":true},"i":{"w":"files","s":"iles","c":{},"d":[212,210,214,213,215,216,211],"e":true}},"d":[],"e":false},"l":{"w":"l","s":"l","c":{"e":{"w":"legacy","s":"egacy","c":{},"d":[75,74],"e":true},"i":{"w":"lib","s":"ib","c":{},"d":[274,265,268,270,275,276,278,266,273,277,267,271,272,264,269],"e":true}},"d":[],"e":false},"m":{"w":"m","s":"m","c":{"i":{"w":"migration","s":"igration","c":{"-":{"w":"migration-v2","s":"-v2","c":{},"d":[92,94,101,110,95,116,96,102,104,107,93,112,91,97,98,103,108,114,100,106,115,105,109,111,113,99],"e":true}},"d":[77,78,80,82,83,85,87,88,90,76,84,86,89,79,81],"e":true},"e":{"w":"messages","s":"essages","c":{},"d":[218,222,217,219,220,221],"e":true},"u":{"w":"multiple-forms","s":"ultiple-forms","c":{},"d":[225,226,227,224,223],"e":true}},"d":[],"e":false},"r":{"w":"rate-limiting","s":"rate-limiting","c":{},"d":[117],"e":true},"s":{"w":"s","s":"s","c":{"p":{"w":"sp","s":"p","c":{"o":{"w":"sponsors","s":"onsors","c":{},"d":[118,119,120],"e":true},"a":{"w":"spa","s":"a","c":{},"d":[243,242,245,248,241,247,246,244],"e":true}},"d":[],"e":false},"u":{"w":"su","s":"u","c":{"p":{"w":"sup","s":"p","c":{"e":{"w":"super-debug","s":"er-debug","c":{},"d":[122,124,123,126,128,130,132,125,127,129,131,121],"e":true},"p":{"w":"support","s":"port","c":{},"d":[134,135,136,137,133],"e":true}},"d":[],"e":false},"b":{"w":"submit-behavior","s":"bmit-behavior","c":{},"d":[252,253,251],"e":true}},"d":[],"e":false},"n":{"w":"snapshots","s":"napshots","c":{},"d":[238,239,240],"e":true},"t":{"w":"strict-mode","s":"trict-mode","c":{},"d":[249,250],"e":true}},"d":[],"e":false},"w":{"w":"whats-new-v","s":"whats-new-v","c":{"1":{"w":"whats-new-v1","s":"1","c":{},"d":[140,141,139,142,143,144,138,147,145,146],"e":true},"2":{"w":"whats-new-v2","s":"2","c":{},"d":[150,151,155,157,160,161,162,149,156,158,148,154,152,159,153],"e":true}},"d":[],"e":false},"n":{"w":"nested-data","s":"nested-data","c":{},"d":[229,230,232,228,231,233,234],"e":true},"p":{"w":"proxy-objects","s":"proxy-objects","c":{},"d":[235,236,237],"e":true},"t":{"w":"t","s":"t","c":{"i":{"w":"timers","s":"imers","c":{},"d":[255,254,256,257,258],"e":true},"a":{"w":"tainted","s":"ainted","c":{},"d":[260,259,261,263,262],"e":true}},"d":[],"e":false},"g":{"w":"get-started","s":"get-started","c":{},"d":[274,265,268,270,275,276,278,266,273,277,267,271,272,264,269],"e":true}},"d":[],"e":false},"isArray":false},"content":{"type":"Radix","node":{"w":"","s":"","c":{"0":{"w":"0","s":"0","c":{},"d":[46,47,69,75,77,76,90,123,138,147,162,159],"e":true},"1":{"w":"1","s":"1","c":{"0":{"w":"10","s":"0","c":{},"d":[120,119,136],"e":true},"2":{"w":"12","s":"2","c":{"0":{"w":"120","s":"0","c":{},"d":[123],"e":true},"3":{"w":"123","s":"3","c":{},"d":[153,271],"e":true}},"d":[],"e":false},"5":{"w":"150","s":"50","c":{},"d":[42,278],"e":true}},"d":[36,69,75,77,90,138,147,216],"e":true},"2":{"w":"2","s":"2","c":{"0":{"w":"20","s":"0","c":{"0":{"w":"200","s":"0","c":{},"d":[219],"e":true},"2":{"w":"2023-04-12","s":"23-04-12","c":{},"d":[27],"e":true}},"d":[],"e":false}},"d":[54,81,77,91,162,148,161,210],"e":true},"3":{"w":"3","s":"3","c":{"0":{"w":"30","s":"0","c":{},"d":[37],"e":true}},"d":[42,233,257],"e":true},"4":{"w":"4","s":"4","c":{"0":{"w":"40","s":"0","c":{"0":{"w":"400","s":"0","c":{"-":{"w":"400-599","s":"-599","c":{},"d":[6,5,84,80,219],"e":true}},"d":[5,84,185],"e":true},"4":{"w":"404","s":"4","c":{},"d":[41,43,186],"e":true}},"d":[],"e":false},"2":{"w":"429","s":"29","c":{},"d":[186],"e":true}},"d":[26,42,77],"e":true},"5":{"w":"500","s":"500","c":{},"d":[208],"e":true},"t":{"w":"t","s":"t","c":{"h":{"w":"th","s":"h","c":{"e":{"w":"the","s":"e","c":{"y":{"w":"they","s":"y","c":{"'":{"w":"they're","s":"'re","c":{},"d":[8],"e":true}},"d":[1,27,41,40,62,69,79,95,97,166,199,229,236,249,254,256,268,273],"e":true},"m":{"w":"them","s":"m","c":{"e":{"w":"theme","s":"e","c":{},"d":[130,123],"e":true}},"d":[8,66,69,81,77,119,177,197,226,231,235,258],"e":true},"n":{"w":"then","s":"n","c":{},"d":[29,32,38,41,60,62,70,73,108,136,139,204,205,233,240,243,248,260],"e":true},"r":{"w":"there","s":"re","c":{"f":{"w":"therefore","s":"fore","c":{},"d":[40,80,95,152,257,268],"e":true},"'":{"w":"there's","s":"'s","c":{},"d":[49,93,97,234,247],"e":true}},"d":[26,35,40,41,43,55,81,116,114,91,105,134,141,158,159,153,163,164,168,180,177,179,197,196,188,193,201,214,215,222,220,223,228,254,276,273,274,275],"e":true},"s":{"w":"these","s":"se","c":{},"d":[47,93,170,182,194,186,223,232,257,256,276],"e":true},"i":{"w":"their","s":"ir","c":{},"d":[166,196,186,227,226],"e":true}},"d":[11,1,3,7,21,2,5,14,15,16,13,4,10,12,17,19,6,18,22,8,28,24,25,26,30,27,29,33,32,37,44,36,40,42,39,41,43,38,34,50,47,49,46,57,56,58,52,53,68,63,64,65,61,62,54,55,67,59,70,71,72,69,73,75,80,82,83,85,88,84,86,87,89,76,79,90,81,78,77,95,96,102,107,93,112,98,92,111,104,116,100,115,114,109,103,91,94,106,97,108,99,105,117,119,132,126,131,123,127,122,136,137,141,146,140,143,144,142,139,147,138,155,162,161,160,154,157,158,149,148,159,156,153,170,172,168,165,167,171,174,173,169,163,175,166,181,177,178,179,180,176,182,183,190,186,187,189,193,185,188,196,197,195,194,191,198,184,201,206,209,204,208,202,207,203,199,200,205,212,213,216,211,215,214,220,218,219,217,222,221,226,224,223,225,227,230,232,228,234,233,229,231,237,235,239,240,238,243,245,242,247,246,244,248,249,252,253,251,258,256,255,257,259,260,263,261,262,268,273,275,267,278,270,274,265,269,272,271,276,277],"e":true},"r":{"w":"thr","s":"r","c":{"o":{"w":"thro","s":"o","c":{"u":{"w":"through","s":"ugh","c":{"o":{"w":"throughout","s":"out","c":{},"d":[1],"e":true}},"d":[63,77,170,194,212,231,245,253,259,272,276],"e":true},"w":{"w":"throw","s":"w","c":{"i":{"w":"throwing","s":"ing","c":{},"d":[8,186,208],"e":true},"n":{"w":"thrown","s":"n","c":{},"d":[169],"e":true}},"d":[186],"e":true},"t":{"w":"throttle-debounce","s":"ttle-debounce","c":{},"d":[174],"e":true}},"d":[],"e":false},"e":{"w":"thre","s":"e","c":{"a":{"w":"thread","s":"ad","c":{},"d":[44],"e":true},"e":{"w":"three","s":"e","c":{},"d":[35,177,182],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"tha","s":"a","c":{"t":{"w":"that","s":"t","c":{"'":{"w":"that's","s":"'s","c":{},"d":[8,27,44,67,104],"e":true}},"d":[22,20,6,8,19,24,26,27,28,30,33,42,43,41,40,46,48,47,55,62,68,64,65,70,71,69,76,80,79,81,93,113,109,98,100,97,94,96,119,122,131,123,141,150,160,159,155,175,170,181,180,183,176,184,186,185,195,196,198,188,193,207,205,209,202,210,213,214,216,221,222,226,223,232,234,229,235,238,247,243,248,249,251,254,257,258,261,260,274,276,272,265],"e":true},"n":{"w":"than","s":"n","c":{"k":{"w":"thank","s":"k","c":{"s":{"w":"thanks","s":"s","c":{},"d":[136],"e":true}},"d":[44,119],"e":true}},"d":[5,24,37,98,117,135,144,152,153,175,194,202,219,255],"e":true}},"d":[],"e":false},"i":{"w":"thi","s":"i","c":{"s":{"w":"this","s":"s","c":{},"d":[21,4,7,14,13,25,30,28,24,29,26,27,33,42,44,43,38,40,50,47,64,63,67,65,71,73,83,81,78,77,109,95,96,99,107,98,97,117,120,126,136,140,159,171,175,168,178,179,180,183,189,193,198,196,185,187,197,190,195,186,203,207,208,216,210,211,217,218,219,220,225,226,223,234,228,232,229,233,235,238,248,247,245,253,251,255,260,278,266,268,271,275,274,277,272,273],"e":true},"r":{"w":"third","s":"rd","c":{"-":{"w":"third-party","s":"-party","c":{},"d":[235],"e":true}},"d":[8,97],"e":true},"n":{"w":"thing","s":"ng","c":{"s":{"w":"things","s":"s","c":{},"d":[26,33,176,221,251,254],"e":true}},"d":[40,267],"e":true}},"d":[],"e":false},"o":{"w":"tho","s":"o","c":{"s":{"w":"those","s":"se","c":{},"d":[28,234],"e":true},"u":{"w":"though","s":"ugh","c":{},"d":[47,98,213,220,225,238,247],"e":true}},"d":[],"e":false}},"d":[],"e":false},"y":{"w":"typ","s":"yp","c":{"e":{"w":"type","s":"e","c":{"s":{"w":"types","s":"s","c":{"a":{"w":"typesafe","s":"afe","c":{},"d":[28,142],"e":true},"c":{"w":"typescript","s":"cript","c":{},"d":[38],"e":true},"h":{"w":"typeshapeexpected","s":"hapeexpected","c":{},"d":[208],"e":true}},"d":[10,25,49,71,81,110,105,97,166,223],"e":true},"-":{"w":"type-safe","s":"-safe","c":{},"d":[30,208,213],"e":true},"d":{"w":"typed","s":"d","c":{},"d":[25,71,219],"e":true},"v":{"w":"typevaluestring","s":"valuestring","c":{},"d":[46],"e":true},"b":{"w":"typebox","s":"box","c":{"'":{"w":"typebox'","s":"'","c":{},"d":[267,269],"e":true}},"d":[94],"e":true},"e":{"w":"typeexampleexpected","s":"exampleexpected","c":{},"d":[186],"e":true}},"d":[1,8,25,26,29,28,40,46,47,65,72,78,79,81,97,110,96,152,153,208,206,213,219,220,233,234,237],"e":true},"o":{"w":"typo","s":"o","c":{},"d":[32],"e":true},"i":{"w":"typing","s":"ing","c":{},"d":[47,99],"e":true}},"d":[],"e":false},"s":{"w":"ts","s":"s","c":{},"d":[9,8,25,42,41,39,40,43,93,98,141,220,223,244,246,275,269],"e":true},"o":{"w":"to","s":"o","c":{"p":{"w":"top","s":"p","c":{"-":{"w":"top-","s":"-","c":{"l":{"w":"top-level","s":"level","c":{},"d":[11,98,234,246],"e":true},"c":{"w":"top-class","s":"class","c":{},"d":[73],"e":true}},"d":[],"e":false}},"d":[44,95,122,198,233,247,268,267,269],"e":true},"o":{"w":"too","s":"o","c":{"l":{"w":"tooltip","s":"ltip","c":{},"d":[171,193],"e":true}},"d":[19,155,168],"e":true},"g":{"w":"together","s":"gether","c":{},"d":[59,70,79,181,194,206,269],"e":true},"u":{"w":"tou","s":"u","c":{"c":{"w":"touched","s":"ched","c":{},"d":[73],"e":true},"g":{"w":"tough","s":"gh","c":{},"d":[132],"e":true}},"d":[],"e":false},"a":{"w":"toast","s":"ast","c":{},"d":[207,221],"e":true},"d":{"w":"today","s":"day","c":{},"d":[237],"e":true}},"d":[2,3,18,19,15,16,7,12,8,17,14,13,5,1,25,28,30,29,27,26,24,32,33,35,43,44,41,36,38,40,39,34,45,48,46,50,49,47,59,68,63,66,52,62,56,67,64,65,71,69,72,70,73,77,82,76,90,78,83,88,87,81,80,115,101,104,100,108,96,106,97,113,98,91,99,107,114,112,95,105,93,109,94,117,119,126,123,127,129,122,136,135,137,147,141,146,144,145,140,154,149,157,161,156,151,153,152,155,159,158,165,173,168,171,175,163,164,172,166,174,169,170,183,182,177,176,179,180,178,181,191,190,194,196,189,193,195,185,192,198,184,187,188,186,207,202,204,205,206,208,201,209,199,216,212,214,213,215,218,221,219,222,220,226,227,224,223,229,230,233,234,228,232,235,237,239,240,238,242,243,244,247,245,246,248,250,249,252,251,253,257,255,258,254,256,260,263,262,261,259,269,278,270,271,267,273,276,266,272,274,268,277,275],"e":true},"r":{"w":"tr","s":"r","c":{"a":{"w":"tra","s":"a","c":{"n":{"w":"trans","s":"ns","c":{"f":{"w":"transform","s":"form","c":{"a":{"w":"transformation","s":"ation","c":{"s":{"w":"transformations","s":"s","c":{},"d":[1,97],"e":true}},"d":[12,202],"e":true},"e":{"w":"transformed","s":"ed","c":{},"d":[183],"e":true}},"d":[72],"e":true},"l":{"w":"translation","s":"lation","c":{},"d":[197],"e":true}},"d":[],"e":false},"c":{"w":"track","s":"ck","c":{},"d":[106,157,155],"e":true}},"d":[],"e":false},"u":{"w":"tru","s":"u","c":{"e":{"w":"true","s":"e","c":{},"d":[15,47,71,88,87,93,108,123,154,155,158,181,178,179,189,187,216,243,249,258,256,260,261],"e":true},"s":{"w":"trustworthy","s":"stworthy","c":{},"d":[47],"e":true},"n":{"w":"truncat","s":"ncat","c":{"e":{"w":"truncate","s":"e","c":{},"d":[123],"e":true},"i":{"w":"truncating","s":"ing","c":{},"d":[123],"e":true}},"d":[],"e":false}},"d":[],"e":false},"i":{"w":"tri","s":"i","c":{"c":{"w":"trick","s":"ck","c":{"y":{"w":"tricky","s":"y","c":{},"d":[29],"e":true}},"d":[247],"e":true},"v":{"w":"trivial","s":"vial","c":{},"d":[44],"e":true},"g":{"w":"trigger","s":"gger","c":{"e":{"w":"triggered","s":"ed","c":{},"d":[170,206,209,201,199],"e":true},"i":{"w":"triggering","s":"ing","c":{},"d":[204],"e":true}},"d":[158],"e":true}},"d":[],"e":false},"o":{"w":"trouble","s":"ouble","c":{},"d":[29],"e":true},"e":{"w":"tre","s":"e","c":{"e":{"w":"tree","s":"e","c":{},"d":[28,81],"e":true},"a":{"w":"treated","s":"ated","c":{},"d":[52],"e":true}},"d":[],"e":false},"y":{"w":"try","s":"y","c":{},"d":[198,261,260,274],"e":true}},"d":[],"e":false},"i":{"w":"ti","s":"i","c":{"m":{"w":"time","s":"me","c":{"s":{"w":"times","s":"s","c":{},"d":[5,64,185,257,258],"e":true},"r":{"w":"timer","s":"r","c":{"s":{"w":"timers","s":"s","c":{},"d":[176,248,251,253,257,254,256,258,277],"e":true}},"d":[255],"e":true},"o":{"w":"timeout","s":"out","c":{"m":{"w":"timeoutms","s":"ms","c":{},"d":[255,256],"e":true}},"d":[253,258,256],"e":true}},"d":[119,137,209,199,256],"e":true},"t":{"w":"title","s":"tle","c":{},"d":[41],"e":true}},"d":[],"e":false},"e":{"w":"te","s":"e","c":{"x":{"w":"text","s":"xt","c":{"i":{"w":"textinput","s":"input","c":{},"d":[26,110],"e":true},"f":{"w":"textfield","s":"field","c":{},"d":[30],"e":true}},"d":[14,13,30,36,47,65,63,159],"e":true},"s":{"w":"test","s":"st","c":{"i":{"w":"testing","s":"ing","c":{},"d":[39,45,156],"e":true}},"d":[41,143],"e":true},"r":{"w":"terms","s":"rms","c":{},"d":[47],"e":true},"m":{"w":"temporary","s":"mporary","c":{},"d":[69],"e":true}},"d":[],"e":false},"a":{"w":"ta","s":"a","c":{"i":{"w":"taint","s":"int","c":{"i":{"w":"tainting","s":"ing","c":{},"d":[18,19,65,229,263],"e":true},"e":{"w":"tainted","s":"ed","c":{"m":{"w":"taintedmessage","s":"message","c":{},"d":[155,260],"e":true}},"d":[106,156,155,229,235,238,259,260,262,261,277],"e":true}},"d":[27,229,235,263],"e":true},"g":{"w":"tag","s":"g","c":{"s":{"w":"tags","s":"s","c":{},"d":[5,30,26,81,175,194,232,233],"e":true}},"d":[175,232],"e":true},"k":{"w":"tak","s":"k","c":{"e":{"w":"take","s":"e","c":{"s":{"w":"takes","s":"s","c":{},"d":[28,176,179,248,277],"e":true},"n":{"w":"taken","s":"n","c":{},"d":[208],"e":true}},"d":[48,166,232,238,248],"e":true},"i":{"w":"taking","s":"ing","c":{},"d":[237],"e":true}},"d":[],"e":false},"b":{"w":"tab","s":"b","c":{"b":{"w":"tabbing","s":"bing","c":{},"d":[170],"e":true},"l":{"w":"table","s":"le","c":{},"d":[223],"e":true}},"d":[260],"e":true},"r":{"w":"target","s":"rget","c":{},"d":[209],"e":true},"m":{"w":"tamper","s":"mper","c":{},"d":[245],"e":true}},"d":[],"e":false},"u":{"w":"tu","s":"u","c":{"t":{"w":"tutorial","s":"torial","c":{},"d":[24,29,266,278,265],"e":true},"r":{"w":"turn","s":"rn","c":{"i":{"w":"turning","s":"ing","c":{},"d":[178],"e":true}},"d":[259],"e":true}},"d":[],"e":false},"w":{"w":"two","s":"wo","c":{"-":{"w":"two-way","s":"-way","c":{},"d":[273],"e":true}},"d":[25,93,134,158,159,163,201,221,227,234,273,269],"e":true}},"d":[1,28,158],"e":true},"s":{"w":"s","s":"s","c":{"u":{"w":"su","s":"u","c":{"p":{"w":"sup","s":"p","c":{"e":{"w":"super","s":"er","c":{"d":{"w":"superdebug","s":"debug","c":{},"d":[22,41,111,122,128,130,123,129,125,127,150,160,274],"e":true},"v":{"w":"supervalidate","s":"validate","c":{"d":{"w":"supervalidated","s":"d","c":{},"d":[4,79,97,173,187,248],"e":true},"s":{"w":"supervalidatesync","s":"sync","c":{},"d":[78,98,141],"e":true}},"d":[7,34,40,46,64,89,78,79,108,97,93,98,141,181,187,216,220,246,249,273,275,271,269],"e":true},"f":{"w":"superform","s":"form","c":{"s":{"w":"superforms","s":"s","c":{"-":{"w":"superforms-legacy","s":"-legacy","c":{},"d":[75],"e":true},"_":{"w":"superforms_legacy","s":"_legacy","c":{},"d":[216],"e":true},"'":{"w":"superforms'","s":"'","c":{},"d":[248],"e":true}},"d":[7,30,32,33,34,36,40,43,45,54,56,70,69,75,77,107,96,117,119,122,135,134,138,148,149,161,163,164,183,181,186,187,193,201,210,211,222,220,223,230,228,233,238,242,243,249,251,255,259],"e":true},"c":{"w":"superformclient","s":"client","c":{},"d":[96],"e":true}},"d":[18,19,8,24,28,27,41,57,53,68,70,86,78,106,112,115,93,97,122,143,157,156,154,172,176,181,184,224,235,247,248,256,262,266,267,276,273,277,269],"e":true},"p":{"w":"superpowers","s":"powers","c":{},"d":[30],"e":true},"-":{"w":"super-simple","s":"-simple","c":{},"d":[168],"e":true}},"d":[30],"e":true},"p":{"w":"supp","s":"p","c":{"o":{"w":"suppo","s":"o","c":{"r":{"w":"support","s":"rt","c":{"e":{"w":"supported","s":"ed","c":{},"d":[94],"e":true}},"d":[33,44,45,75,91,107,119,134,135,136,151,210],"e":true},"s":{"w":"supposed","s":"sed","c":{},"d":[180],"e":true}},"d":[],"e":false},"l":{"w":"suppl","s":"l","c":{"i":{"w":"supplied","s":"ied","c":{},"d":[46],"e":true},"y":{"w":"supply","s":"y","c":{},"d":[94],"e":true},"e":{"w":"supplementary","s":"ementary","c":{},"d":[167],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"supabase","s":"abase","c":{},"d":[178],"e":true}},"d":[],"e":false},"b":{"w":"sub","s":"b","c":{"m":{"w":"submi","s":"mi","c":{"t":{"w":"submit","s":"t","c":{"f":{"w":"submitfunction","s":"function","c":{},"d":[10,201],"e":true},"t":{"w":"submitt","s":"t","c":{"i":{"w":"submitting","s":"ing","c":{},"d":[209,217,240,252,253,257,256,277],"e":true},"e":{"w":"submitted","s":"ed","c":{},"d":[199,226,229,243,251,253,256,258],"e":true}},"d":[],"e":false}},"d":[57,137,170,198,188,193,196,199,243,253,258,254,275],"e":true},"s":{"w":"submission","s":"ssion","c":{"s":{"w":"submissions","s":"s","c":{},"d":[117,253],"e":true}},"d":[63,80,189,195,204,203,201,220],"e":true}},"d":[],"e":false},"j":{"w":"subject","s":"ject","c":{},"d":[73],"e":true}},"d":[],"e":false},"c":{"w":"suc","s":"c","c":{"c":{"w":"succe","s":"ce","c":{"s":{"w":"success","s":"ss","c":{"f":{"w":"successful","s":"ful","c":{"l":{"w":"successfully","s":"ly","c":{},"d":[276],"e":true}},"d":[69,181,179,222,219,226,261],"e":true}},"d":[41],"e":true},"e":{"w":"succeed","s":"ed","c":{"e":{"w":"succeeded","s":"ed","c":{},"d":[187,204,275],"e":true},"s":{"w":"succeeds","s":"s","c":{},"d":[204],"e":true}},"d":[],"e":false}},"d":[],"e":false},"h":{"w":"such","s":"h","c":{},"d":[189,185,208],"e":true}},"d":[],"e":false},"i":{"w":"suit","s":"it","c":{"s":{"w":"suits","s":"s","c":{},"d":[73],"e":true}},"d":[68],"e":true},"r":{"w":"sure","s":"re","c":{},"d":[96],"e":true},"m":{"w":"summarize","s":"mmarize","c":{},"d":[233],"e":true}},"d":[],"e":false},"e":{"w":"se","s":"e","c":{"e":{"w":"see","s":"e","c":{"n":{"w":"seen","s":"n","c":{},"d":[27,73],"e":true}},"d":[3,10,4,18,29,44,41,55,62,52,67,65,71,83,126,149,171,175,198,184,193,201,206,219,235,245,253,258,274,276,267,269,275],"e":true},"t":{"w":"set","s":"t","c":{"t":{"w":"setting","s":"ting","c":{"s":{"w":"settings","s":"s","c":{},"d":[170,189,258,267,265,269,275],"e":true}},"d":[5,6,41,50,65,102,93,139,168,179,181,180,183,195,223,229,234,243,252,258],"e":true},"e":{"w":"seterror","s":"error","c":{},"d":[80,84,194,185,195,211,215],"e":true},"m":{"w":"setmessage","s":"message","c":{},"d":[84],"e":true},"s":{"w":"sets","s":"s","c":{},"d":[123],"e":true}},"d":[7,14,13,5,8,30,48,47,49,67,65,71,87,80,100,103,105,108,93,123,145,155,152,159,153,175,174,168,191,185,192,194,198,195,189,205,208,216,213,215,219,220,226,227,224,223,229,233,235,237,247,248,253,258,260,261,270,275],"e":true},"r":{"w":"ser","s":"r","c":{"v":{"w":"serv","s":"v","c":{"e":{"w":"server","s":"er","c":{"-":{"w":"server-side","s":"-side","c":{},"d":[276],"e":true}},"d":[9,8,40,42,41,43,62,63,111,96,98,117,141,160,168,174,163,179,183,181,186,208,204,200,218,223,243,244,245,251,254,275,269,276],"e":true},"i":{"w":"service","s":"ice","c":{},"d":[73],"e":true}},"d":[],"e":false},"i":{"w":"serializ","s":"ializ","c":{"i":{"w":"serializing","s":"ing","c":{},"d":[153],"e":true},"e":{"w":"serialize","s":"e","c":{"d":{"w":"serialized","s":"d","c":{},"d":[202,211,239],"e":true}},"d":[211],"e":true}},"d":[],"e":false}},"d":[],"e":false},"n":{"w":"sen","s":"n","c":{"d":{"w":"send","s":"d","c":{},"d":[2,8,34,62,218,219,271],"e":true},"t":{"w":"sent","s":"t","c":{},"d":[69,108,181,187,202,223,243,276,275],"e":true},"s":{"w":"sensible","s":"sible","c":{},"d":[226,253],"e":true}},"d":[],"e":false},"c":{"w":"sec","s":"c","c":{"o":{"w":"second","s":"ond","c":{"s":{"w":"seconds","s":"s","c":{},"d":[37],"e":true}},"d":[2,271],"e":true},"t":{"w":"section","s":"tion","c":{},"d":[65,71,149,253,278,277],"e":true},"u":{"w":"security","s":"urity","c":{},"d":[98],"e":true},"r":{"w":"secrets","s":"rets","c":{},"d":[276],"e":true}},"d":[],"e":false},"l":{"w":"select","s":"lect","c":{"e":{"w":"selected","s":"ed","c":{},"d":[1,29,50],"e":true},"o":{"w":"selector","s":"or","c":{},"d":[189,192],"e":true},"i":{"w":"selection","s":"ion","c":{},"d":[237],"e":true}},"d":[38,50,65,265,267,269],"e":true},"p":{"w":"separate","s":"parate","c":{},"d":[25,82,227,226,223],"e":true},"v":{"w":"several","s":"veral","c":{},"d":[64,275],"e":true},"a":{"w":"search","s":"arch","c":{},"d":[98],"e":true},"g":{"w":"segment","s":"gment","c":{},"d":[234],"e":true}},"d":[],"e":false},"r":{"w":"src","s":"rc","c":{},"d":[9,25,42,41,44,38,43,39,40,220,245,244,257,274,276,269,273,275],"e":true},"c":{"w":"sc","s":"c","c":{"h":{"w":"schema","s":"hema","c":{"s":{"w":"schemas","s":"s","c":{},"d":[25,40,96,100,151,169,168,225,223],"e":true}},"d":[21,7,17,1,15,16,14,13,4,18,25,29,28,39,40,43,46,47,65,66,67,62,85,83,80,81,94,95,107,97,96,100,108,98,140,147,139,141,152,158,168,165,163,167,170,197,194,195,187,185,210,213,215,223,232,231,233,235,246,249,268,267,269,271,270,278,275],"e":true},"r":{"w":"scr","s":"r","c":{"i":{"w":"script","s":"ipt","c":{},"d":[24],"e":true},"a":{"w":"scratch","s":"atch","c":{},"d":[38,265],"e":true},"o":{"w":"scroll","s":"oll","c":{"t":{"w":"scrolltoerror","s":"toerror","c":{},"d":[190],"e":true},"i":{"w":"scrollintoview","s":"intoview","c":{},"d":[190],"e":true},"e":{"w":"scrolled","s":"ed","c":{},"d":[189],"e":true},"b":{"w":"scrollbars","s":"bars","c":{},"d":[190],"e":true}},"d":[126,190],"e":true}},"d":[],"e":false},"a":{"w":"scan","s":"an","c":{},"d":[77],"e":true},"e":{"w":"scen","s":"en","c":{"a":{"w":"scenarios","s":"arios","c":{},"d":[78,223],"e":true},"e":{"w":"scenes","s":"es","c":{},"d":[274],"e":true}},"d":[],"e":false}},"d":[],"e":false},"v":{"w":"svelte","s":"velte","c":{"k":{"w":"sveltekit","s":"kit","c":{"-":{"w":"sveltekit-","s":"-","c":{"f":{"w":"sveltekit-flash-message","s":"flash-message","c":{},"d":[69,222],"e":true},"s":{"w":"sveltekit-superforms","s":"superforms","c":{},"d":[77,111,160],"e":true},"r":{"w":"sveltekit-rate-limiter","s":"rate-limiter","c":{},"d":[117],"e":true}},"d":[],"e":false},"'":{"w":"sveltekit's","s":"'s","c":{},"d":[176,201],"e":true}},"d":[38,41,45,55,93,154,178,183,176,208,204,201,211,219,238,242,272,265,277],"e":true},"l":{"w":"sveltelab","s":"lab","c":{},"d":[45,67,248],"e":true},"'":{"w":"svelte's","s":"'s","c":{},"d":[132],"e":true}},"d":[10,11,14,13,26,25,29,28,44,43,41,60,77,110,98,131,183,186,220,226,223,235,239,245,246,257,273,274,276],"e":true},"t":{"w":"st","s":"t","c":{"r":{"w":"str","s":"r","c":{"i":{"w":"stri","s":"i","c":{"n":{"w":"string","s":"ng","c":{"s":{"w":"strings","s":"s","c":{},"d":[104,153,197,229,233],"e":true},"t":{"w":"stringtruncatenumber","s":"truncatenumber","c":{},"d":[123],"e":true},"p":{"w":"stringproxy","s":"proxy","c":{},"d":[145],"e":true}},"d":[13,14,15,16,17,1,10,5,27,28,50,65,80,81,82,104,100,123,142,155,153,185,208,220,219,228,231,234,235,237,260,270],"e":true},"c":{"w":"strict","s":"ct","c":{},"d":[249],"e":true}},"d":[],"e":false},"u":{"w":"structure","s":"ucture","c":{"s":{"w":"structures","s":"s","c":{},"d":[61],"e":true}},"d":[22,122,185,229,228,275],"e":true},"o":{"w":"strongly","s":"ongly","c":{},"d":[25,71,219],"e":true},"a":{"w":"stra","s":"a","c":{"n":{"w":"strange","s":"nge","c":{},"d":[47],"e":true},"i":{"w":"straightforward","s":"ightforward","c":{},"d":[244],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"store","s":"ore","c":{"s":{"w":"stores","s":"s","c":{},"d":[18,19,79,117,127,122,207,206,256,276],"e":true},"d":{"w":"stored","s":"d","c":{},"d":[98],"e":true}},"d":[13,14,15,16,17,19,18,27,30,67,85,79,114,106,129,123,143,156,155,165,174,188,196,206,208,218,217,223,224,229,235,263],"e":true},"a":{"w":"sta","s":"a","c":{"t":{"w":"stat","s":"t","c":{"u":{"w":"status","s":"us","c":{"b":{"w":"statusboolean","s":"boolean","c":{},"d":[123],"e":true}},"d":[5,6,1,8,25,41,61,69,70,84,80,123,122,183,178,186,195,205,208,217,220,222,219,252,261,278,274,276,275],"e":true},"e":{"w":"state","s":"e","c":{"s":{"w":"states","s":"s","c":{},"d":[256,257],"e":true}},"d":[181,238,240,253,256,258],"e":true},"i":{"w":"static","s":"ic","c":{},"d":[176],"e":true}},"d":[],"e":false},"c":{"w":"stack","s":"ck","c":{"b":{"w":"stackblitz","s":"blitz","c":{},"d":[19,29,37,44],"e":true}},"d":[68],"e":true},"r":{"w":"star","s":"r","c":{"t":{"w":"start","s":"t","c":{"e":{"w":"started","s":"ed","c":{},"d":[24],"e":true},"i":{"w":"starting","s":"ing","c":{},"d":[40,265],"e":true}},"d":[38,45,68],"e":true}},"d":[135],"e":true},"n":{"w":"standard","s":"ndard","c":{"i":{"w":"standardized","s":"ized","c":{},"d":[228],"e":true}},"d":[164,193],"e":true}},"d":[],"e":false},"y":{"w":"styl","s":"yl","c":{"i":{"w":"styling","s":"ing","c":{},"d":[26,44,131],"e":true},"e":{"w":"style","s":"e","c":{},"d":[73,220],"e":true}},"d":[],"e":false},"i":{"w":"sti","s":"i","c":{"l":{"w":"still","s":"ll","c":{},"d":[26,27,49,75,91,205,215,223,235],"e":true},"c":{"w":"sticky","s":"cky","c":{},"d":[192],"e":true}},"d":[],"e":false},"e":{"w":"step","s":"ep","c":{"s":{"w":"steps","s":"s","c":{},"d":[34],"e":true}},"d":[277],"e":true}},"d":[],"e":false},"i":{"w":"si","s":"i","c":{"m":{"w":"sim","s":"m","c":{"i":{"w":"similar","s":"ilar","c":{},"d":[18,19,50,56,173,170],"e":true},"p":{"w":"simpl","s":"pl","c":{"e":{"w":"simple","s":"e","c":{"r":{"w":"simpler","s":"r","c":{},"d":[110],"e":true}},"d":[24,30,41,61,101,103,208,218,220],"e":true},"i":{"w":"simplif","s":"if","c":{"i":{"w":"simplifie","s":"ie","c":{"s":{"w":"simplifies","s":"s","c":{},"d":[26,73],"e":true},"d":{"w":"simplified","s":"d","c":{},"d":[81],"e":true}},"d":[],"e":false},"y":{"w":"simplify","s":"y","c":{},"d":[220],"e":true}},"d":[],"e":false},"y":{"w":"simply","s":"y","c":{},"d":[160,229,277],"e":true}},"d":[],"e":false}},"d":[],"e":false},"n":{"w":"sin","s":"n","c":{"c":{"w":"sinc","s":"c","c":{"e":{"w":"since","s":"e","c":{},"d":[11,8,26,28,30,41,43,47,69,81,98,114,96,97,132,137,141,168,181,179,183,188,191,193,202,205,207,213,222,223,229,246,244,245,255],"e":true},"l":{"w":"sinclair","s":"lair","c":{},"d":[267,269],"e":true}},"d":[],"e":false},"g":{"w":"single","s":"gle","c":{"-":{"w":"single-page","s":"-page","c":{},"d":[200,206],"e":true}},"d":[18,182,176,242,267],"e":true}},"d":[],"e":false},"s":{"w":"sister","s":"ster","c":{},"d":[43,69],"e":true},"g":{"w":"sign","s":"gn","c":{"a":{"w":"signature","s":"ature","c":{},"d":[82,201],"e":true},"i":{"w":"signify","s":"ify","c":{"i":{"w":"signifying","s":"ing","c":{},"d":[249],"e":true}},"d":[115],"e":true}},"d":[],"e":false},"z":{"w":"size","s":"ze","c":{},"d":[96,141,168],"e":true},"d":{"w":"side-effect","s":"de-effect","c":{"s":{"w":"side-effects","s":"s","c":{},"d":[108],"e":true}},"d":[131],"e":true},"t":{"w":"site","s":"te","c":{},"d":[238,260],"e":true}},"d":[],"e":false},"p":{"w":"sp","s":"p","c":{"a":{"w":"spa","s":"a","c":{"-":{"w":"spa-action-form","s":"-action-form","c":{},"d":[10],"e":true},"'":{"w":"spa's","s":"'s","c":{},"d":[78,141],"e":true},"m":{"w":"spamming","s":"mming","c":{},"d":[117],"e":true}},"d":[11,10,56,78,98,174,206,202,243,244,245,242,248],"e":true},"e":{"w":"spe","s":"e","c":{"c":{"w":"speci","s":"ci","c":{"a":{"w":"special","s":"al","c":{},"d":[27,70,229,237],"e":true},"f":{"w":"specif","s":"f","c":{"i":{"w":"specifi","s":"i","c":{"c":{"w":"specific","s":"c","c":{},"d":[29,43,113,146,157,172],"e":true},"e":{"w":"specifie","s":"e","c":{"d":{"w":"specified","s":"d","c":{},"d":[139],"e":true},"r":{"w":"specifier","s":"r","c":{},"d":[234],"e":true}},"d":[],"e":false}},"d":[],"e":false},"y":{"w":"specify","s":"y","c":{},"d":[29,152,185,234,248],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"speaking","s":"aking","c":{},"d":[106],"e":true},"e":{"w":"speed","s":"ed","c":{},"d":[137],"e":true}},"d":[],"e":false},"l":{"w":"split","s":"lit","c":{},"d":[99],"e":true},"o":{"w":"sponsor","s":"onsor","c":{"s":{"w":"sponsors","s":"s","c":{},"d":[136],"e":true}},"d":[136],"e":true},"r":{"w":"spread","s":"read","c":{"i":{"w":"spreading","s":"ing","c":{},"d":[193],"e":true}},"d":[165,166],"e":true},"i":{"w":"spinner","s":"inner","c":{"s":{"w":"spinners","s":"s","c":{},"d":[258,277],"e":true}},"d":[254],"e":true}},"d":[],"e":false},"o":{"w":"so","s":"o","c":{"m":{"w":"some","s":"me","c":{"t":{"w":"somet","s":"t","c":{"i":{"w":"sometimes","s":"imes","c":{},"d":[41,235,248],"e":true},"h":{"w":"something","s":"hing","c":{},"d":[90,147,207,202,249,278],"e":true}},"d":[],"e":false},"w":{"w":"somewhere","s":"where","c":{},"d":[98],"e":true}},"d":[14,13,30,26,32,44,41,42,63,70,85,107,97,166,220,250,275],"e":true},"l":{"w":"solution","s":"lution","c":{},"d":[28,43,69,222,228],"e":true},"u":{"w":"source","s":"urce","c":{"s":{"w":"sources","s":"s","c":{},"d":[178],"e":true}},"d":[33,137,136,178],"e":true},"f":{"w":"software","s":"ftware","c":{},"d":[33,136],"e":true},"o":{"w":"soon","s":"on","c":{"e":{"w":"sooner","s":"er","c":{},"d":[249],"e":true}},"d":[175,168],"e":true}},"d":[5,8,28,29,27,26,40,41,43,48,72,75,88,77,81,116,105,98,99,97,95,106,96,117,119,145,142,157,155,153,171,174,167,168,170,181,197,188,185,213,216,211,222,220,219,224,223,233,228,232,237,249,256,277,268,276],"e":true},"h":{"w":"sh","s":"h","c":{"o":{"w":"sho","s":"o","c":{"u":{"w":"should","s":"uld","c":{"n":{"w":"shouldn't","s":"n't","c":{},"d":[43,168],"e":true}},"d":[15,42,41,47,90,78,81,109,108,105,152,153,155,176,207,208,223,229,240,244,252,255,261,260,268,272,275,274,271,273],"e":true},"w":{"w":"show","s":"w","c":{"n":{"w":"shown","s":"n","c":{},"d":[8,177,260],"e":true},"s":{"w":"shows","s":"s","c":{},"d":[79,122,212,233,278],"e":true},"i":{"w":"showing","s":"ing","c":{},"d":[207],"e":true}},"d":[14,13,30,43,123,135,175,188,247,251,257,276],"e":true},"r":{"w":"short","s":"rt","c":{},"d":[257],"e":true}},"d":[],"e":false},"a":{"w":"sha","s":"a","c":{"r":{"w":"share","s":"re","c":{"d":{"w":"shared","s":"d","c":{},"d":[168],"e":true}},"d":[40,176,223],"e":true},"p":{"w":"shape","s":"pe","c":{},"d":[208],"e":true}},"d":[],"e":false},"i":{"w":"shift","s":"ift","c":{},"d":[191],"e":true}},"d":[],"e":false},"k":{"w":"sk","s":"k","c":{"i":{"w":"skip","s":"ip","c":{"p":{"w":"skipped","s":"ped","c":{},"d":[5],"e":true}},"d":[123],"e":true},"e":{"w":"skeleton","s":"eleton","c":{},"d":[38,260],"e":true}},"d":[],"e":false},"a":{"w":"sa","s":"a","c":{"m":{"w":"same","s":"me","c":{},"d":[1,8,27,40,64,82,96,100,111,95,93,127,139,160,168,163,182,179,194,201,215,220,223,233,235,245,260,278,268,275],"e":true},"t":{"w":"satisf","s":"tisf","c":{"i":{"w":"satisfies","s":"ies","c":{},"d":[29],"e":true},"a":{"w":"satisfaction","s":"action","c":{},"d":[170],"e":true}},"d":[],"e":false},"f":{"w":"safety","s":"fety","c":{},"d":[40,78,110,139],"e":true},"v":{"w":"sav","s":"v","c":{"e":{"w":"save","s":"e","c":{"s":{"w":"saves","s":"s","c":{},"d":[238],"e":true},"d":{"w":"saved","s":"d","c":{},"d":[263],"e":true}},"d":[97,212],"e":true},"i":{"w":"saving","s":"ing","c":{},"d":[238],"e":true}},"d":[],"e":false},"i":{"w":"said","s":"id","c":{},"d":[96,188,195],"e":true},"y":{"w":"say","s":"y","c":{"s":{"w":"says","s":"s","c":{},"d":[213],"e":true}},"d":[119,223],"e":true}},"d":[],"e":false},"y":{"w":"sy","s":"y","c":{"n":{"w":"syn","s":"n","c":{"t":{"w":"syntax","s":"tax","c":{},"d":[28,38,81,142],"e":true},"c":{"w":"sync","s":"c","c":{"h":{"w":"synchron","s":"hron","c":{"i":{"w":"synchronized","s":"ized","c":{},"d":[71],"e":true},"o":{"w":"synchronous","s":"ous","c":{},"d":[87,98],"e":true}},"d":[],"e":false}},"d":[180],"e":true}},"d":[],"e":false},"s":{"w":"system","s":"stem","c":{},"d":[47],"e":true},"m":{"w":"symbol","s":"mbol","c":{},"d":[46],"e":true}},"d":[],"e":false},"m":{"w":"sm","s":"m","c":{"a":{"w":"sma","s":"a","c":{"l":{"w":"small","s":"ll","c":{"e":{"w":"smalle","s":"e","c":{"s":{"w":"smallest","s":"st","c":{},"d":[96],"e":true},"r":{"w":"smaller","s":"r","c":{},"d":[255],"e":true}},"d":[],"e":false}},"d":[36,91,168],"e":true},"r":{"w":"smarter","s":"rter","c":{},"d":[155],"e":true}},"d":[],"e":false},"o":{"w":"smooth","s":"ooth","c":{},"d":[190],"e":true}},"d":[],"e":false},"l":{"w":"sl","s":"l","c":{"o":{"w":"slow","s":"ow","c":{},"d":[43,174],"e":true},"i":{"w":"slightly","s":"ightly","c":{},"d":[63],"e":true}},"d":[],"e":false},"w":{"w":"switch","s":"witch","c":{},"d":[96,169,168],"e":true},"n":{"w":"snapshot","s":"napshot","c":{"s":{"w":"snapshots","s":"s","c":{},"d":[238],"e":true}},"d":[239],"e":true}},"d":[229,263],"e":true},"r":{"w":"r","s":"r","c":{"e":{"w":"re","s":"e","c":{"t":{"w":"ret","s":"t","c":{"u":{"w":"return","s":"urn","c":{"s":{"w":"returns","s":"s","c":{},"d":[7,5,63,155,185,237,273,272],"e":true},"i":{"w":"returning","s":"ing","c":{},"d":[18,19,5,41,61,78,183,185,186,208],"e":true},"e":{"w":"returned","s":"ed","c":{},"d":[4,19,5,7,18,29,46,55,63,69,79,112,97,122,176,180,179,181,185,187,200,208,222,219,245,253,256,261,272,277,275],"e":true}},"d":[8,56,59,63,61,84,173,186,211,219,221,237,272,273],"e":true},"r":{"w":"retrieving","s":"rieving","c":{},"d":[158],"e":true}},"d":[],"e":false},"f":{"w":"ref","s":"f","c":{"e":{"w":"refer","s":"er","c":{"e":{"w":"reference","s":"ence","c":{},"d":[1,41,55],"e":true}},"d":[41,68,95,268],"e":true},"l":{"w":"reflect","s":"lect","c":{"i":{"w":"reflecti","s":"i","c":{"o":{"w":"reflection","s":"on","c":{},"d":[85],"e":true},"n":{"w":"reflecting","s":"ng","c":{},"d":[275],"e":true}},"d":[],"e":false}},"d":[12,27],"e":true},"i":{"w":"refin","s":"in","c":{"e":{"w":"refine","s":"e","c":{},"d":[47,80,108,170,195,234],"e":true},"i":{"w":"refining","s":"ing","c":{},"d":[194],"e":true}},"d":[],"e":false},"r":{"w":"refresh","s":"resh","c":{},"d":[126],"e":true},"h":{"w":"refhtmlpreelementreference","s":"htmlpreelementreference","c":{},"d":[123],"e":true}},"d":[],"e":false},"p":{"w":"rep","s":"p","c":{"r":{"w":"represent","s":"resent","c":{"s":{"w":"represents","s":"s","c":{},"d":[1,15],"e":true},"a":{"w":"representation","s":"ation","c":{},"d":[244],"e":true},"i":{"w":"representing","s":"ing","c":{},"d":[267],"e":true}},"d":[15,228],"e":true},"l":{"w":"replace","s":"lace","c":{"s":{"w":"replaces","s":"s","c":{},"d":[1],"e":true},"m":{"w":"replacement","s":"ment","c":{},"d":[96],"e":true},"d":{"w":"replaced","s":"d","c":{},"d":[142,231],"e":true}},"d":[70,99],"e":true},"o":{"w":"repo","s":"o","c":{"s":{"w":"repository","s":"sitory","c":{},"d":[32],"e":true},"r":{"w":"report","s":"rt","c":{"i":{"w":"reporting","s":"ing","c":{},"d":[45],"e":true},"e":{"w":"reported","s":"ed","c":{},"d":[249],"e":true}},"d":[137],"e":true}},"d":[117],"e":true}},"d":[],"e":false},"c":{"w":"rec","s":"c","c":{"o":{"w":"reco","s":"o","c":{"r":{"w":"record","s":"rd","c":{},"d":[1,28],"e":true},"m":{"w":"recommended","s":"mmended","c":{},"d":[168,186,208,212],"e":true}},"d":[],"e":false},"r":{"w":"recreate","s":"reate","c":{},"d":[30],"e":true}},"d":[],"e":false},"d":{"w":"red","s":"d","c":{"u":{"w":"redundant","s":"undant","c":{},"d":[17],"e":true},"i":{"w":"redirect","s":"irect","c":{"i":{"w":"redirecting","s":"ing","c":{},"d":[43,178,222],"e":true},"s":{"w":"redirects","s":"s","c":{},"d":[69,222],"e":true}},"d":[8,43,69,205,222,272],"e":true}},"d":[],"e":false},"q":{"w":"requ","s":"qu","c":{"i":{"w":"require","s":"ire","c":{"d":{"w":"required","s":"d","c":{},"d":[19,18,49,69,109,105,123,139,166,171,167,193,211,225,249,257,267,273,277,276],"e":true},"s":{"w":"requires","s":"s","c":{},"d":[29,30,28,52,96,94,98,163,193],"e":true},"m":{"w":"requirements","s":"ments","c":{},"d":[230],"e":true}},"d":[26,164,163],"e":true},"e":{"w":"request","s":"est","c":{"e":{"w":"requested","s":"ed","c":{},"d":[41],"e":true},"s":{"w":"requests","s":"s","c":{},"d":[117],"e":true}},"d":[43,64,62,63,69,98,137,205,215,253,275],"e":true}},"d":[],"e":false},"m":{"w":"rem","s":"m","c":{"o":{"w":"remove","s":"ove","c":{"s":{"w":"removes","s":"s","c":{},"d":[1],"e":true},"d":{"w":"removed","s":"d","c":{},"d":[90,84,79,85,80,102,112,113,98,175,185,252],"e":true}},"d":[5,168,211],"e":true},"e":{"w":"remember","s":"ember","c":{},"d":[41,247,243],"e":true}},"d":[],"e":false},"s":{"w":"res","s":"s","c":{"p":{"w":"resp","s":"p","c":{"o":{"w":"respon","s":"on","c":{"s":{"w":"response","s":"se","c":{"u":{"w":"responseunexpected","s":"unexpected","c":{},"d":[208],"e":true},"s":{"w":"responses","s":"s","c":{},"d":[208],"e":true},"i":{"w":"responseif","s":"if","c":{},"d":[208],"e":true}},"d":[8,63,69,186,226,254,257],"e":true},"d":{"w":"respond","s":"d","c":{"s":{"w":"responds","s":"s","c":{},"d":[204],"e":true}},"d":[223],"e":true}},"d":[],"e":false},"e":{"w":"respective","s":"ective","c":{"l":{"w":"respectively","s":"ly","c":{},"d":[231,258],"e":true}},"d":[170,223],"e":true}},"d":[],"e":false},"u":{"w":"result","s":"ult","c":{"i":{"w":"resulting","s":"ing","c":{},"d":[27],"e":true},"s":{"w":"results","s":"s","c":{},"d":[106,156,270],"e":true}},"d":[8,63,78,99,146,158,173,174,170,181,179,206,208,204,207,205,253,257,261],"e":true},"e":{"w":"rese","s":"e","c":{"t":{"w":"reset","s":"t","c":{"f":{"w":"resetform","s":"form","c":{},"d":[36,41,53,87,93,154],"e":true},"t":{"w":"resetting","s":"ting","c":{},"d":[87,181],"e":true},"s":{"w":"resets","s":"s","c":{},"d":[117],"e":true}},"d":[144,181,180],"e":true},"a":{"w":"researched","s":"arched","c":{},"d":[170],"e":true}},"d":[],"e":false},"t":{"w":"rest","s":"t","c":{"o":{"w":"restore","s":"ore","c":{"s":{"w":"restores","s":"s","c":{},"d":[238],"e":true},"d":{"w":"restored","s":"d","c":{},"d":[240],"e":true}},"d":[],"e":false}},"d":[38,204],"e":true},"o":{"w":"resolve","s":"olve","c":{"d":{"w":"resolved","s":"d","c":{},"d":[155],"e":true}},"d":[260],"e":true}},"d":[],"e":false},"a":{"w":"rea","s":"a","c":{"d":{"w":"read","s":"d","c":{"y":{"w":"ready","s":"y","c":{},"d":[42,266,278],"e":true},"i":{"w":"reading","s":"ing","c":{},"d":[92,278],"e":true},"-":{"w":"read-only","s":"-only","c":{},"d":[207],"e":true},"a":{"w":"readable","s":"able","c":{},"d":[256],"e":true}},"d":[29,34,43,54,78,161,182,178,244,278,277],"e":true},"s":{"w":"reason","s":"son","c":{"s":{"w":"reasons","s":"s","c":{},"d":[78],"e":true}},"d":[63,96,257],"e":true},"l":{"w":"real","s":"l","c":{"l":{"w":"really","s":"ly","c":{},"d":[73],"e":true},"-":{"w":"real-time","s":"-time","c":{},"d":[167],"e":true},"i":{"w":"realistically","s":"istically","c":{},"d":[220],"e":true}},"d":[],"e":false},"c":{"w":"reac","s":"c","c":{"h":{"w":"reach","s":"h","c":{"e":{"w":"reached","s":"ed","c":{},"d":[253,258],"e":true}},"d":[119],"e":true},"t":{"w":"react","s":"t","c":{"i":{"w":"reacting","s":"ing","c":{},"d":[178],"e":true}},"d":[223],"e":true}},"d":[],"e":false}},"d":[],"e":false},"l":{"w":"rel","s":"l","c":{"a":{"w":"related","s":"ated","c":{},"d":[63,82],"e":true},"e":{"w":"rele","s":"e","c":{"a":{"w":"release","s":"ase","c":{"d":{"w":"released","s":"d","c":{},"d":[138,148],"e":true}},"d":[90,147,162],"e":true},"v":{"w":"relevant","s":"vant","c":{},"d":[97],"e":true}},"d":[],"e":false},"y":{"w":"rely","s":"y","c":{},"d":[80],"e":true},"o":{"w":"reload","s":"oad","c":{"i":{"w":"reloading","s":"ing","c":{},"d":[260,277],"e":true}},"d":[179,277],"e":true}},"d":[],"e":false},"n":{"w":"ren","s":"n","c":{"a":{"w":"rename","s":"ame","c":{"d":{"w":"renamed","s":"d","c":{},"d":[101,115,98],"e":true}},"d":[140],"e":true},"d":{"w":"render","s":"der","c":{"e":{"w":"rendered","s":"ed","c":{},"d":[186],"e":true},"i":{"w":"rendering","s":"ing","c":{},"d":[276],"e":true}},"d":[183,208],"e":true}},"d":[],"e":false},"v":{"w":"reveals","s":"veals","c":{},"d":[98],"e":true},"g":{"w":"reg","s":"g","c":{"i":{"w":"regist","s":"ist","c":{"r":{"w":"registration","s":"ration","c":{},"d":[117,223,263],"e":true},"e":{"w":"register","s":"er","c":{},"d":[223],"e":true}},"d":[],"e":false},"a":{"w":"regardless","s":"ardless","c":{},"d":[195],"e":true}},"d":[],"e":false},"w":{"w":"reward","s":"ward","c":{},"d":[170],"e":true}},"d":[],"e":false},"o":{"w":"ro","s":"o","c":{"u":{"w":"rou","s":"u","c":{"t":{"w":"route","s":"te","c":{"s":{"w":"routes","s":"s","c":{},"d":[9,25,42,41,44,43,40,220,245,244,257,274,276,269,273,275],"e":true}},"d":[41,223,244],"e":true},"n":{"w":"round-trip","s":"nd-trip","c":{},"d":[174],"e":true}},"d":[],"e":false},"l":{"w":"rolling","s":"lling","c":{},"d":[33],"e":true},"w":{"w":"row","s":"w","c":{"s":{"w":"rows","s":"s","c":{},"d":[223,248],"e":true}},"d":[223,248],"e":true}},"d":[],"e":false},"a":{"w":"ra","s":"a","c":{"r":{"w":"rare","s":"re","c":{"l":{"w":"rarely","s":"ly","c":{},"d":[14,13,115,113,182,235],"e":true}},"d":[100],"e":true},"n":{"w":"range","s":"nge","c":{},"d":[6,5,84,80,219],"e":true},"t":{"w":"rat","s":"t","c":{"h":{"w":"rather","s":"her","c":{},"d":[24,218],"e":true},"e":{"w":"rate","s":"e","c":{},"d":[117],"e":true}},"d":[],"e":false},"d":{"w":"radio","s":"dio","c":{},"d":[50],"e":true},"w":{"w":"rawboolean","s":"wboolean","c":{},"d":[123],"e":true}},"d":[],"e":false},"u":{"w":"run","s":"un","c":{"n":{"w":"running","s":"ning","c":{},"d":[32,37,39],"e":true}},"d":[179,265],"e":true},"i":{"w":"right","s":"ight","c":{},"d":[122,206,219,274],"e":true}},"d":[1],"e":true},"d":{"w":"d","s":"d","c":{"e":{"w":"de","s":"e","c":{"f":{"w":"def","s":"f","c":{"a":{"w":"default","s":"ault","c":{"s":{"w":"defaults","s":"s","c":{"a":{"w":"defaultsarktype","s":"arktype","c":{},"d":[94],"e":true}},"d":[11,7,95,93,94,98,154,247,246,244,268],"e":true},"d":{"w":"defaultdata","s":"data","c":{},"d":[83,140],"e":true},"v":{"w":"defaultval","s":"val","c":{"u":{"w":"defaultvalues","s":"ues","c":{},"d":[83,140],"e":true},"i":{"w":"defaultvalidators","s":"idators","c":{},"d":[103],"e":true}},"d":[],"e":false},"r":{"w":"defaultresetform","s":"resetform","c":{},"d":[93],"e":true},"t":{"w":"defaulttaintedmessage","s":"taintedmessage","c":{},"d":[93],"e":true}},"d":[7,4,1,5,8,40,49,47,46,48,50,68,65,88,83,105,109,108,100,93,111,95,94,123,140,155,159,154,151,152,160,170,177,179,178,183,176,187,191,189,208,220,226,237,246,248,249,253,252,258,260,274,270],"e":true},"i":{"w":"define","s":"ine","c":{"d":{"w":"defined","s":"d","c":{},"d":[14,13,25,28,81,95,179,216,268,275],"e":true}},"d":[93,95,268],"e":true}},"d":[],"e":false},"b":{"w":"debug","s":"bug","c":{"g":{"w":"debugging","s":"ging","c":{},"d":[22,132,122,274],"e":true}},"d":[127],"e":true},"v":{"w":"dev","s":"v","c":{"e":{"w":"development","s":"elopment","c":{},"d":[33,119],"e":true},"i":{"w":"device","s":"ice","c":{"s":{"w":"devices","s":"s","c":{},"d":[191],"e":true}},"d":[191],"e":true},"a":{"w":"devalue","s":"alue","c":{},"d":[229],"e":true}},"d":[10],"e":true},"t":{"w":"det","s":"t","c":{"a":{"w":"detail","s":"ail","c":{"s":{"w":"details","s":"s","c":{},"d":[10,18,92,157,171,176,206,235,278,277],"e":true},"e":{"w":"detailed","s":"ed","c":{},"d":[161],"e":true}},"d":[],"e":false},"e":{"w":"dete","s":"e","c":{"c":{"w":"detect","s":"ct","c":{"i":{"w":"detection","s":"ion","c":{},"d":[123],"e":true},"e":{"w":"detected","s":"ed","c":{},"d":[139,169],"e":true}},"d":[41,191],"e":true},"r":{"w":"determin","s":"rmin","c":{"a":{"w":"determinant","s":"ant","c":{},"d":[47],"e":true},"e":{"w":"determine","s":"e","c":{"s":{"w":"determines","s":"s","c":{},"d":[190],"e":true},"d":{"w":"determined","s":"d","c":{},"d":[256],"e":true}},"d":[90,223,243],"e":true},"i":{"w":"determining","s":"ing","c":{},"d":[185],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"c":{"w":"dec","s":"c","c":{"o":{"w":"deconstruct","s":"onstruct","c":{"i":{"w":"deconstructing","s":"ing","c":{},"d":[143,184],"e":true},"e":{"w":"deconstructed","s":"ed","c":{},"d":[172],"e":true}},"d":[28],"e":true},"i":{"w":"decides","s":"ides","c":{},"d":[252],"e":true}},"d":[],"e":false},"l":{"w":"del","s":"l","c":{"e":{"w":"delet","s":"et","c":{"e":{"w":"delete","s":"e","c":{"d":{"w":"deleted","s":"d","c":{},"d":[43],"e":true}},"d":[43,34],"e":true},"i":{"w":"deleting","s":"ing","c":{},"d":[43,248],"e":true}},"d":[],"e":false},"a":{"w":"delay","s":"ay","c":{"e":{"w":"delayed","s":"ed","c":{},"d":[43,258,257,256],"e":true},"m":{"w":"delayms","s":"ms","c":{},"d":[255,256],"e":true}},"d":[174,254,258],"e":true},"i":{"w":"deliberately","s":"iberately","c":{},"d":[206],"e":true}},"d":[],"e":false},"s":{"w":"des","s":"s","c":{"c":{"w":"describe","s":"cribe","c":{"d":{"w":"described","s":"d","c":{},"d":[53,81,98,131],"e":true},"s":{"w":"describes","s":"s","c":{},"d":[232],"e":true}},"d":[],"e":false},"t":{"w":"destructuring","s":"tructuring","c":{},"d":[276],"e":true}},"d":[],"e":false},"p":{"w":"dep","s":"p","c":{"r":{"w":"deprecated","s":"recated","c":{},"d":[96],"e":true},"e":{"w":"depending","s":"ending","c":{},"d":[189,208,265],"e":true}},"d":[],"e":false},"d":{"w":"dedicated","s":"dicated","c":{},"d":[149,223],"e":true},"m":{"w":"demonstrates","s":"monstrates","c":{},"d":[175,260],"e":true}},"d":[],"e":false},"a":{"w":"dat","s":"at","c":{"a":{"w":"data","s":"a","c":{"b":{"w":"database","s":"base","c":{},"d":[2,39,40,42,186,223],"e":true},"t":{"w":"datat","s":"t","c":{"y":{"w":"datatype","s":"ype","c":{},"d":[30,52,62,153,229,233],"e":true},"h":{"w":"datathe","s":"he","c":{},"d":[275],"e":true}},"d":[],"e":false},"p":{"w":"datapost","s":"post","c":{},"d":[34],"e":true},"c":{"w":"datacreate","s":"create","c":{},"d":[34],"e":true},"u":{"w":"dataupdate","s":"update","c":{},"d":[34],"e":true},"-":{"w":"data-","s":"-","c":{"i":{"w":"data-invalid","s":"invalid","c":{},"d":[88,189],"e":true},"n":{"w":"data-no-custom-validity","s":"no-custom-validity","c":{},"d":[193],"e":true}},"d":[],"e":false}},"d":[4,12,22,7,2,27,25,30,34,41,40,43,46,47,61,56,64,52,62,78,107,108,109,98,106,97,94,130,132,126,122,127,123,142,144,155,153,166,170,180,183,181,179,187,185,195,193,186,202,206,208,212,211,222,221,219,224,226,230,229,228,231,234,236,237,238,247,244,245,248,243,249,259,273,271,267,266,278,274,275,276],"e":true},"e":{"w":"date","s":"e","c":{"p":{"w":"dateproxy","s":"proxy","c":{},"d":[145,237],"e":true},"s":{"w":"dates","s":"s","c":{},"d":[228],"e":true}},"d":[16,21,27,166,237],"e":true}},"d":[],"e":false},"o":{"w":"do","s":"o","c":{"c":{"w":"doc","s":"c","c":{"s":{"w":"docs","s":"s","c":{},"d":[10,131,178,201],"e":true},"u":{"w":"document","s":"ument","c":{"a":{"w":"documentation","s":"ation","c":{},"d":[75,83],"e":true},"e":{"w":"documented","s":"ed","c":{},"d":[222,242],"e":true}},"d":[],"e":false},"t":{"w":"doctype","s":"type","c":{},"d":[186],"e":true}},"d":[],"e":false},"n":{"w":"don","s":"n","c":{"'":{"w":"don't","s":"'t","c":{},"d":[8,29,105,93,94,177,204,216,224,233,229,236,235,244,252,273],"e":true},"a":{"w":"donat","s":"at","c":{"i":{"w":"donati","s":"i","c":{"o":{"w":"donation","s":"on","c":{},"d":[33,120,136,137],"e":true},"n":{"w":"donating","s":"ng","c":{},"d":[119],"e":true}},"d":[],"e":false},"e":{"w":"donate","s":"e","c":{"d":{"w":"donated","s":"d","c":{},"d":[119],"e":true}},"d":[136],"e":true}},"d":[],"e":false},"e":{"w":"done","s":"e","c":{},"d":[63,73,185,223,245,275,277],"e":true}},"d":[],"e":false},"w":{"w":"down","s":"wn","c":{},"d":[29,92,204,244],"e":true},"i":{"w":"doing","s":"ing","c":{},"d":[42,78,248,245],"e":true},"e":{"w":"does","s":"es","c":{"n":{"w":"doesn't","s":"n't","c":{},"d":[49,56,65,164,163,187,205,272],"e":true}},"d":[187,202,231,248],"e":true},"m":{"w":"dom","s":"m","c":{},"d":[181,252,276],"e":true}},"d":[25,28,26,70,99,98,94,96,93,207,205,202,212,221,234],"e":true},"i":{"w":"di","s":"i","c":{"s":{"w":"dis","s":"s","c":{"p":{"w":"display","s":"play","c":{"s":{"w":"displays","s":"s","c":{},"d":[19,128,150,274],"e":true},"e":{"w":"displayed","s":"ed","c":{},"d":[41,108,123,155,167,180,193,204,217,249,260,274,271],"e":true},"i":{"w":"displaying","s":"ing","c":{},"d":[69,155,187,193,221,222,254],"e":true},"b":{"w":"displayboolean","s":"boolean","c":{},"d":[123],"e":true}},"d":[44,34,41,72,82,123,171,193,184,215,218,233,245,258,257,276],"e":true},"c":{"w":"disc","s":"c","c":{"u":{"w":"discussion","s":"ussion","c":{},"d":[32],"e":true},"o":{"w":"discord","s":"ord","c":{},"d":[33,90,135,136,147,161],"e":true},"r":{"w":"discriminated","s":"riminated","c":{},"d":[209],"e":true}},"d":[],"e":false},"a":{"w":"disable","s":"able","c":{"d":{"w":"disabled","s":"d","c":{},"d":[229],"e":true}},"d":[123,196],"e":true},"t":{"w":"distinguish","s":"tinguish","c":{"i":{"w":"distinguishing","s":"ing","c":{},"d":[209],"e":true}},"d":[209],"e":true}},"d":[],"e":false},"f":{"w":"diff","s":"ff","c":{"e":{"w":"differ","s":"er","c":{"e":{"w":"differen","s":"en","c":{"t":{"w":"different","s":"t","c":{},"d":[5,97,117,144,169,186,208,226,223,258],"e":true},"c":{"w":"difference","s":"ce","c":{"s":{"w":"differences","s":"s","c":{},"d":[36,226],"e":true}},"d":[221],"e":true}},"d":[],"e":false}},"d":[1,25,223],"e":true},"i":{"w":"difficult","s":"icult","c":{},"d":[151,153],"e":true}},"d":[],"e":false},"d":{"w":"did","s":"d","c":{"n":{"w":"didn't","s":"n't","c":{},"d":[28],"e":true}},"d":[273],"e":true},"r":{"w":"dir","s":"r","c":{"e":{"w":"direct","s":"ect","c":{"l":{"w":"directly","s":"ly","c":{},"d":[26,32,34,56,61,85,114,129,141,222,224,232,229,246,247,248,272,271,275],"e":true},"o":{"w":"directory","s":"ory","c":{},"d":[38,168],"e":true}},"d":[209],"e":true},"t":{"w":"dirty","s":"ty","c":{},"d":[259],"e":true}},"d":[],"e":false},"a":{"w":"dialog","s":"alog","c":{},"d":[155,260],"e":true}},"d":[],"e":false},"u":{"w":"du","s":"u","c":{"p":{"w":"duplicating","s":"plicating","c":{},"d":[40],"e":true},"r":{"w":"during","s":"ring","c":{},"d":[64,80,170],"e":true},"e":{"w":"due","s":"e","c":{},"d":[137,192,226],"e":true}},"d":[],"e":false},"y":{"w":"dynamic","s":"ynamic","c":{"a":{"w":"dynamically","s":"ally","c":{},"d":[67,100,169,224,239],"e":true}},"d":[223],"e":true}},"d":[220],"e":true},"a":{"w":"a","s":"a","c":{"b":{"w":"ab","s":"b","c":{"o":{"w":"abo","s":"o","c":{"u":{"w":"about","s":"ut","c":{},"d":[3,10,18,29,40,42,43,54,85,78,153,178,204,229,244,253,278,277],"e":true},"v":{"w":"above","s":"ve","c":{"-":{"w":"above-described","s":"-described","c":{},"d":[82],"e":true}},"d":[1,28,30,34,50,81,80,78,95,153,196,194,226,223,265,270,274,276],"e":true},"r":{"w":"abort","s":"rt","c":{},"d":[253],"e":true}},"d":[],"e":false},"u":{"w":"abuse","s":"use","c":{},"d":[47],"e":true},"l":{"w":"able","s":"le","c":{},"d":[105],"e":true}},"d":[],"e":false},"n":{"w":"an","s":"n","c":{"d":{"w":"and","s":"d","c":{},"d":[12,22,11,20,10,1,2,5,25,24,29,27,26,30,28,32,33,37,39,43,36,38,44,41,40,34,46,48,50,47,59,56,65,64,63,72,70,71,73,79,87,90,78,77,80,81,95,111,102,108,112,109,114,97,99,94,96,93,98,117,119,120,128,122,126,123,137,135,136,142,145,144,138,141,146,147,160,148,151,159,158,173,164,168,166,167,175,171,163,174,179,180,178,182,176,183,198,192,190,189,196,185,204,205,207,202,209,200,199,206,215,216,213,214,221,220,227,223,228,229,231,233,235,237,238,240,239,245,243,248,250,249,251,252,255,258,256,259,263,265,276,266,270,269,277,278,273,268,274,272,275],"e":true},"y":{"w":"any","s":"y","c":{"t":{"w":"anything","s":"thing","c":{},"d":[8,59,272],"e":true},"m":{"w":"anymore","s":"more","c":{},"d":[78,100,111,98,104,109,106,97,139,160,155,229],"e":true},"w":{"w":"anyw","s":"w","c":{"a":{"w":"anyway","s":"ay","c":{},"d":[100],"e":true},"h":{"w":"anywhere","s":"here","c":{},"d":[98,188],"e":true}},"d":[],"e":false}},"d":[20,22,1,27,30,44,40,50,70,84,81,106,120,122,136,156,161,170,183,181,192,193,196,204,206,219,220,218,229,248,249,252,253,263,262],"e":true},"s":{"w":"answer","s":"swer","c":{},"d":[58,153],"e":true},"o":{"w":"another","s":"other","c":{},"d":[103,117],"e":true}},"d":[19,8,13,6,15,18,17,5,27,28,26,34,36,40,41,43,49,50,56,55,66,67,68,63,65,64,80,94,112,115,105,97,93,98,137,145,140,139,142,151,157,161,168,165,171,169,187,184,196,194,208,214,212,215,219,223,232,231,234,229,235,237,238,242,243,245,248,250,249,262,263,266,269,270,271],"e":true},"c":{"w":"ac","s":"c","c":{"c":{"w":"acc","s":"c","c":{"e":{"w":"acce","s":"e","c":{"s":{"w":"access","s":"ss","c":{"e":{"w":"accessed","s":"ed","c":{},"d":[60,61,62,194],"e":true},"i":{"w":"accessibility","s":"ibility","c":{"-":{"w":"accessibility-friendly","s":"-friendly","c":{},"d":[88],"e":true}},"d":[73],"e":true},"o":{"w":"accessor","s":"or","c":{},"d":[81,82],"e":true}},"d":[20,42,64,142,206,209,231,233,275],"e":true},"p":{"w":"accept","s":"pt","c":{"i":{"w":"accepting","s":"ing","c":{},"d":[47],"e":true},"s":{"w":"accepts","s":"s","c":{},"d":[169],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"account","s":"ount","c":{},"d":[117],"e":true}},"d":[],"e":false},"t":{"w":"act","s":"t","c":{"i":{"w":"action","s":"ion","c":{"s":{"w":"actions","s":"s","c":{},"d":[8,2,59,93,223,242,275,272],"e":true},"r":{"w":"actionresult","s":"result","c":{},"d":[10,8,56,55,63,183,208,204,206],"e":true},"d":{"w":"actiondata","s":"data","c":{},"d":[61],"e":true}},"d":[10,42,43,61,63,62,72,126,174,180,176,193,186,206,219,225,223,245,248,277,275],"e":true},"u":{"w":"actual","s":"ual","c":{"l":{"w":"actually","s":"ly","c":{},"d":[27,28,115,231],"e":true}},"d":[229],"e":true}},"d":[],"e":false},"r":{"w":"acro","s":"ro","c":{"n":{"w":"acronym","s":"nym","c":{},"d":[34,41],"e":true},"s":{"w":"across","s":"ss","c":{},"d":[220],"e":true}},"d":[],"e":false},"h":{"w":"achieved","s":"hieved","c":{},"d":[50,180],"e":true}},"d":[],"e":false},"r":{"w":"ar","s":"r","c":{"r":{"w":"array","s":"ray","c":{"s":{"w":"arrays","s":"s","c":{},"d":[18,30,28,81,147,231,233,229,278],"e":true},"p":{"w":"arrayproxy","s":"proxy","c":{},"d":[20,18,19,194],"e":true},"-":{"w":"array-level","s":"-level","c":{},"d":[5,28,233],"e":true}},"d":[19,42,46,81,142,196,194,214,232,233,234],"e":true},"g":{"w":"argument","s":"gument","c":{"s":{"w":"arguments","s":"s","c":{},"d":[10,95,146,176,268,277],"e":true}},"d":[5,28,64],"e":true},"e":{"w":"are","s":"e","c":{"n":{"w":"aren't","s":"n't","c":{},"d":[62,111,249],"e":true}},"d":[20,19,1,8,26,30,28,32,35,36,43,41,47,54,69,71,70,79,81,116,95,94,111,98,97,117,119,123,134,138,139,153,158,163,175,171,177,176,188,190,196,199,201,206,212,214,226,223,230,234,229,233,235,251,252,254,258,256,263,276,278,274,273,277,275],"e":true},"t":{"w":"article","s":"ticle","c":{},"d":[58,257],"e":true},"i":{"w":"aria-invalid","s":"ia-invalid","c":{},"d":[88,198,189,184,276],"e":true},"b":{"w":"arbitrary","s":"bitrary","c":{},"d":[78],"e":true},"k":{"w":"arktype","s":"ktype","c":{},"d":[94],"e":true},"o":{"w":"around","s":"ound","c":{},"d":[258],"e":true}},"d":[],"e":false},"f":{"w":"af","s":"f","c":{"t":{"w":"after","s":"ter","c":{"w":{"w":"afterwards","s":"wards","c":{},"d":[207],"e":true}},"d":[5,43,41,69,108,138,166,189,185,195,215,217,222,247,256,257],"e":true},"f":{"w":"affect","s":"fect","c":{"e":{"w":"affected","s":"ed","c":{},"d":[77,229],"e":true},"i":{"w":"affecting","s":"ing","c":{},"d":[223],"e":true}},"d":[187,256],"e":true}},"d":[],"e":false},"d":{"w":"ad","s":"d","c":{"a":{"w":"adapter","s":"apter","c":{"s":{"w":"adapters","s":"s","c":{"'":{"w":"adapters'","s":"'","c":{},"d":[94],"e":true}},"d":[1,111,160],"e":true}},"d":[2,36,94,96,95,98,168,169,269,270,271,268],"e":true},"d":{"w":"add","s":"d","c":{"e":{"w":"added","s":"ed","c":{},"d":[5,72,90,80,109,157,170,193,194,185,199,245,243,249,255,276],"e":true},"i":{"w":"addi","s":"i","c":{"t":{"w":"additional","s":"tional","c":{"l":{"w":"additionally","s":"ly","c":{},"d":[8],"e":true}},"d":[25,62,185,206],"e":true},"n":{"w":"adding","s":"ng","c":{},"d":[166,168,276],"e":true}},"d":[],"e":false},"s":{"w":"adds","s":"s","c":{},"d":[24,73],"e":true},"o":{"w":"addon","s":"on","c":{},"d":[69],"e":true},"r":{"w":"address","s":"ress","c":{},"d":[76,266],"e":true}},"d":[29,25,27,41,42,44,36,43,38,66,62,73,93,123,177,185,197,195,193,212,215,220,225,224,233,249,277,274,278,265],"e":true},"v":{"w":"advan","s":"van","c":{"c":{"w":"advanced","s":"ced","c":{},"d":[26,203,278],"e":true},"t":{"w":"advantage","s":"tage","c":{},"d":[179,238,248],"e":true}},"d":[],"e":false}},"d":[],"e":false},"s":{"w":"as","s":"s","c":{"s":{"w":"ass","s":"s","c":{"i":{"w":"assign","s":"ign","c":{"m":{"w":"assignment","s":"ment","c":{},"d":[209,276],"e":true}},"d":[114,229],"e":true},"u":{"w":"assum","s":"um","c":{"e":{"w":"assumes","s":"es","c":{},"d":[141],"e":true},"p":{"w":"assumption","s":"ption","c":{"s":{"w":"assumptions","s":"s","c":{},"d":[153],"e":true}},"d":[249],"e":true},"i":{"w":"assuming","s":"ing","c":{},"d":[180,186],"e":true}},"d":[],"e":false},"e":{"w":"assert","s":"ert","c":{},"d":[249],"e":true}},"d":[],"e":false},"k":{"w":"ask","s":"k","c":{},"d":[135,136,161],"e":true},"y":{"w":"async","s":"ync","c":{"h":{"w":"asynchronous","s":"hronous","c":{},"d":[141,174],"e":true}},"d":[141,246],"e":true}},"d":[2,14,13,1,8,30,25,28,34,39,41,45,48,47,66,53,63,65,52,64,69,73,80,84,82,90,81,104,108,93,114,96,105,98,94,117,128,137,136,142,139,147,154,153,168,169,163,167,175,182,188,194,189,195,185,186,201,209,208,202,206,213,214,225,226,223,230,231,233,234,229,237,235,238,246,247,243,245,248,249,259,261,277,270,271,273,276,265,275],"e":true},"w":{"w":"awa","s":"wa","c":{"i":{"w":"await","s":"it","c":{},"d":[11,7,99,246],"e":true},"r":{"w":"aware","s":"re","c":{},"d":[98,141,170,193,213],"e":true},"y":{"w":"away","s":"y","c":{},"d":[135,188,260,259,261],"e":true}},"d":[],"e":false},"u":{"w":"auto","s":"uto","c":{"m":{"w":"automatically","s":"matically","c":{},"d":[14,13,30,63,80,100,145,178,185,191,184,198,205,220,224,223,233,235,261,263,274,271,276],"e":true},"-":{"w":"auto-focus","s":"-focus","c":{},"d":[176],"e":true},"f":{"w":"autofocusonerror","s":"focusonerror","c":{},"d":[191],"e":true}},"d":[190,277],"e":true},"p":{"w":"ap","s":"p","c":{"p":{"w":"app","s":"p","c":{"l":{"w":"appl","s":"l","c":{"i":{"w":"appli","s":"i","c":{"e":{"w":"applie","s":"e","c":{"d":{"w":"applied","s":"d","c":{},"d":[8,186,206,204,230,249],"e":true},"s":{"w":"applies","s":"s","c":{},"d":[81],"e":true}},"d":[],"e":false},"c":{"w":"application","s":"cation","c":{"s":{"w":"applications","s":"s","c":{},"d":[242],"e":true}},"d":[200,206],"e":true}},"d":[],"e":false},"y":{"w":"apply","s":"y","c":{"a":{"w":"applyaction","s":"action","c":{},"d":[178,205,226,248],"e":true}},"d":[77,78],"e":true}},"d":[],"e":false},"e":{"w":"appe","s":"e","c":{"n":{"w":"append","s":"nd","c":{},"d":[5,40,96,168],"e":true},"a":{"w":"appear","s":"ar","c":{"a":{"w":"appearance","s":"ance","c":{},"d":[167],"e":true}},"d":[261],"e":true}},"d":[],"e":false},"r":{"w":"appr","s":"r","c":{"e":{"w":"appreciat","s":"eciat","c":{"e":{"w":"appreciated","s":"ed","c":{},"d":[33,119],"e":true},"i":{"w":"appreciation","s":"ion","c":{},"d":[135],"e":true}},"d":[],"e":false},"o":{"w":"appro","s":"o","c":{"p":{"w":"appropriate","s":"priate","c":{"l":{"w":"appropriately","s":"ly","c":{},"d":[220],"e":true}},"d":[184,276],"e":true},"a":{"w":"approach","s":"ach","c":{},"d":[253],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[38,75,206,208,220],"e":true},"i":{"w":"api","s":"i","c":{},"d":[8,42,41,56,55,83,98,117,193,185,235,242,243,245,273,269],"e":true}},"d":[],"e":false},"l":{"w":"al","s":"l","c":{"w":{"w":"always","s":"ways","c":{},"d":[15,32,63,95,98,151,159,170,195,187,202,255,272,268],"e":true},"l":{"w":"all","s":"l","c":{"o":{"w":"allow","s":"ow","c":{"f":{"w":"allowfiles","s":"files","c":{},"d":[93,216],"e":true},"e":{"w":"allowed","s":"ed","c":{},"d":[229],"e":true},"s":{"w":"allows","s":"s","c":{},"d":[235],"e":true},"i":{"w":"allowing","s":"ing","c":{},"d":[250],"e":true}},"d":[40,216,253],"e":true},"e":{"w":"allerrors","s":"errors","c":{},"d":[82,79,196,198],"e":true}},"d":[1,5,28,43,54,82,107,98,94,117,119,153,181,180,183,179,198,196,209,216,220,233,235,245,249,252,272,275],"e":true},"s":{"w":"also","s":"so","c":{},"d":[5,8,24,29,27,41,43,47,61,59,62,73,81,116,97,122,123,137,146,153,155,168,178,180,176,196,197,206,205,208,212,216,225,224,226,229,233,237,259,263,277,278,274],"e":true},"t":{"w":"alt","s":"t","c":{"e":{"w":"alternative","s":"ernative","c":{"l":{"w":"alternatively","s":"ly","c":{},"d":[194,260],"e":true}},"d":[26,168,238],"e":true},"o":{"w":"altogether","s":"ogether","c":{},"d":[206,201],"e":true}},"d":[],"e":false},"o":{"w":"along","s":"ong","c":{},"d":[35,44],"e":true},"r":{"w":"already","s":"ready","c":{},"d":[221],"e":true},"m":{"w":"almost","s":"most","c":{},"d":[226,245],"e":true}},"d":[],"e":false},"v":{"w":"av","s":"v","c":{"a":{"w":"available","s":"ailable","c":{},"d":[19,26,37,44,70,75,80,106,117,156,174,177,188,199,214,248,262,273,274],"e":true},"o":{"w":"avoid","s":"oid","c":{},"d":[43,183,206,208,246,277],"e":true}},"d":[],"e":false},"t":{"w":"at","s":"t","c":{"t":{"w":"attribute","s":"tribute","c":{"s":{"w":"attributes","s":"s","c":{},"d":[26,73,166,276],"e":true}},"d":[26,28,52,184,193,214,233,229,276,273],"e":true}},"d":[24,28,38,44,43,41,72,69,77,81,117,159,166,207,233,245,267,269],"e":true},"g":{"w":"ag","s":"g","c":{"a":{"w":"again","s":"ain","c":{"s":{"w":"against","s":"st","c":{},"d":[156],"e":true}},"d":[27,179,227,240,253,275],"e":true},"r":{"w":"agree","s":"ree","c":{},"d":[47],"e":true},"e":{"w":"age","s":"e","c":{},"d":[47],"e":true}},"d":[],"e":false},"k":{"w":"aka","s":"ka","c":{},"d":[73],"e":true},"m":{"w":"amount","s":"mount","c":{},"d":[119],"e":true},"i":{"w":"aiming","s":"iming","c":{},"d":[136],"e":true},"'":{"w":"a'","s":"'","c":{},"d":[265],"e":true}},"d":[12,22,6,13,14,15,16,17,18,21,4,7,19,8,5,1,2,28,29,26,24,27,25,30,33,32,43,38,41,44,34,40,42,39,45,46,48,50,47,49,61,55,63,52,65,62,72,69,70,73,81,84,83,90,78,80,101,92,94,106,91,114,105,97,104,98,113,99,100,109,115,95,93,96,117,120,119,122,125,129,132,123,135,136,137,139,138,140,141,146,142,147,156,150,152,162,158,159,148,151,155,153,164,170,166,174,167,165,173,169,175,163,168,180,181,179,182,176,177,178,183,192,186,197,191,195,185,188,193,199,200,209,204,207,201,208,206,212,210,215,211,214,217,220,219,221,222,225,226,223,232,228,234,229,233,235,236,237,238,239,248,244,247,243,242,246,245,250,249,251,253,257,256,254,261,260,259,277,266,267,273,265,272,269,270,271,268,274,278,276,275],"e":true},"g":{"w":"g","s":"g","c":{"i":{"w":"gi","s":"i","c":{"v":{"w":"giv","s":"v","c":{"e":{"w":"give","s":"e","c":{"n":{"w":"given","s":"n","c":{},"d":[21,75,109,232],"e":true},"s":{"w":"gives","s":"s","c":{},"d":[22,122,172,188,201],"e":true}},"d":[106,136,156,199],"e":true},"i":{"w":"giving","s":"ing","c":{},"d":[206,223],"e":true}},"d":[],"e":false},"t":{"w":"github","s":"thub","c":{},"d":[32,33,90,98,117,137,135,136,147,161],"e":true}},"d":[],"e":false},"e":{"w":"ge","s":"e","c":{"t":{"w":"get","s":"t","c":{"s":{"w":"gets","s":"s","c":{},"d":[24,132,198],"e":true},"t":{"w":"getting","s":"ting","c":{},"d":[134],"e":true}},"d":[24,26,83,78,99,146,176,184,235,248,276],"e":true},"n":{"w":"gener","s":"ner","c":{"i":{"w":"generic","s":"ic","c":{"s":{"w":"generics","s":"s","c":{},"d":[28],"e":true}},"d":[29,81,110,220],"e":true},"a":{"w":"genera","s":"a","c":{"l":{"w":"general","s":"l","c":{},"d":[30,43,69,96,186,222,224],"e":true},"t":{"w":"generate","s":"te","c":{"d":{"w":"generated","s":"d","c":{},"d":[100],"e":true}},"d":[40],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"gr","s":"r","c":{"o":{"w":"group","s":"oup","c":{"e":{"w":"grouped","s":"ed","c":{},"d":[29,82],"e":true}},"d":[29,82],"e":true},"e":{"w":"great","s":"eat","c":{},"d":[73],"e":true}},"d":[],"e":false},"o":{"w":"go","s":"o","c":{"o":{"w":"good","s":"od","c":{},"d":[62,98,96,187,197],"e":true},"n":{"w":"gone","s":"ne","c":{},"d":[81,114],"e":true},"e":{"w":"goes","s":"es","c":{},"d":[111,160,194,278],"e":true},"i":{"w":"going","s":"ing","c":{},"d":[132,181],"e":true}},"d":[106,98,155,175],"e":true},"u":{"w":"gu","s":"u","c":{"r":{"w":"guru","s":"ru","c":{},"d":[73],"e":true},"i":{"w":"guide","s":"ide","c":{},"d":[75,77,161],"e":true}},"d":[],"e":false}},"d":[],"e":false},"i":{"w":"i","s":"i","c":{"s":{"w":"is","s":"s","c":{"n":{"w":"isn't","s":"n't","c":{},"d":[27,28,46,47,69,81,109,117,160,186,204,215,222],"e":true},"s":{"w":"issue","s":"sue","c":{"s":{"w":"issues","s":"s","c":{},"d":[32,99],"e":true}},"d":[43,98,137,161,168,226],"e":true},"t":{"w":"istainted","s":"tainted","c":{},"d":[106,156,262],"e":true},"o":{"w":"iso","s":"o","c":{"l":{"w":"isolate","s":"late","c":{},"d":[178],"e":true}},"d":[237],"e":true}},"d":[22,6,4,19,18,14,13,1,28,26,30,29,27,37,44,34,40,42,38,41,43,46,48,49,47,55,61,63,52,62,71,72,69,73,75,90,88,83,84,81,87,77,80,79,101,96,102,91,93,108,107,106,110,100,95,115,109,105,111,94,98,97,117,122,125,132,123,135,137,139,141,147,150,157,156,155,154,160,153,158,159,170,164,174,166,168,165,169,175,167,178,179,183,180,182,189,191,185,187,184,197,190,188,193,195,186,205,201,206,209,208,207,204,202,199,213,212,214,211,218,222,220,221,219,223,224,226,225,230,234,228,229,232,233,237,235,238,246,248,243,242,245,249,251,252,253,257,256,254,255,258,259,261,262,260,267,268,271,273,277,274,275,276,269],"e":true},"f":{"w":"if","s":"f","c":{},"d":[4,2,17,19,14,13,8,27,25,29,33,32,43,41,44,50,49,47,56,64,65,61,52,63,71,72,70,73,75,88,77,90,87,82,79,80,81,97,108,103,104,111,98,109,96,106,127,123,135,136,137,143,140,139,147,152,155,153,159,175,174,169,170,168,182,180,192,191,190,187,196,185,186,195,193,202,204,207,200,205,206,209,208,215,213,214,216,221,219,220,225,223,226,234,229,236,235,239,247,248,243,246,244,249,252,263,260,270,271,265,267,278,275,269,276],"e":true},"n":{"w":"in","s":"n","c":{"f":{"w":"inf","s":"f","c":{"o":{"w":"information","s":"ormation","c":{},"d":[3,22,55,116,149,179,219],"e":true},"e":{"w":"infer","s":"er","c":{"i":{"w":"inferi","s":"i","c":{"o":{"w":"inferior","s":"or","c":{},"d":[112],"e":true},"n":{"w":"inferin","s":"n","c":{},"d":[97],"e":true}},"d":[],"e":false}},"d":[97,96],"e":true}},"d":[],"e":false},"t":{"w":"int","s":"t","c":{"e":{"w":"inte","s":"e","c":{"g":{"w":"integ","s":"g","c":{"e":{"w":"integer","s":"er","c":{},"d":[13,235],"e":true},"r":{"w":"integr","s":"r","c":{"i":{"w":"integrity","s":"ity","c":{},"d":[40,98],"e":true},"a":{"w":"integrate","s":"ate","c":{"d":{"w":"integrated","s":"d","c":{},"d":[222],"e":true}},"d":[70],"e":true}},"d":[],"e":false}},"d":[],"e":false},"n":{"w":"intended","s":"nded","c":{},"d":[27],"e":true},"r":{"w":"inter","s":"r","c":{"f":{"w":"interface","s":"face","c":{"s":{"w":"interfaces","s":"s","c":{},"d":[69,271],"e":true}},"d":[34,40],"e":true},"m":{"w":"intermediate","s":"mediate","c":{},"d":[240],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"into","s":"o","c":{},"d":[27,24,72,73,99,183,176,222,226,277],"e":true},"a":{"w":"intact","s":"act","c":{},"d":[40],"e":true},"p":{"w":"intproxy","s":"proxy","c":{},"d":[102,145,159,235],"e":true},"r":{"w":"introspection","s":"rospection","c":{},"d":[94],"e":true}},"d":[],"e":false},"i":{"w":"init","s":"it","c":{"i":{"w":"initial","s":"ial","c":{"l":{"w":"initially","s":"ly","c":{"e":{"w":"initiallyemptyifzero","s":"emptyifzero","c":{},"d":[14,13,159],"e":true}},"d":[2,123,159,181,270],"e":true},"i":{"w":"initialize","s":"ize","c":{},"d":[269],"e":true}},"d":[14,13,78,108,98,144,169,181,247,244],"e":true},"a":{"w":"initally","s":"ally","c":{},"d":[50],"e":true}},"d":[],"e":false},"s":{"w":"ins","s":"s","c":{"t":{"w":"inst","s":"t","c":{"e":{"w":"instead","s":"ead","c":{},"d":[8,36,56,68,64,72,90,80,78,85,79,81,94,103,106,112,93,156,167,170,168,176,181,195,193,186,200,202,208,214,221,235,243,245,242,248,257,260,277],"e":true},"a":{"w":"insta","s":"a","c":{"l":{"w":"install","s":"ll","c":{"e":{"w":"installed","s":"ed","c":{},"d":[94],"e":true},"a":{"w":"installation","s":"ation","c":{},"d":[117],"e":true}},"d":[265],"e":true},"n":{"w":"instan","s":"n","c":{"c":{"w":"instance","s":"ce","c":{"s":{"w":"instances","s":"s","c":{},"d":[123],"e":true}},"d":[125,127,273],"e":true},"t":{"w":"instant","s":"t","c":{"l":{"w":"instantly","s":"ly","c":{},"d":[257],"e":true},"i":{"w":"instantiate","s":"iate","c":{},"d":[273],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"instructions","s":"ructions","c":{},"d":[117],"e":true}},"d":[],"e":false},"i":{"w":"inside","s":"ide","c":{},"d":[30],"e":true},"e":{"w":"inserting","s":"erting","c":{},"d":[263],"e":true}},"d":[],"e":false},"p":{"w":"input","s":"put","c":{"c":{"w":"inputconstraints","s":"constraints","c":{},"d":[231],"e":true}},"d":[1,27,26,25,47,62,52,97,96,124,166,164,165,170,174,175,181,189,191,193,212,214,233,229,237,235,248,249,273],"e":true},"c":{"w":"inc","s":"c","c":{"l":{"w":"includ","s":"lud","c":{"e":{"w":"include","s":"e","c":{"s":{"w":"includes","s":"s","c":{},"d":[122,265],"e":true},"d":{"w":"included","s":"d","c":{},"d":[208],"e":true}},"d":[8],"e":true},"i":{"w":"including","s":"ing","c":{},"d":[62,71,276],"e":true}},"d":[],"e":false},"r":{"w":"increase","s":"rease","c":{},"d":[141,168],"e":true}},"d":[],"e":false},"d":{"w":"ind","s":"d","c":{"e":{"w":"index","s":"ex","c":{},"d":[26,232,233],"e":true},"i":{"w":"indi","s":"i","c":{"v":{"w":"individual","s":"vidual","c":{"s":{"w":"individuals","s":"s","c":{},"d":[119],"e":true}},"d":[73],"e":true},"c":{"w":"indicat","s":"cat","c":{"e":{"w":"indicates","s":"es","c":{},"d":[187],"e":true},"o":{"w":"indicator","s":"or","c":{},"d":[257],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"v":{"w":"invalid","s":"valid","c":{"a":{"w":"invalidat","s":"at","c":{"e":{"w":"invalidate","s":"e","c":{"a":{"w":"invalidateall","s":"all","c":{},"d":[179,180,227,226,248],"e":true},"d":{"w":"invalidated","s":"d","c":{},"d":[179,226],"e":true}},"d":[182],"e":true},"i":{"w":"invalidation","s":"ion","c":{},"d":[227],"e":true}},"d":[],"e":false}},"d":[189,187,237],"e":true}},"d":[20,19,11,14,13,12,1,18,6,2,8,5,25,26,24,30,27,29,28,33,32,38,37,34,42,43,41,40,45,47,50,60,59,61,56,62,72,69,71,75,84,77,78,80,81,95,109,114,115,108,98,93,97,94,96,126,127,131,122,135,137,136,147,146,141,142,139,160,161,153,151,159,163,168,166,167,170,180,181,176,178,186,187,188,197,190,195,189,193,194,185,200,206,205,199,201,204,202,208,216,214,222,221,219,220,225,224,226,230,229,234,231,236,237,235,239,238,245,247,246,242,248,244,249,259,260,275,268,265,278,270,273,269,274,272,277],"e":true},"t":{"w":"it","s":"t","c":{"'":{"w":"it'","s":"'","c":{"s":{"w":"it's","s":"s","c":{},"d":[14,13,24,32,36,43,48,65,63,71,69,100,98,114,105,106,119,122,147,149,152,159,155,168,194,184,196,191,188,202,204,222,226,233,232,242,245,251,254,258,277,276],"e":true},"l":{"w":"it'll","s":"ll","c":{},"d":[44],"e":true}},"d":[],"e":false},"s":{"w":"its","s":"s","c":{"e":{"w":"itself","s":"elf","c":{},"d":[19,28,41,47],"e":true}},"d":[24,28,32,39,46,48,58,65,63,70,95,98,109,117,165,191,192,208,234,233,237,240,248,268,273],"e":true},"e":{"w":"item","s":"em","c":{"s":{"w":"items","s":"s","c":{},"d":[19,147,248],"e":true}},"d":[65],"e":true}},"d":[17,5,12,1,8,24,25,29,30,28,44,34,40,42,41,43,49,50,60,54,56,61,65,71,72,73,82,87,78,80,81,104,110,91,107,114,96,106,113,115,99,100,94,117,132,122,123,147,142,141,140,155,156,152,153,172,168,174,182,176,188,191,192,187,185,189,193,195,186,204,201,208,202,206,212,214,215,213,211,218,220,221,222,224,223,231,232,229,235,239,238,247,246,248,245,249,250,252,263,260,275,269,271,272,276],"e":true},"d":{"w":"id","s":"d","c":{"e":{"w":"ide","s":"e","c":{"a":{"w":"idea","s":"a","c":{"s":{"w":"ideas","s":"s","c":{},"d":[226],"e":true}},"d":[40],"e":true},"n":{"w":"identical","s":"ntical","c":{},"d":[139,234],"e":true}},"d":[],"e":false},"'":{"w":"id's","s":"'s","c":{},"d":[139,227],"e":true},"p":{"w":"idproxy","s":"proxy","c":{},"d":[235],"e":true}},"d":[3,42,40,41,43,67,81,100,139,144,224,223,235,245,244],"e":true},"m":{"w":"im","s":"m","c":{"m":{"w":"immediately","s":"mediately","c":{},"d":[5,28,185],"e":true},"p":{"w":"imp","s":"p","c":{"o":{"w":"import","s":"ort","c":{"a":{"w":"important","s":"ant","c":{},"d":[26,71,95,138,211,251,254,257,268],"e":true},"i":{"w":"importing","s":"ing","c":{},"d":[70],"e":true},"s":{"w":"imports","s":"s","c":{},"d":[111],"e":true},"e":{"w":"imported","s":"ed","c":{},"d":[94,168,211],"e":true}},"d":[25,28,96,94,111,141,160,168,246,269],"e":true},"l":{"w":"implement","s":"lement","c":{},"d":[34],"e":true},"r":{"w":"improvements","s":"rovements","c":{},"d":[138,148],"e":true}},"d":[],"e":false},"a":{"w":"imag","s":"ag","c":{"i":{"w":"imagine","s":"ine","c":{},"d":[28],"e":true},"e":{"w":"image","s":"e","c":{},"d":[213],"e":true}},"d":[],"e":false}},"d":[],"e":false},"c":{"w":"ic","s":"c","c":{"e":{"w":"ice","s":"e","c":{},"d":[29],"e":true},"o":{"w":"icon","s":"on","c":{},"d":[254],"e":true}},"d":[],"e":false}},"d":[30,119,233,265],"e":true},"m":{"w":"m","s":"m","c":{"e":{"w":"me","s":"e","c":{"s":{"w":"message","s":"ssage","c":{"s":{"w":"messages","s":"s","c":{},"d":[8,69,70,82,167,188,193,222,220,252,278],"e":true}},"d":[6,1,8,25,43,41,61,63,71,70,72,69,84,80,114,115,155,183,190,197,186,195,208,211,215,217,220,218,219,222,221,238,252,260,261,276,275],"e":true},"t":{"w":"met","s":"t","c":{"h":{"w":"method","s":"hod","c":{"s":{"w":"methods","s":"s","c":{},"d":[66,81,77,197,239,273],"e":true}},"d":[6,47,57,106,140,156,170,224,248,262],"e":true},"a":{"w":"meta","s":"a","c":{"d":{"w":"metadata","s":"data","c":{},"d":[85],"e":true}},"d":[85,186],"e":true}},"d":[],"e":false},"a":{"w":"mean","s":"an","c":{"s":{"w":"means","s":"s","c":{},"d":[28,40,181,205,223,229],"e":true},"i":{"w":"meaning","s":"ing","c":{},"d":[180],"e":true}},"d":[],"e":false},"n":{"w":"men","s":"n","c":{"u":{"w":"menu","s":"u","c":{},"d":[50,65],"e":true},"t":{"w":"mentioned","s":"tioned","c":{},"d":[169],"e":true}},"d":[],"e":false},"m":{"w":"memo","s":"mo","c":{"i":{"w":"memoized","s":"ized","c":{},"d":[95,268],"e":true},"r":{"w":"memory","s":"ry","c":{},"d":[95,268],"e":true}},"d":[],"e":false}},"d":[90,147],"e":true},"u":{"w":"mu","s":"u","c":{"s":{"w":"must","s":"st","c":{"-":{"w":"must-have","s":"-have","c":{},"d":[22],"e":true}},"d":[8,6,5,26,40,49,63,80,84,78,95,139,158,152,170,176,211,219,225,234,247,243,249,255,268],"e":true},"l":{"w":"multi","s":"lti","c":{"p":{"w":"multiple","s":"ple","c":{"s":{"w":"multiplesubmits","s":"submits","c":{},"d":[258],"e":true}},"d":[3,5,64,100,117,127,125,123,139,182,179,195,185,214,225,223,226,233,253,258,278,273,275],"e":true},"-":{"w":"multi-","s":"-","c":{"t":{"w":"multi-type","s":"type","c":{},"d":[49],"e":true},"s":{"w":"multi-step","s":"step","c":{},"d":[158,169,225],"e":true}},"d":[],"e":false}},"d":[],"e":false},"c":{"w":"much","s":"ch","c":{},"d":[25,38,96,117,168],"e":true},"t":{"w":"mutually","s":"tually","c":{},"d":[256],"e":true}},"d":[],"e":false},"a":{"w":"ma","s":"a","c":{"y":{"w":"may","s":"y","c":{"b":{"w":"maybe","s":"be","c":{},"d":[43],"e":true}},"d":[17,27,50,73,106,100,117,160,156,179,180,196,195,185,188,213,235,249],"e":true},"k":{"w":"mak","s":"k","c":{"e":{"w":"make","s":"e","c":{"s":{"w":"makes","s":"s","c":{},"d":[40,107,117,123,170,218],"e":true}},"d":[1,26,27,33,32,43,71,82,98,95,136,153,159,186,219,226,239,244,268,278],"e":true},"i":{"w":"making","s":"ing","c":{},"d":[25,136,193,220,221],"e":true}},"d":[],"e":false},"g":{"w":"magic","s":"gic","c":{},"d":[28],"e":true},"t":{"w":"mat","s":"t","c":{"c":{"w":"match","s":"ch","c":{"i":{"w":"matching","s":"ing","c":{},"d":[28,40,71,223],"e":true},"e":{"w":"matches","s":"es","c":{},"d":[271],"e":true}},"d":[],"e":false},"t":{"w":"matter","s":"ter","c":{},"d":[219,272],"e":true}},"d":[],"e":false},"n":{"w":"man","s":"n","c":{"i":{"w":"manipulations","s":"ipulations","c":{},"d":[42,276],"e":true},"a":{"w":"manage","s":"age","c":{"m":{"w":"management","s":"ment","c":{},"d":[41],"e":true},"r":{"w":"managers","s":"rs","c":{},"d":[263],"e":true}},"d":[],"e":false},"u":{"w":"manually","s":"ually","c":{},"d":[73,96,139,174,248],"e":true},"y":{"w":"many","s":"y","c":{},"d":[136,226,274],"e":true},"n":{"w":"manner","s":"ner","c":{},"d":[244],"e":true}},"d":[],"e":false},"i":{"w":"main","s":"in","c":{},"d":[47,267],"e":true},"p":{"w":"map","s":"p","c":{"s":{"w":"maps","s":"s","c":{},"d":[81],"e":true},"p":{"w":"mapped","s":"ped","c":{},"d":[165],"e":true}},"d":[],"e":false},"d":{"w":"made","s":"de","c":{},"d":[107],"e":true},"x":{"w":"max","s":"x","c":{"i":{"w":"maximum","s":"imum","c":{},"d":[147],"e":true}},"d":[233,237],"e":true},"r":{"w":"mark","s":"rk","c":{"e":{"w":"marked","s":"ed","c":{},"d":[261],"e":true}},"d":[232],"e":true}},"d":[],"e":false},"o":{"w":"mo","s":"o","c":{"d":{"w":"mod","s":"d","c":{"e":{"w":"mode","s":"e","c":{"l":{"w":"model","s":"l","c":{},"d":[34,107,229],"e":true},"r":{"w":"modern","s":"rn","c":{},"d":[176],"e":true}},"d":[11,56,93,202,249],"e":true},"i":{"w":"modif","s":"if","c":{"i":{"w":"modifi","s":"i","c":{"e":{"w":"modifie","s":"e","c":{"r":{"w":"modifier","s":"r","c":{},"d":[1,40],"e":true},"d":{"w":"modified","s":"d","c":{},"d":[155,170,168,177,209,229,259,263],"e":true}},"d":[],"e":false},"c":{"w":"modification","s":"cation","c":{"s":{"w":"modifications","s":"s","c":{},"d":[245],"e":true}},"d":[91],"e":true}},"d":[],"e":false},"y":{"w":"modify","s":"y","c":{"i":{"w":"modifying","s":"ing","c":{},"d":[18,19,185,223,229,259],"e":true}},"d":[27,62,181,202,206,204,221,229,240,239,263,260,271],"e":true}},"d":[],"e":false},"u":{"w":"module","s":"ule","c":{},"d":[28,70,95,268],"e":true},"a":{"w":"modal","s":"al","c":{},"d":[260],"e":true}},"d":[],"e":false},"r":{"w":"more","s":"re","c":{},"d":[20,22,5,18,24,43,55,70,88,78,115,93,116,98,120,119,122,135,152,149,153,175,176,182,178,183,185,206,219,220,223,228,235,249,266,278,277],"e":true},"c":{"w":"mock","s":"ck","c":{},"d":[39],"e":true},"s":{"w":"most","s":"st","c":{"l":{"w":"mostly","s":"ly","c":{},"d":[190],"e":true}},"d":[52,66,80,98,138,168,167,185,197,201,206,204,248,275],"e":true},"n":{"w":"mon","s":"n","c":{"t":{"w":"month","s":"th","c":{"l":{"w":"monthly","s":"ly","c":{},"d":[120,119,136],"e":true}},"d":[136],"e":true},"e":{"w":"money","s":"ey","c":{},"d":[136],"e":true}},"d":[],"e":false},"v":{"w":"move","s":"ve","c":{},"d":[175],"e":true},"b":{"w":"mobile","s":"bile","c":{},"d":[191,198],"e":true}},"d":[],"e":false},"y":{"w":"my","s":"y","c":{},"d":[33],"e":true},"i":{"w":"mi","s":"i","c":{"m":{"w":"mimick","s":"mick","c":{},"d":[43],"e":true},"s":{"w":"mis","s":"s","c":{"u":{"w":"misuse","s":"use","c":{},"d":[50,117],"e":true},"t":{"w":"mistake","s":"take","c":{},"d":[52,175],"e":true},"s":{"w":"miss","s":"s","c":{"i":{"w":"missing","s":"ing","c":{},"d":[249],"e":true}},"d":[232],"e":true}},"d":[],"e":false},"g":{"w":"mig","s":"g","c":{"r":{"w":"migrat","s":"rat","c":{"i":{"w":"migration","s":"ion","c":{},"d":[75,116,161],"e":true},"e":{"w":"migrate","s":"e","c":{"d":{"w":"migrated","s":"d","c":{},"d":[216],"e":true}},"d":[93],"e":true}},"d":[],"e":false},"h":{"w":"might","s":"ht","c":{},"d":[114,174],"e":true}},"d":[],"e":false},"n":{"w":"min","s":"n","c":{"i":{"w":"minim","s":"im","c":{"i":{"w":"minimize","s":"ize","c":{},"d":[96],"e":true},"u":{"w":"minimum","s":"um","c":{},"d":[147],"e":true},"a":{"w":"minimal","s":"al","c":{},"d":[193],"e":true}},"d":[],"e":false}},"d":[237],"e":true},"r":{"w":"mirror","s":"rror","c":{},"d":[231],"e":true}},"d":[],"e":false},"d":{"w":"mdn","s":"dn","c":{},"d":[166,208],"e":true}},"d":[1],"e":true},"f":{"w":"f","s":"f","c":{"u":{"w":"fu","s":"u","c":{"n":{"w":"fun","s":"n","c":{"c":{"w":"function","s":"ction","c":{"s":{"w":"functions","s":"s","c":{"b":{"w":"functionsboolean","s":"boolean","c":{},"d":[123],"e":true}},"d":[59,123,179,187,239,272],"e":true},"a":{"w":"functionality","s":"ality","c":{},"d":[167,248],"e":true}},"d":[11,2,8,28,41,34,55,80,83,87,78,98,95,108,146,140,155,172,180,179,181,185,195,208,203,201,202,204,211,218,227,234,248,244,260,273,268,275,272,269,276],"e":true},"d":{"w":"fundamental","s":"damental","c":{},"d":[41,40],"e":true}},"d":[],"e":false},"t":{"w":"future","s":"ture","c":{},"d":[33,119],"e":true},"l":{"w":"full","s":"ll","c":{"y":{"w":"fully","s":"y","c":{},"d":[277,278,276],"e":true}},"d":[90,96,94,147,162,158,169,168,199,210,248],"e":true},"r":{"w":"further","s":"rther","c":{},"d":[92,184,204,220,244],"e":true}},"d":[],"e":false},"i":{"w":"fi","s":"i","c":{"e":{"w":"field","s":"eld","c":{"s":{"w":"fields","s":"s","c":{},"d":[24,29,40,48,62,73,112,113,99,123,159,157,166,172,181,198,189,193,223,234,233,229,249,250,263,274,273,277],"e":true},"p":{"w":"fieldp","s":"p","c":{"r":{"w":"fieldproxy","s":"roxy","c":{},"d":[27,81],"e":true},"a":{"w":"fieldpath","s":"ath","c":{},"d":[81],"e":true}},"d":[],"e":false},"e":{"w":"fielderrors","s":"errors","c":{},"d":[101],"e":true}},"d":[20,18,14,17,13,15,16,21,12,5,27,30,29,28,40,46,48,49,47,65,52,81,109,123,146,139,152,159,165,170,175,168,181,195,191,196,198,184,193,185,214,215,213,225,231,233,229,235,248,249,263,270,276],"e":true},"l":{"w":"fil","s":"l","c":{"e":{"w":"file","s":"e","c":{"s":{"w":"files","s":"s","c":{"p":{"w":"filesproxy","s":"proxy","c":{},"d":[212],"e":true},"f":{"w":"filesfieldproxy","s":"fieldproxy","c":{},"d":[214],"e":true}},"d":[62,149,214,215,216,210,212],"e":true},"l":{"w":"filelist","s":"list","c":{},"d":[128],"e":true},"p":{"w":"fileproxy","s":"proxy","c":{},"d":[212],"e":true},"f":{"w":"filefieldproxy","s":"fieldproxy","c":{},"d":[214],"e":true}},"d":[8,54,93,128,141,150,149,213,216,212,211,210,215,214],"e":true},"l":{"w":"filled","s":"led","c":{},"d":[270],"e":true}},"d":[],"e":false},"r":{"w":"first","s":"rst","c":{"e":{"w":"firsterror","s":"error","c":{},"d":[79],"e":true}},"d":[2,49,65,105,98,159,190,189,191,198,194,184,188,185,201,218,247,248,271,276],"e":true},"n":{"w":"fin","s":"n","c":{"g":{"w":"fingers","s":"gers","c":{},"d":[30],"e":true},"d":{"w":"find","s":"d","c":{},"d":[32,41,205],"e":true},"a":{"w":"final","s":"al","c":{"l":{"w":"finally","s":"ly","c":{},"d":[80,149,148,248,253,276],"e":true}},"d":[174,170],"e":true},"e":{"w":"fine","s":"e","c":{},"d":[182,234],"e":true}},"d":[],"e":false},"x":{"w":"fix","s":"x","c":{"e":{"w":"fixed","s":"ed","c":{},"d":[65],"e":true},"i":{"w":"fixing","s":"ing","c":{},"d":[137],"e":true}},"d":[64,78,99],"e":true}},"d":[],"e":false},"o":{"w":"fo","s":"o","c":{"l":{"w":"fol","s":"l","c":{"l":{"w":"follow","s":"low","c":{"i":{"w":"following","s":"ing","c":{},"d":[21,32,38,44,70,86,89,78,94,93,96,183,193,224,232,237,249,251,258],"e":true},"s":{"w":"follows","s":"s","c":{},"d":[25,82,230],"e":true}},"d":[35,93,154],"e":true},"d":{"w":"folder","s":"der","c":{},"d":[265],"e":true}},"d":[],"e":false},"r":{"w":"for","s":"r","c":{"m":{"w":"form","s":"m","c":{"s":{"w":"forms","s":"s","c":{"n":{"w":"formsnap","s":"nap","c":{},"d":[26,73],"e":true},"'":{"w":"forms'","s":"'","c":{},"d":[226],"e":true}},"d":[3,24,73,100,117,139,158,169,182,179,176,188,225,227,223,226,228,248,263,278,273,275],"e":true},"a":{"w":"format","s":"at","c":{"t":{"w":"formatted","s":"ted","c":{},"d":[22,122],"e":true}},"d":[16,82,166,237],"e":true},"f":{"w":"formfieldproxy","s":"fieldproxy","c":{},"d":[20,18,28,29,81,112,214],"e":true},"d":{"w":"formd","s":"d","c":{"a":{"w":"formdata","s":"ata","c":{},"d":[2,43,64,62,151,153,202,215,229,275],"e":true},"i":{"w":"formdisplay","s":"isplay","c":{},"d":[34],"e":true}},"d":[],"e":false},"-":{"w":"form-","s":"-","c":{"l":{"w":"form-level","s":"level","c":{},"d":[5,80,194,195],"e":true},"b":{"w":"form-by-form","s":"by-form","c":{},"d":[93],"e":true}},"d":[],"e":false},"p":{"w":"formp","s":"p","c":{"a":{"w":"formpathleaves","s":"athleaves","c":{},"d":[29,28,81,234],"e":true},"o":{"w":"formpost","s":"ost","c":{},"d":[34],"e":true}},"d":[],"e":false},"i":{"w":"formid","s":"id","c":{},"d":[67,225,224,223],"e":true},"'":{"w":"form's","s":"'s","c":{},"d":[206],"e":true},"e":{"w":"formelement","s":"element","c":{},"d":[206,204],"e":true},"r":{"w":"formresult","s":"result","c":{},"d":[206],"e":true}},"d":[18,2,19,5,6,20,12,8,1,22,7,10,28,27,25,26,30,24,42,34,43,41,45,46,47,61,56,59,64,62,63,67,52,65,72,71,69,70,73,87,78,79,80,81,106,113,99,93,109,94,117,124,130,127,122,139,143,144,146,158,156,155,153,164,173,171,174,167,181,178,180,182,183,179,176,198,187,196,184,190,189,193,185,186,195,206,207,204,203,209,202,199,205,208,212,211,213,222,217,220,219,221,224,225,223,226,227,228,230,231,229,232,233,235,240,238,245,243,248,242,249,251,253,252,258,256,254,257,255,259,263,261,260,262,275,270,274,269,271,273,267,272,266,277,276],"e":true},"k":{"w":"fork","s":"k","c":{},"d":[32],"e":true},"t":{"w":"fortunately","s":"tunately","c":{},"d":[40,43,73,98,228],"e":true},"g":{"w":"forg","s":"g","c":{"e":{"w":"forget","s":"et","c":{},"d":[52,273],"e":true},"i":{"w":"forgiving","s":"iving","c":{},"d":[109,249],"e":true}},"d":[],"e":false},"w":{"w":"forward","s":"ward","c":{},"d":[237,240],"e":true}},"d":[5,7,3,6,13,14,15,16,17,21,10,4,18,1,22,19,2,8,27,28,24,26,30,32,34,42,40,39,44,38,41,43,45,50,47,49,55,53,65,61,67,52,63,69,73,75,78,82,77,83,80,85,107,110,94,97,92,111,96,116,99,104,100,95,117,122,136,142,139,140,147,146,155,159,151,158,154,157,149,160,152,166,164,165,167,172,174,169,171,168,170,182,178,176,180,179,181,197,196,195,194,188,193,185,203,201,205,206,208,210,213,212,215,217,219,220,222,221,226,223,230,232,233,234,228,229,236,235,238,239,248,242,246,243,247,249,251,257,254,261,263,267,278,270,271,277,275,276],"e":true},"u":{"w":"fou","s":"u","c":{"n":{"w":"found","s":"nd","c":{"'":{"w":"found'","s":"'","c":{},"d":[186],"e":true}},"d":[22,189],"e":true},"r":{"w":"four","s":"r","c":{},"d":[43],"e":true}},"d":[],"e":false},"c":{"w":"focus","s":"cus","c":{"i":{"w":"focusing","s":"ing","c":{},"d":[170,191],"e":true},"e":{"w":"focused","s":"ed","c":{},"d":[189],"e":true}},"d":[175,191,184,198,276,277],"e":true}},"d":[],"e":false},"a":{"w":"fa","s":"a","c":{"i":{"w":"fail","s":"il","c":{"u":{"w":"failure","s":"ure","c":{},"d":[41,183],"e":true},"s":{"w":"fails","s":"s","c":{},"d":[63,200,208],"e":true},"e":{"w":"failed","s":"ed","c":{},"d":[229,276],"e":true}},"d":[5,63,84,183,185,211,249,275],"e":true},"l":{"w":"fal","s":"l","c":{"s":{"w":"fals","s":"s","c":{"e":{"w":"false","s":"e","c":{},"d":[15,5,36,41,46,47,53,93,123,155,187,205,216,227,226,248,249,256],"e":true},"y":{"w":"falsy","s":"y","c":{},"d":[235],"e":true}},"d":[],"e":false},"l":{"w":"fallback","s":"lback","c":{},"d":[208],"e":true}},"d":[],"e":false},"c":{"w":"factored","s":"ctored","c":{},"d":[24],"e":true},"v":{"w":"favorite","s":"vorite","c":{},"d":[94],"e":true},"r":{"w":"far","s":"r","c":{},"d":[188],"e":true}},"d":[],"e":false},"r":{"w":"fr","s":"r","c":{"o":{"w":"from","s":"om","c":{},"d":[19,2,7,18,8,1,28,29,25,26,38,43,41,54,61,55,69,90,84,79,76,78,102,112,94,111,98,122,143,160,172,165,169,176,179,180,178,181,183,184,190,188,193,200,208,210,215,211,216,218,229,235,237,244,248,252,258,256,260,259,261,265,277,275],"e":true},"e":{"w":"fre","s":"e","c":{"e":{"w":"free","s":"e","c":{"-":{"w":"free-support","s":"-support","c":{},"d":[135],"e":true}},"d":[135],"e":true},"n":{"w":"frenetic","s":"netic","c":{},"d":[253],"e":true}},"d":[],"e":false}},"d":[],"e":false},"e":{"w":"fe","s":"e","c":{"w":{"w":"few","s":"w","c":{},"d":[19,151],"e":true},"e":{"w":"fee","s":"e","c":{"l":{"w":"feel","s":"l","c":{"i":{"w":"feeling","s":"ing","c":{},"d":[258],"e":true}},"d":[30],"e":true},"d":{"w":"feedback","s":"dback","c":{},"d":[254,257],"e":true}},"d":[],"e":false},"t":{"w":"fetch","s":"tch","c":{},"d":[34,56,208,248],"e":true},"a":{"w":"feature","s":"ature","c":{"s":{"w":"features","s":"s","c":{},"d":[116,137,138,148,277],"e":true}},"d":[113,93,151,150,238,250,259],"e":true}},"d":[],"e":false},"l":{"w":"fl","s":"l","c":{"a":{"w":"flash","s":"ash","c":{"m":{"w":"flashmessage","s":"message","c":{},"d":[72,115],"e":true}},"d":[8,71,70,72],"e":true},"e":{"w":"flexibility","s":"exibility","c":{},"d":[188],"e":true}},"d":[],"e":false}},"d":[],"e":false},"p":{"w":"p","s":"p","c":{"r":{"w":"pr","s":"r","c":{"o":{"w":"pro","s":"o","c":{"x":{"w":"prox","s":"x","c":{"y":{"w":"proxy","s":"y","c":{},"d":[12,21,18,19,27,30,28,63,81,166,208,236,237,235],"e":true},"i":{"w":"proxie","s":"ie","c":{"s":{"w":"proxies","s":"s","c":{},"d":[20,18,19,28,27,142,214,235],"e":true},"d":{"w":"proxied","s":"d","c":{},"d":[16],"e":true}},"d":[],"e":false}},"d":[],"e":false},"d":{"w":"produc","s":"duc","c":{"i":{"w":"producing","s":"ing","c":{},"d":[28],"e":true},"e":{"w":"produce","s":"e","c":{"s":{"w":"produces","s":"s","c":{},"d":[131],"e":true}},"d":[30],"e":true},"t":{"w":"product","s":"t","c":{},"d":[126],"e":true}},"d":[],"e":false},"p":{"w":"prop","s":"p","c":{"e":{"w":"proper","s":"er","c":{"t":{"w":"propert","s":"t","c":{"y":{"w":"property","s":"y","c":{"p":{"w":"propertypurposeidid","s":"purposeidid","c":{},"d":[275],"e":true}},"d":[69,142,187,202,208,209,222],"e":true},"i":{"w":"properties","s":"ies","c":{},"d":[165,201,234,276,275],"e":true}},"d":[],"e":false},"l":{"w":"properly","s":"ly","c":{},"d":[150,211],"e":true}},"d":[65,98,245],"e":true},"t":{"w":"proptypedefault","s":"typedefault","c":{},"d":[123],"e":true},"o":{"w":"proportional","s":"ortional","c":{},"d":[136],"e":true}},"d":[29,28,123,132],"e":true},"b":{"w":"prob","s":"b","c":{"l":{"w":"problem","s":"lem","c":{"s":{"w":"problems","s":"s","c":{},"d":[111,179,223],"e":true}},"d":[27,43,47,64,159],"e":true},"a":{"w":"probably","s":"ably","c":{},"d":[182],"e":true}},"d":[],"e":false},"j":{"w":"project","s":"ject","c":{"s":{"w":"projects","s":"s","c":{},"d":[161],"e":true}},"d":[38,45,67,135,136,220,265],"e":true},"m":{"w":"prom","s":"m","c":{"p":{"w":"prompts","s":"pts","c":{},"d":[38],"e":true},"i":{"w":"promise","s":"ise","c":{"s":{"w":"promises","s":"s","c":{},"d":[122],"e":true}},"d":[123,155,260],"e":true}},"d":[],"e":false},"f":{"w":"profi","s":"fi","c":{"t":{"w":"profit","s":"t","c":{},"d":[34,136],"e":true},"l":{"w":"profile","s":"le","c":{},"d":[236],"e":true}},"d":[],"e":false},"g":{"w":"progr","s":"gr","c":{"a":{"w":"programmatically","s":"ammatically","c":{},"d":[62,209,221,229],"e":true},"e":{"w":"progressive","s":"essive","c":{},"d":[277],"e":true}},"d":[],"e":false},"c":{"w":"proce","s":"ce","c":{"s":{"w":"process","s":"ss","c":{},"d":[137,172,199,206],"e":true},"e":{"w":"proceed","s":"ed","c":{},"d":[155],"e":true}},"d":[],"e":false},"v":{"w":"provide","s":"vide","c":{"s":{"w":"provides","s":"s","c":{},"d":[251],"e":true},"d":{"w":"provided","s":"d","c":{},"d":[276],"e":true}},"d":[140,254,260],"e":true},"t":{"w":"protect","s":"tect","c":{},"d":[183],"e":true}},"d":[],"e":false},"i":{"w":"pri","s":"i","c":{"m":{"w":"primitive","s":"mitive","c":{},"d":[1,30,233],"e":true},"o":{"w":"prioritized","s":"oritized","c":{},"d":[180],"e":true}},"d":[],"e":false},"e":{"w":"pre","s":"e","c":{"v":{"w":"prev","s":"v","c":{"e":{"w":"prevent","s":"ent","c":{"s":{"w":"prevents","s":"s","c":{},"d":[28,229,258],"e":true},"i":{"w":"preventi","s":"i","c":{"o":{"w":"prevention","s":"on","c":{},"d":[117],"e":true},"n":{"w":"preventing","s":"ng","c":{},"d":[260],"e":true}},"d":[],"e":false},"e":{"w":"prevented","s":"ed","c":{},"d":[191],"e":true}},"d":[18,19,81,117,183,216,227,229,253,258,259,263],"e":true},"i":{"w":"previous","s":"ious","c":{"l":{"w":"previously","s":"ly","c":{},"d":[5,79,104,110,114,99,113,147,141,143,140,158,170],"e":true}},"d":[63,81,106,155,253],"e":true}},"d":[],"e":false},"s":{"w":"pres","s":"s","c":{"s":{"w":"pressed","s":"sed","c":{},"d":[43],"e":true},"e":{"w":"prese","s":"e","c":{"n":{"w":"presentation","s":"ntation","c":{},"d":[148],"e":true},"r":{"w":"preserve","s":"rve","c":{},"d":[226],"e":true}},"d":[],"e":false}},"d":[],"e":false},"p":{"w":"prepared","s":"pared","c":{},"d":[41],"e":true},"c":{"w":"precedence","s":"cedence","c":{},"d":[48,166],"e":true},"f":{"w":"preferred","s":"ferred","c":{},"d":[195],"e":true}},"d":[123],"e":true},"a":{"w":"practically","s":"actically","c":{},"d":[235],"e":true}},"d":[32],"e":true},"a":{"w":"pa","s":"a","c":{"g":{"w":"page","s":"ge","c":{"s":{"w":"pages","s":"s","c":{},"d":[32,111,244],"e":true},"d":{"w":"pagedata","s":"data","c":{},"d":[60],"e":true}},"d":[3,4,22,18,26,25,24,40,41,44,42,43,60,58,54,53,63,73,77,81,78,110,116,100,98,120,132,123,122,136,139,141,157,171,179,182,178,183,176,187,188,186,205,206,208,220,223,227,226,239,245,246,242,244,248,257,260,261,275,273,274,276,269,277,278,267],"e":true},"s":{"w":"pass","s":"ss","c":{"i":{"w":"passing","s":"ing","c":{},"d":[25,78],"e":true},"e":{"w":"passe","s":"e","c":{"d":{"w":"passed","s":"d","c":{},"d":[43],"e":true},"s":{"w":"passes","s":"s","c":{},"d":[202],"e":true}},"d":[],"e":false},"w":{"w":"password","s":"word","c":{"s":{"w":"passwords","s":"s","c":{},"d":[263],"e":true}},"d":[117,195,234,263],"e":true}},"d":[2,28,40,78,129,224,247,253,270,269,271],"e":true},"r":{"w":"par","s":"r","c":{"a":{"w":"parameter","s":"ameter","c":{"s":{"w":"parameters","s":"s","c":{},"d":[2,25,41,66,97,176,220,277],"e":true}},"d":[2,5,8,29,114,115,97,98,96,197,207,206,247,244,245,248,271,275],"e":true},"t":{"w":"part","s":"t","c":{"i":{"w":"partial","s":"ial","c":{"l":{"w":"partially","s":"ly","c":{},"d":[40,158,180,271],"e":true}},"d":[144,158,169],"e":true}},"d":[27,24,43,62,81,96,106,156,215,237,262,273],"e":true},"s":{"w":"pars","s":"s","c":{"i":{"w":"parsing","s":"ing","c":{},"d":[63,109,151,153],"e":true},"e":{"w":"parse","s":"e","c":{"d":{"w":"parsed","s":"d","c":{},"d":[108,153],"e":true}},"d":[208],"e":true}},"d":[],"e":false},"e":{"w":"parent","s":"ent","c":{},"d":[236],"e":true}},"d":[],"e":false},"c":{"w":"package","s":"ckage","c":{},"d":[77,174],"e":true},"t":{"w":"pat","s":"t","c":{"h":{"w":"path","s":"h","c":{"s":{"w":"paths","s":"s","c":{},"d":[111,209,272],"e":true}},"d":[82,142,195,185,234],"e":true},"t":{"w":"pattern","s":"tern","c":{},"d":[170],"e":true}},"d":[],"e":false},"y":{"w":"pay","s":"y","c":{},"d":[137],"e":true}},"d":[],"e":false},"u":{"w":"pu","s":"u","c":{"b":{"w":"public-types-","s":"blic-types-","c":{"s":{"w":"public-types-submitfunction","s":"submitfunction","c":{},"d":[10],"e":true},"a":{"w":"public-types-actionresult","s":"actionresult","c":{},"d":[10],"e":true}},"d":[],"e":false},"l":{"w":"pull","s":"ll","c":{"e":{"w":"pulled","s":"ed","c":{},"d":[28],"e":true}},"d":[137],"e":true},"t":{"w":"put","s":"t","c":{"t":{"w":"putting","s":"ting","c":{},"d":[73],"e":true}},"d":[73,168],"e":true},"r":{"w":"purpose","s":"rpose","c":{},"d":[183],"e":true}},"d":[],"e":false},"o":{"w":"po","s":"o","c":{"p":{"w":"pop","s":"p","c":{"u":{"w":"popula","s":"ula","c":{"t":{"w":"populate","s":"te","c":{"d":{"w":"populated","s":"d","c":{},"d":[34,187,233,274,271],"e":true}},"d":[2,248,271],"e":true},"r":{"w":"popular","s":"r","c":{},"d":[98],"e":true}},"d":[],"e":false}},"d":[260],"e":true},"i":{"w":"point","s":"int","c":{"s":{"w":"points","s":"s","c":{},"d":[12],"e":true},"i":{"w":"pointing","s":"ing","c":{},"d":[114],"e":true}},"d":[207],"e":true},"w":{"w":"power","s":"wer","c":{},"d":[30],"e":true},"s":{"w":"pos","s":"s","c":{"t":{"w":"post","s":"t","c":{"e":{"w":"posted","s":"ed","c":{"t":{"w":"postedtells","s":"tells","c":{},"d":[275],"e":true}},"d":[47,79,109,143,153,187,204,202,217,223,229,233,249,250,277,276,275],"e":true},"i":{"w":"posting","s":"ing","c":{},"d":[52,97,261],"e":true},"s":{"w":"posts","s":"s","c":{},"d":[223],"e":true}},"d":[43,56,69,104,202,222,223,233,275],"e":true},"s":{"w":"possib","s":"sib","c":{"l":{"w":"possibl","s":"l","c":{"e":{"w":"possible","s":"e","c":{},"d":[49,67,104,100,96,98,107,147,149,152,159,168,194,195,233,242,258],"e":true},"y":{"w":"possibly","s":"y","c":{},"d":[223],"e":true}},"d":[],"e":false},"i":{"w":"possibility","s":"ility","c":{},"d":[210],"e":true}},"d":[],"e":false},"i":{"w":"positi","s":"iti","c":{"o":{"w":"position","s":"on","c":{},"d":[167],"e":true},"v":{"w":"positive","s":"ve","c":{},"d":[255],"e":true}},"d":[],"e":false}},"d":[],"e":false},"t":{"w":"potential","s":"tential","c":{},"d":[91],"e":true}},"d":[],"e":false},"l":{"w":"pl","s":"l","c":{"a":{"w":"pla","s":"a","c":{"c":{"w":"place","s":"ce","c":{"h":{"w":"placeholder","s":"holder","c":{},"d":[14,13,47,159],"e":true}},"d":[62,188,197,226],"e":true},"i":{"w":"plain","s":"in","c":{},"d":[63,122],"e":true},"y":{"w":"play","s":"y","c":{},"d":[258],"e":true},"n":{"w":"plan","s":"n","c":{},"d":[278],"e":true}},"d":[],"e":false},"e":{"w":"ple","s":"e","c":{"n":{"w":"plenty","s":"nty","c":{},"d":[26,41,212],"e":true},"a":{"w":"please","s":"ase","c":{},"d":[33,65,73,75,137,265],"e":true}},"d":[],"e":false},"u":{"w":"plugins","s":"ugins","c":{},"d":[117],"e":true}},"d":[],"e":false},"i":{"w":"pi","s":"i","c":{"p":{"w":"pipes","s":"pes","c":{},"d":[1,97],"e":true},"c":{"w":"pic","s":"c","c":{"t":{"w":"picture","s":"ture","c":{},"d":[120,136],"e":true},"k":{"w":"picke","s":"ke","c":{"d":{"w":"picked","s":"d","c":{},"d":[224],"e":true},"r":{"w":"picker","s":"r","c":{},"d":[237],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"e":{"w":"per","s":"er","c":{"s":{"w":"pers","s":"s","c":{"i":{"w":"persist","s":"ist","c":{},"d":[80,194,195],"e":true},"o":{"w":"personal","s":"onal","c":{"l":{"w":"personally","s":"ly","c":{},"d":[119],"e":true}},"d":[135],"e":true}},"d":[],"e":false},"f":{"w":"perfect","s":"fect","c":{"l":{"w":"perfectly","s":"ly","c":{},"d":[91],"e":true}},"d":[238,257],"e":true},"-":{"w":"per-route","s":"-route","c":{},"d":[123],"e":true},"i":{"w":"period","s":"iod","c":{"s":{"w":"periods","s":"s","c":{},"d":[257],"e":true}},"d":[136],"e":true}},"d":[223,273],"e":true},"m":{"w":"pm","s":"m","c":{},"d":[265],"e":true}},"d":[],"e":false},"h":{"w":"h","s":"h","c":{"t":{"w":"ht","s":"t","c":{"t":{"w":"http","s":"tp","c":{"s":{"w":"https","s":"s","c":{},"d":[10,75,117],"e":true}},"d":[123,208],"e":true},"m":{"w":"html","s":"ml","c":{"f":{"w":"htmlformelement","s":"formelement","c":{},"d":[206,204],"e":true}},"d":[21,43,38,42,52,63,181,186,193,209,208,228,233,232,229,276],"e":true}},"d":[],"e":false},"a":{"w":"ha","s":"a","c":{"n":{"w":"handl","s":"ndl","c":{"e":{"w":"handle","s":"e","c":{"s":{"w":"handles","s":"s","c":{},"d":[12,14,13,43,69,187,235,253],"e":true},"d":{"w":"handled","s":"d","c":{},"d":[28,54,137,166,193,186,202,223],"e":true},"r":{"w":"handler","s":"r","c":{},"d":[212,243],"e":true}},"d":[28,29,47,63,147,149,151,174,209,223,228,233,239,275],"e":true},"i":{"w":"handling","s":"ing","c":{},"d":[171,183,251,276],"e":true}},"d":[],"e":false},"v":{"w":"hav","s":"v","c":{"e":{"w":"have","s":"e","c":{"n":{"w":"haven't","s":"n't","c":{},"d":[73],"e":true}},"d":[11,27,24,25,28,33,39,43,42,44,34,41,49,48,65,70,73,86,89,87,90,81,97,105,109,94,119,145,147,160,162,159,178,182,181,192,205,206,208,207,204,216,220,221,227,224,223,233,229,247,244,248,250,260,277,270,276],"e":true},"i":{"w":"having","s":"ing","c":{},"d":[29,111,233,246,278],"e":true}},"d":[],"e":false},"s":{"w":"has","s":"s","c":{"h":{"w":"hash","s":"h","c":{},"d":[100],"e":true}},"d":[8,58,73,82,85,79,98,91,112,115,113,99,117,143,138,142,151,148,159,170,168,198,197,208,210,230,228,239,248,253,274,276],"e":true},"r":{"w":"hard","s":"rd","c":{"-":{"w":"hard-coded","s":"-coded","c":{},"d":[26],"e":true},"e":{"w":"harder","s":"er","c":{},"d":[117],"e":true}},"d":[226],"e":true},"l":{"w":"half","s":"lf","c":{},"d":[42],"e":true},"p":{"w":"happen","s":"ppen","c":{"s":{"w":"happens","s":"s","c":{},"d":[64,72,78,187,200],"e":true},"i":{"w":"happening","s":"ing","c":{},"d":[251,254,275],"e":true}},"d":[64,216,225,235,252],"e":true},"d":{"w":"had","s":"d","c":{},"d":[107,141,170],"e":true}},"d":[],"e":false},"o":{"w":"ho","s":"o","c":{"w":{"w":"how","s":"w","c":{"e":{"w":"however","s":"ever","c":{},"d":[27,43,80,181,218,222],"e":true}},"d":[18,19,28,71,73,175,172,190,212,219,226,223,231,233,250,278],"e":true},"p":{"w":"hope","s":"pe","c":{},"d":[30],"e":true},"n":{"w":"honoring","s":"noring","c":{},"d":[71],"e":true},"o":{"w":"hook","s":"ok","c":{},"d":[176,277],"e":true}},"d":[],"e":false},"e":{"w":"he","s":"e","c":{"r":{"w":"here","s":"re","c":{"'":{"w":"here's","s":"'s","c":{},"d":[36,66,92,148,223,250],"e":true}},"d":[19,18,29,26,27,44,43,58,119,138,177,192,207,206,212,222,227,242],"e":true},"l":{"w":"help","s":"lp","c":{"s":{"w":"helps","s":"s","c":{},"d":[8],"e":true},"e":{"w":"helper","s":"er","c":{},"d":[28,55,63,185,206,211,272],"e":true}},"d":[26,44],"e":true},"n":{"w":"hence","s":"nce","c":{},"d":[26,232],"e":true},"a":{"w":"head","s":"ad","c":{"l":{"w":"headlines","s":"lines","c":{},"d":[77],"e":true}},"d":[38,186],"e":true},"i":{"w":"height","s":"ight","c":{},"d":[192],"e":true}},"d":[],"e":false},"i":{"w":"hi","s":"i","c":{"d":{"w":"hid","s":"d","c":{"e":{"w":"hide","s":"e","c":{"s":{"w":"hides","s":"s","c":{},"d":[159],"e":true}},"d":[47,123,192,191,214],"e":true},"d":{"w":"hidden","s":"den","c":{},"d":[139,214,225,248,249,276],"e":true}},"d":[],"e":false},"s":{"w":"his","s":"s","c":{"t":{"w":"history","s":"tory","c":{},"d":[238],"e":true}},"d":[73],"e":true},"n":{"w":"hindsight","s":"ndsight","c":{},"d":[109],"e":true},"t":{"w":"hit","s":"t","c":{},"d":[126],"e":true},"g":{"w":"high","s":"gh","c":{"e":{"w":"higher","s":"er","c":{},"d":[136],"e":true}},"d":[170,188],"e":true}},"d":[],"e":false},"u":{"w":"hunt","s":"unt","c":{"e":{"w":"hunter","s":"er","c":{},"d":[73],"e":true},"a":{"w":"huntabyte","s":"abyte","c":{},"d":[73],"e":true}},"d":[],"e":false}},"d":[],"e":false},"c":{"w":"c","s":"c","c":{"a":{"w":"ca","s":"a","c":{"n":{"w":"can","s":"n","c":{"n":{"w":"cannot","s":"not","c":{},"d":[11,28,26,43,56,78,81,98,176,202,215,211,214,223,228,229,233,239,248,253,273],"e":true},"'":{"w":"can't","s":"'t","c":{},"d":[167,232,246],"e":true},"c":{"w":"cancel","s":"cel","c":{"l":{"w":"cancelled","s":"led","c":{},"d":[204],"e":true}},"d":[206,201,204,221,253],"e":true}},"d":[11,21,2,15,16,17,5,22,18,19,8,1,26,25,29,27,30,24,28,33,32,43,39,34,41,40,47,50,49,60,66,62,55,68,59,56,61,65,70,72,73,75,83,79,77,115,97,93,96,98,117,129,132,123,137,136,143,144,146,145,141,142,152,157,151,158,155,153,169,167,166,174,170,168,180,177,178,181,183,196,184,186,188,197,195,194,185,203,208,205,202,204,209,206,215,210,212,211,219,217,220,221,222,223,224,225,228,229,234,231,232,233,236,235,238,244,247,243,246,248,249,252,254,260,263,274,271,275,272,276,269,277],"e":true},"s":{"w":"cas","s":"s","c":{"e":{"w":"case","s":"e","c":{"s":{"w":"cases","s":"s","c":{},"d":[122,204,226,229],"e":true}},"d":[20,8,34,42,61,62,71,70,94,96,98,153,166,180,186,195,190,194,205,202,208,216,222,225,236,235,268],"e":true},"t":{"w":"casting","s":"ting","c":{},"d":[50,213],"e":true}},"d":[],"e":false},"l":{"w":"call","s":"ll","c":{"i":{"w":"calling","s":"ing","c":{},"d":[5,64,70,78,97,144,185,186,249,275],"e":true},"e":{"w":"called","s":"ed","c":{},"d":[59,72,69,83,79,140,139,180,190,208,225,269],"e":true},"b":{"w":"callback","s":"back","c":{},"d":[72],"e":true},"s":{"w":"calls","s":"s","c":{},"d":[99],"e":true}},"d":[43,56,78,97,98,141,146,158,242,243,247,272,269],"e":true},"u":{"w":"caus","s":"us","c":{"e":{"w":"cause","s":"e","c":{"d":{"w":"caused","s":"d","c":{},"d":[99],"e":true}},"d":[69,179,223],"e":true},"i":{"w":"causing","s":"ing","c":{},"d":[182,191],"e":true}},"d":[],"e":false},"c":{"w":"cach","s":"ch","c":{"i":{"w":"caching","s":"ing","c":{},"d":[95,268],"e":true},"e":{"w":"cached","s":"ed","c":{},"d":[95,268],"e":true}},"d":[],"e":false},"p":{"w":"capabilities","s":"pabilities","c":{},"d":[94],"e":true},"r":{"w":"care","s":"re","c":{"f":{"w":"carefully","s":"fully","c":{},"d":[278],"e":true}},"d":[183,204,232],"e":true},"t":{"w":"catch","s":"tch","c":{"-":{"w":"catch-all","s":"-all","c":{},"d":[250],"e":true}},"d":[208],"e":true}},"d":[],"e":false},"r":{"w":"cr","s":"r","c":{"e":{"w":"crea","s":"ea","c":{"t":{"w":"creat","s":"t","c":{"e":{"w":"create","s":"e","c":{"s":{"w":"creates","s":"s","c":{},"d":[13,14,15,16,17],"e":true},"d":{"w":"created","s":"d","c":{},"d":[43,236],"e":true}},"d":[18,34,40,41,68,112,242,248,266,267,265,273],"e":true},"i":{"w":"creati","s":"i","c":{"o":{"w":"creation","s":"on","c":{},"d":[28],"e":true},"n":{"w":"creating","s":"ng","c":{},"d":[42,40],"e":true}},"d":[],"e":false}},"d":[],"e":false},"m":{"w":"cream","s":"m","c":{},"d":[29],"e":true}},"d":[],"e":false},"u":{"w":"crud","s":"ud","c":{"l":{"w":"crudl","s":"l","c":{},"d":[41],"e":true},"-":{"w":"crud-like","s":"-like","c":{},"d":[244],"e":true}},"d":[34,42,43,278],"e":true},"y":{"w":"cryptic","s":"yptic","c":{},"d":[63],"e":true}},"d":[],"e":false},"o":{"w":"co","s":"o","c":{"n":{"w":"con","s":"n","c":{"v":{"w":"conve","s":"ve","c":{"n":{"w":"conven","s":"n","c":{"i":{"w":"convenien","s":"ien","c":{"c":{"w":"convenience","s":"ce","c":{},"d":[6,98,248],"e":true},"t":{"w":"convenient","s":"t","c":{},"d":[20,61,132,141,168,206,245,276],"e":true}},"d":[],"e":false},"t":{"w":"conventiently","s":"tiently","c":{},"d":[206],"e":true}},"d":[],"e":false},"r":{"w":"conver","s":"r","c":{"t":{"w":"convert","s":"t","c":{"i":{"w":"converting","s":"ing","c":{},"d":[27,229],"e":true},"e":{"w":"converted","s":"ed","c":{},"d":[39,235],"e":true}},"d":[17,161],"e":true},"s":{"w":"conversion","s":"sion","c":{},"d":[235],"e":true}},"d":[],"e":false}},"d":[],"e":false},"c":{"w":"conc","s":"c","c":{"e":{"w":"concepts","s":"epts","c":{},"d":[10,163,230,253,278,277],"e":true},"l":{"w":"concludes","s":"ludes","c":{},"d":[278],"e":true}},"d":[],"e":false},"s":{"w":"cons","s":"s","c":{"t":{"w":"const","s":"t","c":{"r":{"w":"constr","s":"r","c":{"u":{"w":"construct","s":"uct","c":{"i":{"w":"constructing","s":"ing","c":{},"d":[55,63],"e":true}},"d":[8],"e":true},"a":{"w":"constrain","s":"ain","c":{"t":{"w":"constraint","s":"t","c":{"s":{"w":"constraints","s":"s","c":{},"d":[27,81,97,165,171,166,176,193,231,237,276],"e":true}},"d":[166,193],"e":true},"e":{"w":"constrained","s":"ed","c":{},"d":[167],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[7,99],"e":true},"i":{"w":"consi","s":"i","c":{"s":{"w":"consisten","s":"sten","c":{"t":{"w":"consistent","s":"t","c":{},"d":[115],"e":true},"c":{"w":"consistency","s":"cy","c":{},"d":[220],"e":true}},"d":[],"e":false},"d":{"w":"consider","s":"der","c":{"e":{"w":"considered","s":"ed","c":{},"d":[106,155,207,259],"e":true}},"d":[174],"e":true}},"d":[],"e":false}},"d":[],"e":false},"t":{"w":"cont","s":"t","c":{"e":{"w":"conte","s":"e","c":{"n":{"w":"content","s":"nt","c":{"s":{"w":"contents","s":"s","c":{},"d":[223],"e":true}},"d":[19,139,252],"e":true},"x":{"w":"context","s":"xt","c":{},"d":[28],"e":true}},"d":[],"e":false},"r":{"w":"contr","s":"r","c":{"i":{"w":"contribut","s":"ibut","c":{"i":{"w":"contributions","s":"ions","c":{},"d":[32],"e":true},"e":{"w":"contribute","s":"e","c":{},"d":[33,32],"e":true}},"d":[],"e":false},"o":{"w":"control","s":"ol","c":{},"d":[172,167,199],"e":true}},"d":[],"e":false},"i":{"w":"continu","s":"inu","c":{"e":{"w":"continued","s":"ed","c":{},"d":[41],"e":true},"i":{"w":"continuing","s":"ing","c":{},"d":[265],"e":true}},"d":[],"e":false},"a":{"w":"contain","s":"ain","c":{"t":{"w":"containted","s":"ted","c":{},"d":[85],"e":true},"s":{"w":"contains","s":"s","c":{},"d":[123,196,204,207,217,231,239,275],"e":true},"i":{"w":"containing","s":"ing","c":{},"d":[266,275],"e":true}},"d":[132,229],"e":true}},"d":[],"e":false},"f":{"w":"conf","s":"f","c":{"i":{"w":"confi","s":"i","c":{"g":{"w":"config","s":"g","c":{"u":{"w":"configur","s":"ur","c":{"e":{"w":"configure","s":"e","c":{},"d":[68],"e":true},"a":{"w":"configuration","s":"ation","c":{},"d":[70,274],"e":true}},"d":[],"e":false}},"d":[93],"e":true},"r":{"w":"confirm","s":"rm","c":{},"d":[195],"e":true}},"d":[],"e":false},"l":{"w":"conflict","s":"lict","c":{"s":{"w":"conflicts","s":"s","c":{},"d":[80],"e":true}},"d":[180],"e":true},"u":{"w":"confusing","s":"using","c":{},"d":[178,232],"e":true}},"d":[],"e":false},"n":{"w":"connection","s":"nection","c":{},"d":[186],"e":true}},"d":[],"e":false},"m":{"w":"com","s":"m","c":{"p":{"w":"comp","s":"p","c":{"o":{"w":"component","s":"onent","c":{"s":{"w":"components","s":"s","c":{},"d":[11,18,26,24,73,81,110,98,141,226,229,246],"e":true},"i":{"w":"componentization","s":"ization","c":{},"d":[26,73,81,226],"e":true}},"d":[22,19,30,26,29,25,28,41,122,131,123,214,239,247,274],"e":true},"l":{"w":"comple","s":"le","c":{"t":{"w":"complete","s":"te","c":{"l":{"w":"completely","s":"ly","c":{},"d":[98,135],"e":true},"d":{"w":"completed","s":"d","c":{},"d":[206],"e":true}},"d":[43,41,172,222],"e":true},"m":{"w":"complement","s":"ment","c":{},"d":[214],"e":true},"x":{"w":"complex","s":"x","c":{},"d":[228],"e":true}},"d":[],"e":false},"a":{"w":"compa","s":"a","c":{"r":{"w":"compared","s":"red","c":{},"d":[73,141,221],"e":true},"t":{"w":"compatibility","s":"tibility","c":{},"d":[111],"e":true},"n":{"w":"company","s":"ny","c":{},"d":[136],"e":true}},"d":[],"e":false},"r":{"w":"compromises","s":"romises","c":{},"d":[151],"e":true}},"d":[],"e":false},"b":{"w":"combin","s":"bin","c":{"a":{"w":"combination","s":"ation","c":{},"d":[14,13],"e":true},"e":{"w":"combined","s":"ed","c":{},"d":[244],"e":true}},"d":[],"e":false},"m":{"w":"comm","s":"m","c":{"e":{"w":"comme","s":"e","c":{"n":{"w":"comments","s":"nts","c":{},"d":[32],"e":true},"r":{"w":"commercial","s":"rcial","c":{"-":{"w":"commercial-support","s":"-support","c":{},"d":[136],"e":true}},"d":[136],"e":true}},"d":[],"e":false},"o":{"w":"common","s":"on","c":{"l":{"w":"commonly","s":"ly","c":{},"d":[34],"e":true}},"d":[52,69,222,226,278,275],"e":true},"a":{"w":"command","s":"and","c":{"s":{"w":"commands","s":"s","c":{},"d":[38],"e":true}},"d":[265],"e":true},"u":{"w":"communi","s":"uni","c":{"t":{"w":"community","s":"ty","c":{},"d":[73],"e":true},"c":{"w":"communicate","s":"cate","c":{},"d":[223],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[117],"e":true},"l":{"w":"col","s":"l","c":{"o":{"w":"colorized","s":"orized","c":{},"d":[22,122],"e":true},"l":{"w":"coll","s":"l","c":{"a":{"w":"collaps","s":"aps","c":{"i":{"w":"collapsible","s":"ible","c":{"b":{"w":"collapsibleboolean","s":"boolean","c":{},"d":[123],"e":true}},"d":[132,123],"e":true},"e":{"w":"collapsed","s":"ed","c":{"b":{"w":"collapsedboolean","s":"boolean","c":{},"d":[123],"e":true}},"d":[123],"e":true}},"d":[],"e":false},"e":{"w":"collecting","s":"ecting","c":{},"d":[245],"e":true}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"cor","s":"r","c":{"r":{"w":"corre","s":"re","c":{"s":{"w":"correspond","s":"spond","c":{"i":{"w":"corresponding","s":"ing","c":{},"d":[12,269],"e":true},"s":{"w":"corresponds","s":"s","c":{},"d":[7,195],"e":true}},"d":[47,223],"e":true},"c":{"w":"correct","s":"ct","c":{"l":{"w":"correctly","s":"ly","c":{},"d":[96],"e":true}},"d":[46,175],"e":true}},"d":[],"e":false},"n":{"w":"corner","s":"ner","c":{},"d":[122,274],"e":true}},"d":[],"e":false},"d":{"w":"code","s":"de","c":{"s":{"w":"codes","s":"s","c":{},"d":[8],"e":true}},"d":[24,32,37,39,44,42,84,77,91,123,186,205,208,219,223,238,260,267,272,269,278],"e":true},"o":{"w":"cookie","s":"okie","c":{},"d":[8],"e":true},"u":{"w":"cou","s":"u","c":{"p":{"w":"couple","s":"ple","c":{},"d":[24,188],"e":true},"r":{"w":"course","s":"rse","c":{},"d":[40,47,116,91,104,245,255,277],"e":true},"l":{"w":"could","s":"ld","c":{},"d":[64,113,99,158,191,252,263],"e":true},"n":{"w":"count","s":"nt","c":{},"d":[223],"e":true}},"d":[],"e":false},"e":{"w":"coerc","s":"erc","c":{"e":{"w":"coerced","s":"ed","c":{},"d":[30],"e":true},"i":{"w":"coercion","s":"ion","c":{},"d":[109,229,233],"e":true}},"d":[],"e":false},"p":{"w":"copy","s":"py","c":{"i":{"w":"copying","s":"ing","c":{},"d":[223],"e":true}},"d":[274],"e":true}},"d":[],"e":false},"l":{"w":"cl","s":"l","c":{"i":{"w":"cli","s":"i","c":{"e":{"w":"client","s":"ent","c":{"v":{"w":"clientvalidationadapter","s":"validationadapter","c":{},"d":[1],"e":true},"-":{"w":"client-","s":"-","c":{"s":{"w":"client-side","s":"side","c":{},"d":[80,96,98,117,158,163,167,168,176,194,185,203,204,200,202,212,243,255,277],"e":true},"o":{"w":"client-only","s":"only","c":{},"d":[78],"e":true}},"d":[],"e":false}},"d":[11,79,80,111,96,98,141,160,149,168,169,181,194,200,218,224,223,242,245,273,276,272,275],"e":true},"c":{"w":"click","s":"ck","c":{"s":{"w":"clicks","s":"s","c":{},"d":[253],"e":true}},"d":[37,45,240,258,260],"e":true}},"d":[],"e":false},"u":{"w":"clu","s":"u","c":{"t":{"w":"cluttered","s":"ttered","c":{},"d":[25,226],"e":true},"n":{"w":"clunky","s":"nky","c":{},"d":[142],"e":true}},"d":[],"e":false},"a":{"w":"classic","s":"assic","c":{},"d":[47,234],"e":true},"e":{"w":"clear","s":"ear","c":{"o":{"w":"clearonsubmit","s":"onsubmit","c":{},"d":[71,252],"e":true},"i":{"w":"clearing","s":"ing","c":{},"d":[181],"e":true}},"d":[108,227,252],"e":true},"o":{"w":"clos","s":"os","c":{"e":{"w":"closely","s":"ely","c":{},"d":[70,93],"e":true},"i":{"w":"closing","s":"ing","c":{},"d":[260],"e":true}},"d":[],"e":false}},"d":[],"e":false},"h":{"w":"ch","s":"h","c":{"a":{"w":"cha","s":"a","c":{"n":{"w":"chan","s":"n","c":{"g":{"w":"chang","s":"g","c":{"e":{"w":"change","s":"e","c":{"s":{"w":"changes","s":"s","c":{},"d":[76,90,77,92,107,147,162,157,204,206,239,256,260,265],"e":true},"d":{"w":"changed","s":"d","c":{},"d":[82,86,89,98,155,170,248,249],"e":true}},"d":[15,16,43,77,81,101,93,103,100,177,183,203,209,224,256],"e":true},"i":{"w":"changing","s":"ing","c":{},"d":[97,225],"e":true}},"d":[],"e":false},"n":{"w":"channel","s":"nel","c":{},"d":[136,161],"e":true},"c":{"w":"chance","s":"ce","c":{},"d":[201],"e":true}},"d":[],"e":false},"r":{"w":"char","s":"r","c":{"a":{"w":"character","s":"acter","c":{},"d":[175],"e":true},"s":{"w":"charset","s":"set","c":{},"d":[186],"e":true}},"d":[],"e":false},"i":{"w":"chain","s":"in","c":{"i":{"w":"chaining","s":"ing","c":{},"d":[232],"e":true}},"d":[204],"e":true}},"d":[],"e":false},"e":{"w":"check","s":"eck","c":{"b":{"w":"checkbox","s":"box","c":{"e":{"w":"checkboxes","s":"es","c":{},"d":[29,249],"e":true}},"d":[47,249],"e":true},"e":{"w":"checked","s":"ed","c":{},"d":[29,47,249],"e":true},"i":{"w":"checking","s":"ing","c":{},"d":[106,96,174,248],"e":true},"s":{"w":"checks","s":"s","c":{},"d":[191],"e":true}},"d":[43,73,78,106,116,96,156,157,175,166,176,185,204,226,234,248,262,278,277],"e":true},"o":{"w":"cho","s":"o","c":{"s":{"w":"chosen","s":"sen","c":{},"d":[45],"e":true},"o":{"w":"choose","s":"ose","c":{},"d":[113],"e":true},"i":{"w":"choice","s":"ice","c":{},"d":[269],"e":true}},"d":[],"e":false}},"d":[],"e":false},"e":{"w":"certain","s":"ertain","c":{"l":{"w":"certainly","s":"ly","c":{},"d":[26,226,258],"e":true}},"d":[105,166,256],"e":true},"u":{"w":"cu","s":"u","c":{"r":{"w":"current","s":"rrent","c":{"l":{"w":"currently","s":"ly","c":{},"d":[94],"e":true}},"d":[123,122,136,203,233,274],"e":true},"s":{"w":"custom","s":"stom","c":{"i":{"w":"customize","s":"ize","c":{"d":{"w":"customized","s":"d","c":{},"d":[123],"e":true}},"d":[167],"e":true},"v":{"w":"customvalidity","s":"validity","c":{},"d":[193],"e":true}},"d":[117,155,181,197,199,239,260],"e":true}},"d":[],"e":false},"i":{"w":"ciscoheat","s":"iscoheat","c":{},"d":[117],"e":true},"s":{"w":"css","s":"ss","c":{},"d":[123,189,192,214],"e":true}},"d":[],"e":false},"y":{"w":"y","s":"y","c":{"o":{"w":"you","s":"ou","c":{"r":{"w":"your","s":"r","c":{"s":{"w":"yourself","s":"self","c":{},"d":[7,96],"e":true}},"d":[8,25,30,38,42,41,45,47,68,72,73,77,81,94,112,97,98,136,135,161,206,215,231,235,260,265,269],"e":true},"'":{"w":"you'","s":"'","c":{"r":{"w":"you're","s":"re","c":{},"d":[8,29,37,50,59,52,62,75,77,80,111,97,98,135,136,185,202,225,265,278],"e":true},"d":{"w":"you'd","s":"d","c":{},"d":[59,80,226,223,248],"e":true},"l":{"w":"you'll","s":"ll","c":{},"d":[77,139,182,184,205,223],"e":true},"v":{"w":"you've","s":"ve","c":{},"d":[103,98,140],"e":true}},"d":[],"e":false}},"d":[2,22,7,8,17,27,25,24,26,30,33,32,39,42,38,44,34,40,41,47,50,66,62,68,64,56,63,59,61,65,70,72,73,78,76,80,83,88,87,82,77,81,94,97,113,99,114,96,108,98,106,100,93,117,119,129,127,122,136,135,137,143,144,140,141,146,142,160,158,157,155,152,169,173,172,167,174,175,170,168,182,177,178,180,181,183,176,192,196,195,188,185,184,197,189,193,207,203,199,205,208,206,201,202,204,209,215,211,210,212,216,213,219,221,220,224,225,223,226,229,231,232,233,234,236,235,237,239,238,248,247,246,244,242,243,249,251,252,260,263,270,271,272,269,278,276,275,273,277],"e":true},"e":{"w":"ye","s":"e","c":{"s":{"w":"yes","s":"s","c":{"j":{"w":"yesjoi","s":"joi","c":{},"d":[94],"e":true},"y":{"w":"yesyup","s":"yup","c":{},"d":[94],"e":true}},"d":[55,58],"e":true},"t":{"w":"yet","s":"t","c":{},"d":[94],"e":true}},"d":[],"e":false},"u":{"w":"yup","s":"up","c":{},"d":[94],"e":true},"y":{"w":"yyyy-mm-dd","s":"yyy-mm-dd","c":{},"d":[166,237],"e":true}},"d":[],"e":false},"v":{"w":"v","s":"v","c":{"0":{"w":"v0","s":"0","c":{},"d":[76],"e":true},"1":{"w":"v1","s":"1","c":{},"d":[76],"e":true},"2":{"w":"v2-migration","s":"2-migration","c":{},"d":[161],"e":true},"a":{"w":"va","s":"a","c":{"l":{"w":"val","s":"l","c":{"u":{"w":"valu","s":"u","c":{"e":{"w":"value","s":"e","c":{"s":{"w":"values","s":"s","c":{},"d":[7,4,1,14,13,30,40,47,83,108,95,94,140,145,151,153,166,177,190,228,233,246,248,261,274,270],"e":true},"e":{"w":"valueerrors","s":"errors","c":{},"d":[19,101],"e":true},"d":{"w":"valuedescriptiondataanydata","s":"descriptiondataanydata","c":{},"d":[123],"e":true}},"d":[15,14,13,10,29,43,49,46,48,50,47,65,81,105,103,109,106,159,152,155,170,181,177,191,209,208,213,225,232,235,249,260,273],"e":true},"n":{"w":"valuns","s":"ns","c":{},"d":[123],"e":true}},"d":[],"e":false},"i":{"w":"vali","s":"i","c":{"d":{"w":"valid","s":"d","c":{"a":{"w":"validat","s":"at","c":{"i":{"w":"validati","s":"i","c":{"o":{"w":"validation","s":"on","c":{"a":{"w":"validationadapter","s":"adapter","c":{},"d":[1,158],"e":true}},"d":[1,5,8,40,39,43,47,90,80,79,96,94,98,99,91,107,108,146,141,158,149,170,174,163,165,167,171,172,168,166,181,179,193,197,194,191,195,187,185,203,204,200,206,207,202,215,212,217,234,245,250,249,261,276,267,277,265,269,275],"e":true},"n":{"w":"validating","s":"ng","c":{},"d":[170,245],"e":true}},"d":[],"e":false},"e":{"w":"validate","s":"e","c":{"d":{"w":"validated","s":"d","c":{},"d":[98,170,185,207,202,247,250],"e":true},"f":{"w":"validateform","s":"form","c":{},"d":[99,158,173,247],"e":true}},"d":[34,99,146,158,172,173,170,214,215,210,245],"e":true},"o":{"w":"validator","s":"or","c":{"s":{"w":"validators","s":"s","c":{},"d":[103,96,168,175,169,203,243,247],"e":true}},"d":[96,174,169],"e":true}},"d":[],"e":false},"t":{"w":"validtells","s":"tells","c":{},"d":[275],"e":true}},"d":[5,47,84,79,166,185,187,248,243,261,275],"e":true},"b":{"w":"valibot","s":"bot","c":{},"d":[94],"e":true}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"variable","s":"riable","c":{"s":{"w":"variables","s":"s","c":{},"d":[41,59,123],"e":true}},"d":[26,223,232,233,272],"e":true}},"d":[],"e":false},"e":{"w":"ver","s":"er","c":{"s":{"w":"vers","s":"s","c":{"i":{"w":"version","s":"ion","c":{},"d":[8,36,54,69,75,77,87,91,112,161,210,216,239],"e":true},"a":{"w":"versa","s":"a","c":{},"d":[27],"e":true}},"d":[],"e":false},"y":{"w":"very","s":"y","c":{},"d":[32,70,100,95,96,141,169,268,278],"e":true},"c":{"w":"vercel","s":"cel","c":{},"d":[75],"e":true}},"d":[],"e":false},"i":{"w":"vi","s":"i","c":{"c":{"w":"vice","s":"ce","c":{},"d":[27],"e":true},"d":{"w":"video","s":"deo","c":{},"d":[36],"e":true},"s":{"w":"visual","s":"sual","c":{},"d":[38],"e":true},"r":{"w":"virtually","s":"rtually","c":{},"d":[85,91,164],"e":true},"n":{"w":"vine","s":"ne","c":{"j":{"w":"vinejs","s":"js","c":{},"d":[267,269],"e":true},"'":{"w":"vine'","s":"'","c":{},"d":[267,269],"e":true}},"d":[94],"e":true},"t":{"w":"vite","s":"te","c":{},"d":[93],"e":true},"e":{"w":"viewport","s":"ewport","c":{},"d":[191],"e":true}},"d":[],"e":false},"s":{"w":"vscode","s":"scode","c":{},"d":[130,123],"e":true}},"d":[],"e":false},"w":{"w":"w","s":"w","c":{"h":{"w":"wh","s":"h","c":{"e":{"w":"whe","s":"e","c":{"n":{"w":"when","s":"n","c":{"e":{"w":"whenever","s":"ever","c":{},"d":[119],"e":true}},"d":[8,3,18,19,24,29,26,28,40,39,46,47,68,64,65,63,71,72,70,73,80,78,113,109,97,93,132,125,123,141,144,139,153,170,175,178,179,181,180,191,185,187,195,208,205,209,199,206,222,224,226,227,223,231,234,229,233,235,238,243,242,249,251,252,253,256,254,258,259,261,260,263,274,277,278,271],"e":true},"t":{"w":"whether","s":"ther","c":{},"d":[24,47,106,123,156,187,262,275],"e":true},"r":{"w":"where","s":"re","c":{},"d":[42,63,70,184,188,185,221,223,233,271,276],"e":true}},"d":[],"e":false},"o":{"w":"whole","s":"ole","c":{},"d":[19,18,27,40,47,99,146,158,153,173,170,229,235,242,263],"e":true},"a":{"w":"what","s":"at","c":{"'":{"w":"what's","s":"'s","c":{},"d":[75,116,180,275],"e":true},"s":{"w":"whats-new-v1","s":"s-new-v1","c":{},"d":[75],"e":true}},"d":[15,28,113,107,105,152,181,187,208,219,223,232,235,252,273],"e":true},"i":{"w":"whi","s":"i","c":{"c":{"w":"which","s":"ch","c":{},"d":[5,28,29,25,30,26,43,40,47,64,59,61,52,72,85,79,107,100,106,115,111,94,98,117,123,141,151,156,160,158,153,164,163,169,166,183,180,194,190,191,195,187,205,204,206,208,212,227,223,232,233,229,236,235,238,248,252,253,257,263,275,278,277],"e":true},"l":{"w":"while","s":"le","c":{},"d":[47,248,257],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"wa","s":"a","c":{"n":{"w":"want","s":"nt","c":{"e":{"w":"wanted","s":"ed","c":{},"d":[159],"e":true}},"d":[2,28,27,33,32,40,41,50,88,82,81,100,93,117,127,135,137,136,174,177,178,180,196,195,185,193,207,205,202,209,204,213,215,221,219,220,226,223,229,235,248,242,246,247,249,252,263,270,271],"e":true},"y":{"w":"way","s":"y","c":{"s":{"w":"ways","s":"s","c":{},"d":[35,134,275,269],"e":true}},"d":[28,33,50,136,168,170,183,207,212,228,245],"e":true},"s":{"w":"was","s":"s","c":{"n":{"w":"wasn't","s":"n't","c":{},"d":[147],"e":true}},"d":[43,79,104,114,112,113,140,142,153,180,183,181,187,223,276,275],"e":true},"r":{"w":"warning","s":"rning","c":{},"d":[78,139],"e":true},"i":{"w":"wait","s":"it","c":{"i":{"w":"waiting","s":"ing","c":{},"d":[257],"e":true}},"d":[180],"e":true}},"d":[],"e":false},"i":{"w":"wi","s":"i","c":{"t":{"w":"with","s":"th","c":{"o":{"w":"without","s":"out","c":{},"d":[30,40,70,87,139,176,193,209,225,240,263,276],"e":true},"f":{"w":"withfiles","s":"files","c":{},"d":[216,211],"e":true},"i":{"w":"within","s":"in","c":{},"d":[260,278],"e":true}},"d":[4,1,14,13,29,30,26,28,42,34,40,43,45,61,56,67,68,59,62,63,70,71,69,73,84,79,80,77,81,115,113,96,111,97,108,98,91,95,99,94,117,120,123,134,136,137,140,142,146,149,151,159,153,163,168,169,166,164,165,167,174,170,183,177,182,179,180,181,184,193,194,185,197,190,186,187,203,204,209,208,202,206,212,214,215,219,222,220,227,225,224,223,233,231,232,229,235,238,245,244,248,242,243,249,250,251,258,261,263,260,274,277,266,269,270,268,271,276,275],"e":true},"l":{"w":"will","s":"ll","c":{},"d":[12,5,30,28,29,27,26,43,39,40,48,49,47,68,65,63,69,71,70,84,80,78,81,116,105,108,109,120,119,137,136,140,141,139,155,159,153,174,169,168,167,166,170,178,179,180,183,176,185,186,191,193,189,190,187,208,204,202,216,211,213,222,220,219,223,232,233,229,236,235,243,245,249,253,255,260,266,277,270,271],"e":true},"p":{"w":"wip","s":"p","c":{"e":{"w":"wipe","s":"e","c":{},"d":[183],"e":true},"i":{"w":"wiping","s":"ing","c":{},"d":[208],"e":true}},"d":[],"e":false},"n":{"w":"win","s":"n","c":{"d":{"w":"window","s":"dow","c":{},"d":[190],"e":true}},"d":[193],"e":true}},"d":[],"e":false},"o":{"w":"wo","s":"o","c":{"n":{"w":"won't","s":"n't","c":{},"d":[8,43,108,97,181,192,194,190,205,243,247,256,277],"e":true},"r":{"w":"wor","s":"r","c":{"k":{"w":"work","s":"k","c":{"s":{"w":"works","s":"s","c":{},"d":[30,70,80,87,104,96,117,168,194,222,223,234,238,276],"e":true},"i":{"w":"working","s":"ing","c":{},"d":[90,137,147,278,276],"e":true}},"d":[8,47,70,81,95,107,136,138,139,159,176,190,202,225,230,231,239,247,243,248,268],"e":true},"t":{"w":"worthwhile","s":"thwhile","c":{},"d":[116],"e":true},"r":{"w":"worry","s":"ry","c":{},"d":[93,229],"e":true},"d":{"w":"words","s":"ds","c":{},"d":[108],"e":true}},"d":[],"e":false},"u":{"w":"would","s":"uld","c":{"n":{"w":"wouldn't","s":"n't","c":{},"d":[49],"e":true}},"d":[28,142,195,227],"e":true}},"d":[],"e":false},"r":{"w":"wr","s":"r","c":{"a":{"w":"wrap","s":"ap","c":{},"d":[1,97,94],"e":true},"i":{"w":"writ","s":"it","c":{"t":{"w":"written","s":"ten","c":{},"d":[77],"e":true},"e":{"w":"write","s":"e","c":{},"d":[142],"e":true}},"d":[],"e":false},"o":{"w":"wrong","s":"ong","c":{},"d":[249],"e":true}},"d":[],"e":false},"e":{"w":"we","s":"e","c":{"'":{"w":"we'","s":"'","c":{"d":{"w":"we'd","s":"d","c":{},"d":[27,43],"e":true},"l":{"w":"we'll","s":"ll","c":{},"d":[40,176,275,273],"e":true},"r":{"w":"we're","s":"re","c":{},"d":[42,41,181,232,237],"e":true},"v":{"w":"we've","s":"ve","c":{},"d":[41],"e":true}},"d":[],"e":false},"l":{"w":"wel","s":"l","c":{"c":{"w":"welcome","s":"come","c":{},"d":[32,137],"e":true},"l":{"w":"well","s":"l","c":{},"d":[70,81,114,93,96,117,128,139,168,223,275],"e":true}},"d":[],"e":false},"b":{"w":"web","s":"b","c":{"s":{"w":"website","s":"site","c":{},"d":[32,176],"e":true}},"d":[164],"e":true},"r":{"w":"were","s":"re","c":{"n":{"w":"weren't","s":"n't","c":{},"d":[79],"e":true}},"d":[110],"e":true}},"d":[26,28,29,30,43,39,40,42,41,73,137,214,218,227,245,244,274,276,273,275,277],"e":true}},"d":[],"e":false},"l":{"w":"l","s":"l","c":{"o":{"w":"lo","s":"o","c":{"g":{"w":"logi","s":"gi","c":{"n":{"w":"login","s":"n","c":{"f":{"w":"loginform","s":"form","c":{},"d":[25,272],"e":true}},"d":[9,179,223,263],"e":true},"c":{"w":"logic","s":"c","c":{},"d":[41],"e":true}},"d":[],"e":false},"o":{"w":"loo","s":"o","c":{"k":{"w":"look","s":"k","c":{"i":{"w":"looking","s":"ing","c":{},"d":[24],"e":true},"s":{"w":"looks","s":"s","c":{},"d":[47,232],"e":true}},"d":[17,41,187,274,273],"e":true},"p":{"w":"loop","s":"p","c":{},"d":[26,232,233],"e":true},"s":{"w":"loose","s":"se","c":{},"d":[44],"e":true}},"d":[],"e":false},"a":{"w":"load","s":"ad","c":{"e":{"w":"loaded","s":"ed","c":{},"d":[41,244],"e":true},"i":{"w":"loading","s":"ing","c":{},"d":[111,97,176,248,251,253,257,258,254,277],"e":true}},"d":[2,41,59,78,95,108,180,179,187,227,244,268,269,276,272,275],"e":true},"t":{"w":"lot","s":"t","c":{"s":{"w":"lots","s":"s","c":{},"d":[187,277],"e":true}},"d":[26,99,132,138],"e":true},"s":{"w":"los","s":"s","c":{"t":{"w":"lost","s":"t","c":{},"d":[69,222,226],"e":true},"s":{"w":"loss","s":"s","c":{},"d":[183,208],"e":true},"i":{"w":"losing","s":"ing","c":{},"d":[259,260],"e":true}},"d":[],"e":false},"n":{"w":"long","s":"ng","c":{"e":{"w":"longer","s":"er","c":{},"d":[136,194],"e":true}},"d":[123,159,233,271],"e":true},"c":{"w":"locate","s":"cate","c":{},"d":[189],"e":true}},"d":[],"e":false},"i":{"w":"li","s":"i","c":{"k":{"w":"like","s":"ke","c":{},"d":[21,5,27,28,43,59,65,81,80,108,147,174,187,195,207,217,218,219,221,223,234,233,228,232,236,245,271,272,277,273],"e":true},"s":{"w":"list","s":"st","c":{"s":{"w":"lists","s":"s","c":{},"d":[19,76,198],"e":true},"i":{"w":"listing","s":"ing","c":{},"d":[41],"e":true},"e":{"w":"listed","s":"ed","c":{},"d":[120,136],"e":true}},"d":[4,44,41,90,92,94,147,162,196,248],"e":true},"b":{"w":"lib","s":"b","c":{"r":{"w":"librar","s":"rar","c":{"y":{"w":"library","s":"y","c":{"a":{"w":"libraryadapterrequires","s":"adapterrequires","c":{},"d":[94],"e":true}},"d":[1,26,39,43,45,68,70,69,73,94,91,111,117,160,168,215,222,235,242,269,267,265],"e":true},"i":{"w":"libraries","s":"ies","c":{},"d":[107,94,96,234,250,259],"e":true}},"d":[],"e":false},"a":{"w":"libaries","s":"aries","c":{},"d":[98],"e":true}},"d":[25,39,168,267,269,265,275],"e":true},"n":{"w":"lin","s":"n","c":{"k":{"w":"link","s":"k","c":{},"d":[37,120,136],"e":true},"e":{"w":"line","s":"e","c":{"s":{"w":"lines","s":"s","c":{},"d":[42,278],"e":true}},"d":[238],"e":true}},"d":[],"e":false},"v":{"w":"live","s":"ve","c":{},"d":[41],"e":true},"m":{"w":"limit","s":"mit","c":{"e":{"w":"limite","s":"e","c":{"d":{"w":"limited","s":"d","c":{},"d":[59,122],"e":true},"r":{"w":"limiter","s":"r","c":{},"d":[117],"e":true}},"d":[],"e":false},"i":{"w":"limiting","s":"ing","c":{},"d":[117,220],"e":true},"a":{"w":"limitation","s":"ation","c":{},"d":[233],"e":true},"s":{"w":"limits","s":"s","c":{},"d":[237,257],"e":true}},"d":[117,237],"e":true},"g":{"w":"lightgreen","s":"ghtgreen","c":{},"d":[130],"e":true},"t":{"w":"little","s":"ttle","c":{},"d":[257],"e":true}},"d":[],"e":false},"e":{"w":"le","s":"e","c":{"t":{"w":"let","s":"t","c":{"'":{"w":"let's","s":"'s","c":{},"d":[30,28,41,42,223,277,274],"e":true},"t":{"w":"letters","s":"ters","c":{},"d":[42],"e":true},"s":{"w":"lets","s":"s","c":{},"d":[173],"e":true}},"d":[90,98,147,223],"e":true},"s":{"w":"less","s":"ss","c":{},"d":[25,37,226],"e":true},"a":{"w":"lea","s":"a","c":{"d":{"w":"lead","s":"d","c":{"s":{"w":"leads","s":"s","c":{},"d":[24],"e":true}},"d":[232],"e":true},"v":{"w":"leaves","s":"ves","c":{},"d":[28,81],"e":true},"s":{"w":"least","s":"st","c":{},"d":[69,77],"e":true},"f":{"w":"leaf","s":"f","c":{},"d":[231],"e":true},"r":{"w":"learn","s":"rn","c":{},"d":[278],"e":true}},"d":[],"e":false},"v":{"w":"level","s":"vel","c":{},"d":[95,233,247,268],"e":true},"g":{"w":"legacy","s":"gacy","c":{},"d":[93],"e":true},"n":{"w":"length","s":"ngth","c":{},"d":[175,196],"e":true}},"d":[],"e":false},"a":{"w":"la","s":"a","c":{"s":{"w":"last","s":"st","c":{},"d":[44,277],"e":true},"r":{"w":"larger","s":"rger","c":{},"d":[61,188],"e":true},"b":{"w":"label","s":"bel","c":{"s":{"w":"labelstring","s":"string","c":{},"d":[123],"e":true}},"d":[125,123],"e":true},"t":{"w":"late","s":"te","c":{"s":{"w":"latest","s":"st","c":{},"d":[180],"e":true},"r":{"w":"later","s":"r","c":{},"d":[249],"e":true}},"d":[170],"e":true},"n":{"w":"lang","s":"ng","c":{},"d":[186],"e":true}},"d":[],"e":false}},"d":[],"e":false},"k":{"w":"k","s":"k","c":{"i":{"w":"ki","s":"i","c":{"t":{"w":"kit","s":"t","c":{},"d":[10],"e":true},"n":{"w":"kind","s":"nd","c":{},"d":[119,186,208,220,235],"e":true}},"d":[],"e":false},"e":{"w":"ke","s":"e","c":{"e":{"w":"keep","s":"ep","c":{"s":{"w":"keeps","s":"s","c":{},"d":[106],"e":true},"i":{"w":"keeping","s":"ing","c":{},"d":[155],"e":true}},"d":[33,92,93,96,186,220,278],"e":true},"p":{"w":"kept","s":"pt","c":{},"d":[40,41,111,95,268],"e":true},"y":{"w":"keyboard","s":"yboard","c":{},"d":[191],"e":true}},"d":[],"e":false},"n":{"w":"know","s":"now","c":{"n":{"w":"known","s":"n","c":{},"d":[178,259],"e":true}},"d":[90,147,152,170,223,276],"e":true}},"d":[],"e":false},"b":{"w":"b","s":"b","c":{"e":{"w":"be","s":"e","c":{"s":{"w":"best","s":"st","c":{},"d":[6,221],"e":true},"l":{"w":"below","s":"low","c":{},"d":[18,36,126,136,184,219,240,260],"e":true},"i":{"w":"being","s":"ing","c":{},"d":[1,14,13,8,27,201,206,200,226,229,245,258,276,275],"e":true},"f":{"w":"before","s":"fore","c":{},"d":[5,28,64,80,82,78,97,98,185,206,204,245,253,275,265],"e":true},"c":{"w":"bec","s":"c","c":{"a":{"w":"because","s":"ause","c":{},"d":[29,34,69,91,170,211],"e":true},"o":{"w":"becomes","s":"omes","c":{},"d":[34,256],"e":true}},"d":[],"e":false},"t":{"w":"bet","s":"t","c":{"t":{"w":"better","s":"ter","c":{},"d":[26,154,194],"e":true},"w":{"w":"between","s":"ween","c":{},"d":[180,176,200,209,221,226,223,258,273],"e":true}},"d":[],"e":false},"h":{"w":"beh","s":"h","c":{"a":{"w":"behavio","s":"avio","c":{"r":{"w":"behavior","s":"r","c":{},"d":[43,93,177,178,255,271],"e":true},"u":{"w":"behaviour","s":"ur","c":{},"d":[208],"e":true}},"d":[],"e":false},"i":{"w":"behind","s":"ind","c":{},"d":[274],"e":true}},"d":[],"e":false},"e":{"w":"been","s":"en","c":{},"d":[43,85,79,81,103,109,97,112,113,99,98,143,138,142,151,148,159,253,274],"e":true}},"d":[11,2,21,15,16,17,5,6,22,18,19,25,26,27,24,28,29,30,32,42,44,43,39,41,49,50,47,60,55,59,61,62,65,69,71,72,75,88,90,78,79,84,80,81,115,116,108,105,107,98,95,109,97,96,117,120,123,137,136,146,145,144,141,139,152,155,151,153,158,167,163,169,166,174,168,170,180,177,179,182,178,176,185,196,189,193,190,188,194,187,186,195,202,207,204,208,211,213,214,217,222,220,219,223,233,232,229,235,236,239,240,243,247,244,245,248,250,249,253,252,255,254,263,260,268,270,266,275,274,271,272,273],"e":true},"i":{"w":"bi","s":"i","c":{"-":{"w":"bi-directional","s":"-directional","c":{},"d":[12],"e":true},"n":{"w":"bind","s":"nd","c":{"i":{"w":"binding","s":"ing","c":{},"d":[273],"e":true}},"d":[14,13,26,29,181,209,212,214,235,273],"e":true},"t":{"w":"bit","s":"t","c":{},"d":[24,26,28,47,73,98,142,141,151,167,168,220,237],"e":true},"g":{"w":"big","s":"g","c":{"i":{"w":"bigint","s":"int","c":{},"d":[46],"e":true},"g":{"w":"biggest","s":"gest","c":{},"d":[93,193],"e":true}},"d":[43,91],"e":true}},"d":[],"e":false},"o":{"w":"bo","s":"o","c":{"o":{"w":"boolean","s":"olean","c":{},"d":[15,29,46,87,143,260],"e":true},"i":{"w":"boilerplate","s":"ilerplate","c":{},"d":[24,73],"e":true},"t":{"w":"both","s":"th","c":{},"d":[48,95,166,178,209,212,223,252,272,276],"e":true},"u":{"w":"bound","s":"und","c":{},"d":[232],"e":true}},"d":[],"e":false},"u":{"w":"bu","s":"u","c":{"t":{"w":"but","s":"t","c":{"t":{"w":"button","s":"ton","c":{"s":{"w":"buttons","s":"s","c":{},"d":[50],"e":true}},"d":[43,67,188,196,240,253,260,274],"e":true}},"d":[20,18,17,19,1,29,30,27,28,26,36,39,40,41,43,47,49,61,69,70,73,79,111,93,115,98,117,137,146,139,158,151,159,174,170,168,180,179,185,187,195,193,209,212,215,220,223,231,234,229,237,235,245,246,247,248,249,263,274,275,272,271],"e":true},"g":{"w":"bug","s":"g","c":{"s":{"w":"bugs","s":"s","c":{},"d":[137],"e":true}},"d":[45],"e":true},"n":{"w":"bundle","s":"ndle","c":{},"d":[96,141,168],"e":true},"i":{"w":"buil","s":"il","c":{"t":{"w":"built-in","s":"t-in","c":{},"d":[96,117,165,167,171,163],"e":true},"d":{"w":"build","s":"d","c":{},"d":[232],"e":true}},"d":[],"e":false}},"d":[],"e":false},"y":{"w":"by","s":"y","c":{"p":{"w":"bypass","s":"pass","c":{},"d":[153],"e":true}},"d":[6,5,24,25,38,40,50,54,63,65,70,78,100,93,123,143,153,166,174,176,183,180,184,194,193,185,220,226,223,229,243,256,254,258,261,276],"e":true},"a":{"w":"ba","s":"a","c":{"s":{"w":"bas","s":"s","c":{"e":{"w":"based","s":"ed","c":{},"d":[1,170,257,270,271],"e":true},"i":{"w":"basi","s":"i","c":{"c":{"w":"basic","s":"c","c":{"a":{"w":"basically","s":"ally","c":{},"d":[181],"e":true},"s":{"w":"basics","s":"s","c":{},"d":[276],"e":true}},"d":[45,85,117],"e":true},"s":{"w":"basis","s":"s","c":{},"d":[93,123],"e":true}},"d":[],"e":false}},"d":[],"e":false},"d":{"w":"bad","s":"d","c":{},"d":[24],"e":true},"c":{"w":"back","s":"ck","c":{"e":{"w":"backend","s":"end","c":{},"d":[34,69,271,278],"e":true},"w":{"w":"backwards","s":"wards","c":{},"d":[111],"e":true}},"d":[106,146,155,175,181,240,260,275],"e":true},"n":{"w":"bandwidth","s":"ndwidth","c":{},"d":[97,212],"e":true}},"d":[],"e":false},"r":{"w":"br","s":"r","c":{"i":{"w":"bri","s":"i","c":{"n":{"w":"bring","s":"ng","c":{},"d":[30],"e":true},"e":{"w":"brief","s":"ef","c":{},"d":[92],"e":true}},"d":[],"e":false},"o":{"w":"brows","s":"ows","c":{"e":{"w":"browser","s":"er","c":{},"d":[37,165,171,167,163,176,193,199,230,240,238,260,276],"e":true},"i":{"w":"browsing","s":"ing","c":{},"d":[261],"e":true}},"d":[],"e":false},"e":{"w":"breaking","s":"eaking","c":{},"d":[76,93],"e":true}},"d":[],"e":false},"l":{"w":"bl","s":"l","c":{"a":{"w":"blank","s":"ank","c":{},"d":[175],"e":true},"u":{"w":"blur","s":"ur","c":{},"d":[175,170],"e":true},"o":{"w":"block","s":"ock","c":{},"d":[214],"e":true}},"d":[],"e":false}},"d":[],"e":false},"e":{"w":"e","s":"e","c":{"m":{"w":"em","s":"m","c":{"p":{"w":"empty","s":"pty","c":{"i":{"w":"emptyifzero","s":"ifzero","c":{},"d":[102],"e":true}},"d":[4,2,15,14,17,13,5,34,40,46,50,67,65,79,80,105,145,159,187,237,235,249,270,271],"e":true},"a":{"w":"email","s":"ail","c":{"'":{"w":"email'","s":"'","c":{},"d":[236],"e":true}},"d":[1,195,266],"e":true},"i":{"w":"emitted","s":"itted","c":{},"d":[139],"e":true}},"d":[],"e":false},"r":{"w":"erro","s":"rro","c":{"r":{"w":"error","s":"r","c":{"s":{"w":"errors","s":"s","c":{"e":{"w":"errorselector","s":"elector","c":{},"d":[88,184],"e":true},"a":{"w":"errorsan","s":"an","c":{},"d":[275],"e":true}},"d":[5,19,27,28,90,80,81,108,127,142,147,171,175,167,174,170,168,183,185,184,188,194,196,193,186,198,187,192,195,208,215,221,231,234,232,233,247,249,252,276,271,275],"e":true},"-":{"w":"error-prone","s":"-prone","c":{},"d":[96],"e":true}},"d":[5,63,72,82,80,171,167,175,183,186,190,195,197,188,191,198,184,185,208,215,249,272,276,277],"e":true},"n":{"w":"erroneous","s":"neous","c":{},"d":[198],"e":true}},"d":[],"e":false},"n":{"w":"en","s":"n","c":{"d":{"w":"end","s":"d","c":{"p":{"w":"endpoint","s":"point","c":{"s":{"w":"endpoints","s":"s","c":{},"d":[8,55],"e":true}},"d":[8],"e":true}},"d":[28,44,43,41,81,245],"e":true},"h":{"w":"enhance","s":"hance","c":{"m":{"w":"enhancement","s":"ment","c":{},"d":[176,277],"e":true}},"d":[8,30,53,72,87,139,163,167,176,177,193,186,201,199,225,223,226,230,243,248,255,277],"e":true},"o":{"w":"enough","s":"ough","c":{},"d":[27,135],"e":true},"s":{"w":"ensur","s":"sur","c":{"e":{"w":"ensure","s":"e","c":{},"d":[28,33,46,47,159,207,223],"e":true},"i":{"w":"ensuring","s":"ing","c":{},"d":[40,98],"e":true}},"d":[],"e":false},"c":{"w":"encounter","s":"counter","c":{"s":{"w":"encounters","s":"s","c":{},"d":[46],"e":true}},"d":[40],"e":true},"t":{"w":"ent","s":"t","c":{"i":{"w":"enti","s":"i","c":{"t":{"w":"entity","s":"ty","c":{},"d":[34,40],"e":true},"r":{"w":"entirely","s":"rely","c":{},"d":[200],"e":true}},"d":[],"e":false},"r":{"w":"entry","s":"ry","c":{},"d":[77],"e":true},"e":{"w":"enter","s":"er","c":{"i":{"w":"entering","s":"ing","c":{},"d":[170,193,248],"e":true},"e":{"w":"entered","s":"ed","c":{},"d":[183],"e":true}},"d":[175],"e":true}},"d":[],"e":false},"u":{"w":"enum","s":"um","c":{"s":{"w":"enums","s":"s","c":{},"d":[49,105,104],"e":true}},"d":[50,49,104,105],"e":true},"a":{"w":"enabl","s":"abl","c":{"e":{"w":"enable","s":"e","c":{"s":{"w":"enables","s":"s","c":{},"d":[123,260],"e":true},"d":{"w":"enabled","s":"d","c":{},"d":[163,176,193,199,202,230,277,276],"e":true}},"d":[277],"e":true},"i":{"w":"enabling","s":"ing","c":{},"d":[193],"e":true}},"d":[],"e":false},"g":{"w":"english","s":"glish","c":{},"d":[260],"e":true},"v":{"w":"environment","s":"vironment","c":{},"d":[265],"e":true}},"d":[186],"e":true},"i":{"w":"either","s":"ither","c":{},"d":[7,12,32,40,63,139,155,187,202,229,272],"e":true},"x":{"w":"ex","s":"x","c":{"t":{"w":"ext","s":"t","c":{"e":{"w":"exte","s":"e","c":{"n":{"w":"extending","s":"nding","c":{},"d":[1,40],"e":true},"r":{"w":"external","s":"rnal","c":{},"d":[98,242,243,245],"e":true}},"d":[],"e":false},"r":{"w":"extra","s":"ra","c":{"c":{"w":"extract","s":"ct","c":{"e":{"w":"extracted","s":"ed","c":{},"d":[41],"e":true}},"d":[64,215],"e":true}},"d":[61,62,70,139,207,201,232,229,250,263],"e":true}},"d":[],"e":false},"p":{"w":"exp","s":"p","c":{"l":{"w":"expl","s":"l","c":{"a":{"w":"explain","s":"ain","c":{"e":{"w":"explained","s":"ed","c":{},"d":[6,26],"e":true},"s":{"w":"explains","s":"s","c":{},"d":[226],"e":true}},"d":[],"e":false},"i":{"w":"explicit","s":"icit","c":{"l":{"w":"explicitly","s":"ly","c":{},"d":[152],"e":true}},"d":[49,105],"e":true}},"d":[],"e":false},"e":{"w":"expe","s":"e","c":{"c":{"w":"expect","s":"ct","c":{"s":{"w":"expects","s":"s","c":{},"d":[8],"e":true},"e":{"w":"expected","s":"ed","c":{},"d":[176],"e":true}},"d":[73],"e":true},"r":{"w":"experi","s":"ri","c":{"e":{"w":"experience","s":"ence","c":{},"d":[38,277],"e":true},"m":{"w":"experiment","s":"ment","c":{"i":{"w":"experimenting","s":"ing","c":{},"d":[258],"e":true}},"d":[182],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"export","s":"ort","c":{},"d":[111,160,239],"e":true},"a":{"w":"expanded","s":"anded","c":{},"d":[117,266],"e":true}},"d":[],"e":false},"a":{"w":"exa","s":"a","c":{"m":{"w":"example","s":"mple","c":{"s":{"w":"examples","s":"s","c":{},"d":[22,160,172,212],"e":true}},"d":[6,1,2,19,30,27,29,43,47,66,65,67,63,95,96,175,166,167,171,168,178,197,207,208,226,223,234,233,237,242,248,243,250,254,270,278,267,269],"e":true},"c":{"w":"exactly","s":"ctly","c":{},"d":[49],"e":true}},"d":[],"e":false},"e":{"w":"execut","s":"ecut","c":{"e":{"w":"execute","s":"e","c":{"d":{"w":"executed","s":"d","c":{},"d":[108],"e":true},"s":{"w":"executes","s":"s","c":{},"d":[227],"e":true}},"d":[32],"e":true},"i":{"w":"executing","s":"ing","c":{},"d":[38],"e":true}},"d":[],"e":false},"c":{"w":"exc","s":"c","c":{"e":{"w":"exce","s":"e","c":{"l":{"w":"excellent","s":"llent","c":{},"d":[34],"e":true},"p":{"w":"except","s":"pt","c":{"i":{"w":"exception","s":"ion","c":{"s":{"w":"exceptions","s":"s","c":{},"d":[186],"e":true}},"d":[139,169,186,208],"e":true}},"d":[80,111,160,257],"e":true}},"d":[],"e":false},"l":{"w":"exclu","s":"lu","c":{"d":{"w":"exclude","s":"de","c":{},"d":[193],"e":true},"s":{"w":"exclusive","s":"sive","c":{},"d":[256],"e":true}},"d":[],"e":false}},"d":[],"e":false},"i":{"w":"exist","s":"ist","c":{"s":{"w":"exists","s":"s","c":{},"d":[109],"e":true}},"d":[40,43,236,249],"e":true}},"d":[],"e":false},"l":{"w":"el","s":"l","c":{"s":{"w":"else","s":"se","c":{},"d":[8,59,182,202,267,265,272,269,275],"e":true},"e":{"w":"element","s":"ement","c":{"s":{"w":"elements","s":"s","c":{},"d":[26,195,233],"e":true}},"d":[43,123,176,190,228,234,255],"e":true}},"d":[],"e":false},"v":{"w":"eve","s":"ve","c":{"n":{"w":"even","s":"n","c":{"t":{"w":"event","s":"t","c":{"u":{"w":"eventual","s":"ual","c":{},"d":[95,98,268],"e":true},"s":{"w":"events","s":"s","c":{},"d":[157,170,176,178,181,199,209,221,248,277,275],"e":true}},"d":[61,56,62,64,114,115,157,183,186,201,206,209,208,204,221,229,245,243,248,275],"e":true}},"d":[8,28,30,26,47,65,73,104,108,149,169,186,208,213,220,229,276],"e":true},"r":{"w":"every","s":"ry","c":{"t":{"w":"everything","s":"thing","c":{},"d":[44,111,160,229],"e":true}},"d":[91,93,209,199,231],"e":true}},"d":[],"e":false},"a":{"w":"ea","s":"a","c":{"c":{"w":"each","s":"ch","c":{},"d":[8,26,82,223,232,234,233,235,248],"e":true},"s":{"w":"eas","s":"s","c":{"i":{"w":"easi","s":"i","c":{"l":{"w":"easily","s":"ly","c":{},"d":[26,39,117,167,185],"e":true},"e":{"w":"easie","s":"e","c":{"r":{"w":"easier","s":"r","c":{},"d":[82],"e":true},"s":{"w":"easiest","s":"st","c":{},"d":[207],"e":true}},"d":[],"e":false}},"d":[],"e":false},"y":{"w":"easy","s":"y","c":{},"d":[32,40,34,117,232,229,242,245],"e":true}},"d":[],"e":false},"r":{"w":"early","s":"rly","c":{},"d":[170],"e":true}},"d":[],"e":false},"s":{"w":"es","s":"s","c":{"p":{"w":"especially","s":"pecially","c":{},"d":[26,29,69,78],"e":true},"s":{"w":"essentially","s":"sentially","c":{},"d":[201],"e":true}},"d":[],"e":false},"d":{"w":"edit","s":"dit","c":{"i":{"w":"editing","s":"ing","c":{},"d":[41,274],"e":true},"e":{"w":"edited","s":"ed","c":{},"d":[223],"e":true}},"d":[],"e":false},"f":{"w":"eff","s":"ff","c":{"o":{"w":"effort","s":"ort","c":{"l":{"w":"effortless","s":"less","c":{},"d":[164],"e":true}},"d":[73],"e":true},"e":{"w":"effect","s":"ect","c":{},"d":[181,229,258],"e":true}},"d":[],"e":false},"t":{"w":"etc","s":"tc","c":{},"d":[117,176,221,229,277],"e":true},"q":{"w":"equal","s":"qual","c":{},"d":[255],"e":true}},"d":[],"e":false},"u":{"w":"u","s":"u","c":{"s":{"w":"us","s":"s","c":{"i":{"w":"using","s":"ing","c":{},"d":[8,30,29,28,36,41,50,47,67,52,61,62,73,77,81,78,80,110,96,103,97,125,132,123,135,134,141,139,163,166,176,181,183,198,185,202,209,206,211,220,218,223,232,237,257,273,275],"e":true},"e":{"w":"use","s":"e","c":{"f":{"w":"useful","s":"ful","c":{},"d":[11,17,69,79,117,125,123,158,169,178,196,205,220,235,252,271],"e":true},"d":{"w":"used","s":"d","c":{},"d":[21,15,16,18,1,19,27,28,34,43,41,49,72,79,87,80,81,97,115,113,96,105,98,146,140,151,158,153,175,168,176,189,196,190,184,185,202,208,218,217,233,229,245,248,254,257,263,273,276,275,277],"e":true},"r":{"w":"user","s":"r","c":{"s":{"w":"users","s":"s","c":{"c":{"w":"userschema","s":"chema","c":{},"d":[40],"e":true}},"d":[44,42,41,43,39,40,186,208,254,277,271],"e":true},"n":{"w":"username","s":"name","c":{"s":{"w":"usernames","s":"s","c":{},"d":[263],"e":true}},"d":[174,248],"e":true},"-":{"w":"user-friendly","s":"-friendly","c":{},"d":[183],"e":true}},"d":[43,42,39,41,40,170,179,183,191,188,195,238,245,244,259],"e":true},"s":{"w":"uses","s":"s","c":{},"d":[97,171,193,223,237],"e":true}},"d":[3,8,14,13,5,19,28,25,29,26,27,30,34,43,36,39,40,41,57,53,56,64,72,70,87,90,80,83,85,78,94,96,112,106,98,93,117,122,144,141,139,158,156,155,165,164,172,167,163,170,168,177,176,180,181,183,193,195,194,186,208,201,206,199,204,216,214,215,221,220,225,226,223,230,233,232,229,236,237,235,242,246,244,243,250,249,257,255,275,273,278,277],"e":true},"u":{"w":"usual","s":"ual","c":{"l":{"w":"usually","s":"ly","c":{},"d":[20,22,14,13,1,70,69,122,163,187,189,208,234,235,248,271],"e":true}},"d":[41,90,147,248],"e":true},"a":{"w":"usa","s":"a","c":{"g":{"w":"usage","s":"ge","c":{"s":{"w":"usages","s":"s","c":{},"d":[98],"e":true}},"d":[22,27,98,117,235],"e":true},"b":{"w":"usable","s":"ble","c":{},"d":[91],"e":true}},"d":[],"e":false}},"d":[28],"e":true},"p":{"w":"up","s":"p","c":{"d":{"w":"updat","s":"dat","c":{"e":{"w":"update","s":"e","c":{"s":{"w":"updates","s":"s","c":{},"d":[12,27,204,223,235,248],"e":true},"d":{"w":"updated","s":"d","c":{},"d":[71,115,180,207,221,235,274],"e":true}},"d":[27,30,34,40,41,77,158,179,180,206,205,221,223,229,245,263,275],"e":true},"i":{"w":"updating","s":"ing","c":{},"d":[113,174,178,234],"e":true}},"d":[],"e":false},"l":{"w":"upload","s":"load","c":{"s":{"w":"uploads","s":"s","c":{},"d":[54,93,150,149,216,210],"e":true}},"d":[213],"e":true},"g":{"w":"upgrade","s":"grade","c":{},"d":[75,76,91],"e":true},"o":{"w":"upon","s":"on","c":{},"d":[181,187],"e":true}},"d":[24,32,39,37,41,38,73,137,175,224,260],"e":true},"n":{"w":"un","s":"n","c":{"k":{"w":"unknown","s":"known","c":{},"d":[1,29,28],"e":true},"d":{"w":"und","s":"d","c":{"e":{"w":"unde","s":"e","c":{"f":{"w":"undefined","s":"fined","c":{},"d":[17,48,78,100,96,145,216,237,235,255],"e":true},"r":{"w":"under","s":"r","c":{"s":{"w":"unders","s":"s","c":{"c":{"w":"underscore","s":"core","c":{},"d":[26,232],"e":true},"t":{"w":"understand","s":"tand","c":{},"d":[254],"e":true}},"d":[],"e":false},"l":{"w":"underlying","s":"lying","c":{},"d":[107,166,237],"e":true}},"d":[30,278,277],"e":true}},"d":[],"e":false},"o":{"w":"undocumented","s":"ocumented","c":{},"d":[83,140],"e":true}},"d":[],"e":false},"i":{"w":"union","s":"ion","c":{"s":{"w":"unions","s":"s","c":{},"d":[49,151,153,152],"e":true}},"d":[49,209],"e":true},"c":{"w":"unc","s":"c","c":{"h":{"w":"unchecked","s":"hecked","c":{},"d":[47],"e":true},"l":{"w":"unclear","s":"lear","c":{},"d":[90,147],"e":true}},"d":[],"e":false},"u":{"w":"unused","s":"used","c":{},"d":[85],"e":true},"t":{"w":"unt","s":"t","c":{"i":{"w":"until","s":"il","c":{},"d":[80,175,195,253,258],"e":true},"a":{"w":"untaint","s":"aint","c":{"e":{"w":"untainted","s":"ed","c":{},"d":[261],"e":true},"i":{"w":"untainting","s":"ing","c":{},"d":[263],"e":true}},"d":[113,229,263],"e":true}},"d":[],"e":false},"l":{"w":"unl","s":"l","c":{"i":{"w":"unlike","s":"ike","c":{},"d":[105,193],"e":true},"e":{"w":"unless","s":"ess","c":{},"d":[105,155,177,198,187,249,272,270,273],"e":true},"o":{"w":"unlock","s":"ock","c":{},"d":[277],"e":true}},"d":[],"e":false},"e":{"w":"unexpected","s":"expected","c":{},"d":[106,156,208],"e":true},"f":{"w":"unfortunately","s":"fortunately","c":{},"d":[159],"e":true},"r":{"w":"unresponsiveness","s":"responsiveness","c":{},"d":[258],"e":true}},"d":[],"e":false},"r":{"w":"url","s":"rl","c":{},"d":[2,248,271],"e":true},"i":{"w":"ui","s":"i","c":{"-":{"w":"ui-component","s":"-component","c":{},"d":[73],"e":true}},"d":[229],"e":true},"x":{"w":"ux","s":"x","c":{},"d":[159,251],"e":true}},"d":[],"e":false},"o":{"w":"o","s":"o","c":{"n":{"w":"on","s":"n","c":{"e":{"w":"one","s":"e","c":{"s":{"w":"ones","s":"s","c":{},"d":[7,29,117],"e":true},"r":{"w":"onerror","s":"rror","c":{},"d":[72,114,115,183,186,208],"e":true},"-":{"w":"one-time","s":"-time","c":{},"d":[119],"e":true}},"d":[8,38,49,63,96,136,144,139,152,153,163,175,170,168,176,189,201,223,226,238,248,253,273],"e":true},"s":{"w":"onsubmit","s":"submit","c":{},"d":[10,62,170,201,200,229,248],"e":true},"r":{"w":"onresult","s":"result","c":{},"d":[10,205,204,200],"e":true},"l":{"w":"only","s":"ly","c":{},"d":[29,28,43,42,47,73,81,100,97,98,96,117,123,141,153,170,168,176,187,199,202,219,223,228,233,229,237,238,246,263,260,273,275],"e":true},"u":{"w":"onupdate","s":"update","c":{"d":{"w":"onupdated","s":"d","c":{},"d":[207,204,221],"e":true}},"d":[61,56,206,202,204,221,245,243],"e":true},"c":{"w":"onchange","s":"change","c":{},"d":[157,209],"e":true},"i":{"w":"oninput","s":"input","c":{},"d":[170],"e":true},"b":{"w":"onblur","s":"blur","c":{},"d":[170],"e":true},"-":{"w":"on-screen","s":"-screen","c":{},"d":[191],"e":true}},"d":[11,5,7,22,1,19,26,24,29,32,33,37,40,44,45,47,57,54,52,53,71,73,75,90,80,81,78,95,103,96,93,100,98,117,120,123,137,136,135,141,139,147,156,149,161,168,170,165,171,163,174,182,178,181,179,176,198,195,191,188,184,189,194,193,208,200,214,212,218,224,223,226,234,229,239,238,242,245,248,251,253,257,262,268,273,270,271,278,265,276,275],"e":true},"f":{"w":"of","s":"f","c":{"f":{"w":"off","s":"f","c":{},"d":[30,28,178],"e":true},"t":{"w":"oft-requested","s":"t-requested","c":{},"d":[151],"e":true}},"d":[1,12,8,4,16,14,13,19,25,24,27,28,30,26,33,36,43,44,38,42,40,41,47,49,50,64,62,56,68,63,72,73,80,77,81,87,90,94,116,92,96,104,112,95,106,109,91,100,99,108,111,98,117,119,125,132,123,134,136,138,147,162,148,156,160,155,175,172,167,170,168,178,179,180,181,183,186,187,198,195,193,194,188,199,200,208,201,204,215,212,220,221,219,223,232,233,235,237,238,239,247,248,245,242,250,253,255,257,258,262,268,269,276,272,273,277,267,278],"e":true},"b":{"w":"ob","s":"b","c":{"j":{"w":"object","s":"ject","c":{"s":{"w":"objects","s":"s","c":{},"d":[27,28,81,128,127,122,150,211,231,232,229,236,278],"e":true}},"d":[20,4,19,18,8,30,27,28,46,57,68,78,79,112,95,142,169,165,184,187,219,217,231,239,248,272,275,268],"e":true},"v":{"w":"obvious","s":"vious","c":{},"d":[24,153],"e":true},"t":{"w":"obtain","s":"tain","c":{},"d":[215],"e":true}},"d":[],"e":false},"r":{"w":"or","s":"r","c":{"i":{"w":"original","s":"iginal","c":{},"d":[40,106,93,155],"e":true},"g":{"w":"organizations","s":"ganizations","c":{},"d":[119],"e":true},"d":{"w":"ordinary","s":"dinary","c":{},"d":[231],"e":true}},"d":[7,12,5,17,2,25,33,32,40,41,45,49,50,67,56,61,63,64,78,90,82,79,80,97,100,98,120,119,123,136,135,137,147,145,139,161,155,153,170,167,174,183,181,195,187,185,186,200,206,208,204,212,211,221,220,224,226,231,228,229,235,248,242,249,252,253,255,260,263,272,275,276],"e":true},"p":{"w":"op","s":"p","c":{"t":{"w":"opti","s":"ti","c":{"o":{"w":"option","s":"on","c":{"s":{"w":"options","s":"s","c":{},"d":[20,16,14,13,15,17,18,19,8,36,68,70,86,89,90,93,96,95,136,144,157,158,159,163,169,167,177,182,190,188,185,226,229,235,239,248,251,263,268,274],"e":true},"a":{"w":"optional","s":"al","c":{"l":{"w":"optionally","s":"ly","c":{},"d":[108],"e":true}},"d":[1,46,48,49,65,97,213,215,232,275],"e":true}},"d":[15,16,17,6,10,14,13,18,5,19,30,27,50,53,65,71,84,87,80,100,115,103,113,108,93,94,145,139,154,159,153,171,168,169,183,193,190,195,184,187,206,216,219,227,223,226,229,237,235,243,245,247,248,249,252,260,263,271],"e":true},"m":{"w":"optimi","s":"mi","c":{"z":{"w":"optimized","s":"zed","c":{},"d":[168],"e":true},"s":{"w":"optimistic","s":"stic","c":{},"d":[180],"e":true}},"d":[],"e":false}},"d":[],"e":false},"e":{"w":"ope","s":"e","c":{"r":{"w":"operat","s":"rat","c":{"o":{"w":"operator","s":"or","c":{},"d":[29,232],"e":true},"i":{"w":"operations","s":"ions","c":{},"d":[43],"e":true}},"d":[],"e":false},"n":{"w":"open","s":"n","c":{},"d":[32,33,45,137,136,161,191],"e":true}},"d":[],"e":false}},"d":[],"e":false},"u":{"w":"ou","s":"u","c":{"t":{"w":"out","s":"t","c":{"p":{"w":"output","s":"put","c":{},"d":[22,25,97,122],"e":true},"s":{"w":"outside","s":"side","c":{},"d":[95,175,268],"e":true}},"d":[24,42,73,91,119,183,176,180,208,226,260,278,277],"e":true},"r":{"w":"our","s":"r","c":{},"d":[29,30,40,42,137],"e":true}},"d":[],"e":false},"t":{"w":"other","s":"ther","c":{"s":{"w":"others","s":"s","c":{},"d":[39],"e":true},"w":{"w":"otherwise","s":"wise","c":{},"d":[49,48,170,211,213,219,227,249,255],"e":true}},"d":[12,105,108,96,122,178,189,186,208,206,218,227,226,223,228,248,259,276,275],"e":true},"v":{"w":"over","s":"ver","c":{"w":{"w":"overwrite","s":"write","c":{},"d":[5],"e":true},"l":{"w":"overload","s":"load","c":{},"d":[99],"e":true}},"d":[48,172,199],"e":true},"w":{"w":"own","s":"wn","c":{},"d":[47,58,63,112,176,201,234,260],"e":true},"c":{"w":"occur","s":"ccur","c":{"s":{"w":"occurs","s":"s","c":{},"d":[72,185,208],"e":true},"e":{"w":"occurence","s":"ence","c":{},"d":[253],"e":true}},"d":[186,252],"e":true},"k":{"w":"ok","s":"k","c":{},"d":[260],"e":true}},"d":[],"e":false},"n":{"w":"n","s":"n","c":{"u":{"w":"nu","s":"u","c":{"m":{"w":"num","s":"m","c":{"b":{"w":"number","s":"ber","c":{"p":{"w":"numberproxy","s":"proxy","c":{},"d":[102,145,159,235],"e":true},"s":{"w":"numbers","s":"s","c":{},"d":[159,233],"e":true}},"d":[14,19,26,46,147,159,153,167,199,233,248,253],"e":true},"e":{"w":"numeric","s":"eric","c":{},"d":[104],"e":true}},"d":[],"e":false},"l":{"w":"null","s":"ll","c":{"a":{"w":"nullable","s":"able","c":{},"d":[48,49,213],"e":true}},"d":[17,48,78,80,145,213,235],"e":true}},"d":[],"e":false},"i":{"w":"nice","s":"ice","c":{"l":{"w":"nicely","s":"ly","c":{},"d":[22,122],"e":true},"r":{"w":"nicer","s":"r","c":{},"d":[38,277],"e":true}},"d":[28,73,188,238],"e":true},"o":{"w":"no","s":"o","c":{"t":{"w":"not","s":"t","c":{"e":{"w":"note","s":"e","c":{"s":{"w":"notes","s":"s","c":{},"d":[90,147,162,273],"e":true}},"d":[6,26,27,69,80,81,98,131,181,176,202,214,223,232,235,238,260],"e":true},"y":{"w":"notypebox","s":"ypebox","c":{},"d":[94],"e":true},"i":{"w":"noti","s":"i","c":{"c":{"w":"noticed","s":"ced","c":{},"d":[160],"e":true},"f":{"w":"notification","s":"fication","c":{},"d":[207],"e":true}},"d":[],"e":false},"h":{"w":"nothing","s":"hing","c":{},"d":[182,245],"e":true}},"d":[19,8,18,27,40,43,50,47,59,52,65,73,90,78,79,100,98,105,104,109,106,96,117,122,139,147,152,159,155,170,191,195,187,209,202,229,234,256,257,263,261,271,275],"e":true},"w":{"w":"now","s":"w","c":{"i":{"w":"nowith","s":"ith","c":{},"d":[94],"e":true}},"d":[30,25,28,43,41,40,87,88,83,81,79,94,107,93,91,110,114,112,97,115,113,106,99,111,96,143,144,145,142,146,141,147,150,155,154,158,151,160,159,168,180,193,229,235,245,249,276,273,275,277],"e":true},"n":{"w":"non","s":"n","c":{"-":{"w":"non-","s":"-","c":{"s":{"w":"non-s","s":"s","c":{"p":{"w":"non-specified","s":"pecified","c":{},"d":[40],"e":true},"t":{"w":"non-st","s":"t","c":{"r":{"w":"non-string","s":"ring","c":{},"d":[190,235],"e":true},"o":{"w":"non-store-related","s":"ore-related","c":{},"d":[221],"e":true}},"d":[],"e":false}},"d":[],"e":false},"p":{"w":"non-profit","s":"profit","c":{},"d":[135],"e":true},"j":{"w":"non-j","s":"j","c":{"s":{"w":"non-js","s":"s","c":{},"d":[186],"e":true},"a":{"w":"non-javascript","s":"avascript","c":{},"d":[208],"e":true}},"d":[],"e":false}},"d":[],"e":false},"e":{"w":"none","s":"e","c":{},"d":[252],"e":true}},"d":[],"e":false},"r":{"w":"nor","s":"r","c":{"m":{"w":"normal","s":"mal","c":{"i":{"w":"normalize","s":"ize","c":{},"d":[186],"e":true},"l":{"w":"normally","s":"ly","c":{},"d":[229],"e":true}},"d":[52,142],"e":true}},"d":[171],"e":true},"e":{"w":"noerrors","s":"errors","c":{},"d":[90],"e":true},"v":{"w":"nov","s":"v","c":{"a":{"w":"novalibot","s":"alibot","c":{},"d":[94],"e":true},"i":{"w":"novinejs","s":"inejs","c":{},"d":[94],"e":true}},"d":[],"e":false},"z":{"w":"nozod","s":"zod","c":{},"d":[94],"e":true}},"d":[49,47,73,75,108,93,98,146,141,155,153,175,176,187,193,213,214,222,219,220,228,244,248,257,277,276],"e":true},"e":{"w":"ne","s":"e","c":{"e":{"w":"need","s":"ed","c":{"e":{"w":"needed","s":"ed","c":{},"d":[14,13,111,160,193,213,235,275],"e":true},"s":{"w":"needs","s":"s","c":{},"d":[166,245,272],"e":true}},"d":[17,8,25,29,28,32,39,49,69,70,76,77,78,97,93,96,108,98,94,139,169,168,177,193,195,214,210,218,220,223,229,237,275],"e":true},"s":{"w":"nest","s":"st","c":{"e":{"w":"nested","s":"ed","c":{},"d":[1,30,52,62,142,195,190,185,202,230,228,234,236,278,273],"e":true}},"d":[228],"e":true},"w":{"w":"new","s":"w","c":{"l":{"w":"newly","s":"ly","c":{},"d":[43],"e":true}},"d":[38,34,75,79,106,116,96,93,137,138,156,148,159,180,186,265],"e":true},"t":{"w":"network","s":"twork","c":{},"d":[43],"e":true},"x":{"w":"next","s":"xt","c":{},"d":[62,80,195,253],"e":true},"i":{"w":"neither","s":"ither","c":{},"d":[171],"e":true},"a":{"w":"nearest","s":"arest","c":{},"d":[183,186,208],"e":true},"g":{"w":"negate","s":"gate","c":{},"d":[206],"e":true}},"d":[],"e":false},"a":{"w":"na","s":"a","c":{"m":{"w":"name","s":"me","c":{"s":{"w":"names","s":"s","c":{"p":{"w":"namespace","s":"pace","c":{},"d":[220],"e":true}},"d":[196],"e":true},"d":{"w":"named","s":"d","c":{},"d":[206,223],"e":true}},"d":[1,27,43,52,104,175,193,215,223,233,229,266,272,273],"e":true},"r":{"w":"narrow","s":"rrow","c":{"e":{"w":"narrowed","s":"ed","c":{},"d":[206],"e":true}},"d":[29],"e":true},"t":{"w":"nature","s":"ture","c":{},"d":[109],"e":true},"v":{"w":"nav","s":"v","c":{"i":{"w":"navigat","s":"igat","c":{"i":{"w":"navigati","s":"i","c":{"o":{"w":"navigation","s":"on","c":{},"d":[155,238,278,277],"e":true},"n":{"w":"navigating","s":"ng","c":{},"d":[260,259],"e":true}},"d":[],"e":false},"e":{"w":"navigates","s":"es","c":{},"d":[238],"e":true}},"d":[],"e":false},"b":{"w":"navbar","s":"bar","c":{},"d":[192],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"j":{"w":"j","s":"j","c":{"u":{"w":"ju","s":"u","c":{"s":{"w":"just","s":"st","c":{},"d":[19,18,27,32,37,59,87,81,114,91,99,98,142,141,165,170,168,183,197,193,207,221,223,233,270,276],"e":true},"m":{"w":"jumping","s":"mping","c":{},"d":[252],"e":true}},"d":[],"e":false},"s":{"w":"js","s":"s","c":{"o":{"w":"json","s":"on","c":{"d":{"w":"jsondata","s":"data","c":{},"d":[202,229],"e":true}},"d":[63,77,107,186,208],"e":true}},"d":[142],"e":true},"o":{"w":"jo","s":"o","c":{"h":{"w":"johnston","s":"hnston","c":{},"d":[73],"e":true},"i":{"w":"joi","s":"i","c":{"n":{"w":"join","s":"n","c":{},"d":[135],"e":true}},"d":[94],"e":true}},"d":[],"e":false},"a":{"w":"javascript","s":"avascript","c":{},"d":[87,164,163,176,193,199,230,277,276],"e":true}},"d":[],"e":false},"z":{"w":"z","s":"z","c":{"o":{"w":"zod","s":"od","c":{"'":{"w":"zod's","s":"'s","c":{},"d":[47,170],"e":true},"c":{"w":"zodclient","s":"client","c":{},"d":[168],"e":true}},"d":[7,39,40,47,85,80,94,110,91,168,193,195,197,210,234,250],"e":true},"e":{"w":"zero","s":"ero","c":{},"d":[14,13],"e":true},"-":{"w":"z-index","s":"-index","c":{},"d":[192],"e":true}},"d":[108],"e":true},"'":{"w":"'","s":"'","c":{"z":{"w":"'z","s":"z","c":{"e":{"w":"'zero'","s":"ero'","c":{},"d":[14,13,159],"e":true},"o":{"w":"'zod'","s":"od'","c":{},"d":[267,269],"e":true}},"d":[],"e":false},"j":{"w":"'j","s":"j","c":{"s":{"w":"'json","s":"son","c":{"'":{"w":"'json'","s":"'","c":{},"d":[30,52,62,153,229,233],"e":true},"-":{"w":"'json-schema'","s":"-schema'","c":{},"d":[267,269,275],"e":true}},"d":[],"e":false},"o":{"w":"'joi'","s":"oi'","c":{},"d":[267,269],"e":true}},"d":[],"e":false},"t":{"w":"'tags'","s":"tags'","c":{},"d":[81],"e":true},"i":{"w":"'id'","s":"id'","c":{},"d":[81],"e":true},"c":{"w":"'clear'","s":"clear'","c":{},"d":[103,168],"e":true},"s":{"w":"'s","s":"s","c":{"v":{"w":"'sveltekit-superforms","s":"veltekit-superforms","c":{},"d":[94],"e":true},"u":{"w":"'su","s":"u","c":{"c":{"w":"'success'","s":"ccess'","c":{},"d":[206],"e":true},"p":{"w":"'superstruct'","s":"perstruct'","c":{},"d":[265],"e":true}},"d":[],"e":false}},"d":[],"e":false},"f":{"w":"'f","s":"f","c":{"o":{"w":"'force'","s":"orce'","c":{},"d":[180],"e":true},"a":{"w":"'failure'","s":"ailure'","c":{},"d":[206],"e":true}},"d":[],"e":false},"u":{"w":"'user","s":"user","c":{"_":{"w":"'user_not_found'","s":"_not_found'","c":{},"d":[186],"e":true}},"d":[236],"e":true},"n":{"w":"'n","s":"n","c":{"o":{"w":"'not","s":"ot","c":{},"d":[186],"e":true},"p":{"w":"'npm","s":"pm","c":{},"d":[265],"e":true}},"d":[265],"e":true},"r":{"w":"'rate_limited'","s":"rate_limited'","c":{},"d":[186],"e":true},"a":{"w":"'a","s":"a","c":{"p":{"w":"'apply'","s":"pply'","c":{},"d":[208],"e":true},"r":{"w":"'arktype'","s":"rktype'","c":{},"d":[267,269],"e":true},"j":{"w":"'ajv'","s":"jv'","c":{},"d":[265],"e":true}},"d":[],"e":false},"p":{"w":"'pnpm","s":"pnpm","c":{},"d":[265],"e":true},"y":{"w":"'y","s":"y","c":{"a":{"w":"'yarn","s":"arn","c":{},"d":[265],"e":true},"u":{"w":"'yup'","s":"up'","c":{},"d":[267,269],"e":true}},"d":[],"e":false},"v":{"w":"'valibot'","s":"valibot'","c":{},"d":[267,269],"e":true},"'":{"w":"''","s":"'","c":{},"d":[265],"e":true}},"d":[267,269],"e":true},"_":{"w":"_","s":"_","c":{"e":{"w":"_errors","s":"errors","c":{},"d":[5,80,194,233],"e":true},"_":{"w":"__superform_id","s":"_superform_id","c":{},"d":[139,225],"e":true}},"d":[],"e":false},"q":{"w":"qu","s":"qu","c":{"i":{"w":"qui","s":"i","c":{"t":{"w":"quite","s":"te","c":{},"d":[24,26,32,44,40,34,73,98,153,182,222,249],"e":true},"c":{"w":"quick","s":"ck","c":{},"d":[32,98],"e":true}},"d":[],"e":false},"e":{"w":"question","s":"estion","c":{"s":{"w":"questions","s":"s","c":{},"d":[44,45,161],"e":true}},"d":[24,63,62,232],"e":true}},"d":[],"e":false},"-":{"w":"-","s":"-","c":{"-":{"w":"--","s":"-","c":{"s":{"w":"--sd-code-date","s":"sd-code-date","c":{},"d":[130],"e":true},"d":{"w":"--dev'","s":"dev'","c":{},"d":[265],"e":true}},"d":[],"e":false},"d":{"w":"-d'","s":"d'","c":{},"d":[265],"e":true}},"d":[58,75,81,119,176,223,273],"e":true},"x":{"w":"x","s":"x","c":{},"d":[75,76],"e":true}},"d":[],"e":false},"isArray":false},"code":{"type":"Radix","node":{"w":"","s":"","c":{"0":{"w":"0","s":"0","c":{"'":{"w":"0'","s":"'","c":{},"d":[94],"e":true}},"d":[38,68,77,81,104,94,152,166,213,237],"e":true},"1":{"w":"1","s":"1","c":{"0":{"w":"10","s":"0","c":{"0":{"w":"100","s":"0","c":{"_":{"w":"100_000","s":"_000","c":{},"d":[210,213,214],"e":true}},"d":[44,210,213,214],"e":true}},"d":[73,117,166,237],"e":true},"2":{"w":"12","s":"2","c":{"0":{"w":"120","s":"0","c":{},"d":[123],"e":true},"3":{"w":"123","s":"3","c":{},"d":[49,187,206],"e":true}},"d":[],"e":false},"5":{"w":"150px","s":"50px","c":{},"d":[44],"e":true},"e":{"w":"1em","s":"em","c":{},"d":[44],"e":true},"'":{"w":"1'","s":"'","c":{},"d":[126],"e":true}},"d":[7,38,43,68,77,81,104,140,142,172,203,232,250],"e":true},"2":{"w":"2","s":"2","c":{"0":{"w":"200","s":"00","c":{"0":{"w":"2000","s":"0","c":{},"d":[43],"e":true}},"d":[8,219,220],"e":true},"e":{"w":"2em","s":"em","c":{},"d":[44],"e":true}},"d":[7,39,104,105,94,96,140,197,232,233,244,267],"e":true},"3":{"w":"3","s":"3","c":{"0":{"w":"30","s":"0","c":{"0":{"w":"300","s":"0","c":{},"d":[68,248],"e":true},"3":{"w":"303","s":"3","c":{},"d":[8,43],"e":true}},"d":[],"e":false},"'":{"w":"3'","s":"'","c":{},"d":[94],"e":true}},"d":[1,44,105,104,147,194,195,234,233],"e":true},"4":{"w":"4","s":"4","c":{"0":{"w":"40","s":"0","c":{"0":{"w":"400","s":"0","c":{},"d":[6,5,8,42,43,41,61,62,80,185,211,215,210,219,220,223,244,248,250],"e":true},"3":{"w":"403","s":"3","c":{},"d":[6,219],"e":true},"4":{"w":"404","s":"4","c":{},"d":[42,41,43,271],"e":true}},"d":[],"e":false},"2":{"w":"429","s":"29","c":{},"d":[117],"e":true}},"d":[],"e":false},"5":{"w":"5","s":"5","c":{"0":{"w":"500","s":"00","c":{},"d":[8,255],"e":true},"9":{"w":"599","s":"99","c":{},"d":[6],"e":true}},"d":[9,117,203],"e":true},"8":{"w":"8","s":"8","c":{"0":{"w":"8000","s":"000","c":{},"d":[255],"e":true}},"d":[38,80,194,195,223],"e":true},"i":{"w":"i","s":"i","c":{"m":{"w":"im","s":"m","c":{"p":{"w":"import","s":"port","c":{"i":{"w":"importing","s":"ing","c":{},"d":[211],"e":true}},"d":[9,16,12,20,21,7,15,17,6,14,13,18,19,1,8,10,25,24,27,26,29,28,39,40,41,60,68,61,70,83,81,110,111,97,94,96,98,117,132,140,142,141,160,169,168,185,203,202,206,210,211,213,214,219,220,225,223,235,246,244,245,250,257,267,271,274,269,273],"e":true},"a":{"w":"image","s":"age","c":{"s":{"w":"images","s":"s","c":{},"d":[214],"e":true}},"d":[210,213,215,214],"e":true},"g":{"w":"img","s":"g","c":{},"d":[248,257],"e":true}},"d":[],"e":false},"s":{"w":"is","s":"s","c":{"n":{"w":"isn't","s":"n't","c":{},"d":[6,219],"e":true},"o":{"w":"iso","s":"o","c":{"d":{"w":"isodatestring","s":"datestring","c":{},"d":[16],"e":true}},"d":[165],"e":true},"t":{"w":"istainted","s":"tainted","c":{},"d":[106,156,202,262],"e":true},"l":{"w":"islimited","s":"limited","c":{},"d":[117],"e":true}},"d":[3,18,6,19,1,41,68,70,73,80,105,140,156,174,197,187,219,224,248,262],"e":true},"n":{"w":"in","s":"n","c":{"t":{"w":"int","s":"t","c":{"p":{"w":"intproxy","s":"proxy","c":{},"d":[12,13,142,159,235],"e":true},"e":{"w":"inte","s":"e","c":{"g":{"w":"integ","s":"g","c":{"r":{"w":"integration","s":"ration","c":{},"d":[10],"e":true},"e":{"w":"integers","s":"ers","c":{},"d":[250],"e":true}},"d":[],"e":false},"r":{"w":"interface","s":"rface","c":{},"d":[220],"e":true}},"d":[],"e":false}},"d":[232,244,250],"e":true},"p":{"w":"input","s":"put","c":{"c":{"w":"inputconstraint","s":"constraint","c":{"s":{"w":"inputconstraints","s":"s","c":{},"d":[4],"e":true}},"d":[26],"e":true}},"d":[21,24,26,29,28,41,73,88,110,165,166,189,184,193,209,213,214,225,223,232,233,237,245,248,273],"e":true},"v":{"w":"invalid","s":"valid","c":{"a":{"w":"invalidateall","s":"ateall","c":{},"d":[10,177],"e":true}},"d":[24,26,28,44,41,110,184,232,233,245,248],"e":true},"c":{"w":"include","s":"clude","c":{"s":{"w":"includes","s":"s","c":{},"d":[6,219,245],"e":true}},"d":[93],"e":true},"i":{"w":"initial","s":"itial","c":{"l":{"w":"initiallyemptyifzero","s":"lyemptyifzero","c":{},"d":[14,13,159],"e":true},"d":{"w":"initialdata","s":"data","c":{},"d":[98,187,247],"e":true}},"d":[98],"e":true},"f":{"w":"infer","s":"fer","c":{"i":{"w":"inferin","s":"in","c":{},"d":[1,25,97],"e":true},"r":{"w":"inferred","s":"red","c":{},"d":[220],"e":true},"e":{"w":"inference","s":"ence","c":{},"d":[267],"e":true}},"d":[1,25,39,81,97,96,220],"e":true},"s":{"w":"insta","s":"sta","c":{"l":{"w":"install","s":"ll","c":{},"d":[32],"e":true},"n":{"w":"instanceof","s":"nceof","c":{},"d":[210,213,214,215],"e":true}},"d":[],"e":false},"d":{"w":"ind","s":"d","c":{"e":{"w":"index","s":"ex","c":{},"d":[42,43],"e":true},"i":{"w":"individual","s":"ividual","c":{},"d":[156,262],"e":true}},"d":[],"e":false}},"d":[4,6,10,11,20,2,3,5,60,61,140,141,172,187,224,271],"e":true},"d":{"w":"id","s":"d","c":{"l":{"w":"idle","s":"le","c":{},"d":[104],"e":true},"p":{"w":"idproxy","s":"proxy","c":{"2":{"w":"idproxy2","s":"2","c":{},"d":[235],"e":true}},"d":[142,235],"e":true},"'":{"w":"id'","s":"'","c":{},"d":[142],"e":true}},"d":[3,4,10,39,44,42,40,43,41,81,139,219,224,223,232,235,244,271],"e":true},"f":{"w":"if","s":"f","c":{},"d":[9,6,3,24,26,25,28,42,43,41,68,61,62,82,80,110,106,96,117,147,156,173,165,196,184,185,187,203,207,205,209,206,211,215,210,213,214,218,221,219,220,223,232,233,246,244,245,248,250,257,262,271],"e":true},"t":{"w":"it","s":"t","c":{"'":{"w":"it's","s":"'s","c":{},"d":[61,73,81],"e":true},"e":{"w":"item","s":"em","c":{},"d":[213],"e":true}},"d":[104,156,224,262],"e":true},"p":{"w":"ip","s":"p","c":{"u":{"w":"ipua","s":"ua","c":{},"d":[117],"e":true}},"d":[117],"e":true},"c":{"w":"icon","s":"con","c":{},"d":[207,221],"e":true}},"d":[30,26,81,142,185,232,233],"e":true},"a":{"w":"a","s":"a","c":{"c":{"w":"ac","s":"c","c":{"t":{"w":"action","s":"tion","c":{"r":{"w":"actionresult","s":"result","c":{},"d":[9,10,8,70,183],"e":true},"f":{"w":"actionfailure","s":"failure","c":{},"d":[6,5],"e":true},"s":{"w":"actions","s":"s","c":{},"d":[6,42,43,61,64,62,117,185,187,215,210,219,223,248,250],"e":true},"d":{"w":"actiondata","s":"data","c":{},"d":[61,206],"e":true}},"d":[61,201,206,225,223],"e":true},"c":{"w":"accept","s":"cept","c":{},"d":[213,214],"e":true}},"d":[],"e":false},"d":{"w":"ad","s":"d","c":{"d":{"w":"add","s":"d","c":{"e":{"w":"added","s":"ed","c":{},"d":[3,187],"e":true},"r":{"w":"address","s":"ress","c":{},"d":[117,245],"e":true},"i":{"w":"additionalproperties","s":"itionalproperties","c":{},"d":[267],"e":true}},"d":[3,90],"e":true},"a":{"w":"adapter","s":"apter","c":{"s":{"w":"adapters'","s":"s'","c":{},"d":[9,7,1,41,111,94,97,96,160,169,168,185,203,210,213,214,219,220,223,246,244,245,250,269],"e":true}},"d":[2,3,1,269],"e":true},"v":{"w":"advanced","s":"vanced","c":{},"d":[224],"e":true}},"d":[],"e":false},"n":{"w":"an","s":"n","c":{"y":{"w":"any","s":"y","c":{"z":{"w":"anyzodobject","s":"zodobject","c":{},"d":[81],"e":true},"m":{"w":"anymore","s":"more","c":{},"d":[104],"e":true}},"d":[11,4,20,2,1,123],"e":true},"d":{"w":"and","s":"d","c":{},"d":[6,104,172,211,215,219,224,234,246,245],"e":true},"o":{"w":"anotherschema","s":"otherschema","c":{},"d":[64],"e":true}},"d":[20,90,187,224,246,245],"e":true},"l":{"w":"al","s":"l","c":{"w":{"w":"always","s":"ways","c":{},"d":[3,271],"e":true},"l":{"w":"all","s":"l","c":{"o":{"w":"allowfiles","s":"owfiles","c":{},"d":[3],"e":true},"e":{"w":"allerrors","s":"errors","c":{},"d":[82,196,188],"e":true}},"d":[3,250],"e":true},"i":{"w":"align-items","s":"ign-items","c":{},"d":[44],"e":true},"s":{"w":"also","s":"so","c":{},"d":[78,172,219,269],"e":true},"r":{"w":"already","s":"ready","c":{},"d":[174,185,248],"e":true},"o":{"w":"along","s":"ong","c":{},"d":[224],"e":true},"t":{"w":"alt","s":"t","c":{},"d":[248],"e":true}},"d":[],"e":false},"s":{"w":"as","s":"s","c":{"y":{"w":"async","s":"ync","c":{},"d":[9,6,42,41,43,60,61,64,62,94,117,126,187,185,215,210,219,223,232,244,248,250,271,269],"e":true},"s":{"w":"ass","s":"s","c":{"u":{"w":"assume","s":"ume","c":{},"d":[235],"e":true},"e":{"w":"assets","s":"ets","c":{},"d":[257],"e":true}},"d":[],"e":false}},"d":[16,18,19,1,10,25,30,26,44,50,47,60,61,64,70,82,104,117,140,141,196,202,206,213,220,224,232,233,250,267],"e":true},"w":{"w":"await","s":"wait","c":{},"d":[9,6,42,43,41,60,61,64,62,90,80,108,94,97,117,139,140,173,172,187,185,215,210,219,220,223,232,246,244,245,248,250,249,271],"e":true},"u":{"w":"auto","s":"uto","c":{"m":{"w":"automatically","s":"matically","c":{},"d":[3,211],"e":true},"f":{"w":"autofocusonerror","s":"focusonerror","c":{},"d":[10,188],"e":true}},"d":[],"e":false},"p":{"w":"ap","s":"p","c":{"p":{"w":"app","s":"p","c":{"l":{"w":"applyaction","s":"lyaction","c":{},"d":[10,177,205],"e":true}},"d":[10,41,132,208,220],"e":true},"i":{"w":"api","s":"i","c":{},"d":[246,245,273],"e":true}},"d":[],"e":false},"r":{"w":"ar","s":"r","c":{"r":{"w":"array","s":"ray","c":{"p":{"w":"arrayproxy","s":"proxy","c":{},"d":[12,19,235],"e":true}},"d":[7,3,81,140,147,194,195,214,232,233],"e":true},"i":{"w":"aria-invalid","s":"ia-invalid","c":{},"d":[24,26,28,41,88,110,166,189,184,188,237,245,248],"e":true},"k":{"w":"arktype","s":"ktype","c":{},"d":[94,269],"e":true},"e":{"w":"are","s":"e","c":{},"d":[250],"e":true}},"d":[],"e":false},"b":{"w":"about","s":"bout","c":{},"d":[39],"e":true},"g":{"w":"ag","s":"g","c":{"e":{"w":"age","s":"e","c":{"n":{"w":"agent","s":"nt","c":{},"d":[117],"e":true}},"d":[47],"e":true},"r":{"w":"agree","s":"ree","c":{},"d":[47],"e":true},"a":{"w":"again","s":"ain","c":{},"d":[80],"e":true}},"d":[],"e":false},"t":{"w":"at","s":"t","c":{"t":{"w":"attrs","s":"trs","c":{},"d":[73],"e":true}},"d":[73,81,96],"e":true},"v":{"w":"availability","s":"vailability","c":{},"d":[248],"e":true}},"d":[12,16,44,39,81,105,106,117,141,156,173,165,174,172,197,207,210,213,214,221,235,262],"e":true},"s":{"w":"s","s":"s","c":{"u":{"w":"su","s":"u","c":{"p":{"w":"sup","s":"p","c":{"e":{"w":"super","s":"er","c":{"v":{"w":"supervalidate","s":"validate","c":{"o":{"w":"supervalidateoptions","s":"options","c":{},"d":[3,11,2],"e":true},"d":{"w":"supervalidated","s":"d","c":{},"d":[4,6,11,2,5,10,25,97],"e":true},"s":{"w":"supervalidatesync","s":"sync","c":{},"d":[141],"e":true}},"d":[9,2,6,3,42,41,43,60,61,64,62,90,80,111,108,94,97,140,139,160,185,187,210,215,219,220,223,232,244,248,250,249,269,271],"e":true},"f":{"w":"superform","s":"form","c":{"s":{"w":"superforms","s":"s","c":{"_":{"w":"superforms_legacy","s":"_legacy","c":{},"d":[93],"e":true}},"d":[210,220],"e":true},"c":{"w":"superformclient","s":"client","c":{},"d":[96],"e":true}},"d":[16,20,21,15,17,14,13,18,19,25,24,30,27,29,28,41,68,60,61,62,70,78,81,110,114,111,106,96,98,142,141,147,160,156,173,172,165,167,169,168,177,183,176,184,188,193,203,205,207,209,202,206,208,213,214,218,221,220,225,224,223,232,233,235,239,246,243,247,245,248,255,257,262,263,260,273,277],"e":true},"d":{"w":"superdebug","s":"debug","c":{},"d":[41,111,130,128,129,125,127,126,132,123,160,274],"e":true},"r":{"w":"superrefine","s":"refine","c":{},"d":[234],"e":true}},"d":[],"e":false},"p":{"w":"supp","s":"p","c":{"o":{"w":"support","s":"ort","c":{},"d":[3],"e":true},"l":{"w":"supplying","s":"lying","c":{},"d":[98],"e":true}},"d":[],"e":false}},"d":[],"e":false},"b":{"w":"sub","s":"b","c":{"s":{"w":"substring","s":"string","c":{},"d":[16],"e":true},"m":{"w":"submit","s":"mit","c":{"f":{"w":"submitfunction","s":"function","c":{},"d":[10],"e":true},"t":{"w":"submitt","s":"t","c":{"i":{"w":"submitting","s":"ing","c":{},"d":[104,248,255],"e":true},"e":{"w":"submitte","s":"e","c":{"r":{"w":"submitter","s":"r","c":{},"d":[201],"e":true},"d":{"w":"submitted'","s":"d'","c":{},"d":[223],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[10,43,41,110,156,184,213,214,223,232,233,248,245,257,262,273],"e":true}},"d":[],"e":false},"c":{"w":"success","s":"ccess","c":{"f":{"w":"successful","s":"ful","c":{"l":{"w":"successfully","s":"ly","c":{},"d":[8],"e":true}},"d":[207],"e":true}},"d":[220],"e":true},"r":{"w":"sure","s":"re","c":{},"d":[43,73],"e":true}},"d":[],"e":false},"e":{"w":"se","s":"e","c":{"r":{"w":"server","s":"rver","c":{"'":{"w":"server'","s":"'","c":{},"d":[9,6,117,140,142],"e":true}},"d":[83],"e":true},"t":{"w":"set","s":"t","c":{"e":{"w":"seterror","s":"error","c":{},"d":[5,142,185,211,245,248],"e":true},"t":{"w":"settimeout","s":"timeout","c":{},"d":[43],"e":true},"m":{"w":"setmessage","s":"message","c":{},"d":[245],"e":true}},"d":[3,6,10,62,70,78,187,202,219,224,248],"e":true},"l":{"w":"selecterrortext","s":"lecterrortext","c":{},"d":[10],"e":true},"e":{"w":"see","s":"e","c":{},"d":[39],"e":true},"n":{"w":"sent","s":"nt","c":{},"d":[78,187,224],"e":true},"c":{"w":"second","s":"cond","c":{},"d":[220,250],"e":true}},"d":[],"e":false},"c":{"w":"sc","s":"c","c":{"h":{"w":"schema","s":"hema","c":{"2":{"w":"schema2","s":"2","c":{},"d":[50,49],"e":true},"s":{"w":"schemas","s":"s","c":{"'":{"w":"schemas'","s":"'","c":{},"d":[25,97,141,246],"e":true}},"d":[203,223],"e":true}},"d":[21,11,7,6,3,1,39,41,49,47,61,64,62,90,78,80,81,105,108,97,94,96,98,140,147,141,139,152,159,173,172,169,168,197,187,185,193,210,213,214,215,219,220,223,232,233,235,250,249,267,269,271],"e":true},"r":{"w":"scr","s":"r","c":{"i":{"w":"script","s":"ipt","c":{},"d":[20,21,18,19,25,29,24,27,26,28,41,60,61,81,110,132,141,156,165,176,184,213,214,220,225,223,232,233,246,245,257,262,274,273,277,276],"e":true},"o":{"w":"scroll","s":"oll","c":{"t":{"w":"scrolltoerror","s":"toerror","c":{},"d":[10,188],"e":true},"i":{"w":"scrollintoviewoptions","s":"intoviewoptions","c":{},"d":[10,188],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"score","s":"ore","c":{},"d":[94],"e":true}},"d":[],"e":false},"t":{"w":"st","s":"t","c":{"a":{"w":"sta","s":"a","c":{"t":{"w":"status","s":"tus","c":{},"d":[3,6,5,10,25,41,68,70,80,97,123,221,219,220,244],"e":true},"y":{"w":"stays","s":"ys","c":{},"d":[80],"e":true}},"d":[],"e":false},"r":{"w":"str","s":"r","c":{"i":{"w":"stri","s":"i","c":{"n":{"w":"string","s":"ng","c":{"p":{"w":"stringproxy","s":"proxy","c":{},"d":[17,12,235],"e":true},"t":{"w":"stringtruncate","s":"truncate","c":{},"d":[123],"e":true}},"d":[9,3,4,12,10,7,6,1,5,25,29,26,28,39,49,68,82,80,81,110,104,97,94,140,147,152,165,174,197,194,188,195,208,220,223,234,232,233,235,244,250,260,267],"e":true},"c":{"w":"strict","s":"ct","c":{},"d":[3,249],"e":true}},"d":[],"e":false},"o":{"w":"strongly","s":"ongly","c":{},"d":[68],"e":true},"a":{"w":"strange","s":"ange","c":{},"d":[197],"e":true}},"d":[],"e":false},"i":{"w":"sti","s":"i","c":{"c":{"w":"stickynavbar","s":"ckynavbar","c":{},"d":[10,188],"e":true},"l":{"w":"still","s":"ll","c":{},"d":[187],"e":true}},"d":[],"e":false},"y":{"w":"style","s":"yle","c":{"s":{"w":"stylesheet","s":"sheet","c":{},"d":[38],"e":true}},"d":[44,41],"e":true},"o":{"w":"store","s":"ore","c":{"s":{"w":"stores'","s":"s'","c":{},"d":[41,132,220],"e":true}},"d":[70,156,262],"e":true},"u":{"w":"stuff","s":"uff","c":{},"d":[94,207],"e":true},"e":{"w":"step","s":"ep","c":{},"d":[165,169,203],"e":true}},"d":[],"e":false},"p":{"w":"sp","s":"p","c":{"a":{"w":"spa","s":"a","c":{"m":{"w":"spam","s":"m","c":{},"d":[6,219],"e":true},"n":{"w":"span","s":"n","c":{},"d":[24,26,28,41,110,184,213,214,232,233,245],"e":true}},"d":[10,98,243,246,247,245,248],"e":true},"e":{"w":"spec","s":"ec","c":{"i":{"w":"special","s":"ial","c":{},"d":[10],"e":true}},"d":[93],"e":true},"l":{"w":"splice","s":"lice","c":{},"d":[43],"e":true},"i":{"w":"spinner","s":"inner","c":{},"d":[248,257],"e":true}},"d":[],"e":false},"i":{"w":"si","s":"i","c":{"n":{"w":"sinc","s":"nc","c":{"e":{"w":"since","s":"e","c":{},"d":[6,61,81,187,219],"e":true},"l":{"w":"sinclair","s":"lair","c":{},"d":[267],"e":true}},"d":[],"e":false},"m":{"w":"simple","s":"mple","c":{"s":{"w":"simplest","s":"st","c":{},"d":[172],"e":true}},"d":[39],"e":true},"z":{"w":"size","s":"ze","c":{},"d":[210,213,214],"e":true}},"d":[],"e":false},"a":{"w":"sa","s":"a","c":{"m":{"w":"same","s":"me","c":{"s":{"w":"samesite","s":"site","c":{},"d":[8],"e":true}},"d":[1,140,141],"e":true},"t":{"w":"satisfies","s":"tisfies","c":{},"d":[29,267],"e":true},"k":{"w":"sakura","s":"kura","c":{},"d":[38],"e":true},"f":{"w":"safety","s":"fety","c":{},"d":[78],"e":true},"v":{"w":"saved","s":"ved","c":{},"d":[260],"e":true}},"d":[],"e":false},"y":{"w":"syn","s":"yn","c":{"c":{"w":"syncflashmessage","s":"cflashmessage","c":{},"d":[10,70],"e":true},"t":{"w":"syntax","s":"tax","c":{},"d":[39],"e":true}},"d":[],"e":false},"v":{"w":"sv","s":"v","c":{"e":{"w":"svelte","s":"elte","c":{"j":{"w":"sveltejs","s":"js","c":{},"d":[41,117,210,211,223,244,271],"e":true},"k":{"w":"sveltekit","s":"kit","c":{"-":{"w":"sveltekit-superforms","s":"-superforms","c":{},"d":[77],"e":true}},"d":[93],"e":true},"'":{"w":"svelte'","s":"'","c":{},"d":[110],"e":true}},"d":[38,183,265],"e":true},"g":{"w":"svg'","s":"g'","c":{},"d":[257],"e":true}},"d":[],"e":false},"l":{"w":"slice","s":"lice","c":{},"d":[39,166,237],"e":true},"h":{"w":"sh","s":"h","c":{"a":{"w":"shape","s":"ape","c":{},"d":[40],"e":true},"o":{"w":"sho","s":"o","c":{"r":{"w":"short","s":"rt","c":{},"d":[197],"e":true},"w":{"w":"showing","s":"wing","c":{},"d":[207],"e":true},"u":{"w":"should","s":"uld","c":{},"d":[250,269],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"so","s":"o","c":{"m":{"w":"some","s":"me","c":{"t":{"w":"something","s":"thing","c":{},"d":[62,61,206,210],"e":true}},"d":[207],"e":true}},"d":[187,269],"e":true},"n":{"w":"snapshot","s":"napshot","c":{},"d":[239],"e":true},"r":{"w":"src","s":"rc","c":{},"d":[248,257],"e":true}},"d":[167,168,243],"e":true},"f":{"w":"f","s":"f","c":{"r":{"w":"from","s":"rom","c":{"e":{"w":"fromentries","s":"entries","c":{},"d":[202],"e":true}},"d":[9,3,16,20,21,7,15,17,6,14,12,13,18,19,1,8,10,25,24,27,26,29,28,39,40,41,60,68,61,70,83,81,110,111,94,97,96,98,117,132,140,142,141,160,169,168,185,203,202,206,210,211,213,214,219,220,225,224,223,235,246,244,245,250,257,267,271,274,269,273],"e":true},"i":{"w":"fi","s":"i","c":{"e":{"w":"field","s":"eld","c":{"p":{"w":"fieldproxy","s":"proxy","c":{},"d":[20,12,27,81,235],"e":true},"s":{"w":"fields","s":"s","c":{},"d":[3,156,202,250,262],"e":true},"e":{"w":"fielderrors","s":"errors","c":{},"d":[73],"e":true}},"d":[20,12,5,24,30,29,28,73,81,110,105,156,172,235,262],"e":true},"l":{"w":"fil","s":"l","c":{"e":{"w":"file","s":"e","c":{"p":{"w":"fileproxy","s":"proxy","c":{},"d":[12,213],"e":true},"f":{"w":"filefieldproxy","s":"fieldproxy","c":{},"d":[12],"e":true},"s":{"w":"files","s":"s","c":{"p":{"w":"filesproxy","s":"proxy","c":{},"d":[12,214],"e":true},"f":{"w":"filesfieldproxy","s":"fieldproxy","c":{},"d":[12],"e":true}},"d":[214,213],"e":true}},"d":[12,3,210,213,214,211,215],"e":true},"t":{"w":"filter","s":"ter","c":{},"d":[202],"e":true}},"d":[],"e":false},"n":{"w":"find","s":"nd","c":{"i":{"w":"findindex","s":"index","c":{},"d":[42,43],"e":true},"u":{"w":"findunique","s":"unique","c":{},"d":[271],"e":true}},"d":[41,185],"e":true},"s":{"w":"fish","s":"sh","c":{},"d":[50,49],"e":true},"r":{"w":"first","s":"rst","c":{},"d":[165,169,220,250],"e":true}},"d":[],"e":false},"o":{"w":"fo","s":"o","c":{"r":{"w":"for","s":"r","c":{"m":{"w":"form","s":"m","c":{"1":{"w":"form1","s":"1","c":{},"d":[139],"e":true},"2":{"w":"form2","s":"2","c":{},"d":[64,139,187],"e":true},"o":{"w":"formoptions","s":"options","c":{},"d":[10],"e":true},"s":{"w":"forms","s":"s","c":{},"d":[3],"e":true},"a":{"w":"format","s":"at","c":{},"d":[16,21,237,267],"e":true},"f":{"w":"formfieldproxy","s":"fieldproxy","c":{},"d":[12,18,29,28,81,110,235],"e":true},"d":{"w":"formdata","s":"data","c":{},"d":[2,43,64,62,61,73,81,201,215,248],"e":true},"'":{"w":"form'","s":"'","c":{},"d":[6,209,219],"e":true},"p":{"w":"formpath","s":"path","c":{"l":{"w":"formpathleaves","s":"leaves","c":{},"d":[5,29,28,81,110],"e":true},"t":{"w":"formpathtype","s":"type","c":{},"d":[10],"e":true}},"d":[10,202],"e":true},"e":{"w":"formel","s":"el","c":{"e":{"w":"formelement","s":"ement","c":{},"d":[10,201,204,209,206],"e":true}},"d":[10],"e":true},"r":{"w":"formresult","s":"result","c":{},"d":[61,206],"e":true},"-":{"w":"form-data","s":"-data","c":{},"d":[213,214],"e":true},"i":{"w":"formid","s":"id","c":{},"d":[224,225],"e":true}},"d":[6,3,9,16,20,15,21,17,14,13,18,5,19,10,8,24,25,30,27,26,28,42,44,43,41,60,61,64,62,70,73,88,90,78,80,81,114,106,108,110,94,97,96,98,130,128,129,125,127,142,140,147,141,156,159,173,172,165,167,169,168,177,183,176,184,189,188,187,193,185,203,205,207,209,202,206,208,211,215,210,213,214,218,221,219,220,224,225,223,232,233,229,237,235,239,243,247,246,245,244,248,250,249,255,257,262,263,260,274,271,273,277],"e":true}},"d":[3,24,39,41,70,78,117,173,172,184,193,273],"e":true},"u":{"w":"found","s":"und","c":{"'":{"w":"found'","s":"'","c":{},"d":[271],"e":true}},"d":[42,41,43],"e":true},"o":{"w":"foo","s":"o","c":{},"d":[105],"e":true},"l":{"w":"following","s":"llowing","c":{},"d":[235],"e":true}},"d":[],"e":false},"a":{"w":"fa","s":"a","c":{"l":{"w":"false","s":"lse","c":{},"d":[4,3,6,10,5,27,41,47,70,78,81,123,172,167,168,188,187,203,205,219,229,235,243,263,260,267],"e":true},"i":{"w":"fail","s":"il","c":{"s":{"w":"fails","s":"s","c":{"t":{"w":"failstatus","s":"tatus","c":{},"d":[10,243],"e":true}},"d":[187],"e":true}},"d":[6,42,41,43,61,62,80,185,210,211,215,219,223,248,250],"e":true}},"d":[],"e":false},"l":{"w":"fl","s":"l","c":{"a":{"w":"flash","s":"ash","c":{"m":{"w":"flashm","s":"m","c":{"e":{"w":"flashmessage","s":"essage","c":{},"d":[10,70],"e":true},"o":{"w":"flashmodule","s":"odule","c":{},"d":[10,70],"e":true}},"d":[],"e":false}},"d":[10,70],"e":true},"e":{"w":"flex","s":"ex","c":{"-":{"w":"flex-","s":"-","c":{"d":{"w":"flex-direction","s":"direction","c":{},"d":[44],"e":true},"s":{"w":"flex-start","s":"start","c":{},"d":[44],"e":true}},"d":[],"e":false}},"d":[44],"e":true}},"d":[],"e":false},"u":{"w":"fu","s":"u","c":{"n":{"w":"function","s":"nction","c":{"s":{"w":"functions","s":"s","c":{},"d":[123,271],"e":true}},"d":[68,141,156,224,262,269],"e":true},"l":{"w":"fullschema","s":"llschema","c":{},"d":[248],"e":true}},"d":[],"e":false},"e":{"w":"fetch","s":"etch","c":{"s":{"w":"fetchstatus","s":"status","c":{},"d":[104],"e":true}},"d":[126,244],"e":true}},"d":[210,213,214],"e":true},"'":{"w":"'","s":"'","c":{"s":{"w":"'s","s":"s","c":{"v":{"w":"'sveltekit-","s":"veltekit-","c":{"s":{"w":"'sveltekit-superforms","s":"superforms","c":{"'":{"w":"'sveltekit-superforms'","s":"'","c":{},"d":[16,20,21,7,15,17,14,12,13,18,19,1,8,25,24,26,29,28,41,68,61,81,110,111,94,97,96,98,160,185,203,202,206,210,211,213,214,219,220,223,235,246,244,245,250,274,267,269,273],"e":true}},"d":[9,7,6,1,27,28,41,61,83,81,111,94,97,96,140,142,141,160,169,168,185,203,210,213,214,219,220,225,223,246,244,245,250,269],"e":true},"f":{"w":"'sveltekit-flash-message","s":"flash-message","c":{},"d":[10,70],"e":true},"r":{"w":"'sveltekit-rate-limiter","s":"rate-limiter","c":{},"d":[117],"e":true}},"d":[],"e":false},"u":{"w":"'su","s":"u","c":{"c":{"w":"'success'","s":"ccess'","c":{},"d":[9,8,10,68,97,221,220],"e":true},"p":{"w":"'super","s":"per","c":{},"d":[39],"e":true},"b":{"w":"'submit-only'","s":"bmit-only'","c":{},"d":[167],"e":true},"s":{"w":"'suspicious","s":"spicious","c":{},"d":[245],"e":true}},"d":[],"e":false},"m":{"w":"'smooth'","s":"mooth'","c":{},"d":[10,188],"e":true},"p":{"w":"'spam'","s":"pam'","c":{},"d":[6,219,245],"e":true},"a":{"w":"'salmon'","s":"almon'","c":{},"d":[50,49],"e":true},"r":{"w":"'src","s":"rc","c":{},"d":[93],"e":true},"t":{"w":"'string'","s":"tring'","c":{},"d":[94,267,269],"e":true}},"d":[],"e":false},"z":{"w":"'z","s":"z","c":{"o":{"w":"'zod'","s":"od'","c":{},"d":[9,7,1,39,81,140,210,223,244,250,267],"e":true},"e":{"w":"'zero'","s":"ero'","c":{},"d":[14,13,159],"e":true}},"d":[],"e":false},"f":{"w":"'f","s":"f","c":{"i":{"w":"'field","s":"ield","c":{"'":{"w":"'field'","s":"'","c":{},"d":[16,15,17,14,13],"e":true},"s":{"w":"'fields","s":"s","c":{},"d":[209],"e":true}},"d":[],"e":false},"a":{"w":"'failure'","s":"ailure'","c":{},"d":[9,8,10,97],"e":true},"o":{"w":"'for","s":"or","c":{"c":{"w":"'force'","s":"ce'","c":{},"d":[10,177],"e":true},"m":{"w":"'form","s":"m","c":{"1":{"w":"'form1'","s":"1'","c":{},"d":[139],"e":true},"2":{"w":"'form2'","s":"2'","c":{},"d":[139],"e":true},"'":{"w":"'form'","s":"'","c":{},"d":[10,234],"e":true}},"d":[234],"e":true}},"d":[],"e":false},"l":{"w":"'flash'","s":"lash'","c":{},"d":[10],"e":true}},"d":[],"e":false},"n":{"w":"'n","s":"n","c":{"a":{"w":"'name","s":"ame","c":{"'":{"w":"'name'","s":"'","c":{},"d":[20,18,27,28,81,106,142,156,172,262,267],"e":true}},"d":[96],"e":true},"u":{"w":"'nu","s":"u","c":{"l":{"w":"'null'","s":"ll'","c":{},"d":[17,14,13,16],"e":true},"m":{"w":"'num'","s":"m'","c":{},"d":[159],"e":true}},"d":[],"e":false},"o":{"w":"'no","s":"o","c":{"n":{"w":"'none'","s":"ne'","c":{},"d":[10],"e":true},"t":{"w":"'not","s":"t","c":{},"d":[271],"e":true}},"d":[6,219],"e":true},"e":{"w":"'new","s":"ew","c":{},"d":[98,247],"e":true}},"d":[],"e":false},"d":{"w":"'d","s":"d","c":{"a":{"w":"'date","s":"ate","c":{"'":{"w":"'date'","s":"'","c":{},"d":[21,16,237],"e":true},"t":{"w":"'datetime","s":"time","c":{"'":{"w":"'datetime'","s":"'","c":{},"d":[16],"e":true},"-":{"w":"'datetime-","s":"-","c":{"u":{"w":"'datetime-utc'","s":"utc'","c":{},"d":[16],"e":true},"l":{"w":"'datetime-local'","s":"local'","c":{},"d":[16],"e":true}},"d":[],"e":false}},"d":[],"e":false},"-":{"w":"'date-","s":"-","c":{"u":{"w":"'date-utc'","s":"utc'","c":{},"d":[16],"e":true},"l":{"w":"'date-local'","s":"local'","c":{},"d":[16],"e":true}},"d":[],"e":false}},"d":[],"e":false},"e":{"w":"'de","s":"e","c":{"t":{"w":"'detect'","s":"tect'","c":{},"d":[10,188],"e":true},"l":{"w":"'del","s":"l","c":{"a":{"w":"'delay'","s":"ay'","c":{},"d":[43],"e":true},"e":{"w":"'delete'","s":"ete'","c":{},"d":[43],"e":true}},"d":[],"e":false},"f":{"w":"'default'","s":"fault'","c":{},"d":[123],"e":true}},"d":[],"e":false},"o":{"w":"'do","s":"o","c":{},"d":[260],"e":true}},"d":[],"e":false},"t":{"w":"'t","s":"t","c":{"r":{"w":"'tr","s":"r","c":{"u":{"w":"'true'","s":"ue'","c":{},"d":[15,24,26,28,41,88,110,166,189,184,237,245,248],"e":true},"o":{"w":"'trout'","s":"out'","c":{},"d":[50,49],"e":true}},"d":[],"e":false},"i":{"w":"'time","s":"ime","c":{"'":{"w":"'time'","s":"'","c":{},"d":[16],"e":true},"-":{"w":"'time-","s":"-","c":{"u":{"w":"'time-utc'","s":"utc'","c":{},"d":[16],"e":true},"l":{"w":"'time-local'","s":"local'","c":{},"d":[16],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"'tags","s":"ags","c":{"'":{"w":"'tags'","s":"'","c":{},"d":[19,81,142,234],"e":true}},"d":[81,172],"e":true},"u":{"w":"'tuna'","s":"una'","c":{},"d":[50,49],"e":true},"h":{"w":"'the","s":"he","c":{},"d":[156,262],"e":true},"e":{"w":"'test'","s":"est'","c":{},"d":[172,232],"e":true}},"d":[],"e":false},"u":{"w":"'u","s":"u","c":{"n":{"w":"'un","s":"n","c":{"t":{"w":"'untaint","s":"taint","c":{"'":{"w":"'untaint'","s":"'","c":{},"d":[20,15,17,14,16,13,18,19,10,229,263],"e":true},"-":{"w":"'untaint-","s":"-","c":{"a":{"w":"'untaint-all'","s":"all'","c":{},"d":[20,18,19],"e":true},"f":{"w":"'untaint-form'","s":"form'","c":{},"d":[15,17,14,16,13,10,229,263],"e":true}},"d":[],"e":false}},"d":[],"e":false},"d":{"w":"'undefined'","s":"defined'","c":{},"d":[21,17,14,13,16],"e":true}},"d":[],"e":false},"s":{"w":"'user","s":"ser","c":{"'":{"w":"'user'","s":"'","c":{},"d":[142],"e":true},"n":{"w":"'username","s":"name","c":{"'":{"w":"'username'","s":"'","c":{},"d":[248],"e":true}},"d":[174,248],"e":true}},"d":[42,41,43,142,219],"e":true},"p":{"w":"'update'","s":"pdate'","c":{},"d":[41],"e":true}},"d":[],"e":false},"j":{"w":"'j","s":"j","c":{"s":{"w":"'json'","s":"son'","c":{},"d":[10,202,232],"e":true},"o":{"w":"'joi'","s":"oi'","c":{},"d":[267],"e":true}},"d":[],"e":false},"a":{"w":"'a","s":"a","c":{"'":{"w":"'a'","s":"'","c":{},"d":[7,105,140],"e":true},"l":{"w":"'all","s":"ll","c":{"o":{"w":"'allow'","s":"ow'","c":{},"d":[10],"e":true}},"d":[221],"e":true},"b":{"w":"'abort'","s":"bort'","c":{},"d":[10],"e":true},"u":{"w":"'auto'","s":"uto'","c":{},"d":[10,167,170,188],"e":true},"p":{"w":"'apply'","s":"pply'","c":{},"d":[10,183,208],"e":true},"r":{"w":"'ar","s":"r","c":{"e":{"w":"'are","s":"e","c":{},"d":[43],"e":true},"k":{"w":"'arktype'","s":"ktype'","c":{},"d":[94,267,269],"e":true}},"d":[],"e":false},"n":{"w":"'any'","s":"ny'","c":{},"d":[165],"e":true}},"d":[],"e":false},"p":{"w":"'p","s":"p","c":{"r":{"w":"'pr","s":"r","c":{"e":{"w":"'prevent'","s":"event'","c":{},"d":[10],"e":true},"o":{"w":"'profile'","s":"ofile'","c":{},"d":[142],"e":true}},"d":[],"e":false},"o":{"w":"'posted","s":"osted","c":{},"d":[8,211],"e":true},"l":{"w":"'please","s":"lease","c":{},"d":[210,213,214],"e":true}},"d":[],"e":false},"b":{"w":"'b'","s":"b'","c":{},"d":[7,105,140],"e":true},"'":{"w":"''","s":"'","c":{},"d":[7,5,27,50,47,110,94,123,140,248,269],"e":true},"i":{"w":"'i","s":"i","c":{"n":{"w":"'in","s":"n","c":{"v":{"w":"'invalid","s":"valid","c":{},"d":[6,185,219],"e":true},"t":{"w":"'integer","s":"teger","c":{},"d":[94],"e":true},"c":{"w":"'incorrect","s":"correct","c":{},"d":[142],"e":true}},"d":[209],"e":true},"s":{"w":"'iso'","s":"so'","c":{},"d":[16],"e":true},"m":{"w":"'im","s":"m","c":{"p":{"w":"'important","s":"portant","c":{},"d":[39],"e":true},"a":{"w":"'image","s":"age","c":{"'":{"w":"'image'","s":"'","c":{},"d":[211,215,213],"e":true},"s":{"w":"'images'","s":"s'","c":{},"d":[214],"e":true}},"d":[],"e":false}},"d":[],"e":false},"d":{"w":"'id'","s":"d'","c":{},"d":[142,235],"e":true}},"d":[],"e":false},"o":{"w":"'o","s":"o","c":{"f":{"w":"'off'","s":"ff'","c":{},"d":[10,188],"e":true},"n":{"w":"'on","s":"n","c":{"i":{"w":"'oninput'","s":"input'","c":{},"d":[10,167,170],"e":true},"b":{"w":"'onblur'","s":"blur'","c":{},"d":[10,167,170],"e":true},"s":{"w":"'onsubmit'","s":"submit'","c":{},"d":[10,170],"e":true}},"d":[],"e":false},"b":{"w":"'object'","s":"bject'","c":{},"d":[267],"e":true}},"d":[],"e":false},"v":{"w":"'val","s":"val","c":{"i":{"w":"'vali","s":"i","c":{"d":{"w":"'valid","s":"d","c":{},"d":[6,219,245],"e":true},"b":{"w":"'valibot'","s":"bot'","c":{},"d":[267],"e":true}},"d":[],"e":false},"u":{"w":"'value'","s":"ue'","c":{},"d":[62],"e":true}},"d":[],"e":false},"r":{"w":"'re","s":"re","c":{"d":{"w":"'redirect'","s":"direct'","c":{},"d":[8,205],"e":true},"g":{"w":"'register","s":"gister","c":{"f":{"w":"'registerform'","s":"form'","c":{},"d":[139],"e":true}},"d":[223],"e":true}},"d":[],"e":false},"e":{"w":"'e","s":"e","c":{"r":{"w":"'error","s":"rror","c":{"'":{"w":"'error'","s":"'","c":{},"d":[8,10,68,220],"e":true},"s":{"w":"'errors","s":"s","c":{"-":{"w":"'errors-and-message'","s":"-and-message'","c":{},"d":[10],"e":true},"'":{"w":"'errors'","s":"'","c":{},"d":[10,172],"e":true}},"d":[],"e":false}},"d":[8],"e":true},"x":{"w":"'extra'","s":"xtra'","c":{},"d":[62],"e":true},"m":{"w":"'email'","s":"mail'","c":{},"d":[94,185,245,267,269],"e":true},"-":{"w":"'e-mail","s":"-mail","c":{},"d":[185],"e":true}},"d":[],"e":false},"m":{"w":"'m","s":"m","c":{"e":{"w":"'message'","s":"essage'","c":{},"d":[10],"e":true},"'":{"w":"'m'","s":"'","c":{},"d":[117],"e":true},"a":{"w":"'max","s":"ax","c":{},"d":[210,213,214],"e":true}},"d":[],"e":false},"l":{"w":"'l","s":"l","c":{"a":{"w":"'lax'","s":"ax'","c":{},"d":[8],"e":true},"o":{"w":"'login","s":"ogin","c":{"f":{"w":"'loginform'","s":"form'","c":{},"d":[139],"e":true}},"d":[223],"e":true}},"d":[],"e":false},"c":{"w":"'c","s":"c","c":{"l":{"w":"'clear'","s":"lear'","c":{},"d":[10,167,168],"e":true},"r":{"w":"'create'","s":"reate'","c":{},"d":[41],"e":true},"'":{"w":"'c'","s":"'","c":{},"d":[105],"e":true},"o":{"w":"'co","s":"o","c":{"u":{"w":"'could","s":"uld","c":{},"d":[211],"e":true},"n":{"w":"'confirm'","s":"nfirm'","c":{},"d":[260],"e":true}},"d":[],"e":false},"u":{"w":"'custom-id'","s":"ustom-id'","c":{},"d":[224],"e":true},"h":{"w":"'changes","s":"hanges","c":{},"d":[260],"e":true}},"d":[],"e":false},"w":{"w":"'wa","s":"wa","c":{"r":{"w":"'warning'","s":"rning'","c":{},"d":[68,220],"e":true},"s":{"w":"'was","s":"s","c":{},"d":[209],"e":true}},"d":[],"e":false},"h":{"w":"'h","s":"h","c":{"'":{"w":"'h'","s":"'","c":{},"d":[117],"e":true},"t":{"w":"'http","s":"ttp","c":{"s":{"w":"'https","s":"s","c":{},"d":[126],"e":true}},"d":[267],"e":true},"e":{"w":"'hello","s":"ello","c":{},"d":[267,269],"e":true}},"d":[],"e":false},"y":{"w":"'y","s":"y","c":{"o":{"w":"'you","s":"ou","c":{},"d":[210],"e":true},"u":{"w":"'yup'","s":"up'","c":{},"d":[267],"e":true}},"d":[],"e":false}},"d":[9,21,6,8,25,28,42,40,41,43,60,68,61,82,81,110,97,93,96,94,117,132,141,169,174,168,196,188,185,203,207,209,206,210,213,214,211,221,219,220,225,223,234,246,244,245,248,257,260,267,271,269],"e":true},"l":{"w":"l","s":"l","c":{"i":{"w":"li","s":"i","c":{"b":{"w":"lib","s":"b","c":{"r":{"w":"library","s":"rary","c":{},"d":[221],"e":true}},"d":[9,25,40,41,97,141,246,257],"e":true},"n":{"w":"link","s":"nk","c":{},"d":[38],"e":true},"g":{"w":"light","s":"ght","c":{"b":{"w":"lightblue","s":"blue","c":{},"d":[44],"e":true},"g":{"w":"lightgreen","s":"green","c":{},"d":[130],"e":true}},"d":[],"e":false},"t":{"w":"literal","s":"teral","c":{},"d":[47],"e":true},"m":{"w":"limit","s":"mit","c":{"e":{"w":"limiter","s":"er","c":{},"d":[117],"e":true}},"d":[117],"e":true},"k":{"w":"like","s":"ke","c":{},"d":[207],"e":true}},"d":[82,196],"e":true},"o":{"w":"lo","s":"o","c":{"g":{"w":"log","s":"g","c":{"i":{"w":"login","s":"in","c":{"s":{"w":"loginschema","s":"schema","c":{},"d":[9,25,60,97,139,223,246,247],"e":true},"f":{"w":"loginform","s":"form","c":{},"d":[24,25,60,62,139,224,223],"e":true},"e":{"w":"logine","s":"e","c":{"r":{"w":"loginerrors","s":"rrors","c":{},"d":[24],"e":true},"n":{"w":"loginenhance","s":"nhance","c":{},"d":[24],"e":true}},"d":[],"e":false}},"d":[9,225,223],"e":true},"g":{"w":"logged","s":"ged","c":{},"d":[60,61],"e":true}},"d":[156,209,210,250,262],"e":true},"c":{"w":"loca","s":"ca","c":{"l":{"w":"local","s":"l","c":{"s":{"w":"locals","s":"s","c":{},"d":[60,61,220],"e":true}},"d":[16],"e":true},"t":{"w":"location","s":"tion","c":{},"d":[205],"e":true}},"d":[],"e":false},"a":{"w":"load","s":"ad","c":{},"d":[41,60,94,126,141,187,210,224,223,232,244,271,269],"e":true}},"d":[],"e":false},"a":{"w":"la","s":"a","c":{"n":{"w":"lang","s":"ng","c":{},"d":[20,21,18,19,25,29,24,27,26,28,41,60,61,81,110,132,141,156,165,176,184,213,214,220,225,223,232,233,246,245,257,262,274,273,277,276],"e":true},"b":{"w":"label","s":"bel","c":{},"d":[24,26,28,41,73,110,125,126,132,123,184,245,273],"e":true},"t":{"w":"late","s":"te","c":{"s":{"w":"latest","s":"st","c":{},"d":[38,265],"e":true},"r":{"w":"later","s":"r","c":{},"d":[39],"e":true}},"d":[],"e":false},"s":{"w":"last","s":"st","c":{"s":{"w":"laststep","s":"step","c":{},"d":[203],"e":true}},"d":[169],"e":true}},"d":[],"e":false},"e":{"w":"le","s":"e","c":{"t":{"w":"let","s":"t","c":{"'":{"w":"let's","s":"'s","c":{},"d":[39],"e":true}},"d":[16,20,15,21,17,14,13,18,19,25,24,27,26,29,28,41,60,61,73,81,110,97,165,203,206,213,214,220,225,223,245,273],"e":true},"a":{"w":"lea","s":"a","c":{"v":{"w":"leave","s":"ve","c":{},"d":[68,260],"e":true},"s":{"w":"least","s":"st","c":{},"d":[73,96],"e":true}},"d":[],"e":false},"n":{"w":"length","s":"ngth","c":{},"d":[82,96,165,196],"e":true}},"d":[],"e":false}},"d":[],"e":false},"e":{"w":"e","s":"e","c":{"r":{"w":"error","s":"rror","c":{"s":{"w":"errors","s":"s","c":{"e":{"w":"errorselector","s":"elector","c":{},"d":[10,68,188],"e":true},"t":{"w":"errorstatus","s":"tatus","c":{},"d":[5],"e":true}},"d":[3,4,18,19,24,25,26,29,28,41,60,61,62,70,88,90,81,110,108,96,98,127,147,169,166,174,172,168,184,189,188,187,209,206,213,214,225,223,232,233,237,235,247,246,245,248,257,277],"e":true},"m":{"w":"errormessage","s":"message","c":{},"d":[70],"e":true}},"d":[10,5,42,41,43,70,82,114,117,172,183,196,193,208,220,234,244,271],"e":true},"m":{"w":"em","s":"m","c":{"a":{"w":"email","s":"ail","c":{},"d":[9,6,1,25,39,41,73,94,165,189,197,185,219,223,244,245,267,269,273],"e":true},"p":{"w":"empty","s":"pty","c":{},"d":[21,17,14,13,16,90,159],"e":true}},"d":[],"e":false},"x":{"w":"ex","s":"x","c":{"p":{"w":"exp","s":"p","c":{"o":{"w":"export","s":"ort","c":{},"d":[9,16,20,15,21,17,6,14,13,18,19,25,24,27,26,29,28,39,42,41,43,60,68,61,64,62,81,110,105,93,97,94,117,126,165,187,185,206,213,215,210,214,219,220,225,223,232,233,239,244,245,248,250,271,267,273,269],"e":true},"e":{"w":"expect","s":"ect","c":{"e":{"w":"expected","s":"ed","c":{},"d":[250],"e":true}},"d":[104],"e":true},"l":{"w":"explicit","s":"licit","c":{},"d":[105,269],"e":true}},"d":[],"e":false},"t":{"w":"ext","s":"t","c":{"r":{"w":"extra","s":"ra","c":{"c":{"w":"extract","s":"ct","c":{},"d":[16,10],"e":true}},"d":[61,62,206],"e":true},"e":{"w":"exte","s":"e","c":{"n":{"w":"extend","s":"nd","c":{"s":{"w":"extends","s":"s","c":{},"d":[10,29,28,68,110],"e":true}},"d":[40],"e":true},"r":{"w":"external","s":"rnal","c":{},"d":[246,245],"e":true}},"d":[],"e":false}},"d":[],"e":false},"a":{"w":"exa","s":"a","c":{"c":{"w":"exactly","s":"ctly","c":{},"d":[3],"e":true},"m":{"w":"example","s":"mple","c":{},"d":[39],"e":true}},"d":[],"e":false},"i":{"w":"exist","s":"ist","c":{"s":{"w":"exists","s":"s","c":{},"d":[185],"e":true}},"d":[78],"e":true}},"d":[],"e":false},"n":{"w":"en","s":"n","c":{"h":{"w":"enhance","s":"hance","c":{},"d":[21,25,30,24,26,41,60,61,62,70,73,81,114,106,110,96,98,156,173,172,167,169,168,177,183,176,188,193,203,205,207,209,202,206,208,213,214,221,224,223,232,235,243,247,246,245,255,257,262,260,277],"e":true},"u":{"w":"enum","s":"um","c":{},"d":[50,49,105,104],"e":true},"s":{"w":"ensure","s":"sure","c":{},"d":[73],"e":true},"d":{"w":"end","s":"d","c":{},"d":[81],"e":true},"t":{"w":"entries","s":"tries","c":{},"d":[202],"e":true},"c":{"w":"enctype","s":"ctype","c":{},"d":[213,214],"e":true}},"d":[],"e":false},"v":{"w":"eve","s":"ve","c":{"n":{"w":"even","s":"n","c":{"t":{"w":"event","s":"t","c":{"s":{"w":"events","s":"s","c":{},"d":[10],"e":true}},"d":[6,10,117,209,220],"e":true}},"d":[156,187,262],"e":true},"r":{"w":"every","s":"ry","c":{},"d":[117],"e":true}},"d":[],"e":false},"l":{"w":"el","s":"l","c":{"e":{"w":"element","s":"ement","c":{},"d":[10],"e":true},"s":{"w":"else","s":"se","c":{},"d":[42,43,203,209,245,248],"e":true}},"d":[],"e":false},"a":{"w":"each","s":"ach","c":{},"d":[24,30,26,44,82,196,232,233],"e":true},"-":{"w":"e-mail","s":"-mail","c":{},"d":[41,223,245,273],"e":true},"i":{"w":"either","s":"ither","c":{},"d":[49,81],"e":true},"d":{"w":"edit","s":"dit","c":{},"d":[245],"e":true}},"d":[43,213,214],"e":true},"z":{"w":"z","s":"z","c":{"o":{"w":"zod","s":"od","c":{"c":{"w":"zodclient","s":"client","c":{},"d":[1,213,214],"e":true},"v":{"w":"zodvalidation","s":"validation","c":{},"d":[81],"e":true},"e":{"w":"zodenum","s":"enum","c":{},"d":[105],"e":true}},"d":[9,7,1,39,42,41,43,60,61,64,62,90,80,111,108,94,97,98,160,173,172,187,185,203,210,215,219,220,223,232,234,246,244,247,245,248,250,249],"e":true}},"d":[9,21,7,1,25,39,49,50,47,80,81,105,140,147,152,159,197,194,195,210,213,214,223,232,234,233,244,250,267],"e":true},"b":{"w":"b","s":"b","c":{"o":{"w":"bo","s":"o","c":{"o":{"w":"boolean","s":"olean","c":{"p":{"w":"booleanproxy","s":"proxy","c":{},"d":[12,15,235],"e":true}},"d":[3,4,10,20,15,17,14,13,16,18,19,29,167,188,229,263,260],"e":true},"t":{"w":"both","s":"th","c":{},"d":[223],"e":true},"d":{"w":"body","s":"dy","c":{},"d":[260],"e":true}},"d":[],"e":false},"a":{"w":"ba","s":"a","c":{"s":{"w":"basics","s":"sics","c":{},"d":[10],"e":true},"c":{"w":"background-color","s":"ckground-color","c":{},"d":[44],"e":true}},"d":[],"e":false},"y":{"w":"by","s":"y","c":{"p":{"w":"bypass","s":"pass","c":{},"d":[3],"e":true}},"d":[3,61,156,262],"e":true},"i":{"w":"bind","s":"ind","c":{},"d":[21,24,26,29,28,41,73,88,110,165,166,189,184,193,213,214,225,223,232,233,237,245,248,273],"e":true},"u":{"w":"bu","s":"u","c":{"s":{"w":"business","s":"siness","c":{},"d":[25,64],"e":true},"t":{"w":"but","s":"t","c":{"t":{"w":"button","s":"ton","c":{},"d":[27,43,41,110,156,184,213,214,223,232,233,245,257,262,273],"e":true}},"d":[81,187,193],"e":true}},"d":[],"e":false},"r":{"w":"br","s":"r","c":{"o":{"w":"brown","s":"own","c":{},"d":[44],"e":true}},"d":[26,28,41,110,232,245],"e":true},"l":{"w":"block","s":"lock","c":{},"d":[44],"e":true},"e":{"w":"be","s":"e","c":{"h":{"w":"behavior","s":"havior","c":{},"d":[224],"e":true}},"d":[41,49,73,78,104,96,98,174,187,202,219,250,260,269],"e":true}},"d":[82,105,196],"e":true},"c":{"w":"c","s":"c","c":{"o":{"w":"co","s":"o","c":{"n":{"w":"con","s":"n","c":{"s":{"w":"cons","s":"s","c":{"t":{"w":"const","s":"t","c":{"r":{"w":"constraints","s":"raints","c":{},"d":[4,18,24,26,29,28,41,78,81,110,165,167,166,237,245,277],"e":true}},"d":[21,9,16,20,7,15,17,6,14,13,18,19,1,25,24,27,29,28,39,42,40,41,43,49,50,47,60,61,64,62,70,90,80,81,114,110,105,106,108,94,97,96,98,117,126,140,142,147,139,141,156,152,159,173,172,165,167,169,168,177,183,176,197,184,188,194,187,195,193,185,203,205,207,209,202,206,208,210,213,214,215,218,221,219,220,224,225,223,232,234,233,237,235,239,247,243,246,244,245,248,250,249,255,257,262,263,260,267,271,269,273,277,276],"e":true},"o":{"w":"console","s":"ole","c":{},"d":[156,209,210,250,262],"e":true}},"d":[],"e":false},"v":{"w":"convert","s":"vert","c":{},"d":[16],"e":true},"t":{"w":"cont","s":"t","c":{"e":{"w":"context","s":"ext","c":{},"d":[29,28,110],"e":true},"r":{"w":"control","s":"rol","c":{"l":{"w":"controller","s":"ler","c":{},"d":[201],"e":true}},"d":[73],"e":true}},"d":[],"e":false},"f":{"w":"confirm","s":"firm","c":{"p":{"w":"confirmpassword","s":"password","c":{},"d":[80,223,234],"e":true}},"d":[43,194,195,223,234],"e":true}},"d":[],"e":false},"e":{"w":"coercion","s":"ercion","c":{},"d":[3],"e":true},"o":{"w":"cookie","s":"okie","c":{"o":{"w":"cookieoptions","s":"options","c":{},"d":[8],"e":true},"p":{"w":"cookiepath","s":"path","c":{},"d":[10],"e":true},"n":{"w":"cookiename","s":"name","c":{},"d":[10],"e":true}},"d":[],"e":false},"m":{"w":"com","s":"m","c":{"'":{"w":"com'","s":"'","c":{},"d":[39],"e":true},"p":{"w":"company","s":"pany","c":{},"d":[73],"e":true}},"d":[38,126,244],"e":true},"l":{"w":"col","s":"l","c":{"o":{"w":"color","s":"or","c":{},"d":[44,41],"e":true},"l":{"w":"coll","s":"l","c":{"i":{"w":"collisions","s":"isions","c":{},"d":[39],"e":true},"a":{"w":"collaps","s":"aps","c":{"i":{"w":"collapsible","s":"ible","c":{},"d":[132,123],"e":true},"e":{"w":"collapsed","s":"ed","c":{},"d":[123],"e":true}},"d":[],"e":false}},"d":[],"e":false},"u":{"w":"column","s":"umn","c":{"s":{"w":"columns","s":"s","c":{},"d":[44],"e":true}},"d":[44],"e":true}},"d":[],"e":false},"u":{"w":"counts","s":"unts","c":{},"d":[117],"e":true},"d":{"w":"code","s":"de","c":{},"d":[219],"e":true}},"d":[],"e":false},"l":{"w":"cl","s":"l","c":{"i":{"w":"cli","s":"i","c":{"e":{"w":"client","s":"ent","c":{"v":{"w":"clientvalidationadapter","s":"validationadapter","c":{},"d":[11,10,167,168,243],"e":true},"-":{"w":"client-side","s":"-side","c":{},"d":[10,80,173,193,207],"e":true},"'":{"w":"client'","s":"'","c":{},"d":[10,27,28,61,70,81,142,141,225,223],"e":true}},"d":[273],"e":true},"c":{"w":"click","s":"ck","c":{},"d":[27,43],"e":true}},"d":[],"e":false},"e":{"w":"clear","s":"ear","c":{"o":{"w":"clearonsubmit","s":"onsubmit","c":{},"d":[10],"e":true}},"d":[27],"e":true},"a":{"w":"class","s":"ass","c":{},"d":[24,29,26,28,44,43,41,110,184,218,220,232,233,245,248],"e":true}},"d":[],"e":false},"a":{"w":"ca","s":"a","c":{"n":{"w":"can","s":"n","c":{"c":{"w":"cancel","s":"cel","c":{},"d":[10,201,204,206,248],"e":true},"n":{"w":"cannot","s":"not","c":{},"d":[78,104],"e":true}},"d":[98,173,187,224,269],"e":true},"l":{"w":"call","s":"ll","c":{"e":{"w":"called","s":"ed","c":{},"d":[140],"e":true}},"d":[117,246,245],"e":true},"s":{"w":"case","s":"se","c":{"s":{"w":"cases","s":"s","c":{},"d":[224],"e":true}},"d":[172],"e":true},"p":{"w":"capture","s":"pture","c":{},"d":[239],"e":true},"t":{"w":"catchall","s":"tchall","c":{},"d":[250],"e":true},"c":{"w":"cached","s":"ched","c":{},"d":[269],"e":true}},"d":[],"e":false},"h":{"w":"ch","s":"h","c":{"a":{"w":"cha","s":"a","c":{"n":{"w":"change","s":"nge","c":{"e":{"w":"changeevent","s":"event","c":{},"d":[10],"e":true},"d":{"w":"changed","s":"d","c":{},"d":[209],"e":true}},"d":[],"e":false},"r":{"w":"characters","s":"racters","c":{"'":{"w":"characters'","s":"'","c":{},"d":[96],"e":true}},"d":[73],"e":true}},"d":[],"e":false},"e":{"w":"check","s":"eck","c":{"b":{"w":"checkbox","s":"box","c":{},"d":[29],"e":true},"e":{"w":"checked","s":"ed","c":{},"d":[29],"e":true},"i":{"w":"checking","s":"ing","c":{},"d":[172,248],"e":true},"'":{"w":"check'","s":"'","c":{},"d":[248],"e":true},"u":{"w":"checkusername","s":"username","c":{},"d":[248],"e":true}},"d":[106,156,248,262],"e":true}},"d":[],"e":false},"r":{"w":"cr","s":"r","c":{"e":{"w":"create","s":"eate","c":{"d":{"w":"created","s":"d","c":{"'":{"w":"created'","s":"'","c":{},"d":[219],"e":true}},"d":[42,43],"e":true}},"d":[38,42,43,265],"e":true},"u":{"w":"crudschema","s":"udschema","c":{},"d":[42,40,43,41],"e":true}},"d":[],"e":false},"s":{"w":"css","s":"ss","c":{},"d":[38],"e":true},"u":{"w":"cu","s":"u","c":{"s":{"w":"custom","s":"stom","c":{"e":{"w":"customer'","s":"er'","c":{},"d":[39],"e":true},"v":{"w":"customvalidity","s":"validity","c":{},"d":[167,188,193],"e":true},"s":{"w":"customschema","s":"schema","c":{},"d":[203],"e":true}},"d":[172,211],"e":true},"r":{"w":"current","s":"rrent","c":{"u":{"w":"currentuser","s":"user","c":{},"d":[60,61],"e":true},"l":{"w":"currently","s":"ly","c":{},"d":[60,61],"e":true},"t":{"w":"currenttarget","s":"target","c":{},"d":[213,214],"e":true}},"d":[],"e":false}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"o","s":"o","c":{"r":{"w":"or","s":"r","c":{"g":{"w":"org","s":"g","c":{},"d":[267],"e":true}},"d":[3,173,165],"e":true},"b":{"w":"object","s":"bject","c":{"s":{"w":"objects","s":"s","c":{},"d":[3],"e":true}},"d":[21,9,20,7,18,19,1,25,39,49,50,47,80,81,105,140,147,152,159,197,194,195,202,210,213,214,223,232,234,233,235,244,250,267],"e":true},"u":{"w":"out","s":"ut","c":{"p":{"w":"output","s":"put","c":{},"d":[3],"e":true},"s":{"w":"outside","s":"side","c":{},"d":[269],"e":true}},"d":[68],"e":true},"p":{"w":"option","s":"ption","c":{"a":{"w":"optional","s":"al","c":{},"d":[21,40,105,165,267],"e":true},"s":{"w":"options","s":"s","c":{},"d":[11,6,16,4,15,2,17,14,13,5,10,96,169],"e":true}},"d":[78,173,172,187,224],"e":true},"f":{"w":"of","s":"f","c":{"f":{"w":"off","s":"f","c":{},"d":[187],"e":true}},"d":[16,12,80,81,106,156,169,234,235,262],"e":true},"t":{"w":"other","s":"ther","c":{"s":{"w":"others","s":"s","c":{},"d":[12],"e":true}},"d":[235,250],"e":true},"n":{"w":"on","s":"n","c":{"s":{"w":"onsubmit","s":"submit","c":{},"d":[10,62,203,201,202,248],"e":true},"r":{"w":"onresult","s":"result","c":{},"d":[10,205,204],"e":true},"u":{"w":"onupdate","s":"update","c":{"d":{"w":"onupdated","s":"d","c":{},"d":[10,207,221,248],"e":true}},"d":[10,61,206,246,245],"e":true},"c":{"w":"onchange","s":"change","c":{},"d":[10,209],"e":true},"e":{"w":"onerror","s":"error","c":{},"d":[10,70,114,183,208],"e":true},"l":{"w":"only","s":"ly","c":{},"d":[140,172,202],"e":true}},"d":[12,27,43,183,213,214,235,248],"e":true},"v":{"w":"over","s":"ver","c":{"r":{"w":"override","s":"ride","c":{},"d":[3],"e":true},"w":{"w":"overwrite","s":"write","c":{},"d":[5],"e":true},"f":{"w":"overflow-x","s":"flow-x","c":{},"d":[44],"e":true}},"d":[],"e":false},"k":{"w":"ok","s":"k","c":{},"d":[211,234],"e":true}},"d":[],"e":false},"r":{"w":"r","s":"r","c":{"e":{"w":"re","s":"e","c":{"m":{"w":"remove","s":"move","c":{},"d":[3],"e":true},"t":{"w":"return","s":"turn","c":{"s":{"w":"returns","s":"s","c":{},"d":[7,6,140,219,235],"e":true},"e":{"w":"returned","s":"ed","c":{},"d":[41,206],"e":true},"i":{"w":"returning","s":"ing","c":{},"d":[141,211],"e":true}},"d":[12,9,6,42,43,41,60,61,68,62,80,94,96,126,139,185,202,206,211,210,215,221,219,223,232,229,235,244,248,250,263,260,271],"e":true},"q":{"w":"requ","s":"qu","c":{"e":{"w":"request","s":"est","c":{"e":{"w":"requestevent","s":"event","c":{},"d":[2],"e":true}},"d":[9,2,42,43,61,64,62,80,185,187,215,210,219,223,244,248,250,249],"e":true},"i":{"w":"require","s":"ire","c":{"d":{"w":"required","s":"d","c":{},"d":[18,19,10,105,173,172,165,193,223,267],"e":true},"s":{"w":"requires","s":"s","c":{},"d":[269],"e":true}},"d":[],"e":false}},"d":[],"e":false},"s":{"w":"res","s":"s","c":{"e":{"w":"reset","s":"et","c":{"f":{"w":"resetform","s":"form","c":{},"d":[10,41,177,223],"e":true}},"d":[177],"e":true},"u":{"w":"result","s":"ult","c":{"2":{"w":"result2","s":"2","c":{},"d":[173],"e":true}},"d":[10,61,70,114,173,205,204,206,208,246,245],"e":true},"t":{"w":"rest","s":"t","c":{"p":{"w":"restprops","s":"props","c":{},"d":[26,29,28,110],"e":true},"o":{"w":"restore","s":"ore","c":{},"d":[239],"e":true}},"d":[],"e":false},"p":{"w":"response","s":"ponse","c":{},"d":[126,260],"e":true},"o":{"w":"resolve","s":"olve","c":{},"d":[260],"e":true}},"d":[],"e":false},"c":{"w":"record","s":"cord","c":{},"d":[10,29,28,68,110],"e":true},"a":{"w":"rea","s":"a","c":{"d":{"w":"read","s":"d","c":{"o":{"w":"readonly","s":"only","c":{},"d":[10],"e":true}},"d":[41],"e":true},"l":{"w":"real","s":"l","c":{"-":{"w":"real-time","s":"-time","c":{},"d":[193],"e":true}},"d":[73],"e":true},"c":{"w":"reactive","s":"ctive","c":{},"d":[156,262],"e":true}},"d":[],"e":false},"g":{"w":"reg","s":"g","c":{"i":{"w":"register","s":"ister","c":{"f":{"w":"registerform","s":"form","c":{},"d":[24,25,139,223],"e":true},"e":{"w":"registere","s":"e","c":{"r":{"w":"registererrors","s":"rrors","c":{},"d":[24,223],"e":true},"n":{"w":"registerenhance","s":"nhance","c":{},"d":[24,223],"e":true}},"d":[],"e":false},"s":{"w":"registerschema","s":"schema","c":{},"d":[139,223],"e":true},"m":{"w":"registermessage","s":"message","c":{},"d":[223],"e":true}},"d":[223],"e":true},"e":{"w":"regex","s":"ex","c":{"p":{"w":"regexp","s":"p","c":{},"d":[165],"e":true}},"d":[39],"e":true},"a":{"w":"regardless","s":"ardless","c":{},"d":[80],"e":true}},"d":[],"e":false},"l":{"w":"rel","s":"l","c":{},"d":[38],"e":true},"d":{"w":"red","s":"d","c":{"i":{"w":"redirect","s":"irect","c":{},"d":[41,43],"e":true}},"d":[44,41],"e":true},"n":{"w":"ren","s":"n","c":{"a":{"w":"rename","s":"ame","c":{},"d":[61],"e":true},"d":{"w":"render","s":"der","c":{},"d":[183],"e":true}},"d":[],"e":false},"f":{"w":"ref","s":"f","c":{"i":{"w":"refine","s":"ine","c":{"d":{"w":"refined","s":"d","c":{},"d":[194,195],"e":true}},"d":[80,194,195,210,213,214,234],"e":true}},"d":[123],"e":true},"p":{"w":"replace","s":"place","c":{},"d":[271],"e":true}},"d":[],"e":false},"u":{"w":"run","s":"un","c":{},"d":[32],"e":true},"a":{"w":"ra","s":"a","c":{"n":{"w":"random","s":"ndom","c":{},"d":[39],"e":true},"t":{"w":"rate","s":"te","c":{"l":{"w":"ratelimiter","s":"limiter","c":{},"d":[117],"e":true}},"d":[117],"e":true},"w":{"w":"raw","s":"w","c":{},"d":[123],"e":true},"r":{"w":"rare","s":"re","c":{},"d":[187],"e":true}},"d":[],"e":false},"i":{"w":"right","s":"ight","c":{},"d":[172],"e":true}},"d":[43],"e":true},"d":{"w":"d","s":"d","c":{"e":{"w":"de","s":"e","c":{"f":{"w":"def","s":"f","c":{"a":{"w":"default","s":"ault","c":{"s":{"w":"defaults","s":"s","c":{},"d":[11,3,7,68,94,98,140,246,247,269],"e":true},"v":{"w":"defaultvalues","s":"values","c":{},"d":[7,83,140],"e":true},"d":{"w":"defaultdata","s":"data","c":{},"d":[83],"e":true}},"d":[3,6,7,16,42,43,41,49,50,47,61,64,62,105,93,98,117,140,152,185,187,215,210,211,219,224,250,267,269],"e":true},"i":{"w":"define","s":"ine","c":{"c":{"w":"defineconfig","s":"config","c":{},"d":[93],"e":true},"d":{"w":"defined","s":"d","c":{},"d":[269],"e":true}},"d":[93,269,267],"e":true}},"d":[],"e":false},"p":{"w":"depends","s":"pends","c":{},"d":[12,235],"e":true},"c":{"w":"dec","s":"c","c":{"o":{"w":"deconstruct","s":"onstruct","c":{},"d":[18,19],"e":true},"l":{"w":"declare","s":"lare","c":{},"d":[220],"e":true}},"d":[],"e":false},"l":{"w":"del","s":"l","c":{"a":{"w":"delay","s":"ay","c":{"m":{"w":"delayms","s":"ms","c":{},"d":[10,68,255],"e":true},"e":{"w":"delayed","s":"ed","c":{},"d":[43,41,104,255,257],"e":true}},"d":[44,43],"e":true},"e":{"w":"delete","s":"ete","c":{},"d":[43],"e":true}},"d":[],"e":false},"v":{"w":"dev","s":"v","c":{"d":{"w":"devdependencies","s":"dependencies","c":{},"d":[77],"e":true}},"d":[32,39],"e":true},"s":{"w":"description","s":"scription","c":{},"d":[73],"e":true},"b":{"w":"debounce","s":"bounce","c":{},"d":[248],"e":true}},"d":[],"e":false},"a":{"w":"da","s":"a","c":{"t":{"w":"dat","s":"t","c":{"e":{"w":"date","s":"e","c":{"p":{"w":"dateproxy","s":"proxy","c":{},"d":[16,21,12,111,160,237,235],"e":true}},"d":[21,16,166,165,237],"e":true},"a":{"w":"data","s":"a","c":{"t":{"w":"datatype","s":"type","c":{},"d":[10,202,232],"e":true},"b":{"w":"database","s":"base","c":{},"d":[39,271],"e":true},"-":{"w":"data-invalid","s":"-invalid","c":{},"d":[88,188,232],"e":true}},"d":[11,16,20,4,15,21,17,3,2,14,13,6,18,19,10,25,24,27,28,44,42,43,41,60,61,62,70,78,80,81,114,106,110,97,96,98,130,128,129,125,127,132,126,123,140,142,147,156,173,172,165,167,169,168,177,183,176,184,188,194,187,193,195,185,203,205,207,209,202,206,208,213,210,214,218,221,219,220,224,225,223,234,232,233,235,239,243,246,245,248,250,255,257,262,263,260,274,273,277],"e":true}},"d":[],"e":false},"n":{"w":"danger","s":"nger","c":{},"d":[44,43],"e":true}},"d":[],"e":false},"i":{"w":"di","s":"i","c":{"s":{"w":"dis","s":"s","c":{"a":{"w":"disable","s":"able","c":{"d":{"w":"disabled","s":"d","c":{},"d":[156,262],"e":true}},"d":[10,78],"e":true},"p":{"w":"display","s":"play","c":{},"d":[44,123,193,221],"e":true}},"d":[],"e":false},"v":{"w":"div","s":"v","c":{},"d":[27,44,184,218,220,232,233,248,273],"e":true},"d":{"w":"didn't","s":"dn't","c":{},"d":[194,195],"e":true},"f":{"w":"different","s":"fferent","c":{},"d":[223],"e":true}},"d":[],"e":false},"u":{"w":"du","s":"u","c":{"p":{"w":"duplicateid","s":"plicateid","c":{},"d":[10],"e":true},"m":{"w":"dummyjson","s":"mmyjson","c":{},"d":[126],"e":true}},"d":[],"e":false},"o":{"w":"do","s":"o","c":{"e":{"w":"doesn't","s":"esn't","c":{},"d":[80],"e":true},"n":{"w":"don't","s":"n't","c":{},"d":[234],"e":true}},"d":[62,61,207,206,210],"e":true},"b":{"w":"db","s":"b","c":{},"d":[185,271],"e":true},"r":{"w":"draft-07","s":"raft-07","c":{},"d":[267],"e":true}},"d":[39],"e":true},"t":{"w":"t","s":"t","c":{"s":{"w":"ts","s":"s","c":{},"d":[20,21,18,19,25,29,24,27,26,28,41,60,61,81,110,93,126,132,141,156,165,176,184,213,214,220,225,223,232,233,246,245,257,262,274,273,277,276],"e":true},"h":{"w":"th","s":"h","c":{"e":{"w":"the","s":"e","c":{"m":{"w":"them","s":"m","c":{"e":{"w":"theme","s":"e","c":{},"d":[130,123],"e":true}},"d":[187,223],"e":true},"n":{"w":"then","s":"n","c":{},"d":[126],"e":true}},"d":[12,16,3,18,19,1,41,68,61,62,70,73,78,81,104,106,98,117,140,156,173,172,165,169,183,206,211,210,215,221,219,224,235,246,245,262,269],"e":true},"i":{"w":"this","s":"is","c":{},"d":[3,78,81,211],"e":true},"r":{"w":"thr","s":"r","c":{"o":{"w":"throw","s":"ow","c":{},"d":[42,41,43,244],"e":true},"e":{"w":"three","s":"ee","c":{},"d":[235],"e":true}},"d":[],"e":false},"a":{"w":"that","s":"at","c":{"'":{"w":"that's","s":"'s","c":{},"d":[197],"e":true}},"d":[73],"e":true}},"d":[],"e":false},"y":{"w":"typ","s":"yp","c":{"e":{"w":"type","s":"e","c":{"s":{"w":"types","s":"s","c":{},"d":[21,28,41,60,61,206,220,225,223],"e":true},"o":{"w":"typeof","s":"of","c":{},"d":[6,1,25,39,68,97,96,202,220],"e":true},"d":{"w":"typed","s":"d","c":{},"d":[250],"e":true},"b":{"w":"typebox'","s":"box'","c":{},"d":[267],"e":true}},"d":[10,21,12,1,8,24,25,29,26,28,39,41,60,68,61,70,73,78,81,110,97,94,96,165,166,189,193,205,202,206,213,214,220,225,223,232,237,235,245,260,267,269,273],"e":true},"i":{"w":"typicode","s":"icode","c":{},"d":[244],"e":true}},"d":[],"e":false},"a":{"w":"ta","s":"a","c":{"i":{"w":"taint","s":"int","c":{"e":{"w":"tainted","s":"ed","c":{"m":{"w":"taintedmessage","s":"message","c":{},"d":[10,260],"e":true},"'":{"w":"tainted'","s":"'","c":{},"d":[156,262],"e":true},"d":{"w":"tainteddata","s":"data","c":{},"d":[202],"e":true}},"d":[18,156,202,262],"e":true},"i":{"w":"tainting","s":"ing","c":{},"d":[235],"e":true}},"d":[20,15,17,16,14,13,18,19,10,27,172,229,235,263],"e":true},"g":{"w":"tag","s":"g","c":{"s":{"w":"tags","s":"s","c":{},"d":[7,30,26,81,94,140,142,147,194,195,185,232,234,233],"e":true},"n":{"w":"tagname","s":"name","c":{},"d":[81],"e":true}},"d":[81,185],"e":true},"r":{"w":"target","s":"rget","c":{},"d":[10,209],"e":true},"k":{"w":"take","s":"ke","c":{"n":{"w":"taken","s":"n","c":{},"d":[174,248],"e":true}},"d":[224],"e":true}},"d":[],"e":false},"r":{"w":"tr","s":"r","c":{"u":{"w":"true","s":"ue","c":{"s":{"w":"truestringvalue","s":"stringvalue","c":{},"d":[15],"e":true}},"d":[10,3,47,90,108,93,98,123,159,173,165,172,177,188,193,187,223,243,246,247,245,248,249],"e":true},"i":{"w":"trigger","s":"igger","c":{},"d":[173,260],"e":true}},"d":[],"e":false},"o":{"w":"to","s":"o","c":{"w":{"w":"towards","s":"wards","c":{},"d":[117],"e":true},"s":{"w":"tostring","s":"string","c":{},"d":[166,237],"e":true},"o":{"w":"too","s":"o","c":{},"d":[197],"e":true},"a":{"w":"toast","s":"ast","c":{},"d":[207,221],"e":true},"p":{"w":"top-level","s":"p-level","c":{},"d":[202],"e":true},"d":{"w":"todo","s":"do","c":{},"d":[210,223,246,245],"e":true}},"d":[16,3,61,73,90,78,104,117,173,172,174,169,187,202,219,235,260,267],"e":true},"i":{"w":"ti","s":"i","c":{"m":{"w":"time","s":"me","c":{"o":{"w":"timeout","s":"out","c":{"m":{"w":"timeoutms","s":"ms","c":{},"d":[10,255],"e":true}},"d":[104,255],"e":true}},"d":[16],"e":true},"t":{"w":"title","s":"tle","c":{},"d":[260],"e":true}},"d":[],"e":false},"e":{"w":"te","s":"e","c":{"x":{"w":"text","s":"xt","c":{"f":{"w":"textfield","s":"field","c":{},"d":[30,28],"e":true},"i":{"w":"textinput","s":"input","c":{},"d":[26,110],"e":true}},"d":[8,24,25,26,28,68,110,97,193,221,220,219,273],"e":true},"s":{"w":"test","s":"st","c":{},"d":[93,187],"e":true}},"d":[],"e":false},"w":{"w":"two","s":"wo","c":{},"d":[96],"e":true},"u":{"w":"turn","s":"urn","c":{},"d":[187],"e":true}},"d":[11,4,6,10,2,3,1,5,29,28,68,81,110],"e":true},"v":{"w":"v","s":"v","c":{"a":{"w":"val","s":"al","c":{"i":{"w":"vali","s":"i","c":{"d":{"w":"valid","s":"d","c":{"a":{"w":"validat","s":"at","c":{"i":{"w":"validation","s":"ion","c":{"a":{"w":"validationadapter","s":"adapter","c":{},"d":[2,10,1],"e":true},"m":{"w":"validationmethod","s":"method","c":{},"d":[10,167,170],"e":true}},"d":[10,80,173,193,187,245],"e":true},"e":{"w":"validate","s":"e","c":{"d":{"w":"validated","s":"d","c":{},"d":[97,98],"e":true},"f":{"w":"validateform","s":"form","c":{},"d":[173,167,247],"e":true}},"d":[3,81,172,173,167,169,215],"e":true},"o":{"w":"validator","s":"or","c":{"s":{"w":"validators","s":"s","c":{},"d":[10,96,98,173,172,167,169,168,193,203,201,213,214,243,246,247,245],"e":true}},"d":[165],"e":true}},"d":[],"e":false}},"d":[3,4,9,6,42,43,61,62,80,173,185,207,206,211,215,210,219,223,246,245,248,250],"e":true},"b":{"w":"valibot","s":"bot","c":{"c":{"w":"valibotclient","s":"client","c":{},"d":[96,168],"e":true}},"d":[169],"e":true}},"d":[],"e":false},"u":{"w":"value","s":"ue","c":{"s":{"w":"values","s":"s","c":{},"d":[3,19,41,98,269],"e":true},"e":{"w":"valueerrors","s":"errors","c":{},"d":[19],"e":true}},"d":[21,18,10,24,26,29,28,41,73,88,81,110,165,172,166,189,184,193,225,223,232,233,237,245,248,273],"e":true}},"d":[],"e":false},"e":{"w":"verify","s":"erify","c":{},"d":[9],"e":true},"o":{"w":"void","s":"oid","c":{},"d":[10,207,201,204,206,208],"e":true},"s":{"w":"vscode","s":"scode","c":{},"d":[130],"e":true},"i":{"w":"vine","s":"ine","c":{"j":{"w":"vinejs","s":"js","c":{},"d":[267],"e":true},"'":{"w":"vine'","s":"'","c":{},"d":[267],"e":true}},"d":[267],"e":true}},"d":[],"e":false},"m":{"w":"m","s":"m","c":{"e":{"w":"me","s":"e","c":{"s":{"w":"message","s":"ssage","c":{"'":{"w":"message'","s":"'","c":{},"d":[8],"e":true},"s":{"w":"messages","s":"s","c":{},"d":[82,196],"e":true}},"d":[6,4,8,10,25,42,41,43,68,61,70,82,80,114,97,195,207,206,208,210,211,213,214,218,221,219,220,223,234,245,277],"e":true},"t":{"w":"method","s":"thod","c":{},"d":[25,30,26,41,73,110,176,184,213,214,225,223,232,233,245,257,273],"e":true}},"d":[],"e":false},"i":{"w":"min","s":"in","c":{"l":{"w":"minlength","s":"length","c":{},"d":[165,267],"e":true},"i":{"w":"minimum","s":"imum","c":{},"d":[165],"e":true}},"d":[9,7,1,39,80,81,140,165,166,197,194,195,223,232,233,237,244,250],"e":true},"u":{"w":"mu","s":"u","c":{"l":{"w":"multip","s":"ltip","c":{"l":{"w":"multiple","s":"le","c":{"s":{"w":"multiplesubmits","s":"submits","c":{},"d":[10],"e":true}},"d":[3,214],"e":true},"a":{"w":"multipart","s":"art","c":{},"d":[213,214],"e":true}},"d":[],"e":false},"s":{"w":"must","s":"st","c":{},"d":[96],"e":true}},"d":[],"e":false},"a":{"w":"ma","s":"a","c":{"y":{"w":"may","s":"y","c":{"b":{"w":"maybepromise","s":"bepromise","c":{},"d":[10],"e":true}},"d":[260],"e":true},"t":{"w":"mat","s":"t","c":{"h":{"w":"math","s":"h","c":{},"d":[39],"e":true},"c":{"w":"match","s":"ch","c":{},"d":[80,194,195,234],"e":true}},"d":[],"e":false},"r":{"w":"margin-b","s":"rgin-b","c":{"o":{"w":"margin-bottom","s":"ottom","c":{},"d":[44],"e":true},"l":{"w":"margin-block","s":"lock","c":{},"d":[44],"e":true}},"d":[],"e":false},"x":{"w":"max","s":"x","c":{"l":{"w":"maxlength","s":"length","c":{},"d":[165],"e":true},"i":{"w":"maximum","s":"imum","c":{},"d":[165],"e":true}},"d":[147,165,194,195,233,237],"e":true},"k":{"w":"make","s":"ke","c":{},"d":[156,262],"e":true},"d":{"w":"made","s":"de","c":{},"d":[260],"e":true}},"d":[],"e":false},"o":{"w":"mo","s":"o","c":{"d":{"w":"mod","s":"d","c":{"u":{"w":"module","s":"ule","c":{},"d":[10,29,28,70,110],"e":true},"a":{"w":"modalstore","s":"alstore","c":{},"d":[260],"e":true}},"d":[],"e":false},"v":{"w":"moving","s":"ving","c":{},"d":[169],"e":true},"r":{"w":"more","s":"re","c":{},"d":[207],"e":true}},"d":[],"e":false},"y":{"w":"mysuperform","s":"ysuperform","c":{},"d":[68],"e":true}},"d":[11,4,6,10,2,1,5,68],"e":true},"p":{"w":"p","s":"p","c":{"a":{"w":"pa","s":"a","c":{"s":{"w":"pass","s":"ss","c":{"w":{"w":"password","s":"word","c":{"s":{"w":"passwords","s":"s","c":{},"d":[80,194,195,234],"e":true}},"d":[9,25,73,80,194,195,223,234],"e":true},"i":{"w":"passing","s":"ing","c":{},"d":[156,262],"e":true}},"d":[],"e":false},"r":{"w":"par","s":"r","c":{"t":{"w":"part","s":"t","c":{"i":{"w":"partial","s":"ial","c":{"l":{"w":"partially","s":"ly","c":{},"d":[173],"e":true},"s":{"w":"partialschema","s":"schema","c":{},"d":[173,169],"e":true}},"d":[11,10,2,98],"e":true}},"d":[16,106,156,262],"e":true},"a":{"w":"param","s":"am","c":{"e":{"w":"parameter","s":"eter","c":{"s":{"w":"parameters","s":"s","c":{},"d":[10,68],"e":true}},"d":[68,220],"e":true},"s":{"w":"params","s":"s","c":{},"d":[41,68,244,271],"e":true}},"d":[],"e":false},"s":{"w":"parse","s":"se","c":{"d":{"w":"parsed","s":"d","c":{},"d":[104],"e":true},"i":{"w":"parseint","s":"int","c":{},"d":[244],"e":true}},"d":[],"e":false}},"d":[],"e":false},"g":{"w":"page","s":"ge","c":{"d":{"w":"pagedata","s":"data","c":{},"d":[21,10,28,41,60,61,206,220,225,223],"e":true}},"d":[41,126,132,183,220,245],"e":true},"t":{"w":"pat","s":"t","c":{"h":{"w":"path","s":"h","c":{"s":{"w":"paths","s":"s","c":{},"d":[10,209],"e":true}},"d":[18,19,10,28,82,196,195,209,234],"e":true},"t":{"w":"pattern","s":"tern","c":{},"d":[165],"e":true}},"d":[],"e":false}},"d":[],"e":false},"r":{"w":"pr","s":"r","c":{"e":{"w":"pre","s":"e","c":{"s":{"w":"preserved","s":"served","c":{},"d":[3],"e":true},"p":{"w":"preprocessed","s":"processed","c":{},"d":[3],"e":true},"v":{"w":"prevent","s":"vent","c":{"d":{"w":"preventdefault","s":"default","c":{},"d":[43],"e":true}},"d":[235],"e":true},"f":{"w":"preferred","s":"ferred","c":{},"d":[73],"e":true},"c":{"w":"precedence","s":"cedence","c":{},"d":[224],"e":true}},"d":[],"e":false},"i":{"w":"primitives","s":"imitives","c":{},"d":[12,39,235],"e":true},"o":{"w":"pro","s":"o","c":{"x":{"w":"prox","s":"x","c":{"y":{"w":"proxy","s":"y","c":{"d":{"w":"proxydate","s":"date","c":{},"d":[166,237],"e":true}},"d":[16,20,15,17,14,13,159],"e":true},"i":{"w":"proxies","s":"ies","c":{},"d":[12],"e":true}},"d":[],"e":false},"m":{"w":"promise","s":"mise","c":{"p":{"w":"promiseproduct","s":"product","c":{},"d":[126],"e":true}},"d":[10,2,43,260],"e":true},"d":{"w":"product","s":"duct","c":{"s":{"w":"products","s":"s","c":{},"d":[126],"e":true}},"d":[126],"e":true},"f":{"w":"profile","s":"file","c":{},"d":[142],"e":true},"g":{"w":"programmatic","s":"grammatic","c":{},"d":[209],"e":true},"c":{"w":"process","s":"cess","c":{},"d":[211,215],"e":true},"p":{"w":"properties","s":"perties","c":{},"d":[267],"e":true}},"d":[],"e":false}},"d":[],"e":false},"o":{"w":"po","s":"o","c":{"s":{"w":"pos","s":"s","c":{"t":{"w":"post","s":"t","c":{"e":{"w":"posted","s":"ed","c":{},"d":[4,3,80,187,202],"e":true}},"d":[9,25,30,26,41,73,104,110,176,184,185,207,202,213,214,225,223,232,233,245,257,273],"e":true},"i":{"w":"positive","s":"itive","c":{},"d":[47,244],"e":true}},"d":[],"e":false},"w":{"w":"powerful","s":"werful","c":{},"d":[94],"e":true},"p":{"w":"populated","s":"pulated","c":{},"d":[187],"e":true}},"d":[],"e":false},"l":{"w":"pl","s":"l","c":{"e":{"w":"please'","s":"ease'","c":{},"d":[6,219],"e":true},"u":{"w":"plugins","s":"ugins","c":{},"d":[93],"e":true},"a":{"w":"platform","s":"atform","c":{},"d":[220],"e":true}},"d":[],"e":false},"n":{"w":"pn","s":"n","c":{"p":{"w":"pnpm","s":"pm","c":{},"d":[32,38,265],"e":true},"g":{"w":"png","s":"g","c":{},"d":[213,214],"e":true}},"d":[],"e":false},"u":{"w":"push","s":"ush","c":{},"d":[42,43],"e":true},"i":{"w":"pick","s":"ick","c":{},"d":[248],"e":true}},"d":[60,61],"e":true},"n":{"w":"n","s":"n","c":{"u":{"w":"nu","s":"u","c":{"l":{"w":"null","s":"ll","c":{"a":{"w":"nullable","s":"able","c":{},"d":[49,165],"e":true},"i":{"w":"nullish","s":"ish","c":{},"d":[165],"e":true}},"d":[11,2,41],"e":true},"m":{"w":"num","s":"m","c":{"e":{"w":"numericrange","s":"ericrange","c":{},"d":[6],"e":true},"b":{"w":"number","s":"ber","c":{"p":{"w":"numberproxy","s":"proxy","c":{},"d":[12,14,235],"e":true}},"d":[10,25,49,47,81,152,159,165,232,235,243,244,250],"e":true}},"d":[159],"e":true}},"d":[],"e":false},"e":{"w":"ne","s":"e","c":{"s":{"w":"nested","s":"sted","c":{},"d":[4,1,172],"e":true},"w":{"w":"new","s":"w","c":{"i":{"w":"newid","s":"id","c":{},"d":[219],"e":true}},"d":[43,117,229,263,260],"e":true},"e":{"w":"need","s":"ed","c":{"e":{"w":"needed","s":"ed","c":{},"d":[68],"e":true},"s":{"w":"needs","s":"s","c":{},"d":[174],"e":true}},"d":[61],"e":true},"a":{"w":"nearest","s":"arest","c":{},"d":[183],"e":true}},"d":[],"e":false},"a":{"w":"na","s":"a","c":{"m":{"w":"name","s":"me","c":{"p":{"w":"nameproxy","s":"proxy","c":{},"d":[20],"e":true},"'":{"w":"name'","s":"'","c":{},"d":[81,142,172],"e":true},"e":{"w":"nameerrors","s":"errors","c":{},"d":[172],"e":true},"s":{"w":"namespace","s":"space","c":{},"d":[220],"e":true}},"d":[7,21,1,24,30,27,29,26,28,39,44,43,41,60,61,73,88,81,110,94,96,98,140,142,156,165,166,197,189,184,193,185,213,214,225,223,232,229,233,237,247,244,245,248,250,262,263,267,269,273],"e":true},"t":{"w":"nativeenum","s":"tiveenum","c":{},"d":[105],"e":true}},"d":[],"e":false},"o":{"w":"no","s":"o","c":{"w":{"w":"now","s":"w","c":{"r":{"w":"nowrap","s":"rap","c":{},"d":[44],"e":true}},"d":[1,172],"e":true},"t":{"w":"not","s":"t","c":{"i":{"w":"notification","s":"ification","c":{},"d":[207],"e":true},"e":{"w":"note","s":"e","c":{},"d":[210],"e":true}},"d":[10,42,41,43,70,81,165,193,210,211,234,260],"e":true},"r":{"w":"normalize","s":"rmalize","c":{},"d":[38],"e":true},"v":{"w":"novalidationandconstraints","s":"validationandconstraints","c":{},"d":[78],"e":true}},"d":[3,68,78,187,223],"e":true},"p":{"w":"npm","s":"pm","c":{},"d":[32,38,265],"e":true}},"d":[],"e":false},"u":{"w":"u","s":"u","c":{"n":{"w":"un","s":"n","c":{"d":{"w":"unde","s":"de","c":{"f":{"w":"undefined","s":"fined","c":{},"d":[11,4,2,1,3,10,24,26,28,41,88,110,166,189,184,188,223,237,245,248],"e":true},"c":{"w":"undecided","s":"cided","c":{},"d":[152],"e":true}},"d":[],"e":false},"k":{"w":"unknown","s":"known","c":{},"d":[10,29,28,47,68,81,110,208,250],"e":true},"p":{"w":"unpkg","s":"pkg","c":{},"d":[38],"e":true},"i":{"w":"union","s":"ion","c":{},"d":[49,152],"e":true},"t":{"w":"until","s":"til","c":{},"d":[80],"e":true},"l":{"w":"unless","s":"less","c":{},"d":[187],"e":true}},"d":[],"e":false},"t":{"w":"utc","s":"tc","c":{},"d":[16],"e":true},"r":{"w":"url","s":"rl","c":{"s":{"w":"urlsearchparams","s":"searchparams","c":{},"d":[2],"e":true}},"d":[2,41],"e":true},"s":{"w":"us","s":"s","c":{"u":{"w":"usual","s":"ual","c":{"l":{"w":"usually","s":"ly","c":{},"d":[10],"e":true}},"d":[18,19,25,64],"e":true},"e":{"w":"use","s":"e","c":{"r":{"w":"user","s":"r","c":{"s":{"w":"users","s":"s","c":{"c":{"w":"userschema","s":"chema","c":{},"d":[39,40],"e":true},"'":{"w":"users'","s":"'","c":{},"d":[40,41,43],"e":true}},"d":[44,42,39,41,43,185,244,271],"e":true},"d":{"w":"userd","s":"d","c":{"b":{"w":"userdb","s":"b","c":{},"d":[39],"e":true},"a":{"w":"userdata","s":"ata","c":{},"d":[244],"e":true}},"d":[],"e":false},"i":{"w":"userid","s":"id","c":{},"d":[39,42,41,43],"e":true},"n":{"w":"username","s":"name","c":{"s":{"w":"usernameschema","s":"schema","c":{},"d":[248],"e":true}},"d":[60,61,174,248],"e":true},"'":{"w":"user'","s":"'","c":{},"d":[98,247],"e":true}},"d":[44,42,39,43,41,117,223,245,271],"e":true},"d":{"w":"used","s":"d","c":{},"d":[61],"e":true},"f":{"w":"useful","s":"ful","c":{},"d":[125],"e":true}},"d":[25,30,26,41,73,110,173,176,193,213,214,223,232,235,245,257],"e":true},"i":{"w":"using","s":"ing","c":{},"d":[221],"e":true}},"d":[],"e":false},"p":{"w":"up","s":"p","c":{"d":{"w":"updat","s":"dat","c":{"e":{"w":"update","s":"e","c":{"d":{"w":"updated","s":"d","c":{},"d":[42,43,209],"e":true}},"d":[42,43,81,173,172,229,247,246,245,263],"e":true},"i":{"w":"updating","s":"ing","c":{},"d":[172],"e":true}},"d":[],"e":false},"l":{"w":"upload","s":"load","c":{"e":{"w":"uploaded","s":"ed","c":{},"d":[210],"e":true}},"d":[210,213,214],"e":true}},"d":[],"e":false},"l":{"w":"ul","s":"l","c":{},"d":[82,196],"e":true}},"d":[42,41,43],"e":true},"w":{"w":"w","s":"w","c":{"r":{"w":"writable","s":"ritable","c":{},"d":[12,10,235],"e":true},"i":{"w":"wi","s":"i","c":{"l":{"w":"will","s":"ll","c":{},"d":[6,41,49,78,81,193,187,219,224,234],"e":true},"d":{"w":"width","s":"dth","c":{},"d":[44],"e":true},"t":{"w":"with","s":"th","c":{"o":{"w":"without","s":"out","c":{},"d":[172],"e":true},"'":{"w":"with'","s":"'","c":{},"d":[209],"e":true},"f":{"w":"withfiles","s":"files","c":{},"d":[215,211],"e":true}},"d":[62,61,140,156,165,172,187,206,210,211,219,224,234,246,245,262,271],"e":true}},"d":[],"e":false},"h":{"w":"wh","s":"h","c":{"o":{"w":"whole","s":"ole","c":{},"d":[18,19,106,156,235,262],"e":true},"i":{"w":"whi","s":"i","c":{"c":{"w":"which","s":"ch","c":{},"d":[1,140,187],"e":true},"t":{"w":"white-space","s":"te-space","c":{},"d":[44],"e":true}},"d":[],"e":false},"e":{"w":"whe","s":"e","c":{"n":{"w":"when","s":"n","c":{},"d":[140,169,211],"e":true},"r":{"w":"where","s":"re","c":{},"d":[185,271],"e":true}},"d":[],"e":false},"a":{"w":"what's","s":"at's","c":{},"d":[172],"e":true}},"d":[],"e":false},"a":{"w":"wa","s":"a","c":{"r":{"w":"warning","s":"rning","c":{"s":{"w":"warnings","s":"s","c":{},"d":[10,78],"e":true}},"d":[78],"e":true},"n":{"w":"want","s":"nt","c":{},"d":[260],"e":true}},"d":[],"e":false},"o":{"w":"wo","s":"o","c":{"r":{"w":"wor","s":"r","c":{"r":{"w":"worry","s":"ry","c":{},"d":[39],"e":true},"k":{"w":"work","s":"k","c":{"i":{"w":"working","s":"ing","c":{},"d":[41],"e":true},"s":{"w":"works","s":"s","c":{},"d":[156,262],"e":true}},"d":[81,173,172,234],"e":true},"l":{"w":"world","s":"ld","c":{},"d":[267,269],"e":true}},"d":[],"e":false},"n":{"w":"won't","s":"n't","c":{},"d":[81,98],"e":true}},"d":[],"e":false},"e":{"w":"we","s":"e","c":{"n":{"w":"went","s":"nt","c":{},"d":[221],"e":true},"l":{"w":"well'","s":"ll'","c":{},"d":[221],"e":true}},"d":[187],"e":true}},"d":[],"e":false},"j":{"w":"j","s":"j","c":{"s":{"w":"js","s":"s","c":{"'":{"w":"js'","s":"'","c":{},"d":[21,28,41,60,61,97,96,169,168,203,206,213,214,220,225,223,245],"e":true},"o":{"w":"json","s":"on","c":{"s":{"w":"jsonschema","s":"schema","c":{},"d":[3,267],"e":true},"d":{"w":"jsondata","s":"data","c":{},"d":[10,201,202],"e":true},"p":{"w":"jsonplaceholder","s":"placeholder","c":{},"d":[244],"e":true},"-":{"w":"json-schema","s":"-schema","c":{},"d":[267],"e":true}},"d":[3,126,244],"e":true}},"d":[93],"e":true},"o":{"w":"joi","s":"oi","c":{"n":{"w":"join","s":"n","c":{},"d":[82,196],"e":true}},"d":[267],"e":true},"u":{"w":"just","s":"ust","c":{},"d":[211,219],"e":true},"p":{"w":"jpeg","s":"peg","c":{},"d":[213,214],"e":true}},"d":[],"e":false},"k":{"w":"k","s":"k","c":{"e":{"w":"key","s":"ey","c":{"o":{"w":"keyof","s":"of","c":{},"d":[3],"e":true},"s":{"w":"keys","s":"s","c":{},"d":[250],"e":true}},"d":[202],"e":true},"i":{"w":"kit","s":"it","c":{"'":{"w":"kit'","s":"'","c":{},"d":[41,117,211,223,244,271],"e":true}},"d":[210,211],"e":true},"b":{"w":"kb","s":"b","c":{},"d":[210,213,214],"e":true}},"d":[],"e":false},"h":{"w":"h","s":"h","c":{"1":{"w":"h1","s":"1","c":{},"d":[245],"e":true},"2":{"w":"h2","s":"2","c":{},"d":[41],"e":true},"3":{"w":"h3","s":"3","c":{},"d":[44,41,223,245],"e":true},"4":{"w":"h4","s":"4","c":{},"d":[30,26],"e":true},"e":{"w":"here","s":"ere","c":{},"d":[9,18,19,68,61],"e":true},"a":{"w":"ha","s":"a","c":{"n":{"w":"handl","s":"ndl","c":{"i":{"w":"handling","s":"ing","c":{},"d":[10,70],"e":true},"e":{"w":"handles","s":"es","c":{},"d":[211],"e":true}},"d":[],"e":false},"s":{"w":"has","s":"s","c":{"-":{"w":"has-error'","s":"-error'","c":{},"d":[68],"e":true}},"d":[43,62],"e":true},"v":{"w":"have","s":"ve","c":{},"d":[210],"e":true}},"d":[],"e":false},"t":{"w":"ht","s":"t","c":{"m":{"w":"html","s":"ml","c":{"f":{"w":"htmlformelement","s":"formelement","c":{},"d":[10],"e":true},"p":{"w":"htmlpreelement","s":"preelement","c":{},"d":[123],"e":true}},"d":[],"e":false},"t":{"w":"https","s":"tps","c":{},"d":[39,38,244],"e":true}},"d":[],"e":false},"r":{"w":"hr","s":"r","c":{"e":{"w":"href","s":"ef","c":{},"d":[38,44],"e":true}},"d":[44,223],"e":true},"i":{"w":"hi","s":"i","c":{"d":{"w":"hidden","s":"dden","c":{},"d":[44,41,225],"e":true},"t":{"w":"hit","s":"t","c":{},"d":[117],"e":true}},"d":[],"e":false}},"d":[],"e":false},"g":{"w":"g","s":"g","c":{"e":{"w":"ge","s":"e","c":{"t":{"w":"get","s":"t","c":{"t":{"w":"getting","s":"ting","c":{},"d":[98],"e":true}},"d":[10,215,267],"e":true},"n":{"w":"generic","s":"neric","c":{"s":{"w":"generics","s":"s","c":{},"d":[29,28,110],"e":true}},"d":[81],"e":true}},"d":[],"e":false},"a":{"w":"gap","s":"ap","c":{},"d":[44],"e":true},"u":{"w":"guaranteed","s":"uaranteed","c":{},"d":[78],"e":true},"o":{"w":"goto","s":"oto","c":{},"d":[205],"e":true},"l":{"w":"global","s":"lobal","c":{},"d":[220],"e":true}},"d":[],"e":false},"-":{"w":"-","s":"-","c":{"1":{"w":"-1","s":"1","c":{},"d":[42,43],"e":true},"-":{"w":"--","s":"-","c":{"s":{"w":"--sd-code-date","s":"sd-code-date","c":{},"d":[130],"e":true}},"d":[24,25,156,262,277],"e":true}},"d":[70,88,83,82,81,142,139],"e":true},"_":{"w":"_","s":"_","c":{"e":{"w":"_errors","s":"errors","c":{},"d":[147,233],"e":true},"_":{"w":"__superform_id","s":"_superform_id","c":{},"d":[225],"e":true},"u":{"w":"_userschema","s":"userschema","c":{},"d":[244,245],"e":true}},"d":[30,26,232,233],"e":true},"y":{"w":"y","s":"y","c":{"o":{"w":"you","s":"ou","c":{"r":{"w":"your","s":"r","c":{"_":{"w":"your_adapter","s":"_adapter","c":{},"d":[271],"e":true}},"d":[68,70,73,271],"e":true},"'":{"w":"you've","s":"'ve","c":{},"d":[206],"e":true}},"d":[43,73,173,224,260],"e":true},"a":{"w":"yarn","s":"arn","c":{},"d":[265],"e":true}},"d":[],"e":false}},"d":[],"e":false},"isArray":false}},"vectorIndexes":{},"searchableProperties":["title","hash","url","content","code"],"searchablePropertiesWithTypes":{"title":"string","hash":"string","url":"string","content":"string","code":"string"},"frequencies":{"title":{"1":{"api":0.5,"reference":0.5},"2":{"supervalidate":0.25,"adapter":0.25,"data":0.25,"options":0.25},"3":{"supervalidate":0.5,"options":0.5},"4":{"supervalidate":0.3333333333333333,"return":0.3333333333333333,"type":0.3333333333333333},"5":{"seterror":0.2,"form":0.2,"field":0.2,"error":0.2,"options":0.2},"6":{"message":0.3333333333333333,"form":0.3333333333333333,"options":0.3333333333333333},"7":{"defaultvalues":0.5,"schema":0.5},"8":{"actionresult":0.2,"type":0.2,"data":0.2,"options":0.2,"status":0.2},"9":{"login":0.3333333333333333,"request":0.3333333333333333,"example":0.3333333333333333},"10":{"superform":0.5,"options":0.5},"11":{"defaults":1},"12":{"proxy":0.5,"objects":0.5},"13":{"intproxy":0.25,"form":0.25,"fieldname":0.25,"options":0.25},"14":{"numberproxy":0.25,"form":0.25,"fieldname":0.25,"options":0.25},"15":{"booleanproxy":0.25,"form":0.25,"fieldname":0.25,"options":0.25},"16":{"dateproxy":0.25,"form":0.25,"fieldname":0.25,"options":0.25},"17":{"stringproxy":0.25,"form":0.25,"fieldname":0.25,"options":0.25},"18":{"formfieldproxy":0.25,"superform":0.25,"fieldname":0.25,"options":0.25},"19":{"arrayproxy":0.25,"superform":0.25,"fieldname":0.25,"options":0.25},"20":{"fieldproxy":0.3333333333333333,"object":0.3333333333333333,"fieldname":0.3333333333333333},"21":{"proxy":0.5,"example":0.5},"22":{"superdebug":1},"23":{"forms":0.2,"and":0.2,"fields":0.2,"in":0.2,"components":0.2},"24":{"forms":0.2,"and":0.2,"fields":0.2,"in":0.2,"components":0.2},"25":{"factoring":0.25,"out":0.25,"a":0.25,"form":0.25},"26":{"factoring":0.25,"out":0.25,"form":0.25,"fields":0.25},"27":{"using":0.3333333333333333,"a":0.3333333333333333,"fieldproxy":0.3333333333333333},"28":{"using":0.3333333333333333,"a":0.3333333333333333,"formfieldproxy":0.3333333333333333},"29":{"type":0.25,"narrowing":0.25,"for":0.25,"paths":0.25},"30":{"using":0.14285714285714285,"the":0.14285714285714285,"componentized":0.14285714285714285,"field":0.14285714285714285,"in":0.14285714285714285,"awesome":0.14285714285714285,"ways":0.14285714285714285},"31":{"contributing":0.25,"donating":0.25,"and":0.25,"sponsoring":0.25},"32":{"contributing":1},"33":{"donations":1},"34":{"designing":0.25,"a":0.25,"crud":0.25,"interface":0.25},"35":{"getting":0.5,"started":0.5},"36":{"video":0.5,"tutorial":0.5},"37":{"stackblitz":1},"38":{"new":0.3333333333333333,"sveltekit":0.3333333333333333,"project":0.3333333333333333},"39":{"start":0.16666666666666666,"-":0.16666666666666666,"creating":0.16666666666666666,"a":0.16666666666666666,"test":0.16666666666666666,"database":0.16666666666666666},"40":{"form":0.25,"vs":0.25,"database":0.25,"schemas":0.25},"41":{"reading":0.16666666666666666,"a":0.16666666666666666,"user":0.16666666666666666,"from":0.16666666666666666,"the":0.16666666666666666,"database":0.16666666666666666},"42":{"creating":0.2,"and":0.2,"updating":0.2,"a":0.2,"user":0.2},"43":{"deleting":0.3333333333333333,"a":0.3333333333333333,"user":0.3333333333333333},"44":{"listing":0.3333333333333333,"the":0.3333333333333333,"users":0.3333333333333333},"45":{"playground":1},"46":{"default":0.5,"values":0.5},"47":{"changing":0.25,"a":0.25,"default":0.25,"value":0.25},"48":{"optional":0.3333333333333333,"vs":0.3333333333333333,"nullable":0.3333333333333333},"49":{"explicit":0.5,"defaults":0.5},"50":{"enums":0.25,"and":0.25,"group":0.25,"inputs":0.25},"51":{"faq":1},"52":{"i":0.08333333333333333,"see":0.08333333333333333,"the":0.08333333333333333,"data":0.08333333333333333,"in":0.08333333333333333,"form":0.08333333333333333,"but":0.08333333333333333,"it's":0.08333333333333333,"not":0.08333333333333333,"posted":0.08333333333333333,"to":0.08333333333333333,"server":0.08333333333333333},"53":{"how":0.08333333333333333,"can":0.08333333333333333,"i":0.08333333333333333,"prevent":0.08333333333333333,"the":0.08333333333333333,"form":0.08333333333333333,"from":0.08333333333333333,"being":0.08333333333333333,"reset":0.08333333333333333,"after":0.08333333333333333,"it's":0.08333333333333333,"submitted":0.08333333333333333},"54":{"how":0.2,"to":0.2,"handle":0.2,"file":0.2,"uploads":0.2},"55":{"can":0.125,"i":0.125,"use":0.125,"endpoints":0.125,"instead":0.125,"of":0.125,"form":0.125,"actions":0.125},"56":{"can":0.14285714285714285,"i":0.14285714285714285,"post":0.14285714285714285,"to":0.14285714285714285,"an":0.14285714285714285,"external":0.14285714285714285,"api":0.14285714285714285},"57":{"how":0.16666666666666666,"to":0.16666666666666666,"submit":0.16666666666666666,"the":0.16666666666666666,"form":0.16666666666666666,"programmatically":0.16666666666666666},"58":{"can":0.1111111111111111,"a":0.1111111111111111,"form":0.1111111111111111,"be":0.1111111111111111,"factored":0.1111111111111111,"out":0.1111111111111111,"into":0.1111111111111111,"separate":0.1111111111111111,"component":0.1111111111111111},"59":{"how":0.1,"can":0.1,"i":0.1,"return":0.1,"additional":0.1,"data":0.1,"together":0.1,"with":0.1,"the":0.1,"form":0.1},"60":{"from":0.25,"a":0.25,"load":0.25,"function":0.25},"61":{"from":0.25,"a":0.25,"form":0.25,"action":0.25},"62":{"what":0.09090909090909091,"about":0.09090909090909091,"the":0.09090909090909091,"other":0.09090909090909091,"way":0.09090909090909091,"around":0.09090909090909091,"posting":0.09090909090909091,"additional":0.09090909090909091,"data":0.09090909090909091,"to":0.09090909090909091,"server":0.09090909090909091},"63":{"i'm":0.08333333333333333,"getting":0.08333333333333333,"json":0.08333333333333333,"parse":0.08333333333333333,"errors":0.08333333333333333,"as":0.08333333333333333,"response":0.08333333333333333,"when":0.08333333333333333,"submitting":0.08333333333333333,"a":0.08333333333333333,"form":0.08333333333333333,"why":0.08333333333333333},"64":{"why":0.09090909090909091,"am":0.09090909090909091,"i'm":0.09090909090909091,"getting":0.09090909090909091,"typeerror":0.09090909090909091,"the":0.09090909090909091,"body":0.09090909090909091,"has":0.09090909090909091,"already":0.09090909090909091,"been":0.09090909090909091,"consumed":0.09090909090909091},"65":{"why":0.06666666666666667,"does":0.06666666666666667,"the":0.06666666666666667,"form":0.06666666666666667,"get":0.06666666666666667,"tainted":0.06666666666666667,"without":0.06666666666666667,"any":0.06666666666666667,"changes":0.06666666666666667,"when":0.06666666666666667,"i":0.06666666666666667,"use":0.06666666666666667,"a":0.06666666666666667,"select":0.06666666666666667,"element":0.06666666666666667},"66":{"how":0.1,"to":0.1,"customize":0.1,"error":0.1,"messages":0.1,"directly":0.1,"in":0.1,"the":0.1,"validation":0.1,"schema":0.1},"67":{"can":0.05555555555555555,"you":0.05555555555555555,"use":0.05555555555555555,"superforms":0.05555555555555555,"without":0.05555555555555555,"any":0.05555555555555555,"data":0.05555555555555555,"for":0.05555555555555555,"example":0.05555555555555555,"with":0.05555555555555555,"a":0.05555555555555555,"delete":0.05555555555555555,"button":0.05555555555555555,"on":0.05555555555555555,"each":0.05555555555555555,"row":0.05555555555555555,"in":0.05555555555555555,"table":0.05555555555555555},"68":{"i":0.1,"want":0.1,"to":0.1,"reuse":0.1,"common":0.1,"options":0.1,"how":0.1,"do":0.1,"that":0.1,"easily":0.1},"69":{"flash":0.5,"messages":0.5},"70":{"usage":1},"71":{"syncflashmessage":1},"72":{"flashmessage":0.5,"onerror":0.5},"73":{"integrate":0.25,"superforms":0.25,"with":0.25,"formsnap":0.25},"74":{"0":0.14285714285714285,"version":0.14285714285714285,"x":0.14285714285714285,"and":0.14285714285714285,"how":0.14285714285714285,"to":0.14285714285714285,"migrate":0.14285714285714285},"75":{"legacy":0.5,"version":0.5},"76":{"migration":0.5,"guide":0.5},"77":{"updating":1},"78":{"superform":1},"79":{"valid":0.3333333333333333,"empty":0.3333333333333333,"firsterror":0.3333333333333333},"80":{"seterror":1},"81":{"seterror":0.2,"again":0.2,"validate":0.2,"proxy":0.2,"functions":0.2},"82":{"allerrors":1},"83":{"defaultdata":1},"84":{"message":0.5,"setmessage":0.5},"85":{"meta":1},"86":{"client":0.5,"options":0.5},"87":{"resetform":1},"88":{"errorselector":1},"89":{"server":0.5,"options":0.5},"90":{"noerrors":1},"91":{"superforms":0.2,"v2":0.2,"-":0.2,"migration":0.2,"guide":0.2},"92":{"changes":1},"93":{"the":0.25,"biggest":0.25,"change":0.25,"important":0.25},"94":{"supervalidate":1},"95":{"schema":0.5,"caching":0.5},"96":{"optimized":0.3333333333333333,"client-side":0.3333333333333333,"validation":0.3333333333333333},"97":{"supervalidated":0.2,"type":0.2,"parameters":0.2,"have":0.2,"changed":0.2},"98":{"supervalidatesync":0.2,"is":0.2,"renamed":0.2,"to":0.2,"defaults":0.2},"99":{"validate":0.1111111111111111,"method":0.1111111111111111,"with":0.1111111111111111,"no":0.1111111111111111,"arguments":0.1111111111111111,"is":0.1111111111111111,"renamed":0.1111111111111111,"to":0.1111111111111111,"validateform":0.1111111111111111},"100":{"id":0.16666666666666666,"option":0.16666666666666666,"must":0.16666666666666666,"be":0.16666666666666666,"a":0.16666666666666666,"string":0.16666666666666666},"101":{"arrayproxy":1},"102":{"intproxy":0.3333333333333333,"and":0.3333333333333333,"numberproxy":0.3333333333333333},"103":{"the":0.2,"defaultvalidators":0.2,"option":0.2,"has":0.2,"moved":0.2},"104":{"enums":0.3333333333333333,"in":0.3333333333333333,"schemas":0.3333333333333333},"105":{"enums":0.14285714285714285,"must":0.14285714285714285,"have":0.14285714285714285,"an":0.14285714285714285,"explicit":0.14285714285714285,"default":0.14285714285714285,"value":0.14285714285714285},"106":{"use":0.16666666666666666,"istainted":0.16666666666666666,"to":0.16666666666666666,"check":0.16666666666666666,"tainted":0.16666666666666666,"status":0.16666666666666666},"107":{"schema":0.3333333333333333,"validation":0.3333333333333333,"changes":0.3333333333333333},"108":{"no":0.2,"side-effects":0.2,"for":0.2,"default":0.2,"values":0.2},"109":{"fields":0.14285714285714285,"with":0.14285714285714285,"default":0.14285714285714285,"values":0.14285714285714285,"aren't":0.14285714285714285,"required":0.14285714285714285,"anymore":0.14285714285714285},"110":{"components":1},"111":{"update":0.14285714285714285,"your":0.14285714285714285,"imports":0.14285714285714285,"in":0.14285714285714285,"case":0.14285714285714285,"of":0.14285714285714285,"problems":0.14285714285714285},"112":{"superform":0.25,"fields":0.25,"is":0.25,"removed":0.25},"113":{"superform":0.125,"does":0.125,"not":0.125,"support":0.125,"untainting":0.125,"specific":0.125,"fields":0.125,"anymore":0.125},"114":{"onerror":0.2,"message":0.2,"parameter":0.2,"is":0.2,"removed":0.2},"115":{"flashmessage":0.16666666666666666,"onerror":0.16666666666666666,"message":0.16666666666666666,"parameter":0.16666666666666666,"renamed":0.16666666666666666,"to":0.16666666666666666},"116":{"new":0.5,"features":0.5},"117":{"rate":0.5,"limiting":0.5},"118":{"super":0.5,"sponsors":0.5},"119":{"super":0.5,"sponsors":0.5},"120":{"donate":0.2,"to":0.2,"be":0.2,"a":0.2,"sponsor":0.2},"121":{"superdebug":0.16666666666666666,"-":0.16666666666666666,"the":0.16666666666666666,"super":0.16666666666666666,"debugging":0.16666666666666666,"component":0.16666666666666666},"122":{"superdebug":1},"123":{"props":0.5,"reference":0.5},"124":{"examples":1},"125":{"with":0.3333333333333333,"a":0.3333333333333333,"label":0.3333333333333333},"126":{"promise":0.5,"support":0.5},"127":{"composing":0.3333333333333333,"debug":0.3333333333333333,"data":0.3333333333333333},"128":{"displaying":0.5,"files":0.5},"129":{"superdebug":0.3333333333333333,"loves":0.3333333333333333,"stores":0.3333333333333333},"130":{"custom":0.5,"styling":0.5},"131":{"css":0.2,"variables":0.2,"available":0.2,"for":0.2,"customization":0.2},"132":{"page":0.5,"data":0.5},"133":{"help":0.2,"and":0.2,"support":0.2,"for":0.2,"superforms":0.2},"134":{"help":0.5,"support":0.5},"135":{"free":0.5,"support":0.5},"136":{"commercial":0.5,"support":0.5},"137":{"bug":0.5,"reporting":0.5},"138":{"0":0.2,"v1":0.2,"-":0.2,"what's":0.2,"new":0.2},"139":{"automatic":0.3333333333333333,"form":0.3333333333333333,"id":0.3333333333333333},"140":{"defaultvalues":1},"141":{"supervalidatesync":1},"142":{"string":0.3333333333333333,"path":0.3333333333333333,"accessors":0.3333333333333333},"143":{"new":0.3333333333333333,"'posted'":0.3333333333333333,"store":0.3333333333333333},"144":{"extra":0.25,"options":0.25,"for":0.25,"reset":0.25},"145":{"better":0.16666666666666666,"empty":0.16666666666666666,"value":0.16666666666666666,"support":0.16666666666666666,"for":0.16666666666666666,"proxies":0.16666666666666666},"146":{"validate":0.16666666666666666,"the":0.16666666666666666,"whole":0.16666666666666666,"form":0.16666666666666666,"on":0.16666666666666666,"client":0.16666666666666666},"147":{"errors":0.2,"for":0.2,"arrays":0.2,"and":0.2,"objects":0.2},"148":{"2":0.2,"version":0.2,"-":0.2,"what's":0.2,"new":0.2},"149":{"file":0.3333333333333333,"upload":0.3333333333333333,"support":0.3333333333333333},"150":{"superdebug":1},"151":{"union":0.5,"support":0.5},"152":{"unions":0.14285714285714285,"must":0.14285714285714285,"have":0.14285714285714285,"an":0.14285714285714285,"explicit":0.14285714285714285,"default":0.14285714285714285,"value":0.14285714285714285},"153":{"multi-type":0.1,"unions":0.1,"can":0.1,"only":0.1,"be":0.1,"used":0.1,"when":0.1,"datatype":0.1,"is":0.1,"'json'":0.1},"154":{"form":0.2,"is":0.2,"reset":0.2,"by":0.2,"default":0.2},"155":{"tainted":0.5,"updates":0.5},"156":{"new":0.3333333333333333,"istainted":0.3333333333333333,"method":0.3333333333333333},"157":{"onchange":0.5,"event":0.5},"158":{"new":0.3333333333333333,"validateform":0.3333333333333333,"method":0.3333333333333333},"159":{"empty":0.14285714285714285,"'zero'":0.14285714285714285,"option":0.14285714285714285,"for":0.14285714285714285,"intproxy":0.14285714285714285,"and":0.14285714285714285,"numberproxy":0.14285714285714285},"160":{"simplified":0.5,"imports":0.5},"161":{"migrate":0.5,"now":0.5},"162":{"release":0.5,"notes":0.5},"163":{"client-side":0.5,"validation":0.5},"164":{"built-in":0.3333333333333333,"browser":0.3333333333333333,"validation":0.3333333333333333},"165":{"constraints":1},"166":{"special":0.3333333333333333,"input":0.3333333333333333,"formats":0.3333333333333333},"167":{"using":0.25,"a":0.25,"validation":0.25,"schema":0.25},"168":{"validators":1},"169":{"switching":0.5,"schemas":0.5},"170":{"validationmethod":1},"171":{"customvalidity":1},"172":{"validate":1},"173":{"validateform":1},"174":{"asynchronous":0.25,"validation":0.25,"and":0.25,"debouncing":0.25},"175":{"test":0.3333333333333333,"it":0.3333333333333333,"out":0.3333333333333333},"176":{"progressive":0.5,"enhancement":0.5},"177":{"modifying":0.2,"the":0.2,"use":0.2,"enhance":0.2,"behavior":0.2},"178":{"applyaction":1},"179":{"invalidateall":1},"180":{"optimistic":0.5,"updates":0.5},"181":{"resetform":1},"182":{"when":0.2,"to":0.2,"change":0.2,"the":0.2,"defaults":0.2},"183":{"making":0.14285714285714285,"the":0.14285714285714285,"form":0.14285714285714285,"behave":0.14285714285714285,"like":0.14285714285714285,"sveltekit":0.14285714285714285,"default":0.14285714285714285},"184":{"error":0.5,"handling":0.5},"185":{"seterror":1},"186":{"server":0.5,"errors":0.5},"187":{"initial":0.3333333333333333,"form":0.3333333333333333,"errors":0.3333333333333333},"188":{"usage":0.5,"client":0.5},"189":{"errorselector":1},"190":{"scrolltoerror":1},"191":{"autofocusonerror":1},"192":{"stickynavbar":1},"193":{"customvalidity":1},"194":{"form-level":0.25,"and":0.25,"array":0.25,"errors":0.25},"195":{"setting":0.2,"field":0.2,"errors":0.2,"with":0.2,"refine":0.2},"196":{"listing":0.5,"errors":0.5},"197":{"customizing":0.16666666666666666,"error":0.16666666666666666,"messages":0.16666666666666666,"in":0.16666666666666666,"the":0.16666666666666666,"schema":0.16666666666666666},"198":{"test":0.3333333333333333,"it":0.3333333333333333,"out":0.3333333333333333},"199":{"events":1},"200":{"event":0.5,"flowchart":0.5},"201":{"onsubmit":1},"202":{"jsondata":1},"203":{"validators":1},"204":{"onresult":1},"205":{"common":0.5,"usage":0.5},"206":{"onupdate":1},"207":{"onupdated":1},"208":{"onerror":1},"209":{"onchange":1},"210":{"file":0.5,"uploads":0.5},"211":{"returning":0.2,"files":0.2,"in":0.2,"form":0.2,"actions":0.2},"212":{"examples":1},"213":{"single":0.3333333333333333,"file":0.3333333333333333,"input":0.3333333333333333},"214":{"multiple":0.5,"files":0.5},"215":{"validating":0.3333333333333333,"files":0.3333333333333333,"manually":0.3333333333333333},"216":{"preventing":0.3333333333333333,"file":0.3333333333333333,"uploads":0.3333333333333333},"217":{"status":0.5,"messages":0.5},"218":{"usage":1},"219":{"the":0.3333333333333333,"message":0.3333333333333333,"helper":0.3333333333333333},"220":{"strongly":0.3333333333333333,"typed":0.3333333333333333,"message":0.3333333333333333},"221":{"using":0.2,"the":0.2,"message":0.2,"data":0.2,"programmatically":0.2},"222":{"limitations":1},"223":{"multiple":0.16666666666666666,"forms":0.16666666666666666,"on":0.16666666666666666,"the":0.16666666666666666,"same":0.16666666666666666,"page":0.16666666666666666},"224":{"setting":0.2,"id":0.2,"on":0.2,"the":0.2,"client":0.2},"225":{"without":0.3333333333333333,"use":0.3333333333333333,"enhance":0.3333333333333333},"226":{"configuration":0.3333333333333333,"and":0.3333333333333333,"troubleshooting":0.3333333333333333},"227":{"test":0.3333333333333333,"it":0.3333333333333333,"out":0.3333333333333333},"228":{"nested":0.5,"data":0.5},"229":{"datatype":1},"230":{"requirements":1},"231":{"nested":0.25,"errors":0.25,"and":0.25,"constraints":0.25},"232":{"example":1},"233":{"arrays":0.25,"with":0.25,"primitive":0.25,"values":0.25},"234":{"validation":0.2,"schemas":0.2,"and":0.2,"nested":0.2,"paths":0.2},"235":{"proxy":0.5,"objects":0.5},"236":{"nested":0.5,"proxies":0.5},"237":{"date":0.3333333333333333,"input":0.3333333333333333,"issues":0.3333333333333333},"238":{"snapshots":1},"239":{"usage":1},"240":{"test":0.3333333333333333,"it":0.3333333333333333,"out":0.3333333333333333},"241":{"single-page":0.25,"application":0.25,"spa":0.25,"mode":0.25},"242":{"single-page":0.3333333333333333,"applications":0.3333333333333333,"spa":0.3333333333333333},"243":{"usage":1},"244":{"using":0.16666666666666666,"page":0.16666666666666666,"ts":0.16666666666666666,"instead":0.16666666666666666,"of":0.16666666666666666,"server":0.16666666666666666},"245":{"displaying":0.3333333333333333,"the":0.3333333333333333,"form":0.3333333333333333},"246":{"without":0.2,"a":0.2,"page":0.2,"ts":0.2,"file":0.2},"247":{"with":0.25,"initial":0.25,"top-level":0.25,"data":0.25},"248":{"spa":0.3333333333333333,"action":0.3333333333333333,"form":0.3333333333333333},"249":{"strict":0.5,"mode":0.5},"250":{"catch-all":0.5,"schema":0.5},"251":{"submit":0.5,"behavior":0.5},"252":{"clearonsubmit":1},"253":{"multiplesubmits":1},"254":{"loading":0.5,"timers":0.5},"255":{"usage":1},"256":{"submit":0.5,"state":0.5},"257":{"loading":0.5,"indicators":0.5},"258":{"visualizing":0.3333333333333333,"the":0.3333333333333333,"timers":0.3333333333333333},"259":{"tainted":0.5,"fields":0.5},"260":{"usage":1},"261":{"untainting":0.3333333333333333,"the":0.3333333333333333,"form":0.3333333333333333},"262":{"check":0.16666666666666666,"if":0.16666666666666666,"the":0.16666666666666666,"form":0.16666666666666666,"is":0.16666666666666666,"tainted":0.16666666666666666},"263":{"preventing":0.25,"tainting":0.25,"the":0.25,"form":0.25},"264":{"get":0.16666666666666666,"started":0.16666666666666666,"-":0.16666666666666666,"tutorial":0.16666666666666666,"for":0.16666666666666666,"superforms":0.16666666666666666},"265":{"get":0.5,"started":0.5},"266":{"creating":0.3333333333333333,"a":0.3333333333333333,"superform":0.3333333333333333},"267":{"creating":0.25,"a":0.25,"validation":0.25,"schema":0.25},"268":{"schema":0.5,"caching":0.5},"269":{"initializing":0.16666666666666666,"the":0.16666666666666666,"form":0.16666666666666666,"in":0.16666666666666666,"load":0.16666666666666666,"function":0.16666666666666666},"270":{"empty":0.5,"form":0.5},"271":{"populate":0.25,"form":0.25,"from":0.25,"database":0.25},"272":{"important":0.2,"note":0.2,"about":0.2,"return":0.2,"values":0.2},"273":{"displaying":0.3333333333333333,"the":0.3333333333333333,"form":0.3333333333333333},"274":{"debugging":1},"275":{"posting":0.5,"data":0.5},"276":{"displaying":0.5,"errors":0.5},"277":{"adding":0.3333333333333333,"progressive":0.3333333333333333,"enhancement":0.3333333333333333},"278":{"next":0.5,"steps":0.5}},"hash":{"1":{"api-reference":1},"2":{"supervalidateadapter--data-adapter--options-options":1},"3":{"supervalidate-options":1},"4":{"supervalidate-return-type":1},"5":{"seterrorform-field-error-options":1},"6":{"messageform-message-options":1},"7":{"defaultvaluesschema":1},"8":{"actionresulttype-data-options--status":1},"9":{"login-request-example":1},"10":{"superform-options":1},"11":{"defaults":1},"12":{"proxy-objects":1},"13":{"intproxyform-fieldname-options":1},"14":{"numberproxyform-fieldname-options":1},"15":{"booleanproxyform-fieldname-options":1},"16":{"dateproxyform-fieldname-options":1},"17":{"stringproxyform-fieldname-options":1},"18":{"formfieldproxysuperform-fieldname-options":1},"19":{"arrayproxysuperform-fieldname-options":1},"20":{"fieldproxyobject-fieldname":1},"21":{"proxy-example":1},"22":{"superdebug":1},"23":{"forms-and-fields-in-components":1},"24":{"forms-and-fields-in-components":1},"25":{"factoring-out-a-form":1},"26":{"factoring-out-form-fields":1},"27":{"using-a-fieldproxy":1},"28":{"using-a-formfieldproxy":1},"29":{"type-narrowing-for-paths":1},"30":{"using-the-componentized-field-in-awesome-ways":1},"31":{"contributing-donating-and-sponsoring":1},"32":{"contributing":1},"33":{"donations":1},"34":{"designing-a-crud-interface":1},"35":{"getting-started":1},"36":{"video-tutorial":1},"37":{"stackblitz":1},"38":{"new-sveltekit-project":1},"39":{"start---creating-a-test-database":1},"40":{"form-vs-database-schemas":1},"41":{"reading-a-user-from-the-database":1},"42":{"creating-and-updating-a-user":1},"43":{"deleting-a-user":1},"44":{"listing-the-users":1},"45":{"playground":1},"46":{"default-values":1},"47":{"changing-a-default-value":1},"48":{"optional-vs-nullable":1},"49":{"explicit-defaults":1},"50":{"enums-and-group-inputs":1},"51":{"faq":1},"52":{"i-see-the-data-in-form-but-its-not-posted-to-the-server":1},"53":{"how-can-i-prevent-the-form-from-being-reset-after-its-submitted":1},"54":{"how-to-handle-file-uploads":1},"55":{"can-i-use-endpoints-instead-of-form-actions":1},"56":{"can-i-post-to-an-external-api":1},"57":{"how-to-submit-the-form-programmatically":1},"58":{"can-a-form-be-factored-out-into-a-separate-component":1},"59":{"how-can-i-return-additional-data-together-with-the-form":1},"60":{"from-a-load-function":1},"61":{"from-a-form-action":1},"62":{"what-about-the-other-way-around-posting-additional-data-to-the-server":1},"63":{"im-getting-jsonparse-errors-as-response-when-submitting-a-form-why":1},"64":{"why-am-im-getting-typeerror-the-body-has-already-been-consumed":1},"65":{"why-does-the-form-get-tainted-without-any-changes-when-i-use-a-select-element":1},"66":{"how-to-customize-error-messages-directly-in-the-validation-schema":1},"67":{"can-you-use-superforms-without-any-data-for-example-with-a-delete-button-on-each-row-in-a-table":1},"68":{"i-want-to-reuse-common-options-how-to-do-that-easily":1},"69":{"flash-messages":1},"70":{"usage":1},"71":{"syncflashmessage":1},"72":{"flashmessageonerror":1},"73":{"integrate-superforms-with-formsnap":1},"74":{"version-0x-and-how-to-migrate":1},"75":{"legacy-version":1},"76":{"migration-guide":1},"77":{"updating":1},"78":{"superform":1},"79":{"valid-empty-firsterror":1},"80":{"seterror":1},"81":{"seterror-again-validate-proxy-functions":1},"82":{"allerrors":1},"83":{"defaultdata":1},"84":{"message-setmessage":1},"85":{"meta":1},"86":{"client-options":1},"87":{"resetform":1},"88":{"errorselector":1},"89":{"server-options":1},"90":{"noerrors":1},"91":{"superforms-v2---migration-guide":1},"92":{"changes":1},"93":{"the-biggest-change-important":1},"94":{"supervalidate":1},"95":{"schema-caching":1},"96":{"optimized-client-side-validation":1},"97":{"supervalidated-type-parameters-have-changed":1},"98":{"supervalidatesync-is-renamed-to-defaults":1},"99":{"validate-method-with-no-arguments-is-renamed-to-validateform":1},"100":{"id-option-must-be-a-string":1},"101":{"arrayproxy":1},"102":{"intproxy-and-numberproxy":1},"103":{"the-defaultvalidators-option-has-moved":1},"104":{"enums-in-schemas":1},"105":{"enums-must-have-an-explicit-default-value":1},"106":{"use-istainted-to-check-tainted-status":1},"107":{"schemavalidation-changes":1},"108":{"no-side-effects-for-default-values":1},"109":{"fields-with-default-values-arent-required-anymore":1},"110":{"components":1},"111":{"update-your-imports-in-case-of-problems":1},"112":{"superformfields-is-removed":1},"113":{"superform-does-not-support-untainting-specific-fields-anymore":1},"114":{"onerror-message-parameter-is-removed":1},"115":{"flashmessageonerror-message-parameter-renamed-to-flashmessage":1},"116":{"new-features":1},"117":{"rate-limiting":1},"118":{"super-sponsors":1},"119":{"super-sponsors":1},"120":{"donate-to-be-a-sponsor":1},"121":{"superdebug---the-super-debugging-component":1},"122":{"superdebug":1},"123":{"props-reference":1},"124":{"examples":1},"125":{"with-a-label":1},"126":{"promise-support":1},"127":{"composing-debug-data":1},"128":{"displaying-files":1},"129":{"superdebug-loves-stores":1},"130":{"custom-styling":1},"131":{"css-variables-available-for-customization":1},"132":{"page-data":1},"133":{"help-and-support-for-superforms":1},"134":{"help--support":1},"135":{"free-support":1},"136":{"commercial-support":1},"137":{"bug-reporting":1},"138":{"v10---whats-new":1},"139":{"automatic-form-id":1},"140":{"defaultvalues":1},"141":{"supervalidatesync":1},"142":{"string-path-accessors":1},"143":{"new-posted-store":1},"144":{"extra-options-for-reset":1},"145":{"better-empty-value-support-for-proxies":1},"146":{"validate-the-whole-form-on-the-client":1},"147":{"errors-for-arrays-and-objects":1},"148":{"version-2---whats-new":1},"149":{"file-upload-support":1},"150":{"superdebug":1},"151":{"union-support":1},"152":{"unions-must-have-an-explicit-default-value":1},"153":{"multi-type-unions-can-only-be-used-when-datatype-is-json":1},"154":{"form-is-reset-by-default":1},"155":{"tainted-updates":1},"156":{"new-istainted-method":1},"157":{"onchange-event":1},"158":{"new-validateform-method":1},"159":{"empty-zero-option-for-intproxy-and-numberproxy":1},"160":{"simplified-imports":1},"161":{"migrate-now":1},"162":{"release-notes":1},"163":{"client-side-validation":1},"164":{"built-in-browser-validation":1},"165":{"constraints":1},"166":{"special-input-formats":1},"167":{"using-a-validation-schema":1},"168":{"validators":1},"169":{"switching-schemas":1},"170":{"validationmethod":1},"171":{"customvalidity":1},"172":{"validate":1},"173":{"validateform":1},"174":{"asynchronous-validation-and-debouncing":1},"175":{"test-it-out":1},"176":{"progressive-enhancement":1},"177":{"modifying-the-useenhance-behavior":1},"178":{"applyaction":1},"179":{"invalidateall":1},"180":{"optimistic-updates":1},"181":{"resetform":1},"182":{"when-to-change-the-defaults":1},"183":{"making-the-form-behave-like-the-sveltekit-default":1},"184":{"error-handling":1},"185":{"seterror":1},"186":{"server-errors":1},"187":{"initial-form-errors":1},"188":{"usage-client":1},"189":{"errorselector":1},"190":{"scrolltoerror":1},"191":{"autofocusonerror":1},"192":{"stickynavbar":1},"193":{"customvalidity":1},"194":{"form-level-and-array-errors":1},"195":{"setting-field-errors-with-refine":1},"196":{"listing-errors":1},"197":{"customizing-error-messages-in-the-schema":1},"198":{"test-it-out":1},"199":{"events":1},"200":{"event-flowchart":1},"201":{"onsubmit":1},"202":{"jsondata":1},"203":{"validators":1},"204":{"onresult":1},"205":{"common-usage":1},"206":{"onupdate":1},"207":{"onupdated":1},"208":{"onerror":1},"209":{"onchange":1},"210":{"file-uploads":1},"211":{"returning-files-in-form-actions":1},"212":{"examples":1},"213":{"single-file-input":1},"214":{"multiple-files":1},"215":{"validating-files-manually":1},"216":{"preventing-file-uploads":1},"217":{"status-messages":1},"218":{"usage":1},"219":{"the-message-helper":1},"220":{"strongly-typed-message":1},"221":{"using-the-message-data-programmatically":1},"222":{"limitations":1},"223":{"multiple-forms-on-the-same-page":1},"224":{"setting-id-on-the-client":1},"225":{"without-useenhance":1},"226":{"configuration-and-troubleshooting":1},"227":{"test-it-out":1},"228":{"nested-data":1},"229":{"datatype":1},"230":{"requirements":1},"231":{"nested-errors-and-constraints":1},"232":{"example":1},"233":{"arrays-with-primitive-values":1},"234":{"validation-schemas-and-nested-paths":1},"235":{"proxy-objects":1},"236":{"nested-proxies":1},"237":{"date-input-issues":1},"238":{"snapshots":1},"239":{"usage":1},"240":{"test-it-out":1},"241":{"single-page-application-spa-mode":1},"242":{"single-page-applications-spa":1},"243":{"usage":1},"244":{"using-pagets-instead-of-pageserverts":1},"245":{"displaying-the-form":1},"246":{"without-a-pagets-file":1},"247":{"with-initial-top-level-data":1},"248":{"spa-action-form":1},"249":{"strict-mode":1},"250":{"catch-all-schema":1},"251":{"submit-behavior":1},"252":{"clearonsubmit":1},"253":{"multiplesubmits":1},"254":{"loading-timers":1},"255":{"usage":1},"256":{"submit-state":1},"257":{"loading-indicators":1},"258":{"visualizing-the-timers":1},"259":{"tainted-fields":1},"260":{"usage":1},"261":{"untainting-the-form":1},"262":{"check-if-the-form-is-tainted":1},"263":{"preventing-tainting-the-form":1},"264":{"get-started---tutorial-for-superforms":1},"265":{"get-started":1},"266":{"creating-a-superform":1},"267":{"creating-a-validation-schema":1},"268":{"schema-caching":1},"269":{"initializing-the-form-in-the-load-function":1},"270":{"empty-form":1},"271":{"populate-form-from-database":1},"272":{"important-note-about-return-values":1},"273":{"displaying-the-form":1},"274":{"debugging":1},"275":{"posting-data":1},"276":{"displaying-errors":1},"277":{"adding-progressive-enhancement":1},"278":{"next-steps":1}},"url":{"1":{"api":1},"2":{"api":1},"3":{"api":1},"4":{"api":1},"5":{"api":1},"6":{"api":1},"7":{"api":1},"8":{"api":1},"9":{"api":1},"10":{"api":1},"11":{"api":1},"12":{"api":1},"13":{"api":1},"14":{"api":1},"15":{"api":1},"16":{"api":1},"17":{"api":1},"18":{"api":1},"19":{"api":1},"20":{"api":1},"21":{"api":1},"22":{"api":1},"23":{"components":1},"24":{"components":1},"25":{"components":1},"26":{"components":1},"27":{"components":1},"28":{"components":1},"29":{"components":1},"30":{"components":1},"31":{"contributing":1},"32":{"contributing":1},"33":{"contributing":1},"34":{"crud":1},"35":{"crud":1},"36":{"crud":1},"37":{"crud":1},"38":{"crud":1},"39":{"crud":1},"40":{"crud":1},"41":{"crud":1},"42":{"crud":1},"43":{"crud":1},"44":{"crud":1},"45":{"examples":1},"46":{"default-values":1},"47":{"default-values":1},"48":{"default-values":1},"49":{"default-values":1},"50":{"default-values":1},"51":{"faq":1},"52":{"faq":1},"53":{"faq":1},"54":{"faq":1},"55":{"faq":1},"56":{"faq":1},"57":{"faq":1},"58":{"faq":1},"59":{"faq":1},"60":{"faq":1},"61":{"faq":1},"62":{"faq":1},"63":{"faq":1},"64":{"faq":1},"65":{"faq":1},"66":{"faq":1},"67":{"faq":1},"68":{"faq":1},"69":{"flash-messages":1},"70":{"flash-messages":1},"71":{"flash-messages":1},"72":{"flash-messages":1},"73":{"formsnap":1},"74":{"legacy":1},"75":{"legacy":1},"76":{"migration":1},"77":{"migration":1},"78":{"migration":1},"79":{"migration":1},"80":{"migration":1},"81":{"migration":1},"82":{"migration":1},"83":{"migration":1},"84":{"migration":1},"85":{"migration":1},"86":{"migration":1},"87":{"migration":1},"88":{"migration":1},"89":{"migration":1},"90":{"migration":1},"91":{"migration-v2":1},"92":{"migration-v2":1},"93":{"migration-v2":1},"94":{"migration-v2":1},"95":{"migration-v2":1},"96":{"migration-v2":1},"97":{"migration-v2":1},"98":{"migration-v2":1},"99":{"migration-v2":1},"100":{"migration-v2":1},"101":{"migration-v2":1},"102":{"migration-v2":1},"103":{"migration-v2":1},"104":{"migration-v2":1},"105":{"migration-v2":1},"106":{"migration-v2":1},"107":{"migration-v2":1},"108":{"migration-v2":1},"109":{"migration-v2":1},"110":{"migration-v2":1},"111":{"migration-v2":1},"112":{"migration-v2":1},"113":{"migration-v2":1},"114":{"migration-v2":1},"115":{"migration-v2":1},"116":{"migration-v2":1},"117":{"rate-limiting":1},"118":{"sponsors":1},"119":{"sponsors":1},"120":{"sponsors":1},"121":{"super-debug":1},"122":{"super-debug":1},"123":{"super-debug":1},"124":{"super-debug":1},"125":{"super-debug":1},"126":{"super-debug":1},"127":{"super-debug":1},"128":{"super-debug":1},"129":{"super-debug":1},"130":{"super-debug":1},"131":{"super-debug":1},"132":{"super-debug":1},"133":{"support":1},"134":{"support":1},"135":{"support":1},"136":{"support":1},"137":{"support":1},"138":{"whats-new-v1":1},"139":{"whats-new-v1":1},"140":{"whats-new-v1":1},"141":{"whats-new-v1":1},"142":{"whats-new-v1":1},"143":{"whats-new-v1":1},"144":{"whats-new-v1":1},"145":{"whats-new-v1":1},"146":{"whats-new-v1":1},"147":{"whats-new-v1":1},"148":{"whats-new-v2":1},"149":{"whats-new-v2":1},"150":{"whats-new-v2":1},"151":{"whats-new-v2":1},"152":{"whats-new-v2":1},"153":{"whats-new-v2":1},"154":{"whats-new-v2":1},"155":{"whats-new-v2":1},"156":{"whats-new-v2":1},"157":{"whats-new-v2":1},"158":{"whats-new-v2":1},"159":{"whats-new-v2":1},"160":{"whats-new-v2":1},"161":{"whats-new-v2":1},"162":{"whats-new-v2":1},"163":{"concepts":0.5,"client-validation":0.5},"164":{"concepts":0.5,"client-validation":0.5},"165":{"concepts":0.5,"client-validation":0.5},"166":{"concepts":0.5,"client-validation":0.5},"167":{"concepts":0.5,"client-validation":0.5},"168":{"concepts":0.5,"client-validation":0.5},"169":{"concepts":0.5,"client-validation":0.5},"170":{"concepts":0.5,"client-validation":0.5},"171":{"concepts":0.5,"client-validation":0.5},"172":{"concepts":0.5,"client-validation":0.5},"173":{"concepts":0.5,"client-validation":0.5},"174":{"concepts":0.5,"client-validation":0.5},"175":{"concepts":0.5,"client-validation":0.5},"176":{"concepts":0.5,"enhance":0.5},"177":{"concepts":0.5,"enhance":0.5},"178":{"concepts":0.5,"enhance":0.5},"179":{"concepts":0.5,"enhance":0.5},"180":{"concepts":0.5,"enhance":0.5},"181":{"concepts":0.5,"enhance":0.5},"182":{"concepts":0.5,"enhance":0.5},"183":{"concepts":0.5,"enhance":0.5},"184":{"concepts":0.5,"error-handling":0.5},"185":{"concepts":0.5,"error-handling":0.5},"186":{"concepts":0.5,"error-handling":0.5},"187":{"concepts":0.5,"error-handling":0.5},"188":{"concepts":0.5,"error-handling":0.5},"189":{"concepts":0.5,"error-handling":0.5},"190":{"concepts":0.5,"error-handling":0.5},"191":{"concepts":0.5,"error-handling":0.5},"192":{"concepts":0.5,"error-handling":0.5},"193":{"concepts":0.5,"error-handling":0.5},"194":{"concepts":0.5,"error-handling":0.5},"195":{"concepts":0.5,"error-handling":0.5},"196":{"concepts":0.5,"error-handling":0.5},"197":{"concepts":0.5,"error-handling":0.5},"198":{"concepts":0.5,"error-handling":0.5},"199":{"concepts":0.5,"events":0.5},"200":{"concepts":0.5,"events":0.5},"201":{"concepts":0.5,"events":0.5},"202":{"concepts":0.5,"events":0.5},"203":{"concepts":0.5,"events":0.5},"204":{"concepts":0.5,"events":0.5},"205":{"concepts":0.5,"events":0.5},"206":{"concepts":0.5,"events":0.5},"207":{"concepts":0.5,"events":0.5},"208":{"concepts":0.5,"events":0.5},"209":{"concepts":0.5,"events":0.5},"210":{"concepts":0.5,"files":0.5},"211":{"concepts":0.5,"files":0.5},"212":{"concepts":0.5,"files":0.5},"213":{"concepts":0.5,"files":0.5},"214":{"concepts":0.5,"files":0.5},"215":{"concepts":0.5,"files":0.5},"216":{"concepts":0.5,"files":0.5},"217":{"concepts":0.5,"messages":0.5},"218":{"concepts":0.5,"messages":0.5},"219":{"concepts":0.5,"messages":0.5},"220":{"concepts":0.5,"messages":0.5},"221":{"concepts":0.5,"messages":0.5},"222":{"concepts":0.5,"messages":0.5},"223":{"concepts":0.5,"multiple-forms":0.5},"224":{"concepts":0.5,"multiple-forms":0.5},"225":{"concepts":0.5,"multiple-forms":0.5},"226":{"concepts":0.5,"multiple-forms":0.5},"227":{"concepts":0.5,"multiple-forms":0.5},"228":{"concepts":0.5,"nested-data":0.5},"229":{"concepts":0.5,"nested-data":0.5},"230":{"concepts":0.5,"nested-data":0.5},"231":{"concepts":0.5,"nested-data":0.5},"232":{"concepts":0.5,"nested-data":0.5},"233":{"concepts":0.5,"nested-data":0.5},"234":{"concepts":0.5,"nested-data":0.5},"235":{"concepts":0.5,"proxy-objects":0.5},"236":{"concepts":0.5,"proxy-objects":0.5},"237":{"concepts":0.5,"proxy-objects":0.5},"238":{"concepts":0.5,"snapshots":0.5},"239":{"concepts":0.5,"snapshots":0.5},"240":{"concepts":0.5,"snapshots":0.5},"241":{"concepts":0.5,"spa":0.5},"242":{"concepts":0.5,"spa":0.5},"243":{"concepts":0.5,"spa":0.5},"244":{"concepts":0.5,"spa":0.5},"245":{"concepts":0.5,"spa":0.5},"246":{"concepts":0.5,"spa":0.5},"247":{"concepts":0.5,"spa":0.5},"248":{"concepts":0.5,"spa":0.5},"249":{"concepts":0.5,"strict-mode":0.5},"250":{"concepts":0.5,"strict-mode":0.5},"251":{"concepts":0.5,"submit-behavior":0.5},"252":{"concepts":0.5,"submit-behavior":0.5},"253":{"concepts":0.5,"submit-behavior":0.5},"254":{"concepts":0.5,"timers":0.5},"255":{"concepts":0.5,"timers":0.5},"256":{"concepts":0.5,"timers":0.5},"257":{"concepts":0.5,"timers":0.5},"258":{"concepts":0.5,"timers":0.5},"259":{"concepts":0.5,"tainted":0.5},"260":{"concepts":0.5,"tainted":0.5},"261":{"concepts":0.5,"tainted":0.5},"262":{"concepts":0.5,"tainted":0.5},"263":{"concepts":0.5,"tainted":0.5},"264":{"get-started":0.5,"lib":0.5},"265":{"get-started":0.5,"lib":0.5},"266":{"get-started":0.5,"lib":0.5},"267":{"get-started":0.5,"lib":0.5},"268":{"get-started":0.5,"lib":0.5},"269":{"get-started":0.5,"lib":0.5},"270":{"get-started":0.5,"lib":0.5},"271":{"get-started":0.5,"lib":0.5},"272":{"get-started":0.5,"lib":0.5},"273":{"get-started":0.5,"lib":0.5},"274":{"get-started":0.5,"lib":0.5},"275":{"get-started":0.5,"lib":0.5},"276":{"get-started":0.5,"lib":0.5},"277":{"get-started":0.5,"lib":0.5},"278":{"get-started":0.5,"lib":0.5}},"content":{"1":{"throughout":0.015873015873015872,"the":0.015873015873015872,"reference":0.015873015873015872,"type":0.015873015873015872,"t":0.015873015873015872,"represents":0.015873015873015872,"of":0.015873015873015872,"validation":0.015873015873015872,"schema":0.015873015873015872,"extending":0.015873015873015872,"record":0.015873015873015872,"string":0.015873015873015872,"unknown":0.015873015873015872,"for":0.015873015873015872,"example":0.015873015873015872,"in":0.015873015873015872,"a":0.015873015873015872,"form":0.015873015873015872,"with":0.015873015873015872,"name":0.015873015873015872,"and":0.015873015873015872,"email":0.015873015873015872,"being":0.015873015873015872,"optional":0.015873015873015872,"nested":0.015873015873015872,"r":0.015873015873015872,"replaces":0.015873015873015872,"all":0.015873015873015872,"primitive":0.015873015873015872,"values":0.015873015873015872,"removes":0.015873015873015872,"any":0.015873015873015872,"modifier":0.015873015873015872,"above":0.015873015873015872,"m":0.015873015873015872,"status":0.015873015873015872,"message":0.015873015873015872,"default":0.015873015873015872,"validationadapter":0.015873015873015872,"clientvalidationadapter":0.015873015873015872,"are":0.015873015873015872,"adapters":0.015873015873015872,"used":0.015873015873015872,"to":0.015873015873015872,"wrap":0.015873015873015872,"based":0.015873015873015872,"on":0.015873015873015872,"selected":0.015873015873015872,"library":0.015873015873015872,"is":0.015873015873015872,"input":0.015873015873015872,"as":0.015873015873015872,"transformations":0.015873015873015872,"pipes":0.015873015873015872,"can":0.015873015873015872,"make":0.015873015873015872,"it":0.015873015873015872,"differ":0.015873015873015872,"from":0.015873015873015872,"but":0.015873015873015872,"usually":0.015873015873015872,"they":0.015873015873015872,"same":0.015873015873015872},"2":{"if":0.030303030303030304,"you":0.030303030303030304,"want":0.030303030303030304,"the":0.030303030303030304,"form":0.030303030303030304,"to":0.030303030303030304,"be":0.030303030303030304,"initially":0.030303030303030304,"empty":0.030303030303030304,"can":0.030303030303030304,"pass":0.030303030303030304,"adapter":0.030303030303030304,"as":0.030303030303030304,"first":0.030303030303030304,"parameter":0.030303030303030304,"populate":0.030303030303030304,"for":0.030303030303030304,"example":0.030303030303030304,"from":0.030303030303030304,"a":0.030303030303030304,"database":0.030303030303030304,"url":0.030303030303030304,"parameters":0.030303030303030304,"in":0.030303030303030304,"load":0.030303030303030304,"function":0.030303030303030304,"or":0.030303030303030304,"formdata":0.030303030303030304,"actions":0.030303030303030304,"send":0.030303030303030304,"data":0.030303030303030304,"and":0.030303030303030304,"second":0.030303030303030304},"3":{"see":0.08333333333333333,"the":0.08333333333333333,"page":0.08333333333333333,"about":0.08333333333333333,"multiple":0.08333333333333333,"forms":0.08333333333333333,"for":0.08333333333333333,"information":0.08333333333333333,"when":0.08333333333333333,"to":0.08333333333333333,"use":0.08333333333333333,"id":0.08333333333333333},"4":{"if":0.05263157894736842,"data":0.05263157894736842,"is":0.05263157894736842,"empty":0.05263157894736842,"a":0.05263157894736842,"supervalidated":0.05263157894736842,"object":0.05263157894736842,"with":0.05263157894736842,"default":0.05263157894736842,"values":0.05263157894736842,"for":0.05263157894736842,"the":0.05263157894736842,"schema":0.05263157894736842,"returned":0.05263157894736842,"see":0.05263157894736842,"this":0.05263157894736842,"page":0.05263157894736842,"list":0.05263157894736842,"of":0.05263157894736842},"5":{"400":0.015873015873015872,"for":0.015873015873015872,"setting":0.015873015873015872,"errors":0.015873015873015872,"on":0.015873015873015872,"the":0.015873015873015872,"form":0.015873015873015872,"after":0.015873015873015872,"validation":0.015873015873015872,"it":0.015873015873015872,"returns":0.015873015873015872,"a":0.015873015873015872,"fail":0.015873015873015872,"status":0.015873015873015872,"so":0.015873015873015872,"can":0.015873015873015872,"be":0.015873015873015872,"returned":0.015873015873015872,"immediately":0.015873015873015872,"or":0.015873015873015872,"more":0.015873015873015872,"added":0.015873015873015872,"by":0.015873015873015872,"calling":0.015873015873015872,"multiple":0.015873015873015872,"times":0.015873015873015872,"before":0.015873015873015872,"returning":0.015873015873015872,"valid":0.015873015873015872,"will":0.015873015873015872,"also":0.015873015873015872,"set":0.015873015873015872,"to":0.015873015873015872,"false":0.015873015873015872,"use":0.015873015873015872,"overwrite":0.015873015873015872,"option":0.015873015873015872,"remove":0.015873015873015872,"all":0.015873015873015872,"previously":0.015873015873015872,"field":0.015873015873015872,"and":0.015873015873015872,"different":0.015873015873015872,"than":0.015873015873015872,"default":0.015873015873015872,"which":0.015873015873015872,"must":0.015873015873015872,"in":0.015873015873015872,"range":0.015873015873015872,"400-599":0.015873015873015872,"form-level":0.015873015873015872,"error":0.015873015873015872,"argument":0.015873015873015872,"skipped":0.015873015873015872,"an":0.015873015873015872,"empty":0.015873015873015872,"string":0.015873015873015872,"array-level":0.015873015873015872,"append":0.015873015873015872,"_errors":0.015873015873015872,"parameter":0.015873015873015872,"like":0.015873015873015872,"tags":0.015873015873015872},"6":{"message":0.043478260869565216,"is":0.043478260869565216,"a":0.043478260869565216,"convenience":0.043478260869565216,"method":0.043478260869565216,"for":0.043478260869565216,"setting":0.043478260869565216,"form":0.043478260869565216,"best":0.043478260869565216,"explained":0.043478260869565216,"by":0.043478260869565216,"an":0.043478260869565216,"example":0.043478260869565216,"note":0.043478260869565216,"that":0.043478260869565216,"the":0.043478260869565216,"status":0.043478260869565216,"option":0.043478260869565216,"must":0.043478260869565216,"be":0.043478260869565216,"in":0.043478260869565216,"range":0.043478260869565216,"400-599":0.043478260869565216},"7":{"returns":0.037037037037037035,"the":0.037037037037037035,"default":0.037037037037037035,"values":0.037037037037037035,"for":0.037037037037037035,"a":0.037037037037037035,"schema":0.037037037037037035,"either":0.037037037037037035,"superforms":0.037037037037037035,"defaults":0.037037037037037035,"or":0.037037037037037035,"ones":0.037037037037037035,"you":0.037037037037037035,"set":0.037037037037037035,"on":0.037037037037037035,"yourself":0.037037037037037035,"this":0.037037037037037035,"corresponds":0.037037037037037035,"to":0.037037037037037035,"form":0.037037037037037035,"data":0.037037037037037035,"returned":0.037037037037037035,"from":0.037037037037037035,"const":0.037037037037037035,"await":0.037037037037037035,"supervalidate":0.037037037037037035,"zod":0.037037037037037035},"8":{"when":0.012195121951219513,"using":0.012195121951219513,"an":0.012195121951219513,"endpoint":0.012195121951219513,"a":0.012195121951219513,"server":0.012195121951219513,"ts":0.012195121951219513,"file":0.012195121951219513,"instead":0.012195121951219513,"of":0.012195121951219513,"form":0.012195121951219513,"actions":0.012195121951219513,"you":0.012195121951219513,"must":0.012195121951219513,"return":0.012195121951219513,"actionresult":0.012195121951219513,"to":0.012195121951219513,"that":0.012195121951219513,"has":0.012195121951219513,"use":0.012195121951219513,"enhance":0.012195121951219513,"applied":0.012195121951219513,"anything":0.012195121951219513,"else":0.012195121951219513,"won't":0.012195121951219513,"work":0.012195121951219513,"not":0.012195121951219513,"even":0.012195121951219513,"throwing":0.012195121951219513,"redirect":0.012195121951219513,"since":0.012195121951219513,"superform":0.012195121951219513,"expects":0.012195121951219513,"the":0.012195121951219513,"function":0.012195121951219513,"helps":0.012195121951219513,"construct":0.012195121951219513,"one":0.012195121951219513,"in":0.012195121951219513,"response":0.012195121951219513,"object":0.012195121951219513,"so":0.012195121951219513,"can":0.012195121951219513,"validation":0.012195121951219513,"from":0.012195121951219513,"your":0.012195121951219513,"api":0.012195121951219513,"endpoints":0.012195121951219513,"default":0.012195121951219513,"status":0.012195121951219513,"codes":0.012195121951219513,"for":0.012195121951219513,"each":0.012195121951219513,"result":0.012195121951219513,"type":0.012195121951219513,"are":0.012195121951219513,"shown":0.012195121951219513,"don't":0.012195121951219513,"need":0.012195121951219513,"include":0.012195121951219513,"them":0.012195121951219513,"if":0.012195121951219513,"they're":0.012195121951219513,"same":0.012195121951219513,"additionally":0.012195121951219513,"version":0.012195121951219513,"send":0.012195121951219513,"flash":0.012195121951219513,"message":0.012195121951219513,"as":0.012195121951219513,"third":0.012195121951219513,"parameter":0.012195121951219513,"case":0.012195121951219513,"you're":0.012195121951219513,"messages":0.012195121951219513,"it":0.012195121951219513,"also":0.012195121951219513,"set":0.012195121951219513,"options":0.012195121951219513,"cookie":0.012195121951219513,"that's":0.012195121951219513,"being":0.012195121951219513},"9":{"src":0.2,"routes":0.2,"login":0.2,"server":0.2,"ts":0.2},"10":{"see":0.037037037037037035,"submitfunction":0.037037037037037035,"https":0.037037037037037035,"kit":0.037037037037037035,"svelte":0.037037037037037035,"dev":0.037037037037037035,"docs":0.037037037037037035,"types":0.037037037037037035,"public-types-submitfunction":0.037037037037037035,"for":0.037037037037037035,"details":0.037037037037037035,"about":0.037037037037037035,"the":0.037037037037037035,"onsubmit":0.037037037037037035,"arguments":0.037037037037037035,"and":0.037037037037037035,"actionresult":0.037037037037037035,"public-types-actionresult":0.037037037037037035,"onresult":0.037037037037037035,"spa":0.037037037037037035,"action":0.037037037037037035,"form":0.037037037037037035,"concepts":0.037037037037037035,"spa-action-form":0.037037037037037035,"string":0.037037037037037035,"value":0.037037037037037035,"option":0.037037037037037035},"11":{"the":0.05263157894736842,"defaults":0.05263157894736842,"function":0.05263157894736842,"can":0.05263157894736842,"be":0.05263157894736842,"useful":0.05263157894736842,"on":0.05263157894736842,"client":0.05263157894736842,"in":0.05263157894736842,"svelte":0.05263157894736842,"components":0.05263157894736842,"and":0.05263157894736842,"spa":0.05263157894736842,"mode":0.05263157894736842,"since":0.05263157894736842,"cannot":0.05263157894736842,"have":0.05263157894736842,"top-level":0.05263157894736842,"await":0.05263157894736842},"12":{"a":0.045454545454545456,"proxy":0.045454545454545456,"handles":0.045454545454545456,"bi-directional":0.045454545454545456,"updates":0.045454545454545456,"and":0.045454545454545456,"data":0.045454545454545456,"transformation":0.045454545454545456,"of":0.045454545454545456,"corresponding":0.045454545454545456,"form":0.045454545454545456,"field":0.045454545454545456,"in":0.045454545454545456,"either":0.045454545454545456,"the":0.045454545454545456,"or":0.045454545454545456,"it":0.045454545454545456,"points":0.045454545454545456,"to":0.045454545454545456,"will":0.045454545454545456,"reflect":0.045454545454545456,"other":0.045454545454545456},"13":{"creates":0.022727272727272728,"a":0.022727272727272728,"string":0.022727272727272728,"store":0.022727272727272728,"for":0.022727272727272728,"an":0.022727272727272728,"integer":0.022727272727272728,"field":0.022727272727272728,"in":0.022727272727272728,"the":0.022727272727272728,"schema":0.022727272727272728,"it's":0.022727272727272728,"rarely":0.022727272727272728,"needed":0.022727272727272728,"as":0.022727272727272728,"svelte":0.022727272727272728,"handles":0.022727272727272728,"this":0.022727272727272728,"automatically":0.022727272727272728,"with":0.022727272727272728,"bind":0.022727272727272728,"value":0.022727272727272728,"options":0.022727272727272728,"use":0.022727272727272728,"empty":0.022727272727272728,"option":0.022727272727272728,"to":0.022727272727272728,"set":0.022727272727272728,"some":0.022727272727272728,"of":0.022727272727272728,"defined":0.022727272727272728,"values":0.022727272727272728,"initiallyemptyifzero":0.022727272727272728,"if":0.022727272727272728,"initial":0.022727272727272728,"is":0.022727272727272728,"zero":0.022727272727272728,"show":0.022727272727272728,"placeholder":0.022727272727272728,"text":0.022727272727272728,"usually":0.022727272727272728,"combination":0.022727272727272728,"being":0.022727272727272728,"'zero'":0.022727272727272728},"14":{"creates":0.023255813953488372,"a":0.023255813953488372,"string":0.023255813953488372,"store":0.023255813953488372,"for":0.023255813953488372,"number":0.023255813953488372,"field":0.023255813953488372,"in":0.023255813953488372,"the":0.023255813953488372,"schema":0.023255813953488372,"it's":0.023255813953488372,"rarely":0.023255813953488372,"needed":0.023255813953488372,"as":0.023255813953488372,"svelte":0.023255813953488372,"handles":0.023255813953488372,"this":0.023255813953488372,"automatically":0.023255813953488372,"with":0.023255813953488372,"bind":0.023255813953488372,"value":0.023255813953488372,"options":0.023255813953488372,"use":0.023255813953488372,"empty":0.023255813953488372,"option":0.023255813953488372,"to":0.023255813953488372,"set":0.023255813953488372,"some":0.023255813953488372,"of":0.023255813953488372,"defined":0.023255813953488372,"values":0.023255813953488372,"initiallyemptyifzero":0.023255813953488372,"if":0.023255813953488372,"initial":0.023255813953488372,"is":0.023255813953488372,"zero":0.023255813953488372,"show":0.023255813953488372,"placeholder":0.023255813953488372,"text":0.023255813953488372,"usually":0.023255813953488372,"combination":0.023255813953488372,"being":0.023255813953488372,"'zero'":0.023255813953488372},"15":{"creates":0.038461538461538464,"a":0.038461538461538464,"string":0.038461538461538464,"store":0.038461538461538464,"for":0.038461538461538464,"boolean":0.038461538461538464,"schema":0.038461538461538464,"field":0.038461538461538464,"the":0.038461538461538464,"option":0.038461538461538464,"can":0.038461538461538464,"be":0.038461538461538464,"used":0.038461538461538464,"to":0.038461538461538464,"change":0.038461538461538464,"what":0.038461538461538464,"value":0.038461538461538464,"should":0.038461538461538464,"represent":0.038461538461538464,"true":0.038461538461538464,"an":0.038461538461538464,"empty":0.038461538461538464,"always":0.038461538461538464,"represents":0.038461538461538464,"false":0.038461538461538464,"options":0.038461538461538464},"16":{"creates":0.05263157894736842,"a":0.05263157894736842,"string":0.05263157894736842,"store":0.05263157894736842,"for":0.05263157894736842,"date":0.05263157894736842,"schema":0.05263157894736842,"field":0.05263157894736842,"the":0.05263157894736842,"option":0.05263157894736842,"can":0.05263157894736842,"be":0.05263157894736842,"used":0.05263157894736842,"to":0.05263157894736842,"change":0.05263157894736842,"proxied":0.05263157894736842,"format":0.05263157894736842,"of":0.05263157894736842,"options":0.05263157894736842},"17":{"creates":0.03571428571428571,"a":0.03571428571428571,"string":0.03571428571428571,"store":0.03571428571428571,"for":0.03571428571428571,"schema":0.03571428571428571,"field":0.03571428571428571,"it":0.03571428571428571,"may":0.03571428571428571,"look":0.03571428571428571,"redundant":0.03571428571428571,"but":0.03571428571428571,"the":0.03571428571428571,"option":0.03571428571428571,"can":0.03571428571428571,"be":0.03571428571428571,"useful":0.03571428571428571,"if":0.03571428571428571,"you":0.03571428571428571,"need":0.03571428571428571,"to":0.03571428571428571,"convert":0.03571428571428571,"an":0.03571428571428571,"empty":0.03571428571428571,"null":0.03571428571428571,"or":0.03571428571428571,"undefined":0.03571428571428571,"options":0.03571428571428571},"18":{"proxies":0.020833333333333332,"a":0.020833333333333332,"form":0.020833333333333332,"field":0.020833333333333332,"returning":0.020833333333333332,"stores":0.020833333333333332,"similar":0.020833333333333332,"to":0.020833333333333332,"superform":0.020833333333333332,"but":0.020833333333333332,"for":0.020833333333333332,"single":0.020833333333333332,"arrays":0.020833333333333332,"in":0.020833333333333332,"the":0.020833333333333332,"schema":0.020833333333333332,"see":0.020833333333333332,"below":0.020833333333333332,"how":0.020833333333333332,"create":0.020833333333333332,"an":0.020833333333333332,"arrayproxy":0.020833333333333332,"whole":0.020833333333333332,"object":0.020833333333333332,"returned":0.020833333333333332,"from":0.020833333333333332,"is":0.020833333333333332,"required":0.020833333333333332,"here":0.020833333333333332,"not":0.020833333333333332,"just":0.020833333333333332,"store":0.020833333333333332,"options":0.020833333333333332,"option":0.020833333333333332,"can":0.020833333333333332,"be":0.020833333333333332,"used":0.020833333333333332,"prevent":0.020833333333333332,"tainting":0.020833333333333332,"when":0.020833333333333332,"modifying":0.020833333333333332,"proxy":0.020833333333333332,"more":0.020833333333333332,"details":0.020833333333333332,"about":0.020833333333333332,"formfieldproxy":0.020833333333333332,"components":0.020833333333333332,"page":0.020833333333333332},"19":{"proxies":0.017857142857142856,"an":0.017857142857142856,"array":0.017857142857142856,"in":0.017857142857142856,"a":0.017857142857142856,"form":0.017857142857142856,"returning":0.017857142857142856,"stores":0.017857142857142856,"similar":0.017857142857142856,"to":0.017857142857142856,"superform":0.017857142857142856,"but":0.017857142857142856,"for":0.017857142857142856,"the":0.017857142857142856,"whole":0.017857142857142856,"object":0.017857142857142856,"returned":0.017857142857142856,"from":0.017857142857142856,"is":0.017857142857142856,"required":0.017857142857142856,"here":0.017857142857142856,"not":0.017857142857142856,"just":0.017857142857142856,"store":0.017857142857142856,"errors":0.017857142857142856,"displays":0.017857142857142856,"itself":0.017857142857142856,"example":0.017857142857142856,"if":0.017857142857142856,"number":0.017857142857142856,"of":0.017857142857142856,"items":0.017857142857142856,"are":0.017857142857142856,"too":0.017857142857142856,"few":0.017857142857142856,"valueerrors":0.017857142857142856,"that":0.017857142857142856,"lists":0.017857142857142856,"content":0.017857142857142856,"options":0.017857142857142856,"option":0.017857142857142856,"can":0.017857142857142856,"be":0.017857142857142856,"used":0.017857142857142856,"prevent":0.017857142857142856,"tainting":0.017857142857142856,"when":0.017857142857142856,"modifying":0.017857142857142856,"proxy":0.017857142857142856,"how":0.017857142857142856,"use":0.017857142857142856,"arrayproxy":0.017857142857142856,"component":0.017857142857142856,"available":0.017857142857142856,"on":0.017857142857142856,"stackblitz":0.017857142857142856},"20":{"proxies":0.05555555555555555,"field":0.05555555555555555,"access":0.05555555555555555,"in":0.05555555555555555,"any":0.05555555555555555,"object":0.05555555555555555,"usually":0.05555555555555555,"form":0.05555555555555555,"but":0.05555555555555555,"that":0.05555555555555555,"case":0.05555555555555555,"formfieldproxy":0.05555555555555555,"and":0.05555555555555555,"arrayproxy":0.05555555555555555,"are":0.05555555555555555,"more":0.05555555555555555,"convenient":0.05555555555555555,"options":0.05555555555555555},"21":{"given":0.06666666666666667,"the":0.06666666666666667,"following":0.06666666666666667,"schema":0.06666666666666667,"a":0.06666666666666667,"proxy":0.06666666666666667,"for":0.06666666666666667,"html":0.06666666666666667,"date":0.06666666666666667,"field":0.06666666666666667,"can":0.06666666666666667,"be":0.06666666666666667,"used":0.06666666666666667,"like":0.06666666666666667,"this":0.06666666666666667},"22":{"superdebug":0.03333333333333333,"is":0.03333333333333333,"a":0.03333333333333333,"must-have":0.03333333333333333,"debugging":0.03333333333333333,"component":0.03333333333333333,"that":0.03333333333333333,"gives":0.03333333333333333,"you":0.03333333333333333,"colorized":0.03333333333333333,"and":0.03333333333333333,"nicely":0.03333333333333333,"formatted":0.03333333333333333,"output":0.03333333333333333,"for":0.03333333333333333,"any":0.03333333333333333,"data":0.03333333333333333,"structure":0.03333333333333333,"usually":0.03333333333333333,"form":0.03333333333333333,"more":0.03333333333333333,"information":0.03333333333333333,"usage":0.03333333333333333,"examples":0.03333333333333333,"can":0.03333333333333333,"be":0.03333333333333333,"found":0.03333333333333333,"on":0.03333333333333333,"the":0.03333333333333333,"page":0.03333333333333333},"23":{},"24":{"by":0.018867924528301886,"looking":0.018867924528301886,"at":0.018867924528301886,"the":0.018867924528301886,"rather":0.018867924528301886,"simple":0.018867924528301886,"get":0.018867924528301886,"started":0.018867924528301886,"tutorial":0.018867924528301886,"it's":0.018867924528301886,"obvious":0.018867924528301886,"that":0.018867924528301886,"quite":0.018867924528301886,"a":0.018867924528301886,"bit":0.018867924528301886,"of":0.018867924528301886,"boilerplate":0.018867924528301886,"code":0.018867924528301886,"adds":0.018867924528301886,"up":0.018867924528301886,"for":0.018867924528301886,"superform":0.018867924528301886,"and":0.018867924528301886,"it":0.018867924528301886,"also":0.018867924528301886,"gets":0.018867924528301886,"bad":0.018867924528301886,"in":0.018867924528301886,"script":0.018867924528301886,"part":0.018867924528301886,"when":0.018867924528301886,"you":0.018867924528301886,"have":0.018867924528301886,"more":0.018867924528301886,"than":0.018867924528301886,"couple":0.018867924528301886,"forms":0.018867924528301886,"on":0.018867924528301886,"page":0.018867924528301886,"this":0.018867924528301886,"leads":0.018867924528301886,"to":0.018867924528301886,"question":0.018867924528301886,"whether":0.018867924528301886,"form":0.018867924528301886,"its":0.018867924528301886,"fields":0.018867924528301886,"can":0.018867924528301886,"be":0.018867924528301886,"factored":0.018867924528301886,"out":0.018867924528301886,"into":0.018867924528301886,"components":0.018867924528301886},"25":{"to":0.017543859649122806,"do":0.017543859649122806,"this":0.017543859649122806,"you":0.017543859649122806,"need":0.017543859649122806,"the":0.017543859649122806,"type":0.017543859649122806,"of":0.017543859649122806,"schema":0.017543859649122806,"which":0.017543859649122806,"can":0.017543859649122806,"be":0.017543859649122806,"defined":0.017543859649122806,"as":0.017543859649122806,"follows":0.017543859649122806,"src":0.017543859649122806,"lib":0.017543859649122806,"schemas":0.017543859649122806,"ts":0.017543859649122806,"now":0.017543859649122806,"import":0.017543859649122806,"and":0.017543859649122806,"use":0.017543859649122806,"in":0.017543859649122806,"a":0.017543859649122806,"separate":0.017543859649122806,"component":0.017543859649122806,"routes":0.017543859649122806,"loginform":0.017543859649122806,"svelte":0.017543859649122806,"it":0.017543859649122806,"by":0.017543859649122806,"passing":0.017543859649122806,"form":0.017543859649122806,"data":0.017543859649122806,"from":0.017543859649122806,"page":0.017543859649122806,"making":0.017543859649122806,"much":0.017543859649122806,"less":0.017543859649122806,"cluttered":0.017543859649122806,"if":0.017543859649122806,"your":0.017543859649122806,"input":0.017543859649122806,"output":0.017543859649122806,"types":0.017543859649122806,"differ":0.017543859649122806,"or":0.017543859649122806,"have":0.017543859649122806,"strongly":0.017543859649122806,"typed":0.017543859649122806,"status":0.017543859649122806,"message":0.017543859649122806,"add":0.017543859649122806,"two":0.017543859649122806,"additional":0.017543859649122806,"parameters":0.017543859649122806},"26":{"4":0.012345679012345678,"since":0.012345679012345678,"bind":0.012345679012345678,"is":0.012345679012345678,"available":0.012345679012345678,"on":0.012345679012345678,"svelte":0.012345679012345678,"components":0.012345679012345678,"we":0.012345679012345678,"can":0.012345679012345678,"make":0.012345679012345678,"a":0.012345679012345678,"textinput":0.012345679012345678,"component":0.012345679012345678,"quite":0.012345679012345678,"easily":0.012345679012345678,"the":0.012345679012345678,"type":0.012345679012345678,"attribute":0.012345679012345678,"input":0.012345679012345678,"elements":0.012345679012345678,"must":0.012345679012345678,"be":0.012345679012345678,"hard-coded":0.012345679012345678,"in":0.012345679012345678,"explained":0.012345679012345678,"here":0.012345679012345678,"especially":0.012345679012345678,"important":0.012345679012345678,"for":0.012345679012345678,"number":0.012345679012345678,"page":0.012345679012345678,"note":0.012345679012345678,"that":0.012345679012345678,"you":0.012345679012345678,"directly":0.012345679012345678,"to":0.012345679012345678,"form":0.012345679012345678,"tags":0.012345679012345678,"with":0.012345679012345678,"index":0.012345679012345678,"cannot":0.012345679012345678,"use":0.012345679012345678,"each":0.012345679012345678,"loop":0.012345679012345678,"variable":0.012345679012345678,"hence":0.012345679012345678,"underscore":0.012345679012345678,"this":0.012345679012345678,"bit":0.012345679012345678,"better":0.012345679012345678,"and":0.012345679012345678,"will":0.012345679012345678,"certainly":0.012345679012345678,"help":0.012345679012345678,"when":0.012345679012345678,"require":0.012345679012345678,"some":0.012345679012345678,"styling":0.012345679012345678,"but":0.012345679012345678,"there":0.012345679012345678,"are":0.012345679012345678,"still":0.012345679012345678,"plenty":0.012345679012345678,"of":0.012345679012345678,"attributes":0.012345679012345678,"do":0.012345679012345678,"even":0.012345679012345678,"things":0.012345679012345678,"get":0.012345679012345678,"advanced":0.012345679012345678,"from":0.012345679012345678,"so":0.012345679012345678,"an":0.012345679012345678,"alternative":0.012345679012345678,"formsnap":0.012345679012345678,"library":0.012345679012345678,"which":0.012345679012345678,"simplifies":0.012345679012345678,"componentization":0.012345679012345678,"lot":0.012345679012345678},"27":{"you":0.012658227848101266,"may":0.012658227848101266,"have":0.012658227848101266,"seen":0.012658227848101266,"proxy":0.012658227848101266,"objects":0.012658227848101266,"being":0.012658227848101266,"used":0.012658227848101266,"for":0.012658227848101266,"converting":0.012658227848101266,"an":0.012658227848101266,"input":0.012658227848101266,"field":0.012658227848101266,"string":0.012658227848101266,"like":0.012658227848101266,"2023-04-12":0.012658227848101266,"into":0.012658227848101266,"a":0.012658227848101266,"date":0.012658227848101266,"but":0.012658227848101266,"that's":0.012658227848101266,"special":0.012658227848101266,"usage":0.012658227848101266,"of":0.012658227848101266,"proxies":0.012658227848101266,"they":0.012658227848101266,"can":0.012658227848101266,"actually":0.012658227848101266,"be":0.012658227848101266,"any":0.012658227848101266,"part":0.012658227848101266,"the":0.012658227848101266,"form":0.012658227848101266,"data":0.012658227848101266,"to":0.012658227848101266,"store":0.012658227848101266,"that":0.012658227848101266,"modify":0.012658227848101266,"if":0.012658227848101266,"want":0.012658227848101266,"update":0.012658227848101266,"just":0.012658227848101266,"name":0.012658227848101266,"example":0.012658227848101266,"updates":0.012658227848101266,"will":0.012658227848101266,"reflect":0.012658227848101266,"in":0.012658227848101266,"and":0.012658227848101266,"vice":0.012658227848101266,"versa":0.012658227848101266,"note":0.012658227848101266,"this":0.012658227848101266,"also":0.012658227848101266,"taint":0.012658227848101266,"so":0.012658227848101266,"is":0.012658227848101266,"not":0.012658227848101266,"intended":0.012658227848101266,"use":0.012658227848101266,"whole":0.012658227848101266,"superform":0.012658227848101266,"object":0.012658227848101266,"add":0.012658227848101266,"option":0.012658227848101266,"fieldproxy":0.012658227848101266,"isn't":0.012658227848101266,"enough":0.012658227848101266,"here":0.012658227848101266,"however":0.012658227848101266,"we'd":0.012658227848101266,"still":0.012658227848101266,"make":0.012658227848101266,"errors":0.012658227848101266,"constraints":0.012658227848101266,"resulting":0.012658227848101266,"same":0.012658227848101266,"problem":0.012658227848101266,"again":0.012658227848101266},"28":{"the":0.009259259259259259,"solution":0.009259259259259259,"is":0.009259259259259259,"to":0.009259259259259259,"use":0.009259259259259259,"a":0.009259259259259259,"formfieldproxy":0.009259259259259259,"which":0.009259259259259259,"helper":0.009259259259259259,"function":0.009259259259259259,"for":0.009259259259259259,"producing":0.009259259259259259,"above":0.009259259259259259,"proxies":0.009259259259259259,"from":0.009259259259259259,"form":0.009259259259259259,"do":0.009259259259259259,"this":0.009259259259259259,"we":0.009259259259259259,"cannot":0.009259259259259259,"immediately":0.009259259259259259,"deconstruct":0.009259259259259259,"what":0.009259259259259259,"need":0.009259259259259259,"superform":0.009259259259259259,"since":0.009259259259259259,"takes":0.009259259259259259,"itself":0.009259259259259259,"as":0.009259259259259259,"an":0.009259259259259259,"argument":0.009259259259259259,"but":0.009259259259259259,"didn't":0.009259259259259259,"want":0.009259259259259259,"pass":0.009259259259259259,"all":0.009259259259259259,"those":0.009259259259259259,"so":0.009259259259259259,"let's":0.009259259259259259,"imagine":0.009259259259259259,"component":0.009259259259259259,"that":0.009259259259259259,"will":0.009259259259259259,"handle":0.009259259259259259,"even":0.009259259259259259,"proxy":0.009259259259259259,"creation":0.009259259259259259,"us":0.009259259259259259,"how":0.009259259259259259,"nice":0.009259259259259259,"would":0.009259259259259259,"be":0.009259259259259259,"can":0.009259259259259259,"actually":0.009259259259259259,"pulled":0.009259259259259259,"off":0.009259259259259259,"in":0.009259259259259259,"typesafe":0.009259259259259259,"way":0.009259259259259259,"with":0.009259259259259259,"bit":0.009259259259259259,"of":0.009259259259259259,"svelte":0.009259259259259259,"magic":0.009259259259259259,"syntax":0.009259259259259259,"requires":0.009259259259259259,"record":0.009259259259259259,"string":0.009259259259259259,"unknown":0.009259259259259259,"defined":0.009259259259259259,"before":0.009259259259259259,"its":0.009259259259259259,"used":0.009259259259259259,"generics":0.009259259259259259,"attribute":0.009259259259259259,"have":0.009259259259259259,"import":0.009259259259259259,"it":0.009259259259259259,"module":0.009259259259259259,"context":0.009259259259259259,"now":0.009259259259259259,"when":0.009259259259259259,"t":0.009259259259259259,"schema":0.009259259259259259,"object":0.009259259259259259,"type":0.009259259259259259,"prop":0.009259259259259259,"ensure":0.009259259259259259,"only":0.009259259259259259,"matching":0.009259259259259259,"field":0.009259259259259259,"formpathleaves":0.009259259259259259,"prevents":0.009259259259259259,"using":0.009259259259259259,"isn't":0.009259259259259259,"at":0.009259259259259259,"end":0.009259259259259259,"leaves":0.009259259259259259,"tree":0.009259259259259259,"means":0.009259259259259259,"arrays":0.009259259259259259,"and":0.009259259259259259,"objects":0.009259259259259259,"array-level":0.009259259259259259,"errors":0.009259259259259259,"are":0.009259259259259259,"handled":0.009259259259259259,"like":0.009259259259259259},"29":{"checkboxes":0.013513513513513514,"don't":0.013513513513513514,"bind":0.013513513513513514,"with":0.013513513513513514,"value":0.013513513513513514,"but":0.013513513513513514,"checked":0.013513513513513514,"which":0.013513513513513514,"requires":0.013513513513513514,"a":0.013513513513513514,"boolean":0.013513513513513514,"because":0.013513513513513514,"our":0.013513513513513514,"component":0.013513513513513514,"is":0.013513513513513514,"generic":0.013513513513513514,"returned":0.013513513513513514,"from":0.013513513513513514,"formfieldproxy":0.013513513513513514,"unknown":0.013513513513513514,"we":0.013513513513513514,"need":0.013513513513513514,"here":0.013513513513513514,"then":0.013513513513513514,"can":0.013513513513513514,"add":0.013513513513513514,"type":0.013513513513513514,"parameter":0.013513513513513514,"to":0.013513513513513514,"formpathleaves":0.013513513513513514,"narrow":0.013513513513513514,"it":0.013513513513513514,"down":0.013513513513513514,"specific":0.013513513513513514,"and":0.013513513513513514,"use":0.013513513513513514,"the":0.013513513513513514,"satisfies":0.013513513513513514,"operator":0.013513513513513514,"specify":0.013513513513513514,"this":0.013513513513513514,"will":0.013513513513513514,"also":0.013513513513513514,"field":0.013513513513513514,"prop":0.013513513513513514,"so":0.013513513513513514,"only":0.013513513513513514,"fields":0.013513513513513514,"in":0.013513513513513514,"schema":0.013513513513513514,"be":0.013513513513513514,"selected":0.013513513513513514,"when":0.013513513513513514,"using":0.013513513513513514,"especially":0.013513513513513514,"grouped":0.013513513513513514,"ones":0.013513513513513514,"tricky":0.013513513513513514,"handle":0.013513513513513514,"read":0.013513513513513514,"svelte":0.013513513513513514,"tutorial":0.013513513513513514,"about":0.013513513513513514,"group":0.013513513513513514,"see":0.013513513513513514,"ice":0.013513513513513514,"cream":0.013513513513513514,"example":0.013513513513513514,"on":0.013513513513513514,"stackblitz":0.013513513513513514,"if":0.013513513513513514,"you're":0.013513513513513514,"having":0.013513513513513514,"trouble":0.013513513513513514},"30":{"using":0.013157894736842105,"this":0.013157894736842105,"component":0.013157894736842105,"is":0.013157894736842105,"now":0.013157894736842105,"as":0.013157894736842105,"simple":0.013157894736842105,"but":0.013157894736842105,"to":0.013157894736842105,"show":0.013157894736842105,"off":0.013157894736842105,"some":0.013157894736842105,"super":0.013157894736842105,"proxy":0.013157894736842105,"power":0.013157894736842105,"let's":0.013157894736842105,"recreate":0.013157894736842105,"the":0.013157894736842105,"tags":0.013157894736842105,"example":0.013157894736842105,"above":0.013157894736842105,"with":0.013157894736842105,"textfield":0.013157894736842105,"we":0.013157894736842105,"can":0.013157894736842105,"produce":0.013157894736842105,"a":0.013157894736842105,"type-safe":0.013157894736842105,"text":0.013157894736842105,"field":0.013157894736842105,"for":0.013157894736842105,"any":0.013157894736842105,"object":0.013157894736842105,"inside":0.013157894736842105,"our":0.013157894736842105,"data":0.013157894736842105,"which":0.013157894736842105,"will":0.013157894736842105,"update":0.013157894736842105,"form":0.013157894736842105,"store":0.013157894736842105,"in":0.013157894736842105,"general":0.013157894736842105,"nested":0.013157894736842105,"requires":0.013157894736842105,"datatype":0.013157894736842105,"option":0.013157894736842105,"be":0.013157894736842105,"set":0.013157894736842105,"'json'":0.013157894736842105,"works":0.013157894736842105,"without":0.013157894736842105,"it":0.013157894736842105,"and":0.013157894736842105,"even":0.013157894736842105,"use":0.013157894736842105,"enhance":0.013157894736842105,"since":0.013157894736842105,"arrays":0.013157894736842105,"of":0.013157894736842105,"primitive":0.013157894736842105,"values":0.013157894736842105,"are":0.013157894736842105,"coerced":0.013157894736842105,"automatically":0.013157894736842105,"i":0.013157894736842105,"hope":0.013157894736842105,"you":0.013157894736842105,"feel":0.013157894736842105,"under":0.013157894736842105,"your":0.013157894736842105,"fingers":0.013157894736842105,"superpowers":0.013157894736842105,"that":0.013157894736842105,"superforms":0.013157894736842105,"bring":0.013157894736842105},"31":{},"32":{"contributions":0.02040816326530612,"to":0.02040816326530612,"superforms":0.02040816326530612,"are":0.02040816326530612,"very":0.02040816326530612,"welcome":0.02040816326530612,"the":0.02040816326530612,"issues":0.02040816326530612,"and":0.02040816326530612,"discussion":0.02040816326530612,"pages":0.02040816326530612,"on":0.02040816326530612,"github":0.02040816326530612,"always":0.02040816326530612,"open":0.02040816326530612,"for":0.02040816326530612,"comments":0.02040816326530612,"if":0.02040816326530612,"you":0.02040816326530612,"want":0.02040816326530612,"contribute":0.02040816326530612,"some":0.02040816326530612,"code":0.02040816326530612,"it's":0.02040816326530612,"quite":0.02040816326530612,"easy":0.02040816326530612,"just":0.02040816326530612,"fork":0.02040816326530612,"either":0.02040816326530612,"repository":0.02040816326530612,"or":0.02040816326530612,"its":0.02040816326530612,"website":0.02040816326530612,"then":0.02040816326530612,"need":0.02040816326530612,"execute":0.02040816326530612,"following":0.02040816326530612,"be":0.02040816326530612,"up":0.02040816326530612,"running":0.02040816326530612,"find":0.02040816326530612,"a":0.02040816326530612,"typo":0.02040816326530612,"can":0.02040816326530612,"make":0.02040816326530612,"quick":0.02040816326530612,"pr":0.02040816326530612,"directly":0.02040816326530612,"in":0.02040816326530612},"33":{"if":0.02857142857142857,"you":0.02857142857142857,"want":0.02857142857142857,"to":0.02857142857142857,"contribute":0.02857142857142857,"the":0.02857142857142857,"future":0.02857142857142857,"development":0.02857142857142857,"of":0.02857142857142857,"superforms":0.02857142857142857,"can":0.02857142857142857,"make":0.02857142857142857,"a":0.02857142857142857,"donation":0.02857142857142857,"have":0.02857142857142857,"appreciated":0.02857142857142857,"my":0.02857142857142857,"support":0.02857142857142857,"on":0.02857142857142857,"discord":0.02857142857142857,"and":0.02857142857142857,"github":0.02857142857142857,"or":0.02857142857142857,"ensure":0.02857142857142857,"that":0.02857142857142857,"things":0.02857142857142857,"keep":0.02857142857142857,"rolling":0.02857142857142857,"please":0.02857142857142857,"open":0.02857142857142857,"source":0.02857142857142857,"software":0.02857142857142857,"in":0.02857142857142857,"this":0.02857142857142857,"way":0.02857142857142857},"34":{"an":0.01818181818181818,"excellent":0.01818181818181818,"use":0.01818181818181818,"case":0.01818181818181818,"for":0.01818181818181818,"superforms":0.01818181818181818,"is":0.01818181818181818,"a":0.01818181818181818,"backend":0.01818181818181818,"interface":0.01818181818181818,"commonly":0.01818181818181818,"used":0.01818181818181818,"as":0.01818181818181818,"in":0.01818181818181818,"the":0.01818181818181818,"acronym":0.01818181818181818,"crud":0.01818181818181818,"create":0.01818181818181818,"read":0.01818181818181818,"update":0.01818181818181818,"delete":0.01818181818181818,"display":0.01818181818181818,"empty":0.01818181818181818,"formdisplay":0.01818181818181818,"formpost":0.01818181818181818,"form":0.01818181818181818,"validate":0.01818181818181818,"datapost":0.01818181818181818,"datacreate":0.01818181818181818,"new":0.01818181818181818,"entity":0.01818181818181818,"with":0.01818181818181818,"data":0.01818181818181818,"fetch":0.01818181818181818,"it":0.01818181818181818,"dataupdate":0.01818181818181818,"profit":0.01818181818181818,"because":0.01818181818181818,"you":0.01818181818181818,"can":0.01818181818181818,"send":0.01818181818181818,"model":0.01818181818181818,"to":0.01818181818181818,"supervalidate":0.01818181818181818,"function":0.01818181818181818,"and":0.01818181818181818,"have":0.01818181818181818,"directly":0.01818181818181818,"populated":0.01818181818181818,"becomes":0.01818181818181818,"quite":0.01818181818181818,"easy":0.01818181818181818,"implement":0.01818181818181818,"above":0.01818181818181818,"steps":0.01818181818181818},"35":{"to":0.14285714285714285,"follow":0.14285714285714285,"along":0.14285714285714285,"there":0.14285714285714285,"are":0.14285714285714285,"three":0.14285714285714285,"ways":0.14285714285714285},"36":{"1":0.04,"instead":0.04,"of":0.04,"the":0.04,"text":0.04,"version":0.04,"below":0.04,"here's":0.04,"video":0.04,"it's":0.04,"using":0.04,"superforms":0.04,"but":0.04,"differences":0.04,"are":0.04,"small":0.04,"use":0.04,"an":0.04,"adapter":0.04,"and":0.04,"add":0.04,"resetform":0.04,"false":0.04,"to":0.04,"options":0.04},"37":{"30":0.05263157894736842,"the":0.05263157894736842,"code":0.05263157894736842,"is":0.05263157894736842,"available":0.05263157894736842,"on":0.05263157894736842,"stackblitz":0.05263157894736842,"just":0.05263157894736842,"click":0.05263157894736842,"link":0.05263157894736842,"and":0.05263157894736842,"you're":0.05263157894736842,"up":0.05263157894736842,"running":0.05263157894736842,"in":0.05263157894736842,"browser":0.05263157894736842,"less":0.05263157894736842,"than":0.05263157894736842,"seconds":0.05263157894736842},"38":{"start":0.024390243902439025,"from":0.024390243902439025,"scratch":0.024390243902439025,"in":0.024390243902439025,"a":0.024390243902439025,"new":0.024390243902439025,"sveltekit":0.024390243902439025,"project":0.024390243902439025,"by":0.024390243902439025,"executing":0.024390243902439025,"one":0.024390243902439025,"of":0.024390243902439025,"the":0.024390243902439025,"following":0.024390243902439025,"commands":0.024390243902439025,"your":0.024390243902439025,"directory":0.024390243902439025,"select":0.024390243902439025,"skeleton":0.024390243902439025,"and":0.024390243902439025,"typescript":0.024390243902439025,"syntax":0.024390243902439025,"at":0.024390243902439025,"prompts":0.024390243902439025,"rest":0.024390243902439025,"is":0.024390243902439025,"up":0.024390243902439025,"to":0.024390243902439025,"you":0.024390243902439025,"then":0.024390243902439025,"add":0.024390243902439025,"this":0.024390243902439025,"head":0.024390243902439025,"src":0.024390243902439025,"app":0.024390243902439025,"html":0.024390243902439025,"for":0.024390243902439025,"much":0.024390243902439025,"nicer":0.024390243902439025,"visual":0.024390243902439025,"experience":0.024390243902439025},"39":{"when":0.02857142857142857,"you":0.02857142857142857,"have":0.02857142857142857,"the":0.02857142857142857,"code":0.02857142857142857,"up":0.02857142857142857,"and":0.02857142857142857,"running":0.02857142857142857,"we":0.02857142857142857,"need":0.02857142857142857,"a":0.02857142857142857,"user":0.02857142857142857,"schema":0.02857142857142857,"mock":0.02857142857142857,"database":0.02857142857142857,"for":0.02857142857142857,"testing":0.02857142857142857,"will":0.02857142857142857,"use":0.02857142857142857,"zod":0.02857142857142857,"as":0.02857142857142857,"validation":0.02857142857142857,"library":0.02857142857142857,"but":0.02857142857142857,"its":0.02857142857142857,"can":0.02857142857142857,"easily":0.02857142857142857,"be":0.02857142857142857,"converted":0.02857142857142857,"to":0.02857142857142857,"others":0.02857142857142857,"src":0.02857142857142857,"lib":0.02857142857142857,"users":0.02857142857142857,"ts":0.02857142857142857},"40":{"when":0.010309278350515464,"starting":0.010309278350515464,"on":0.010309278350515464,"the":0.010309278350515464,"server":0.010309278350515464,"page":0.010309278350515464,"we'll":0.010309278350515464,"encounter":0.010309278350515464,"a":0.010309278350515464,"thing":0.010309278350515464,"about":0.010309278350515464,"validation":0.010309278350515464,"schemas":0.010309278350515464,"our":0.010309278350515464,"userschema":0.010309278350515464,"is":0.010309278350515464,"for":0.010309278350515464,"database":0.010309278350515464,"integrity":0.010309278350515464,"so":0.010309278350515464,"an":0.010309278350515464,"id":0.010309278350515464,"must":0.010309278350515464,"exist":0.010309278350515464,"there":0.010309278350515464,"but":0.010309278350515464,"we":0.010309278350515464,"want":0.010309278350515464,"to":0.010309278350515464,"create":0.010309278350515464,"entity":0.010309278350515464,"and":0.010309278350515464,"therefore":0.010309278350515464,"allow":0.010309278350515464,"not":0.010309278350515464,"creating":0.010309278350515464,"users":0.010309278350515464,"fortunately":0.010309278350515464,"zod":0.010309278350515464,"makes":0.010309278350515464,"it":0.010309278350515464,"quite":0.010309278350515464,"easy":0.010309278350515464,"append":0.010309278350515464,"modifier":0.010309278350515464,"field":0.010309278350515464,"without":0.010309278350515464,"duplicating":0.010309278350515464,"whole":0.010309278350515464,"schema":0.010309278350515464,"by":0.010309278350515464,"extending":0.010309278350515464,"src":0.010309278350515464,"routes":0.010309278350515464,"ts":0.010309278350515464,"of":0.010309278350515464,"course":0.010309278350515464,"original":0.010309278350515464,"kept":0.010309278350515464,"intact":0.010309278350515464,"with":0.010309278350515464,"this":0.010309278350515464,"update":0.010309278350515464,"can":0.010309278350515464,"now":0.010309278350515464,"use":0.010309278350515464,"same":0.010309278350515464,"which":0.010309278350515464,"means":0.010309278350515464,"that":0.010309278350515464,"they":0.010309278350515464,"share":0.010309278350515464,"user":0.010309278350515464,"interface":0.010309278350515464,"fundamental":0.010309278350515464,"idea":0.010309278350515464,"in":0.010309278350515464,"superforms":0.010309278350515464,"you":0.010309278350515464,"pass":0.010309278350515464,"either":0.010309278350515464,"empty":0.010309278350515464,"data":0.010309278350515464,"or":0.010309278350515464,"partially":0.010309278350515464,"matching":0.010309278350515464,"supervalidate":0.010309278350515464,"will":0.010309278350515464,"generate":0.010309278350515464,"default":0.010309278350515464,"values":0.010309278350515464,"any":0.010309278350515464,"non-specified":0.010309278350515464,"fields":0.010309278350515464,"ensuring":0.010309278350515464,"type":0.010309278350515464,"safety":0.010309278350515464},"41":{"404":0.009259259259259259,"let's":0.009259259259259259,"add":0.009259259259259259,"a":0.009259259259259259,"load":0.009259259259259259,"function":0.009259259259259259,"to":0.009259259259259259,"the":0.009259259259259259,"page":0.009259259259259259,"using":0.009259259259259259,"sveltekit":0.009259259259259259,"route":0.009259259259259259,"parameters":0.009259259259259259,"look":0.009259259259259259,"up":0.009259259259259259,"requested":0.009259259259259259,"user":0.009259259259259259,"src":0.009259259259259259,"routes":0.009259259259259259,"users":0.009259259259259259,"id":0.009259259259259259,"server":0.009259259259259259,"ts":0.009259259259259259,"some":0.009259259259259259,"simple":0.009259259259259259,"logic":0.009259259259259259,"is":0.009259259259259259,"used":0.009259259259259259,"find":0.009259259259259259,"and":0.009259259259259259,"then":0.009259259259259259,"detect":0.009259259259259259,"if":0.009259259259259259,"should":0.009259259259259259,"be":0.009259259259259259,"displayed":0.009259259259259259,"at":0.009259259259259259,"end":0.009259259259259259,"we're":0.009259259259259259,"returning":0.009259259259259259,"form":0.009259259259259259,"as":0.009259259259259259,"usual":0.009259259259259259,"but":0.009259259259259259,"also":0.009259259259259259,"so":0.009259259259259259,"they":0.009259259259259259,"can":0.009259259259259259,"list":0.009259259259259259,"sometimes":0.009259259259259259,"crudl":0.009259259259259259,"an":0.009259259259259259,"acronym":0.009259259259259259,"since":0.009259259259259259,"listing":0.009259259259259259,"fundamental":0.009259259259259259,"data":0.009259259259259259,"management":0.009259259259259259,"now":0.009259259259259259,"that":0.009259259259259259,"we":0.009259259259259259,"have":0.009259259259259259,"loaded":0.009259259259259259,"display":0.009259259259259259,"it":0.009259259259259259,"in":0.009259259259259259,"component":0.009259259259259259,"svelte":0.009259259259259259,"there":0.009259259259259259,"are":0.009259259259259259,"plenty":0.009259259259259259,"of":0.009259259259259259,"variables":0.009259259259259259,"extracted":0.009259259259259259,"from":0.009259259259259259,"superform":0.009259259259259259,"refer":0.009259259259259259,"api":0.009259259259259259,"reference":0.009259259259259259,"for":0.009259259259259259,"complete":0.009259259259259259,"we've":0.009259259259259259,"setting":0.009259259259259259,"resetform":0.009259259259259259,"false":0.009259259259259259,"kept":0.009259259259259259,"after":0.009259259259259259,"editing":0.009259259259259259,"prepared":0.009259259259259259,"status":0.009259259259259259,"message":0.009259259259259259,"test":0.009259259259259259,"success":0.009259259259259259,"or":0.009259259259259259,"failure":0.009259259259259259,"create":0.009259259259259259,"update":0.009259259259259259,"title":0.009259259259259259,"itself":0.009259259259259259,"continued":0.009259259259259259,"remember":0.009259259259259259,"use":0.009259259259259259,"superdebug":0.009259259259259259,"you":0.009259259259259259,"want":0.009259259259259259,"see":0.009259259259259259,"your":0.009259259259259259,"live":0.009259259259259259},"42":{"3":0.018867924528301886,"4":0.018867924528301886,"150":0.018867924528301886,"with":0.018867924528301886,"this":0.018867924528301886,"the":0.018867924528301886,"form":0.018867924528301886,"should":0.018867924528301886,"be":0.018867924528301886,"ready":0.018867924528301886,"for":0.018867924528301886,"creating":0.018867924528301886,"a":0.018867924528301886,"user":0.018867924528301886,"let's":0.018867924528301886,"add":0.018867924528301886,"action":0.018867924528301886,"that":0.018867924528301886,"src":0.018867924528301886,"routes":0.018867924528301886,"users":0.018867924528301886,"id":0.018867924528301886,"page":0.018867924528301886,"server":0.018867924528301886,"ts":0.018867924528301886,"is":0.018867924528301886,"where":0.018867924528301886,"you":0.018867924528301886,"access":0.018867924528301886,"your":0.018867924528301886,"database":0.018867924528301886,"api":0.018867924528301886,"in":0.018867924528301886,"our":0.018867924528301886,"case":0.018867924528301886,"we're":0.018867924528301886,"only":0.018867924528301886,"doing":0.018867924528301886,"some":0.018867924528301886,"array":0.018867924528301886,"manipulations":0.018867924528301886,"we":0.018867924528301886,"have":0.018867924528301886,"out":0.018867924528301886,"of":0.018867924528301886,"letters":0.018867924528301886,"crud":0.018867924528301886,"about":0.018867924528301886,"lines":0.018867924528301886,"code":0.018867924528301886,"half":0.018867924528301886,"it":0.018867924528301886,"html":0.018867924528301886},"43":{"404":0.008849557522123894,"to":0.008849557522123894,"delete":0.008849557522123894,"a":0.008849557522123894,"user":0.008849557522123894,"we":0.008849557522123894,"can":0.008849557522123894,"make":0.008849557522123894,"use":0.008849557522123894,"of":0.008849557522123894,"the":0.008849557522123894,"html":0.008849557522123894,"button":0.008849557522123894,"element":0.008849557522123894,"which":0.008849557522123894,"have":0.008849557522123894,"name":0.008849557522123894,"and":0.008849557522123894,"value":0.008849557522123894,"that":0.008849557522123894,"will":0.008849557522123894,"be":0.008849557522123894,"passed":0.008849557522123894,"only":0.008849557522123894,"if":0.008849557522123894,"specific":0.008849557522123894,"was":0.008849557522123894,"used":0.008849557522123894,"post":0.008849557522123894,"form":0.008849557522123894,"add":0.008849557522123894,"this":0.008849557522123894,"at":0.008849557522123894,"end":0.008849557522123894,"src":0.008849557522123894,"routes":0.008849557522123894,"users":0.008849557522123894,"id":0.008849557522123894,"page":0.008849557522123894,"svelte":0.008849557522123894,"in":0.008849557522123894,"action":0.008849557522123894,"now":0.008849557522123894,"formdata":0.008849557522123894,"from":0.008849557522123894,"request":0.008849557522123894,"check":0.008849557522123894,"pressed":0.008849557522123894,"also":0.008849557522123894,"delayed":0.008849557522123894,"mimick":0.008849557522123894,"behavior":0.008849557522123894,"slow":0.008849557522123894,"network":0.008849557522123894,"call":0.008849557522123894,"shouldn't":0.008849557522123894,"schema":0.008849557522123894,"since":0.008849557522123894,"are":0.008849557522123894,"not":0.008849557522123894,"part":0.008849557522123894,"but":0.008849557522123894,"it's":0.008849557522123894,"big":0.008849557522123894,"change":0.008849557522123894,"server":0.008849557522123894,"ts":0.008849557522123894,"all":0.008849557522123894,"four":0.008849557522123894,"crud":0.008849557522123894,"operations":0.008849557522123894,"complete":0.008849557522123894,"an":0.008849557522123894,"issue":0.008849557522123894,"however":0.008849557522123894,"is":0.008849557522123894,"redirect":0.008849557522123894,"after":0.008849557522123894,"deleting":0.008849557522123894,"avoid":0.008849557522123894,"so":0.008849557522123894,"cannot":0.008849557522123894,"message":0.008849557522123894,"show":0.008849557522123894,"deleted":0.008849557522123894,"validation":0.008849557522123894,"data":0.008849557522123894,"won't":0.008849557522123894,"exist":0.008849557522123894,"redirecting":0.008849557522123894,"with":0.008849557522123894,"general":0.008849557522123894,"problem":0.008849557522123894,"for":0.008849557522123894,"example":0.008849557522123894,"maybe":0.008849557522123894,"we'd":0.008849557522123894,"like":0.008849557522123894,"newly":0.008849557522123894,"created":0.008849557522123894,"been":0.008849557522123894,"fortunately":0.008849557522123894,"there":0.008849557522123894,"solution":0.008849557522123894,"sister":0.008849557522123894,"library":0.008849557522123894,"superforms":0.008849557522123894,"handles":0.008849557522123894,"read":0.008849557522123894,"more":0.008849557522123894,"about":0.008849557522123894,"it":0.008849557522123894,"here":0.008849557522123894},"44":{"the":0.02127659574468085,"last":0.02127659574468085,"loose":0.02127659574468085,"thread":0.02127659574468085,"is":0.02127659574468085,"to":0.02127659574468085,"display":0.02127659574468085,"a":0.02127659574468085,"list":0.02127659574468085,"of":0.02127659574468085,"users":0.02127659574468085,"it'll":0.02127659574468085,"be":0.02127659574468085,"quite":0.02127659574468085,"trivial":0.02127659574468085,"add":0.02127659574468085,"this":0.02127659574468085,"top":0.02127659574468085,"page":0.02127659574468085,"svelte":0.02127659574468085,"src":0.02127659574468085,"routes":0.02127659574468085,"and":0.02127659574468085,"some":0.02127659574468085,"styling":0.02127659574468085,"for":0.02127659574468085,"everything":0.02127659574468085,"at":0.02127659574468085,"end":0.02127659574468085,"that's":0.02127659574468085,"it":0.02127659574468085,"thank":0.02127659574468085,"you":0.02127659574468085,"following":0.02127659574468085,"along":0.02127659574468085,"code":0.02127659574468085,"available":0.02127659574468085,"here":0.02127659574468085,"on":0.02127659574468085,"stackblitz":0.02127659574468085,"if":0.02127659574468085,"have":0.02127659574468085,"any":0.02127659574468085,"questions":0.02127659574468085,"see":0.02127659574468085,"help":0.02127659574468085,"support":0.02127659574468085},"45":{"for":0.04,"testing":0.04,"superforms":0.04,"bug":0.04,"reporting":0.04,"support":0.04,"questions":0.04,"or":0.04,"as":0.04,"a":0.04,"start":0.04,"your":0.04,"project":0.04,"click":0.04,"on":0.04,"chosen":0.04,"library":0.04,"to":0.04,"open":0.04,"sveltekit":0.04,"with":0.04,"basic":0.04,"form":0.04,"in":0.04,"sveltelab":0.04},"46":{"0":0.030303030303030304,"when":0.030303030303030304,"supervalidate":0.030303030303030304,"encounters":0.030303030303030304,"a":0.030303030303030304,"schema":0.030303030303030304,"field":0.030303030303030304,"that":0.030303030303030304,"isn't":0.030303030303030304,"optional":0.030303030303030304,"and":0.030303030303030304,"its":0.030303030303030304,"supplied":0.030303030303030304,"data":0.030303030303030304,"is":0.030303030303030304,"empty":0.030303030303030304,"default":0.030303030303030304,"value":0.030303030303030304,"returned":0.030303030303030304,"to":0.030303030303030304,"the":0.030303030303030304,"form":0.030303030303030304,"ensure":0.030303030303030304,"type":0.030303030303030304,"correct":0.030303030303030304,"typevaluestring":0.030303030303030304,"number":0.030303030303030304,"boolean":0.030303030303030304,"false":0.030303030303030304,"array":0.030303030303030304,"object":0.030303030303030304,"bigint":0.030303030303030304,"symbol":0.030303030303030304},"47":{"0":0.011764705882352941,"you":0.011764705882352941,"can":0.011764705882352941,"of":0.011764705882352941,"course":0.011764705882352941,"set":0.011764705882352941,"your":0.011764705882352941,"own":0.011764705882352941,"default":0.011764705882352941,"values":0.011764705882352941,"in":0.011764705882352941,"the":0.011764705882352941,"schema":0.011764705882352941,"using":0.011764705882352941,"method":0.011764705882352941,"zod":0.011764705882352941,"for":0.011764705882352941,"example":0.011764705882352941,"even":0.011764705882352941,"abuse":0.011764705882352941,"typing":0.011764705882352941,"system":0.011764705882352941,"a":0.011764705882352941,"bit":0.011764705882352941,"to":0.011764705882352941,"handle":0.011764705882352941,"classic":0.011764705882352941,"agree":0.011764705882352941,"terms":0.011764705882352941,"checkbox":0.011764705882352941,"this":0.011764705882352941,"looks":0.011764705882352941,"strange":0.011764705882352941,"but":0.011764705882352941,"will":0.011764705882352941,"ensure":0.011764705882352941,"that":0.011764705882352941,"age":0.011764705882352941,"isn't":0.011764705882352941,"as":0.011764705882352941,"which":0.011764705882352941,"hide":0.011764705882352941,"placeholder":0.011764705882352941,"text":0.011764705882352941,"input":0.011764705882352941,"field":0.011764705882352941,"and":0.011764705882352941,"also":0.011764705882352941,"is":0.011764705882352941,"unchecked":0.011764705882352941,"while":0.011764705882352941,"only":0.011764705882352941,"accepting":0.011764705882352941,"true":0.011764705882352941,"checked":0.011764705882352941,"value":0.011764705882352941,"since":0.011764705882352941,"not":0.011764705882352941,"correspond":0.011764705882352941,"type":0.011764705882352941,"work":0.011764705882352941,"when":0.011764705882352941,"zod's":0.011764705882352941,"refine":0.011764705882352941,"on":0.011764705882352941,"whole":0.011764705882352941,"validation":0.011764705882352941,"itself":0.011764705882352941,"no":0.011764705882352941,"problem":0.011764705882352941,"though":0.011764705882352941,"form":0.011764705882352941,"valid":0.011764705882352941,"be":0.011764705882352941,"false":0.011764705882352941,"if":0.011764705882352941,"these":0.011764705882352941,"are":0.011764705882352941,"posted":0.011764705882352941,"should":0.011764705882352941,"main":0.011764705882352941,"determinant":0.011764705882352941,"whether":0.011764705882352941,"data":0.011764705882352941,"trustworthy":0.011764705882352941},"48":{"fields":0.04,"set":0.04,"to":0.04,"null":0.04,"will":0.04,"take":0.04,"precedence":0.04,"over":0.04,"undefined":0.04,"so":0.04,"a":0.04,"field":0.04,"that":0.04,"is":0.04,"both":0.04,"nullable":0.04,"and":0.04,"optional":0.04,"have":0.04,"as":0.04,"its":0.04,"default":0.04,"value":0.04,"otherwise":0.04,"it's":0.04},"49":{"multi-type":0.023809523809523808,"unions":0.023809523809523808,"must":0.023809523809523808,"have":0.023809523809523808,"an":0.023809523809523808,"explicit":0.023809523809523808,"default":0.023809523809523808,"value":0.023809523809523808,"or":0.023809523809523808,"exactly":0.023809523809523808,"one":0.023809523809523808,"of":0.023809523809523808,"the":0.023809523809523808,"union":0.023809523809523808,"types":0.023809523809523808,"enums":0.023809523809523808,"doesn't":0.023809523809523808,"otherwise":0.023809523809523808,"it":0.023809523809523808,"wouldn't":0.023809523809523808,"be":0.023809523809523808,"possible":0.023809523809523808,"to":0.023809523809523808,"a":0.023809523809523808,"required":0.023809523809523808,"enum":0.023809523809523808,"field":0.023809523809523808,"if":0.023809523809523808,"no":0.023809523809523808,"first":0.023809523809523808,"will":0.023809523809523808,"used":0.023809523809523808,"is":0.023809523809523808,"nullable":0.023809523809523808,"optional":0.023809523809523808,"there's":0.023809523809523808,"need":0.023809523809523808,"for":0.023809523809523808,"but":0.023809523809523808,"can":0.023809523809523808,"still":0.023809523809523808,"set":0.023809523809523808},"50":{"if":0.024390243902439025,"you're":0.024390243902439025,"using":0.024390243902439025,"the":0.024390243902439025,"enum":0.024390243902439025,"for":0.024390243902439025,"radio":0.024390243902439025,"buttons":0.024390243902439025,"or":0.024390243902439025,"a":0.024390243902439025,"select":0.024390243902439025,"menu":0.024390243902439025,"you":0.024390243902439025,"may":0.024390243902439025,"not":0.024390243902439025,"want":0.024390243902439025,"any":0.024390243902439025,"option":0.024390243902439025,"to":0.024390243902439025,"be":0.024390243902439025,"initally":0.024390243902439025,"selected":0.024390243902439025,"this":0.024390243902439025,"can":0.024390243902439025,"achieved":0.024390243902439025,"in":0.024390243902439025,"similar":0.024390243902439025,"way":0.024390243902439025,"misuse":0.024390243902439025,"of":0.024390243902439025,"default":0.024390243902439025,"value":0.024390243902439025,"above":0.024390243902439025,"by":0.024390243902439025,"setting":0.024390243902439025,"it":0.024390243902439025,"an":0.024390243902439025,"empty":0.024390243902439025,"string":0.024390243902439025,"and":0.024390243902439025,"casting":0.024390243902439025},"51":{},"52":{"the":0.03225806451612903,"most":0.03225806451612903,"common":0.03225806451612903,"mistake":0.03225806451612903,"is":0.03225806451612903,"to":0.03225806451612903,"forget":0.03225806451612903,"name":0.03225806451612903,"attribute":0.03225806451612903,"on":0.03225806451612903,"input":0.03225806451612903,"field":0.03225806451612903,"if":0.03225806451612903,"you're":0.03225806451612903,"not":0.03225806451612903,"using":0.03225806451612903,"datatype":0.03225806451612903,"'json'":0.03225806451612903,"see":0.03225806451612903,"nested":0.03225806451612903,"data":0.03225806451612903,"form":0.03225806451612903,"treated":0.03225806451612903,"as":0.03225806451612903,"a":0.03225806451612903,"normal":0.03225806451612903,"html":0.03225806451612903,"which":0.03225806451612903,"requires":0.03225806451612903,"for":0.03225806451612903,"posting":0.03225806451612903},"53":{"use":0.08333333333333333,"the":0.08333333333333333,"resetform":0.08333333333333333,"false":0.08333333333333333,"option":0.08333333333333333,"for":0.08333333333333333,"superform":0.08333333333333333,"as":0.08333333333333333,"described":0.08333333333333333,"on":0.08333333333333333,"enhance":0.08333333333333333,"page":0.08333333333333333},"54":{"2":0.0625,"from":0.0625,"version":0.0625,"file":0.0625,"uploads":0.0625,"are":0.0625,"handled":0.0625,"by":0.0625,"superforms":0.0625,"read":0.0625,"all":0.0625,"about":0.0625,"it":0.0625,"on":0.0625,"the":0.0625,"page":0.0625},"55":{"yes":0.043478260869565216,"there":0.043478260869565216,"is":0.043478260869565216,"a":0.043478260869565216,"helper":0.043478260869565216,"function":0.043478260869565216,"for":0.043478260869565216,"constructing":0.043478260869565216,"an":0.043478260869565216,"actionresult":0.043478260869565216,"that":0.043478260869565216,"can":0.043478260869565216,"be":0.043478260869565216,"returned":0.043478260869565216,"from":0.043478260869565216,"sveltekit":0.043478260869565216,"endpoints":0.043478260869565216,"see":0.043478260869565216,"the":0.043478260869565216,"api":0.043478260869565216,"reference":0.043478260869565216,"more":0.043478260869565216,"information":0.043478260869565216},"56":{"if":0.03225806451612903,"the":0.03225806451612903,"api":0.03225806451612903,"doesn't":0.03225806451612903,"return":0.03225806451612903,"an":0.03225806451612903,"actionresult":0.03225806451612903,"with":0.03225806451612903,"form":0.03225806451612903,"data":0.03225806451612903,"you":0.03225806451612903,"cannot":0.03225806451612903,"post":0.03225806451612903,"to":0.03225806451612903,"it":0.03225806451612903,"directly":0.03225806451612903,"instead":0.03225806451612903,"can":0.03225806451612903,"use":0.03225806451612903,"spa":0.03225806451612903,"mode":0.03225806451612903,"of":0.03225806451612903,"superforms":0.03225806451612903,"and":0.03225806451612903,"call":0.03225806451612903,"fetch":0.03225806451612903,"or":0.03225806451612903,"similar":0.03225806451612903,"in":0.03225806451612903,"onupdate":0.03225806451612903,"event":0.03225806451612903},"57":{"use":0.14285714285714285,"the":0.14285714285714285,"submit":0.14285714285714285,"method":0.14285714285714285,"on":0.14285714285714285,"superform":0.14285714285714285,"object":0.14285714285714285},"58":{"yes":0.1,"-":0.1,"the":0.1,"answer":0.1,"has":0.1,"its":0.1,"own":0.1,"article":0.1,"page":0.1,"here":0.1},"59":{"you're":0.038461538461538464,"not":0.038461538461538464,"limited":0.038461538461538464,"to":0.038461538461538464,"just":0.038461538461538464,"return":0.038461538461538464,"form":0.038461538461538464,"in":0.038461538461538464,"load":0.038461538461538464,"functions":0.038461538461538464,"and":0.038461538461538464,"actions":0.038461538461538464,"you":0.038461538461538464,"can":0.038461538461538464,"anything":0.038461538461538464,"else":0.038461538461538464,"together":0.038461538461538464,"with":0.038461538461538464,"the":0.038461538461538464,"variables":0.038461538461538464,"which":0.038461538461538464,"also":0.038461538461538464,"be":0.038461538461538464,"called":0.038461538461538464,"you'd":0.038461538461538464,"like":0.038461538461538464},"60":{"it":0.1111111111111111,"can":0.1111111111111111,"then":0.1111111111111111,"be":0.1111111111111111,"accessed":0.1111111111111111,"in":0.1111111111111111,"pagedata":0.1111111111111111,"page":0.1111111111111111,"svelte":0.1111111111111111},"61":{"returning":0.02857142857142857,"extra":0.02857142857142857,"data":0.02857142857142857,"from":0.02857142857142857,"a":0.02857142857142857,"form":0.02857142857142857,"action":0.02857142857142857,"is":0.02857142857142857,"convenient":0.02857142857142857,"with":0.02857142857142857,"status":0.02857142857142857,"message":0.02857142857142857,"if":0.02857142857142857,"the":0.02857142857142857,"simple":0.02857142857142857,"but":0.02857142857142857,"for":0.02857142857142857,"larger":0.02857142857142857,"structures":0.02857142857142857,"you":0.02857142857142857,"can":0.02857142857142857,"also":0.02857142857142857,"return":0.02857142857142857,"it":0.02857142857142857,"directly":0.02857142857142857,"in":0.02857142857142857,"which":0.02857142857142857,"case":0.02857142857142857,"be":0.02857142857142857,"accessed":0.02857142857142857,"onupdate":0.02857142857142857,"event":0.02857142857142857,"or":0.02857142857142857,"actiondata":0.02857142857142857,"using":0.02857142857142857},"62":{"you":0.02127659574468085,"can":0.02127659574468085,"add":0.02127659574468085,"additional":0.02127659574468085,"input":0.02127659574468085,"fields":0.02127659574468085,"to":0.02127659574468085,"the":0.02127659574468085,"form":0.02127659574468085,"that":0.02127659574468085,"aren't":0.02127659574468085,"part":0.02127659574468085,"of":0.02127659574468085,"schema":0.02127659574468085,"including":0.02127659574468085,"files":0.02127659574468085,"see":0.02127659574468085,"next":0.02127659574468085,"question":0.02127659574468085,"send":0.02127659574468085,"extra":0.02127659574468085,"data":0.02127659574468085,"server":0.02127659574468085,"they":0.02127659574468085,"then":0.02127659574468085,"be":0.02127659574468085,"accessed":0.02127659574468085,"with":0.02127659574468085,"request":0.02127659574468085,"formdata":0.02127659574468085,"in":0.02127659574468085,"action":0.02127659574468085,"also":0.02127659574468085,"programmatically":0.02127659574468085,"onsubmit":0.02127659574468085,"event":0.02127659574468085,"is":0.02127659574468085,"a":0.02127659574468085,"good":0.02127659574468085,"place":0.02127659574468085,"modify":0.02127659574468085,"case":0.02127659574468085,"you're":0.02127659574468085,"using":0.02127659574468085,"nested":0.02127659574468085,"datatype":0.02127659574468085,"'json'":0.02127659574468085},"63":{"this":0.01639344262295082,"is":0.01639344262295082,"related":0.01639344262295082,"to":0.01639344262295082,"the":0.01639344262295082,"previous":0.01639344262295082,"question":0.01639344262295082,"you":0.01639344262295082,"must":0.01639344262295082,"always":0.01639344262295082,"return":0.01639344262295082,"an":0.01639344262295082,"actionresult":0.01639344262295082,"as":0.01639344262295082,"a":0.01639344262295082,"response":0.01639344262295082,"form":0.01639344262295082,"submission":0.01639344262295082,"either":0.01639344262295082,"through":0.01639344262295082,"action":0.01639344262295082,"where":0.01639344262295082,"it's":0.01639344262295082,"done":0.01639344262295082,"automatically":0.01639344262295082,"or":0.01639344262295082,"by":0.01639344262295082,"constructing":0.01639344262295082,"one":0.01639344262295082,"with":0.01639344262295082,"helper":0.01639344262295082,"if":0.01639344262295082,"for":0.01639344262295082,"some":0.01639344262295082,"reason":0.01639344262295082,"html":0.01639344262295082,"page":0.01639344262295082,"plain":0.01639344262295082,"text":0.01639344262295082,"returned":0.01639344262295082,"example":0.01639344262295082,"when":0.01639344262295082,"proxy":0.01639344262295082,"server":0.01639344262295082,"fails":0.01639344262295082,"handle":0.01639344262295082,"request":0.01639344262295082,"and":0.01639344262295082,"returns":0.01639344262295082,"its":0.01639344262295082,"own":0.01639344262295082,"error":0.01639344262295082,"parsing":0.01639344262295082,"of":0.01639344262295082,"result":0.01639344262295082,"will":0.01639344262295082,"fail":0.01639344262295082,"slightly":0.01639344262295082,"cryptic":0.01639344262295082,"json":0.01639344262295082,"message":0.01639344262295082},"64":{"this":0.027777777777777776,"happens":0.027777777777777776,"if":0.027777777777777776,"you":0.027777777777777776,"access":0.027777777777777776,"the":0.027777777777777776,"form":0.027777777777777776,"data":0.027777777777777776,"of":0.027777777777777776,"request":0.027777777777777776,"several":0.027777777777777776,"times":0.027777777777777776,"which":0.027777777777777776,"could":0.027777777777777776,"happen":0.027777777777777776,"when":0.027777777777777776,"calling":0.027777777777777776,"supervalidate":0.027777777777777776,"multiple":0.027777777777777776,"during":0.027777777777777776,"same":0.027777777777777776,"to":0.027777777777777776,"fix":0.027777777777777776,"that":0.027777777777777776,"problem":0.027777777777777776,"extract":0.027777777777777776,"formdata":0.027777777777777776,"before":0.027777777777777776,"and":0.027777777777777776,"use":0.027777777777777776,"as":0.027777777777777776,"an":0.027777777777777776,"argument":0.027777777777777776,"instead":0.027777777777777776,"or":0.027777777777777776,"event":0.027777777777777776},"65":{"if":0.020833333333333332,"the":0.020833333333333332,"schema":0.020833333333333332,"field":0.020833333333333332,"for":0.020833333333333332,"select":0.020833333333333332,"menu":0.020833333333333332,"doesn't":0.020833333333333332,"have":0.020833333333333332,"an":0.020833333333333332,"empty":0.020833333333333332,"string":0.020833333333333332,"as":0.020833333333333332,"default":0.020833333333333332,"value":0.020833333333333332,"example":0.020833333333333332,"when":0.020833333333333332,"it's":0.020833333333333332,"optional":0.020833333333333332,"and":0.020833333333333332,"you":0.020833333333333332,"first":0.020833333333333332,"option":0.020833333333333332,"like":0.020833333333333332,"a":0.020833333333333332,"please":0.020833333333333332,"item":0.020833333333333332,"text":0.020833333333333332,"will":0.020833333333333332,"be":0.020833333333333332,"set":0.020833333333333332,"to":0.020833333333333332,"that":0.020833333333333332,"tainting":0.020833333333333332,"form":0.020833333333333332,"it":0.020833333333333332,"can":0.020833333333333332,"fixed":0.020833333333333332,"by":0.020833333333333332,"setting":0.020833333333333332,"even":0.020833333333333332,"not":0.020833333333333332,"its":0.020833333333333332,"proper":0.020833333333333332,"type":0.020833333333333332,"see":0.020833333333333332,"this":0.020833333333333332,"section":0.020833333333333332},"66":{"you":0.07692307692307693,"can":0.07692307692307693,"add":0.07692307692307693,"them":0.07692307692307693,"as":0.07692307692307693,"parameters":0.07692307692307693,"to":0.07692307692307693,"most":0.07692307692307693,"schema":0.07692307692307693,"methods":0.07692307692307693,"here's":0.07692307692307693,"an":0.07692307692307693,"example":0.07692307692307693},"67":{"that's":0.043478260869565216,"possible":0.043478260869565216,"with":0.043478260869565216,"an":0.043478260869565216,"empty":0.043478260869565216,"schema":0.043478260869565216,"or":0.043478260869565216,"using":0.043478260869565216,"the":0.043478260869565216,"formid":0.043478260869565216,"store":0.043478260869565216,"button":0.043478260869565216,"to":0.043478260869565216,"set":0.043478260869565216,"form":0.043478260869565216,"id":0.043478260869565216,"dynamically":0.043478260869565216,"see":0.043478260869565216,"this":0.043478260869565216,"sveltelab":0.043478260869565216,"project":0.043478260869565216,"for":0.043478260869565216,"example":0.043478260869565216},"68":{"when":0.043478260869565216,"you":0.043478260869565216,"start":0.043478260869565216,"to":0.043478260869565216,"configure":0.043478260869565216,"the":0.043478260869565216,"library":0.043478260869565216,"suit":0.043478260869565216,"your":0.043478260869565216,"stack":0.043478260869565216,"can":0.043478260869565216,"create":0.043478260869565216,"an":0.043478260869565216,"object":0.043478260869565216,"with":0.043478260869565216,"default":0.043478260869565216,"options":0.043478260869565216,"that":0.043478260869565216,"will":0.043478260869565216,"refer":0.043478260869565216,"instead":0.043478260869565216,"of":0.043478260869565216,"superform":0.043478260869565216},"69":{"0":0.01639344262295082,"1":0.01639344262295082,"status":0.01639344262295082,"messages":0.01639344262295082,"are":0.01639344262295082,"useful":0.01639344262295082,"but":0.01639344262295082,"redirects":0.01639344262295082,"will":0.01639344262295082,"cause":0.01639344262295082,"them":0.01639344262295082,"to":0.01639344262295082,"be":0.01639344262295082,"lost":0.01639344262295082,"because":0.01639344262295082,"they":0.01639344262295082,"need":0.01639344262295082,"returned":0.01639344262295082,"in":0.01639344262295082,"form":0.01639344262295082,"usually":0.01639344262295082,"as":0.01639344262295082,"a":0.01639344262295082,"response":0.01639344262295082,"from":0.01639344262295082,"post":0.01639344262295082,"request":0.01639344262295082,"since":0.01639344262295082,"it's":0.01639344262295082,"common":0.01639344262295082,"redirect":0.01639344262295082,"after":0.01639344262295082,"successful":0.01639344262295082,"especially":0.01639344262295082,"backend":0.01639344262295082,"interfaces":0.01639344262295082,"the":0.01639344262295082,"message":0.01639344262295082,"property":0.01639344262295082,"isn't":0.01639344262295082,"general":0.01639344262295082,"solution":0.01639344262295082,"for":0.01639344262295082,"displaying":0.01639344262295082,"sister":0.01639344262295082,"library":0.01639344262295082,"superforms":0.01639344262295082,"is":0.01639344262295082,"called":0.01639344262295082,"sveltekit-flash-message":0.01639344262295082,"addon":0.01639344262295082,"that":0.01639344262295082,"handles":0.01639344262295082,"temporary":0.01639344262295082,"sent":0.01639344262295082,"with":0.01639344262295082,"note":0.01639344262295082,"at":0.01639344262295082,"least":0.01639344262295082,"version":0.01639344262295082,"required":0.01639344262295082},"70":{"the":0.019230769230769232,"library":0.019230769230769232,"works":0.019230769230769232,"together":0.019230769230769232,"with":0.019230769230769232,"superforms":0.019230769230769232,"without":0.019230769230769232,"any":0.019230769230769232,"extra":0.019230769230769232,"configuration":0.019230769230769232,"usually":0.019230769230769232,"you":0.019230769230769232,"can":0.019230769230769232,"replace":0.019230769230769232,"status":0.019230769230769232,"messages":0.019230769230769232,"flash":0.019230769230769232,"message":0.019230769230769232,"and":0.019230769230769232,"that":0.019230769230769232,"will":0.019230769230769232,"work":0.019230769230769232,"very":0.019230769230769232,"well":0.019230769230769232,"but":0.019230769230769232,"if":0.019230769230769232,"have":0.019230769230769232,"some":0.019230769230769232,"special":0.019230769230769232,"use":0.019230769230769232,"case":0.019230769230769232,"where":0.019230769230769232,"need":0.019230769230769232,"to":0.019230769230769232,"integrate":0.019230769230769232,"more":0.019230769230769232,"closely":0.019230769230769232,"a":0.019230769230769232,"form":0.019230769230769232,"do":0.019230769230769232,"by":0.019230769230769232,"importing":0.019230769230769232,"its":0.019230769230769232,"module":0.019230769230769232,"when":0.019230769230769232,"calling":0.019230769230769232,"superform":0.019230769230769232,"then":0.019230769230769232,"following":0.019230769230769232,"options":0.019230769230769232,"are":0.019230769230769232,"available":0.019230769230769232},"71":{"if":0.02702702702702703,"set":0.02702702702702703,"to":0.02702702702702703,"true":0.02702702702702703,"when":0.02702702702702703,"form":0.02702702702702703,"message":0.02702702702702703,"is":0.02702702702702703,"updated":0.02702702702702703,"the":0.02702702702702703,"flash":0.02702702702702703,"will":0.02702702702702703,"be":0.02702702702702703,"synchronized":0.02702702702702703,"with":0.02702702702702703,"it":0.02702702702702703,"including":0.02702702702702703,"honoring":0.02702702702702703,"clearonsubmit":0.02702702702702703,"option":0.02702702702702703,"it's":0.02702702702702703,"important":0.02702702702702703,"that":0.02702702702702703,"and":0.02702702702702703,"types":0.02702702702702703,"are":0.02702702702702703,"matching":0.02702702702702703,"in":0.02702702702702703,"this":0.02702702702702703,"case":0.02702702702702703,"see":0.02702702702702703,"section":0.02702702702702703,"on":0.02702702702702703,"how":0.02702702702702703,"make":0.02702702702702703,"strongly":0.02702702702702703,"typed":0.02702702702702703},"72":{"if":0.02702702702702703,"a":0.02702702702702703,"form":0.02702702702702703,"error":0.02702702702702703,"occurs":0.02702702702702703,"which":0.02702702702702703,"happens":0.02702702702702703,"when":0.02702702702702703,"is":0.02702702702702703,"called":0.02702702702702703,"in":0.02702702702702703,"action":0.02702702702702703,"and":0.02702702702702703,"use":0.02702702702702703,"enhance":0.02702702702702703,"added":0.02702702702702703,"to":0.02702702702702703,"the":0.02702702702702703,"flashmessage":0.02702702702702703,"onerror":0.02702702702702703,"callback":0.02702702702702703,"can":0.02702702702702703,"be":0.02702702702702703,"used":0.02702702702702703,"transform":0.02702702702702703,"it":0.02702702702702703,"into":0.02702702702702703,"your":0.02702702702702703,"flash":0.02702702702702703,"message":0.02702702702702703,"type":0.02702702702702703,"so":0.02702702702702703,"you":0.02702702702702703,"display":0.02702702702702703,"at":0.02702702702702703,"instead":0.02702702702702703,"of":0.02702702702702703},"73":{"as":0.012658227848101266,"you":0.012658227848101266,"may":0.012658227848101266,"have":0.012658227848101266,"seen":0.012658227848101266,"on":0.012658227848101266,"the":0.012658227848101266,"componentization":0.012658227848101266,"page":0.012658227848101266,"quite":0.012658227848101266,"a":0.012658227848101266,"bit":0.012658227848101266,"of":0.012658227848101266,"boilerplate":0.012658227848101266,"can":0.012658227848101266,"add":0.012658227848101266,"up":0.012658227848101266,"for":0.012658227848101266,"form":0.012658227848101266,"and":0.012658227848101266,"then":0.012658227848101266,"we":0.012658227848101266,"haven't":0.012658227848101266,"even":0.012658227848101266,"touched":0.012658227848101266,"subject":0.012658227848101266,"accessibility":0.012658227848101266,"fortunately":0.012658227848101266,"ui-component":0.012658227848101266,"guru":0.012658227848101266,"hunter":0.012658227848101266,"johnston":0.012658227848101266,"aka":0.012658227848101266,"huntabyte":0.012658227848101266,"has":0.012658227848101266,"done":0.012658227848101266,"community":0.012658227848101266,"great":0.012658227848101266,"service":0.012658227848101266,"with":0.012658227848101266,"his":0.012658227848101266,"library":0.012658227848101266,"formsnap":0.012658227848101266,"it":0.012658227848101266,"not":0.012658227848101266,"only":0.012658227848101266,"simplifies":0.012658227848101266,"how":0.012658227848101266,"to":0.012658227848101266,"put":0.012658227848101266,"your":0.012658227848101266,"forms":0.012658227848101266,"into":0.012658227848101266,"components":0.012658227848101266,"but":0.012658227848101266,"also":0.012658227848101266,"adds":0.012658227848101266,"top-class":0.012658227848101266,"no":0.012658227848101266,"effort":0.012658227848101266,"this":0.012658227848101266,"is":0.012658227848101266,"style":0.012658227848101266,"expect":0.012658227848101266,"when":0.012658227848101266,"using":0.012658227848101266,"compared":0.012658227848101266,"manually":0.012658227848101266,"putting":0.012658227848101266,"attributes":0.012658227848101266,"individual":0.012658227848101266,"fields":0.012658227848101266,"if":0.012658227848101266,"suits":0.012658227848101266,"please":0.012658227848101266,"check":0.012658227848101266,"out":0.012658227848101266,"really":0.012658227848101266,"nice":0.012658227848101266},"74":{},"75":{"0":0.030303030303030304,"1":0.030303030303030304,"superforms":0.030303030303030304,"x":0.030303030303030304,"is":0.030303030303030304,"available":0.030303030303030304,"so":0.030303030303030304,"if":0.030303030303030304,"you're":0.030303030303030304,"still":0.030303030303030304,"on":0.030303030303030304,"version":0.030303030303030304,"please":0.030303030303030304,"upgrade":0.030303030303030304,"no":0.030303030303030304,"support":0.030303030303030304,"can":0.030303030303030304,"be":0.030303030303030304,"given":0.030303030303030304,"for":0.030303030303030304,"the":0.030303030303030304,"migration":0.030303030303030304,"guide":0.030303030303030304,"-":0.030303030303030304,"what's":0.030303030303030304,"new":0.030303030303030304,"in":0.030303030303030304,"whats-new-v1":0.030303030303030304,"documentation":0.030303030303030304,"https":0.030303030303030304,"superforms-legacy":0.030303030303030304,"vercel":0.030303030303030304,"app":0.030303030303030304},"76":{"0":0.06666666666666667,"lists":0.06666666666666667,"the":0.06666666666666667,"breaking":0.06666666666666667,"changes":0.06666666666666667,"that":0.06666666666666667,"you":0.06666666666666667,"need":0.06666666666666667,"to":0.06666666666666667,"address":0.06666666666666667,"upgrade":0.06666666666666667,"from":0.06666666666666667,"v0":0.06666666666666667,"x":0.06666666666666667,"v1":0.06666666666666667},"77":{"0":0.022222222222222223,"1":0.022222222222222223,"2":0.022222222222222223,"4":0.022222222222222223,"to":0.022222222222222223,"update":0.022222222222222223,"change":0.022222222222222223,"your":0.022222222222222223,"package":0.022222222222222223,"json":0.022222222222222223,"entry":0.022222222222222223,"for":0.022222222222222223,"sveltekit-superforms":0.022222222222222223,"if":0.022222222222222223,"you're":0.022222222222222223,"using":0.022222222222222223,"svelte":0.022222222222222223,"you'll":0.022222222222222223,"need":0.022222222222222223,"at":0.022222222222222223,"least":0.022222222222222223,"version":0.022222222222222223,"of":0.022222222222222223,"superforms":0.022222222222222223,"the":0.022222222222222223,"guide":0.022222222222222223,"is":0.022222222222222223,"written":0.022222222222222223,"with":0.022222222222222223,"affected":0.022222222222222223,"methods":0.022222222222222223,"in":0.022222222222222223,"headlines":0.022222222222222223,"so":0.022222222222222223,"you":0.022222222222222223,"can":0.022222222222222223,"scan":0.022222222222222223,"through":0.022222222222222223,"this":0.022222222222222223,"page":0.022222222222222223,"and":0.022222222222222223,"apply":0.022222222222222223,"changes":0.022222222222222223,"them":0.022222222222222223,"code":0.022222222222222223},"78":{"for":0.015384615384615385,"type":0.015384615384615385,"safety":0.015384615384615385,"reasons":0.015384615384615385,"you":0.015384615384615385,"cannot":0.015384615384615385,"pass":0.015384615384615385,"null":0.015384615384615385,"undefined":0.015384615384615385,"or":0.015384615384615385,"arbitrary":0.015384615384615385,"data":0.015384615384615385,"to":0.015384615384615385,"superform":0.015384615384615385,"anymore":0.015384615384615385,"instead":0.015384615384615385,"should":0.015384615384615385,"be":0.015384615384615385,"using":0.015384615384615385,"supervalidate":0.015384615384615385,"get":0.015384615384615385,"the":0.015384615384615385,"initial":0.015384615384615385,"form":0.015384615384615385,"object":0.015384615384615385,"by":0.015384615384615385,"returning":0.015384615384615385,"from":0.015384615384615385,"a":0.015384615384615385,"load":0.015384615384615385,"function":0.015384615384615385,"and":0.015384615384615385,"passing":0.015384615384615385,"it":0.015384615384615385,"not":0.015384615384615385,"doing":0.015384615384615385,"this":0.015384615384615385,"will":0.015384615384615385,"result":0.015384615384615385,"in":0.015384615384615385,"following":0.015384615384615385,"warning":0.015384615384615385,"when":0.015384615384615385,"happens":0.015384615384615385,"need":0.015384615384615385,"check":0.015384615384615385,"call":0.015384615384615385,"apply":0.015384615384615385,"above":0.015384615384615385,"fix":0.015384615384615385,"client-only":0.015384615384615385,"scenarios":0.015384615384615385,"especially":0.015384615384615385,"spa's":0.015384615384615385,"must":0.015384615384615385,"use":0.015384615384615385,"supervalidatesync":0.015384615384615385,"before":0.015384615384615385,"calling":0.015384615384615385,"read":0.015384615384615385,"more":0.015384615384615385,"on":0.015384615384615385,"spa":0.015384615384615385,"page":0.015384615384615385,"about":0.015384615384615385},"79":{"the":0.022727272727272728,"valid":0.022727272727272728,"empty":0.022727272727272728,"and":0.022727272727272728,"firsterror":0.022727272727272728,"stores":0.022727272727272728,"are":0.022727272727272728,"removed":0.022727272727272728,"from":0.022727272727272728,"client":0.022727272727272728,"they":0.022727272727272728,"weren't":0.022727272727272728,"that":0.022727272727272728,"useful":0.022727272727272728,"allerrors":0.022727272727272728,"can":0.022727272727272728,"be":0.022727272727272728,"used":0.022727272727272728,"instead":0.022727272727272728,"together":0.022727272727272728,"with":0.022727272727272728,"new":0.022727272727272728,"posted":0.022727272727272728,"store":0.022727272727272728,"which":0.022727272727272728,"shows":0.022727272727272728,"if":0.022727272727272728,"form":0.022727272727272728,"has":0.022727272727272728,"been":0.022727272727272728,"previously":0.022727272727272728,"or":0.022727272727272728,"not":0.022727272727272728,"is":0.022727272727272728,"object":0.022727272727272728,"returned":0.022727272727272728,"supervalidate":0.022727272727272728,"type":0.022727272727272728,"was":0.022727272727272728,"called":0.022727272727272728,"validation":0.022727272727272728,"but":0.022727272727272728,"now":0.022727272727272728,"supervalidated":0.022727272727272728},"80":{"the":0.014285714285714285,"seterror":0.014285714285714285,"function":0.014285714285714285,"works":0.014285714285714285,"as":0.014285714285714285,"before":0.014285714285714285,"except":0.014285714285714285,"that":0.014285714285714285,"you":0.014285714285714285,"must":0.014285714285714285,"use":0.014285714285714285,"an":0.014285714285714285,"empty":0.014285714285714285,"string":0.014285714285714285,"instead":0.014285714285714285,"of":0.014285714285714285,"null":0.014285714285714285,"for":0.014285714285714285,"form-level":0.014285714285714285,"errors":0.014285714285714285,"note":0.014285714285714285,"however":0.014285714285714285,"conflicts":0.014285714285714285,"with":0.014285714285714285,"client-side":0.014285714285714285,"validation":0.014285714285714285,"will":0.014285714285714285,"be":0.014285714285714285,"removed":0.014285714285714285,"when":0.014285714285714285,"a":0.014285714285714285,"zod":0.014285714285714285,"schema":0.014285714285714285,"is":0.014285714285714285,"used":0.014285714285714285,"therefore":0.014285714285714285,"rely":0.014285714285714285,"on":0.014285714285714285,"most":0.014285714285714285,"if":0.014285714285714285,"you're":0.014285714285714285,"using":0.014285714285714285,"it":0.014285714285714285,"above":0.014285714285714285,"error":0.014285714285714285,"set":0.014285714285714285,"in":0.014285714285714285,"refine":0.014285714285714285,"available":0.014285714285714285,"client":0.014285714285714285,"_errors":0.014285714285714285,"and":0.014285714285714285,"automatically":0.014285714285714285,"or":0.014285714285714285,"added":0.014285714285714285,"during":0.014285714285714285,"you'd":0.014285714285714285,"like":0.014285714285714285,"message":0.014285714285714285,"to":0.014285714285714285,"persist":0.014285714285714285,"until":0.014285714285714285,"next":0.014285714285714285,"form":0.014285714285714285,"submission":0.014285714285714285,"finally":0.014285714285714285,"status":0.014285714285714285,"option":0.014285714285714285,"400-599":0.014285714285714285,"range":0.014285714285714285},"81":{"2":0.011627906976744186,"fieldpath":0.011627906976744186,"is":0.011627906976744186,"gone":0.011627906976744186,"-":0.011627906976744186,"the":0.011627906976744186,"above":0.011627906976744186,"methods":0.011627906976744186,"are":0.011627906976744186,"now":0.011627906976744186,"using":0.011627906976744186,"a":0.011627906976744186,"string":0.011627906976744186,"accessor":0.011627906976744186,"like":0.011627906976744186,"tags":0.011627906976744186,"id":0.011627906976744186,"instead":0.011627906976744186,"of":0.011627906976744186,"previous":0.011627906976744186,"array":0.011627906976744186,"syntax":0.011627906976744186,"'tags'":0.011627906976744186,"'id'":0.011627906976744186,"this":0.011627906976744186,"also":0.011627906976744186,"applies":0.011627906976744186,"to":0.011627906976744186,"generic":0.011627906976744186,"components":0.011627906976744186,"types":0.011627906976744186,"have":0.011627906976744186,"been":0.011627906976744186,"simplified":0.011627906976744186,"so":0.011627906976744186,"you":0.011627906976744186,"should":0.011627906976744186,"change":0.011627906976744186,"them":0.011627906976744186,"described":0.011627906976744186,"on":0.011627906976744186,"componentization":0.011627906976744186,"page":0.011627906976744186,"formpathleaves":0.011627906976744186,"type":0.011627906976744186,"there":0.011627906976744186,"prevent":0.011627906976744186,"schema":0.011627906976744186,"field":0.011627906976744186,"that":0.011627906976744186,"isn't":0.011627906976744186,"at":0.011627906976744186,"end":0.011627906976744186,"leaves":0.011627906976744186,"tree":0.011627906976744186,"note":0.011627906976744186,"arrays":0.011627906976744186,"and":0.011627906976744186,"objects":0.011627906976744186,"cannot":0.011627906976744186,"be":0.011627906976744186,"used":0.011627906976744186,"in":0.011627906976744186,"formfieldproxy":0.011627906976744186,"if":0.011627906976744186,"your":0.011627906976744186,"defined":0.011627906976744186,"as":0.011627906976744186,"only":0.011627906976744186,"since":0.011627906976744186,"it":0.011627906976744186,"maps":0.011627906976744186,"errors":0.011627906976744186,"constraints":0.011627906976744186,"well":0.011627906976744186,"form":0.011627906976744186,"want":0.011627906976744186,"proxy":0.011627906976744186,"just":0.011627906976744186,"value":0.011627906976744186,"fieldproxy":0.011627906976744186,"will":0.011627906976744186,"work":0.011627906976744186,"with":0.011627906976744186,"any":0.011627906976744186,"part":0.011627906976744186},"82":{"the":0.03125,"signature":0.03125,"for":0.03125,"allerrors":0.03125,"has":0.03125,"changed":0.03125,"to":0.03125,"make":0.03125,"it":0.03125,"easier":0.03125,"group":0.03125,"related":0.03125,"messages":0.03125,"path":0.03125,"follows":0.03125,"same":0.03125,"format":0.03125,"as":0.03125,"above-described":0.03125,"string":0.03125,"accessor":0.03125,"if":0.03125,"you":0.03125,"want":0.03125,"display":0.03125,"all":0.03125,"grouped":0.03125,"or":0.03125,"before":0.03125,"separate":0.03125,"each":0.03125,"error":0.03125},"83":{"the":0.045454545454545456,"undocumented":0.045454545454545456,"defaultdata":0.045454545454545456,"function":0.045454545454545456,"is":0.045454545454545456,"now":0.045454545454545456,"called":0.045454545454545456,"defaultvalues":0.045454545454545456,"you":0.045454545454545456,"can":0.045454545454545456,"use":0.045454545454545456,"this":0.045454545454545456,"to":0.045454545454545456,"get":0.045454545454545456,"default":0.045454545454545456,"values":0.045454545454545456,"for":0.045454545454545456,"a":0.045454545454545456,"schema":0.045454545454545456,"see":0.045454545454545456,"api":0.045454545454545456,"documentation":0.045454545454545456},"84":{"400":0.041666666666666664,"the":0.041666666666666664,"valid":0.041666666666666664,"option":0.041666666666666664,"is":0.041666666666666664,"removed":0.041666666666666664,"from":0.041666666666666664,"message":0.041666666666666664,"setmessage":0.041666666666666664,"any":0.041666666666666664,"status":0.041666666666666664,"will":0.041666666666666664,"return":0.041666666666666664,"a":0.041666666666666664,"fail":0.041666666666666664,"as":0.041666666666666664,"with":0.041666666666666664,"seterror":0.041666666666666664,"code":0.041666666666666664,"must":0.041666666666666664,"be":0.041666666666666664,"in":0.041666666666666664,"400-599":0.041666666666666664,"range":0.041666666666666664},"85":{"the":0.047619047619047616,"virtually":0.047619047619047616,"unused":0.047619047619047616,"meta":0.047619047619047616,"store":0.047619047619047616,"which":0.047619047619047616,"containted":0.047619047619047616,"some":0.047619047619047616,"basic":0.047619047619047616,"metadata":0.047619047619047616,"about":0.047619047619047616,"schema":0.047619047619047616,"has":0.047619047619047616,"been":0.047619047619047616,"removed":0.047619047619047616,"use":0.047619047619047616,"zod":0.047619047619047616,"directly":0.047619047619047616,"instead":0.047619047619047616,"for":0.047619047619047616,"reflection":0.047619047619047616},"86":{"the":0.16666666666666666,"following":0.16666666666666666,"superform":0.16666666666666666,"options":0.16666666666666666,"have":0.16666666666666666,"changed":0.16666666666666666},"87":{"resetting":0.037037037037037035,"the":0.037037037037037035,"form":0.037037037037037035,"now":0.037037037037037035,"works":0.037037037037037035,"without":0.037037037037037035,"use":0.037037037037037035,"enhance":0.037037037037037035,"and":0.037037037037037035,"javascript":0.037037037037037035,"just":0.037037037037037035,"set":0.037037037037037035,"resetform":0.037037037037037035,"option":0.037037037037037035,"to":0.037037037037037035,"true":0.037037037037037035,"if":0.037037037037037035,"you":0.037037037037037035,"have":0.037037037037037035,"used":0.037037037037037035,"function":0.037037037037037035,"version":0.037037037037037035,"of":0.037037037037037035,"boolean":0.037037037037037035,"it":0.037037037037037035,"is":0.037037037037037035,"synchronous":0.037037037037037035},"88":{"the":0.0625,"default":0.0625,"errorselector":0.0625,"is":0.0625,"now":0.0625,"aria-invalid":0.0625,"true":0.0625,"data-invalid":0.0625,"so":0.0625,"if":0.0625,"you":0.0625,"want":0.0625,"to":0.0625,"be":0.0625,"more":0.0625,"accessibility-friendly":0.0625},"89":{"the":0.16666666666666666,"following":0.16666666666666666,"supervalidate":0.16666666666666666,"options":0.16666666666666666,"have":0.16666666666666666,"changed":0.16666666666666666},"90":{"0":0.025,"1":0.025,"noerrors":0.025,"is":0.025,"removed":0.025,"from":0.025,"the":0.025,"options":0.025,"use":0.025,"errors":0.025,"instead":0.025,"to":0.025,"determine":0.025,"if":0.025,"should":0.025,"be":0.025,"added":0.025,"or":0.025,"not":0.025,"validation":0.025,"release":0.025,"notes":0.025,"have":0.025,"a":0.025,"full":0.025,"list":0.025,"of":0.025,"changes":0.025,"and":0.025,"as":0.025,"usual":0.025,"let":0.025,"me":0.025,"know":0.025,"on":0.025,"github":0.025,"discord":0.025,"something":0.025,"unclear":0.025,"working":0.025},"91":{"2":0.03225806451612903,"version":0.03225806451612903,"is":0.03225806451612903,"a":0.03225806451612903,"big":0.03225806451612903,"upgrade":0.03225806451612903,"because":0.03225806451612903,"it":0.03225806451612903,"now":0.03225806451612903,"has":0.03225806451612903,"the":0.03225806451612903,"potential":0.03225806451612903,"to":0.03225806451612903,"support":0.03225806451612903,"virtually":0.03225806451612903,"every":0.03225806451612903,"validation":0.03225806451612903,"library":0.03225806451612903,"out":0.03225806451612903,"there":0.03225806451612903,"of":0.03225806451612903,"course":0.03225806451612903,"zod":0.03225806451612903,"still":0.03225806451612903,"perfectly":0.03225806451612903,"usable":0.03225806451612903,"with":0.03225806451612903,"just":0.03225806451612903,"small":0.03225806451612903,"modification":0.03225806451612903,"code":0.03225806451612903},"92":{"here's":0.07692307692307693,"a":0.07692307692307693,"brief":0.07692307692307693,"list":0.07692307692307693,"of":0.07692307692307693,"the":0.07692307692307693,"changes":0.07692307692307693,"keep":0.07692307692307693,"reading":0.07692307692307693,"further":0.07692307692307693,"down":0.07692307692307693,"for":0.07692307692307693,"details":0.07692307692307693},"93":{"the":0.014084507042253521,"biggest":0.014084507042253521,"breaking":0.014084507042253521,"change":0.014084507042253521,"is":0.014084507042253521,"that":0.014084507042253521,"two":0.014084507042253521,"options":0.014084507042253521,"now":0.014084507042253521,"follow":0.014084507042253521,"sveltekit":0.014084507042253521,"defaults":0.014084507042253521,"more":0.014084507042253521,"closely":0.014084507042253521,"resetform":0.014084507042253521,"true":0.014084507042253521,"as":0.014084507042253521,"defaultresetform":0.014084507042253521,"defaulttaintedmessage":0.014084507042253521,"false":0.014084507042253521,"default":0.014084507042253521,"but":0.014084507042253521,"don't":0.014084507042253521,"worry":0.014084507042253521,"there's":0.014084507042253521,"no":0.014084507042253521,"need":0.014084507042253521,"to":0.014084507042253521,"these":0.014084507042253521,"on":0.014084507042253521,"every":0.014084507042253521,"form":0.014084507042253521,"migrate":0.014084507042253521,"instead":0.014084507042253521,"add":0.014084507042253521,"following":0.014084507042253521,"define":0.014084507042253521,"in":0.014084507042253521,"vite":0.014084507042253521,"config":0.014084507042253521,"ts":0.014084507042253521,"keep":0.014084507042253521,"original":0.014084507042253521,"behavior":0.014084507042253521,"you":0.014084507042253521,"can":0.014084507042253521,"do":0.014084507042253521,"same":0.014084507042253521,"a":0.014084507042253521,"form-by-form":0.014084507042253521,"basis":0.014084507042253521,"by":0.014084507042253521,"setting":0.014084507042253521,"legacy":0.014084507042253521,"option":0.014084507042253521,"superform":0.014084507042253521,"well":0.014084507042253521,"when":0.014084507042253521,"mode":0.014084507042253521,"set":0.014084507042253521,"and":0.014084507042253521,"want":0.014084507042253521,"use":0.014084507042253521,"new":0.014084507042253521,"file":0.014084507042253521,"uploads":0.014084507042253521,"feature":0.014084507042253521,"allowfiles":0.014084507042253521,"an":0.014084507042253521,"supervalidate":0.014084507042253521,"actions":0.014084507042253521},"94":{"instead":0.014084507042253521,"of":0.014084507042253521,"a":0.014084507042253521,"zod":0.014084507042253521,"schema":0.014084507042253521,"you":0.014084507042253521,"now":0.014084507042253521,"use":0.014084507042253521,"an":0.014084507042253521,"adapter":0.014084507042253521,"for":0.014084507042253521,"your":0.014084507042253521,"favorite":0.014084507042253521,"validation":0.014084507042253521,"library":0.014084507042253521,"the":0.014084507042253521,"following":0.014084507042253521,"are":0.014084507042253521,"currently":0.014084507042253521,"supported":0.014084507042253521,"libraryadapterrequires":0.014084507042253521,"defaultsarktype":0.014084507042253521,"import":0.014084507042253521,"arktype":0.014084507042253521,"from":0.014084507042253521,"'sveltekit-superforms":0.014084507042253521,"adapters'":0.014084507042253521,"yesjoi":0.014084507042253521,"joi":0.014084507042253521,"notypebox":0.014084507042253521,"typebox":0.014084507042253521,"novalibot":0.014084507042253521,"valibot":0.014084507042253521,"novinejs":0.014084507042253521,"vine":0.014084507042253521,"yesyup":0.014084507042253521,"yup":0.014084507042253521,"nozod":0.014084507042253521,"nowith":0.014084507042253521,"installed":0.014084507042253521,"and":0.014084507042253521,"imported":0.014084507042253521,"all":0.014084507042253521,"need":0.014084507042253521,"to":0.014084507042253521,"do":0.014084507042253521,"is":0.014084507042253521,"wrap":0.014084507042253521,"with":0.014084507042253521,"it":0.014084507042253521,"libraries":0.014084507042253521,"in":0.014084507042253521,"list":0.014084507042253521,"that":0.014084507042253521,"requires":0.014084507042253521,"defaults":0.014084507042253521,"don't":0.014084507042253521,"have":0.014084507042253521,"full":0.014084507042253521,"introspection":0.014084507042253521,"capabilities":0.014084507042253521,"yet":0.014084507042253521,"which":0.014084507042253521,"case":0.014084507042253521,"supply":0.014084507042253521,"default":0.014084507042253521,"values":0.014084507042253521,"form":0.014084507042253521,"data":0.014084507042253521,"as":0.014084507042253521,"option":0.014084507042253521},"95":{"in":0.02,"the":0.02,"example":0.02,"above":0.02,"both":0.02,"schema":0.02,"and":0.02,"defaults":0.02,"are":0.02,"defined":0.02,"outside":0.02,"load":0.02,"function":0.02,"on":0.02,"top":0.02,"level":0.02,"of":0.02,"module":0.02,"this":0.02,"is":0.02,"very":0.02,"important":0.02,"to":0.02,"make":0.02,"caching":0.02,"work":0.02,"adapter":0.02,"memoized":0.02,"cached":0.02,"with":0.02,"its":0.02,"arguments":0.02,"so":0.02,"they":0.02,"must":0.02,"be":0.02,"kept":0.02,"memory":0.02,"therefore":0.02,"define":0.02,"options":0.02,"eventual":0.02,"default":0.02,"values":0.02,"for":0.02,"a":0.02,"always":0.02,"refer":0.02,"same":0.02,"object":0.02},"96":{"the":0.012048192771084338,"client-side":0.012048192771084338,"validation":0.012048192771084338,"is":0.012048192771084338,"using":0.012048192771084338,"smallest":0.012048192771084338,"possible":0.012048192771084338,"part":0.012048192771084338,"of":0.012048192771084338,"adapter":0.012048192771084338,"to":0.012048192771084338,"minimize":0.012048192771084338,"bundle":0.012048192771084338,"size":0.012048192771084338,"for":0.012048192771084338,"client":0.012048192771084338,"use":0.012048192771084338,"it":0.012048192771084338,"append":0.012048192771084338,"import":0.012048192771084338,"example":0.012048192771084338,"this":0.012048192771084338,"works":0.012048192771084338,"with":0.012048192771084338,"same":0.012048192771084338,"schema":0.012048192771084338,"as":0.012048192771084338,"one":0.012048192771084338,"used":0.012048192771084338,"on":0.012048192771084338,"server":0.012048192771084338,"if":0.012048192771084338,"you":0.012048192771084338,"need":0.012048192771084338,"switch":0.012048192771084338,"schemas":0.012048192771084338,"options":0.012048192771084338,"validators":0.012048192771084338,"full":0.012048192771084338,"built-in":0.012048192771084338,"superforms":0.012048192771084338,"validator":0.012048192771084338,"now":0.012048192771084338,"deprecated":0.012048192771084338,"since":0.012048192771084338,"requires":0.012048192771084338,"do":0.012048192771084338,"much":0.012048192771084338,"type":0.012048192771084338,"checking":0.012048192771084338,"yourself":0.012048192771084338,"keep":0.012048192771084338,"superformclient":0.012048192771084338,"and":0.012048192771084338,"new":0.012048192771084338,"infer":0.012048192771084338,"correctly":0.012048192771084338,"in":0.012048192771084338,"following":0.012048192771084338,"input":0.012048192771084338,"parameter":0.012048192771084338,"can":0.012048192771084338,"be":0.012048192771084338,"undefined":0.012048192771084338,"well":0.012048192771084338,"sure":0.012048192771084338,"check":0.012048192771084338,"that":0.012048192771084338,"case":0.012048192771084338,"said":0.012048192771084338,"error-prone":0.012048192771084338,"manually":0.012048192771084338,"so":0.012048192771084338,"general":0.012048192771084338,"not":0.012048192771084338,"a":0.012048192771084338,"replacement":0.012048192771084338,"other":0.012048192771084338,"libraries":0.012048192771084338,"only":0.012048192771084338,"very":0.012048192771084338,"good":0.012048192771084338,"reason":0.012048192771084338},"97":{"if":0.015151515151515152,"you":0.015151515151515152,"have":0.015151515151515152,"used":0.015151515151515152,"type":0.015151515151515152,"parameters":0.015151515151515152,"for":0.015151515151515152,"a":0.015151515151515152,"call":0.015151515151515152,"to":0.015151515151515152,"supervalidate":0.015151515151515152,"before":0.015151515151515152,"or":0.015151515151515152,"been":0.015151515151515152,"using":0.015151515151515152,"the":0.015151515151515152,"supervalidated":0.015151515151515152,"now":0.015151515151515152,"need":0.015151515151515152,"wrap":0.015151515151515152,"schema":0.015151515151515152,"parameter":0.015151515151515152,"with":0.015151515151515152,"infer":0.015151515151515152,"your":0.015151515151515152,"uses":0.015151515151515152,"transformations":0.015151515151515152,"pipes":0.015151515151515152,"so":0.015151515151515152,"input":0.015151515151515152,"and":0.015151515151515152,"output":0.015151515151515152,"types":0.015151515151515152,"are":0.015151515151515152,"different":0.015151515151515152,"there's":0.015151515151515152,"an":0.015151515151515152,"inferin":0.015151515151515152,"third":0.015151515151515152,"that":0.015151515151515152,"can":0.015151515151515152,"be":0.015151515151515152,"also":0.015151515151515152,"constraints":0.015151515151515152,"optional":0.015151515151515152,"in":0.015151515151515152,"since":0.015151515151515152,"they":0.015151515151515152,"won't":0.015151515151515152,"returned":0.015151515151515152,"when":0.015151515151515152,"posting":0.015151515151515152,"data":0.015151515151515152,"anymore":0.015151515151515152,"only":0.015151515151515152,"loading":0.015151515151515152,"save":0.015151515151515152,"some":0.015151515151515152,"bandwidth":0.015151515151515152,"this":0.015151515151515152,"is":0.015151515151515152,"relevant":0.015151515151515152,"you're":0.015151515151515152,"changing":0.015151515151515152,"calling":0.015151515151515152,"superform":0.015151515151515152},"98":{"the":0.009174311926605505,"quite":0.009174311926605505,"popular":0.009174311926605505,"supervalidatesync":0.009174311926605505,"function":0.009174311926605505,"has":0.009174311926605505,"changed":0.009174311926605505,"since":0.009174311926605505,"it's":0.009174311926605505,"not":0.009174311926605505,"possible":0.009174311926605505,"to":0.009174311926605505,"make":0.009174311926605505,"a":0.009174311926605505,"synchronous":0.009174311926605505,"validation":0.009174311926605505,"anymore":0.009174311926605505,"all":0.009174311926605505,"libaries":0.009174311926605505,"are":0.009174311926605505,"so":0.009174311926605505,"if":0.009174311926605505,"you've":0.009174311926605505,"validated":0.009174311926605505,"data":0.009174311926605505,"with":0.009174311926605505,"in":0.009174311926605505,"its":0.009174311926605505,"first":0.009174311926605505,"parameter":0.009174311926605505,"be":0.009174311926605505,"aware":0.009174311926605505,"that":0.009174311926605505,"cannot":0.009174311926605505,"do":0.009174311926605505,"you":0.009174311926605505,"need":0.009174311926605505,"use":0.009174311926605505,"page":0.009174311926605505,"ts":0.009174311926605505,"proper":0.009174311926605505,"as":0.009174311926605505,"described":0.009174311926605505,"on":0.009174311926605505,"spa":0.009174311926605505,"this":0.009174311926605505,"is":0.009174311926605505,"bit":0.009174311926605505,"of":0.009174311926605505,"security":0.009174311926605505,"issue":0.009174311926605505,"been":0.009174311926605505,"renamed":0.009174311926605505,"defaults":0.009174311926605505,"fortunately":0.009174311926605505,"though":0.009174311926605505,"quick":0.009174311926605505,"github":0.009174311926605505,"search":0.009174311926605505,"reveals":0.009174311926605505,"most":0.009174311926605505,"usages":0.009174311926605505,"schema":0.009174311926605505,"only":0.009174311926605505,"which":0.009174311926605505,"requires":0.009174311926605505,"no":0.009174311926605505,"and":0.009174311926605505,"case":0.009174311926605505,"just":0.009174311926605505,"call":0.009174311926605505,"your":0.009174311926605505,"adapter":0.009174311926605505,"eventual":0.009174311926605505,"initial":0.009174311926605505,"you're":0.009174311926605505,"good":0.009174311926605505,"go":0.009174311926605505,"note":0.009174311926605505,"supervalidate":0.009174311926605505,"can":0.009174311926605505,"used":0.009174311926605505,"anywhere":0.009174311926605505,"but":0.009174311926605505,"top-level":0.009174311926605505,"svelte":0.009174311926605505,"components":0.009174311926605505,"completely":0.009174311926605505,"removed":0.009174311926605505,"from":0.009174311926605505,"client":0.009174311926605505,"usage":0.009174311926605505,"client-side":0.009174311926605505,"more":0.009174311926605505,"convenience":0.009174311926605505,"than":0.009174311926605505,"ensuring":0.009174311926605505,"integrity":0.009174311926605505,"always":0.009174311926605505,"let":0.009174311926605505,"an":0.009174311926605505,"external":0.009174311926605505,"api":0.009174311926605505,"or":0.009174311926605505,"server":0.009174311926605505,"request":0.009174311926605505,"before":0.009174311926605505,"stored":0.009174311926605505,"somewhere":0.009174311926605505},"99":{"previously":0.02631578947368421,"you":0.02631578947368421,"could":0.02631578947368421,"do":0.02631578947368421,"const":0.02631578947368421,"result":0.02631578947368421,"await":0.02631578947368421,"validate":0.02631578947368421,"to":0.02631578947368421,"get":0.02631578947368421,"a":0.02631578947368421,"validation":0.02631578947368421,"for":0.02631578947368421,"the":0.02631578947368421,"whole":0.02631578947368421,"form":0.02631578947368421,"this":0.02631578947368421,"overload":0.02631578947368421,"caused":0.02631578947368421,"lot":0.02631578947368421,"of":0.02631578947368421,"typing":0.02631578947368421,"issues":0.02631578947368421,"so":0.02631578947368421,"it":0.02631578947368421,"has":0.02631578947368421,"now":0.02631578947368421,"been":0.02631578947368421,"split":0.02631578947368421,"into":0.02631578947368421,"fields":0.02631578947368421,"and":0.02631578947368421,"validateform":0.02631578947368421,"just":0.02631578947368421,"replace":0.02631578947368421,"calls":0.02631578947368421,"with":0.02631578947368421,"fix":0.02631578947368421},"100":{"it's":0.025,"not":0.025,"possible":0.025,"to":0.025,"set":0.025,"the":0.025,"id":0.025,"option":0.025,"undefined":0.025,"anymore":0.025,"which":0.025,"is":0.025,"very":0.025,"rare":0.025,"anyway":0.025,"by":0.025,"default":0.025,"automatically":0.025,"a":0.025,"string":0.025,"hash":0.025,"of":0.025,"schema":0.025,"only":0.025,"for":0.025,"multiple":0.025,"forms":0.025,"on":0.025,"same":0.025,"page":0.025,"or":0.025,"dynamically":0.025,"generated":0.025,"schemas":0.025,"that":0.025,"you":0.025,"may":0.025,"want":0.025,"change":0.025,"it":0.025},"101":{"a":0.125,"simple":0.125,"change":0.125,"fielderrors":0.125,"is":0.125,"renamed":0.125,"to":0.125,"valueerrors":0.125},"102":{"the":0.1111111111111111,"emptyifzero":0.1111111111111111,"setting":0.1111111111111111,"is":0.1111111111111111,"removed":0.1111111111111111,"from":0.1111111111111111,"numberproxy":0.1111111111111111,"and":0.1111111111111111,"intproxy":0.1111111111111111},"103":{"another":0.0625,"simple":0.0625,"change":0.0625,"if":0.0625,"you've":0.0625,"been":0.0625,"using":0.0625,"defaultvalidators":0.0625,"set":0.0625,"the":0.0625,"value":0.0625,"'clear'":0.0625,"on":0.0625,"validators":0.0625,"option":0.0625,"instead":0.0625},"104":{"previously":0.041666666666666664,"it":0.041666666666666664,"was":0.041666666666666664,"possible":0.041666666666666664,"to":0.041666666666666664,"post":0.041666666666666664,"the":0.041666666666666664,"name":0.041666666666666664,"of":0.041666666666666664,"enum":0.041666666666666664,"as":0.041666666666666664,"a":0.041666666666666664,"string":0.041666666666666664,"even":0.041666666666666664,"if":0.041666666666666664,"numeric":0.041666666666666664,"that's":0.041666666666666664,"not":0.041666666666666664,"anymore":0.041666666666666664,"for":0.041666666666666664,"enums":0.041666666666666664,"works":0.041666666666666664,"strings":0.041666666666666664,"course":0.041666666666666664},"105":{"enums":0.03125,"don't":0.03125,"have":0.03125,"a":0.03125,"default":0.03125,"empty":0.03125,"value":0.03125,"unlike":0.03125,"other":0.03125,"types":0.03125,"so":0.03125,"it's":0.03125,"not":0.03125,"certain":0.03125,"what":0.03125,"the":0.03125,"should":0.03125,"be":0.03125,"to":0.03125,"able":0.03125,"set":0.03125,"an":0.03125,"enum":0.03125,"as":0.03125,"required":0.03125,"first":0.03125,"will":0.03125,"used":0.03125,"unless":0.03125,"there":0.03125,"is":0.03125,"explicit":0.03125},"106":{"a":0.023255813953488372,"new":0.023255813953488372,"superform":0.023255813953488372,"istainted":0.023255813953488372,"method":0.023255813953488372,"is":0.023255813953488372,"available":0.023255813953488372,"to":0.023255813953488372,"check":0.023255813953488372,"whether":0.023255813953488372,"any":0.023255813953488372,"part":0.023255813953488372,"of":0.023255813953488372,"the":0.023255813953488372,"form":0.023255813953488372,"tainted":0.023255813953488372,"use":0.023255813953488372,"it":0.023255813953488372,"instead":0.023255813953488372,"checking":0.023255813953488372,"store":0.023255813953488372,"which":0.023255813953488372,"may":0.023255813953488372,"give":0.023255813953488372,"unexpected":0.023255813953488372,"results":0.023255813953488372,"speaking":0.023255813953488372,"now":0.023255813953488372,"keeps":0.023255813953488372,"track":0.023255813953488372,"original":0.023255813953488372,"data":0.023255813953488372,"so":0.023255813953488372,"if":0.023255813953488372,"you":0.023255813953488372,"go":0.023255813953488372,"back":0.023255813953488372,"previous":0.023255813953488372,"value":0.023255813953488372,"it's":0.023255813953488372,"not":0.023255813953488372,"considered":0.023255813953488372,"anymore":0.023255813953488372},"107":{"the":0.037037037037037035,"underlying":0.037037037037037035,"data":0.037037037037037035,"model":0.037037037037037035,"for":0.037037037037037035,"superforms":0.037037037037037035,"is":0.037037037037037035,"now":0.037037037037037035,"json":0.037037037037037035,"schema":0.037037037037037035,"which":0.037037037037037035,"what":0.037037037037037035,"makes":0.037037037037037035,"it":0.037037037037037035,"possible":0.037037037037037035,"to":0.037037037037037035,"support":0.037037037037037035,"all":0.037037037037037035,"validation":0.037037037037037035,"libraries":0.037037037037037035,"some":0.037037037037037035,"changes":0.037037037037037035,"had":0.037037037037037035,"be":0.037037037037037035,"made":0.037037037037037035,"this":0.037037037037037035,"work":0.037037037037037035},"108":{"if":0.022727272727272728,"no":0.022727272727272728,"data":0.022727272727272728,"is":0.022727272727272728,"sent":0.022727272727272728,"to":0.022727272727272728,"supervalidate":0.022727272727272728,"and":0.022727272727272728,"errors":0.022727272727272728,"should":0.022727272727272728,"be":0.022727272727272728,"displayed":0.022727272727272728,"as":0.022727272727272728,"default":0.022727272727272728,"in":0.022727272727272728,"the":0.022727272727272728,"load":0.022727272727272728,"function":0.022727272727272728,"then":0.022727272727272728,"values":0.022727272727272728,"won't":0.022727272727272728,"parsed":0.022727272727272728,"with":0.022727272727272728,"schema":0.022727272727272728,"other":0.022727272727272728,"words":0.022727272727272728,"side-effects":0.022727272727272728,"like":0.022727272727272728,"z":0.022727272727272728,"refine":0.022727272727272728,"will":0.022727272727272728,"executed":0.022727272727272728,"you":0.022727272727272728,"need":0.022727272727272728,"initial":0.022727272727272728,"validation":0.022727272727272728,"of":0.022727272727272728,"even":0.022727272727272728,"set":0.022727272727272728,"option":0.022727272727272728,"true":0.022727272727272728,"optionally":0.022727272727272728,"clear":0.022727272727272728,"after":0.022727272727272728},"109":{"in":0.02857142857142857,"hindsight":0.02857142857142857,"this":0.02857142857142857,"should":0.02857142857142857,"have":0.02857142857142857,"been":0.02857142857142857,"the":0.02857142857142857,"default":0.02857142857142857,"given":0.02857142857142857,"forgiving":0.02857142857142857,"nature":0.02857142857142857,"of":0.02857142857142857,"data":0.02857142857142857,"coercion":0.02857142857142857,"and":0.02857142857142857,"parsing":0.02857142857142857,"when":0.02857142857142857,"a":0.02857142857142857,"value":0.02857142857142857,"exists":0.02857142857142857,"field":0.02857142857142857,"is":0.02857142857142857,"not":0.02857142857142857,"required":0.02857142857142857,"anymore":0.02857142857142857,"if":0.02857142857142857,"that":0.02857142857142857,"isn't":0.02857142857142857,"posted":0.02857142857142857,"its":0.02857142857142857,"will":0.02857142857142857,"be":0.02857142857142857,"added":0.02857142857142857,"to":0.02857142857142857,"form":0.02857142857142857},"110":{"generic":0.058823529411764705,"components":0.058823529411764705,"were":0.058823529411764705,"previously":0.058823529411764705,"using":0.058823529411764705,"zod":0.058823529411764705,"types":0.058823529411764705,"for":0.058823529411764705,"type":0.058823529411764705,"safety":0.058823529411764705,"it":0.058823529411764705,"is":0.058823529411764705,"simpler":0.058823529411764705,"now":0.058823529411764705,"textinput":0.058823529411764705,"svelte":0.058823529411764705,"page":0.058823529411764705},"111":{"the":0.02631578947368421,"client":0.02631578947368421,"and":0.02631578947368421,"server":0.02631578947368421,"paths":0.02631578947368421,"for":0.02631578947368421,"imports":0.02631578947368421,"aren't":0.02631578947368421,"needed":0.02631578947368421,"anymore":0.02631578947368421,"but":0.02631578947368421,"are":0.02631578947368421,"kept":0.02631578947368421,"backwards":0.02631578947368421,"compatibility":0.02631578947368421,"if":0.02631578947368421,"you're":0.02631578947368421,"having":0.02631578947368421,"problems":0.02631578947368421,"with":0.02631578947368421,"loading":0.02631578947368421,"pages":0.02631578947368421,"import":0.02631578947368421,"everything":0.02631578947368421,"except":0.02631578947368421,"adapters":0.02631578947368421,"from":0.02631578947368421,"sveltekit-superforms":0.02631578947368421,"same":0.02631578947368421,"goes":0.02631578947368421,"superdebug":0.02631578947368421,"which":0.02631578947368421,"is":0.02631578947368421,"now":0.02631578947368421,"default":0.02631578947368421,"export":0.02631578947368421,"of":0.02631578947368421,"library":0.02631578947368421},"112":{"the":0.043478260869565216,"fields":0.043478260869565216,"object":0.043478260869565216,"returned":0.043478260869565216,"from":0.043478260869565216,"superform":0.043478260869565216,"was":0.043478260869565216,"an":0.043478260869565216,"inferior":0.043478260869565216,"version":0.043478260869565216,"of":0.043478260869565216,"formfieldproxy":0.043478260869565216,"and":0.043478260869565216,"has":0.043478260869565216,"now":0.043478260869565216,"been":0.043478260869565216,"removed":0.043478260869565216,"use":0.043478260869565216,"to":0.043478260869565216,"create":0.043478260869565216,"your":0.043478260869565216,"own":0.043478260869565216,"instead":0.043478260869565216},"113":{"you":0.04,"could":0.04,"previously":0.04,"choose":0.04,"what":0.04,"specific":0.04,"fields":0.04,"to":0.04,"untaint":0.04,"with":0.04,"a":0.04,"option":0.04,"when":0.04,"updating":0.04,"form":0.04,"it":0.04,"was":0.04,"rarely":0.04,"used":0.04,"feature":0.04,"that":0.04,"has":0.04,"now":0.04,"been":0.04,"removed":0.04},"114":{"previously":0.038461538461538464,"there":0.038461538461538464,"was":0.038461538461538464,"a":0.038461538461538464,"message":0.038461538461538464,"parameter":0.038461538461538464,"in":0.038461538461538464,"the":0.038461538461538464,"onerror":0.038461538461538464,"event":0.038461538461538464,"it's":0.038461538461538464,"gone":0.038461538461538464,"now":0.038461538461538464,"since":0.038461538461538464,"it":0.038461538461538464,"pointing":0.038461538461538464,"to":0.038461538461538464,"store":0.038461538461538464,"and":0.038461538461538464,"you":0.038461538461538464,"might":0.038461538461538464,"as":0.038461538461538464,"well":0.038461538461538464,"just":0.038461538461538464,"assign":0.038461538461538464,"directly":0.038461538461538464},"115":{"to":0.034482758620689655,"be":0.034482758620689655,"more":0.034482758620689655,"consistent":0.034482758620689655,"with":0.034482758620689655,"the":0.034482758620689655,"message":0.034482758620689655,"parameter":0.034482758620689655,"rarely":0.034482758620689655,"used":0.034482758620689655,"flashmessage":0.034482758620689655,"option":0.034482758620689655,"in":0.034482758620689655,"superform":0.034482758620689655,"has":0.034482758620689655,"an":0.034482758620689655,"onerror":0.034482758620689655,"event":0.034482758620689655,"a":0.034482758620689655,"but":0.034482758620689655,"it":0.034482758620689655,"is":0.034482758620689655,"now":0.034482758620689655,"renamed":0.034482758620689655,"signify":0.034482758620689655,"which":0.034482758620689655,"can":0.034482758620689655,"actually":0.034482758620689655,"updated":0.034482758620689655},"116":{"of":0.05263157894736842,"course":0.05263157894736842,"there":0.05263157894736842,"are":0.05263157894736842,"also":0.05263157894736842,"new":0.05263157894736842,"features":0.05263157894736842,"so":0.05263157894736842,"the":0.05263157894736842,"migration":0.05263157894736842,"will":0.05263157894736842,"be":0.05263157894736842,"worthwhile":0.05263157894736842,"check":0.05263157894736842,"what's":0.05263157894736842,"page":0.05263157894736842,"for":0.05263157894736842,"more":0.05263157894736842,"information":0.05263157894736842},"117":{"superforms":0.0125,"has":0.0125,"a":0.0125,"basic":0.0125,"client-side":0.0125,"prevention":0.0125,"of":0.0125,"multiple":0.0125,"form":0.0125,"submissions":0.0125,"but":0.0125,"you":0.0125,"may":0.0125,"want":0.0125,"to":0.0125,"limit":0.0125,"the":0.0125,"rate":0.0125,"on":0.0125,"server":0.0125,"as":0.0125,"well":0.0125,"prevent":0.0125,"misuse":0.0125,"and":0.0125,"spamming":0.0125,"useful":0.0125,"library":0.0125,"for":0.0125,"this":0.0125,"is":0.0125,"sveltekit-rate-limiter":0.0125,"which":0.0125,"makes":0.0125,"it":0.0125,"easy":0.0125,"password":0.0125,"resets":0.0125,"account":0.0125,"registration":0.0125,"etc":0.0125,"not":0.0125,"only":0.0125,"works":0.0125,"with":0.0125,"forms":0.0125,"all":0.0125,"requests":0.0125,"so":0.0125,"api":0.0125,"limiting":0.0125,"another":0.0125,"use":0.0125,"isn't":0.0125,"much":0.0125,"harder":0.0125,"than":0.0125,"can":0.0125,"be":0.0125,"easily":0.0125,"expanded":0.0125,"custom":0.0125,"limiter":0.0125,"plugins":0.0125,"different":0.0125,"stores":0.0125,"built-in":0.0125,"ones":0.0125,"installation":0.0125,"usage":0.0125,"instructions":0.0125,"are":0.0125,"available":0.0125,"at":0.0125,"its":0.0125,"github":0.0125,"repo":0.0125,"https":0.0125,"com":0.0125,"ciscoheat":0.0125},"118":{},"119":{"10":0.025,"here":0.025,"are":0.025,"the":0.025,"kind":0.025,"individuals":0.025,"and":0.025,"organizations":0.025,"that":0.025,"donating":0.025,"or":0.025,"more":0.025,"monthly":0.025,"to":0.025,"future":0.025,"development":0.025,"support":0.025,"of":0.025,"superforms":0.025,"them":0.025,"all":0.025,"you":0.025,"have":0.025,"donated":0.025,"a":0.025,"one-time":0.025,"amount":0.025,"-":0.025,"thank":0.025,"it's":0.025,"so":0.025,"appreciated":0.025,"whenever":0.025,"i":0.025,"time":0.025,"will":0.025,"reach":0.025,"out":0.025,"say":0.025,"personally":0.025},"120":{"10":0.058823529411764705,"any":0.058823529411764705,"or":0.058823529411764705,"more":0.058823529411764705,"monthly":0.058823529411764705,"donation":0.058823529411764705,"will":0.058823529411764705,"be":0.058823529411764705,"listed":0.058823529411764705,"on":0.058823529411764705,"this":0.058823529411764705,"page":0.058823529411764705,"with":0.058823529411764705,"a":0.058823529411764705,"picture":0.058823529411764705,"and":0.058823529411764705,"link":0.058823529411764705},"121":{},"122":{"superdebug":0.02127659574468085,"is":0.02127659574468085,"a":0.02127659574468085,"debugging":0.02127659574468085,"component":0.02127659574468085,"that":0.02127659574468085,"gives":0.02127659574468085,"you":0.02127659574468085,"colorized":0.02127659574468085,"and":0.02127659574468085,"nicely":0.02127659574468085,"formatted":0.02127659574468085,"output":0.02127659574468085,"for":0.02127659574468085,"any":0.02127659574468085,"data":0.02127659574468085,"structure":0.02127659574468085,"usually":0.02127659574468085,"form":0.02127659574468085,"returned":0.02127659574468085,"from":0.02127659574468085,"superform":0.02127659574468085,"it":0.02127659574468085,"also":0.02127659574468085,"shows":0.02127659574468085,"the":0.02127659574468085,"current":0.02127659574468085,"page":0.02127659574468085,"status":0.02127659574468085,"in":0.02127659574468085,"top":0.02127659574468085,"right":0.02127659574468085,"corner":0.02127659574468085,"it's":0.02127659574468085,"not":0.02127659574468085,"limited":0.02127659574468085,"to":0.02127659574468085,"superforms":0.02127659574468085,"other":0.02127659574468085,"use":0.02127659574468085,"cases":0.02127659574468085,"includes":0.02127659574468085,"plain":0.02127659574468085,"objects":0.02127659574468085,"promises":0.02127659574468085,"stores":0.02127659574468085,"more":0.02127659574468085},"123":{"0":0.011494252873563218,"120":0.011494252873563218,"proptypedefault":0.011494252873563218,"valuedescriptiondataanydata":0.011494252873563218,"to":0.011494252873563218,"be":0.011494252873563218,"displayed":0.011494252873563218,"by":0.011494252873563218,"superdebug":0.011494252873563218,"the":0.011494252873563218,"only":0.011494252873563218,"required":0.011494252873563218,"prop":0.011494252873563218,"displayboolean":0.011494252873563218,"true":0.011494252873563218,"whether":0.011494252873563218,"show":0.011494252873563218,"or":0.011494252873563218,"hide":0.011494252873563218,"statusboolean":0.011494252873563218,"http":0.011494252873563218,"status":0.011494252873563218,"code":0.011494252873563218,"of":0.011494252873563218,"current":0.011494252873563218,"page":0.011494252873563218,"labelstring":0.011494252873563218,"add":0.011494252873563218,"a":0.011494252873563218,"label":0.011494252873563218,"useful":0.011494252873563218,"when":0.011494252873563218,"using":0.011494252873563218,"multiple":0.011494252873563218,"instances":0.011494252873563218,"on":0.011494252873563218,"collapsibleboolean":0.011494252873563218,"false":0.011494252873563218,"makes":0.011494252873563218,"component":0.011494252873563218,"collapsible":0.011494252873563218,"per-route":0.011494252873563218,"basis":0.011494252873563218,"collapsedboolean":0.011494252873563218,"if":0.011494252873563218,"is":0.011494252873563218,"sets":0.011494252873563218,"it":0.011494252873563218,"initially":0.011494252873563218,"collapsed":0.011494252873563218,"stringtruncatenumber":0.011494252873563218,"truncate":0.011494252873563218,"long":0.011494252873563218,"string":0.011494252873563218,"field":0.011494252873563218,"valuns":0.011494252873563218,"data":0.011494252873563218,"set":0.011494252873563218,"disable":0.011494252873563218,"truncating":0.011494252873563218,"rawboolean":0.011494252873563218,"skip":0.011494252873563218,"promise":0.011494252873563218,"and":0.011494252873563218,"store":0.011494252873563218,"detection":0.011494252873563218,"functionsboolean":0.011494252873563218,"enables":0.011494252873563218,"display":0.011494252873563218,"fields":0.011494252873563218,"that":0.011494252873563218,"are":0.011494252873563218,"functions":0.011494252873563218,"theme":0.011494252873563218,"default":0.011494252873563218,"vscode":0.011494252873563218,"which":0.011494252873563218,"can":0.011494252873563218,"also":0.011494252873563218,"customized":0.011494252873563218,"with":0.011494252873563218,"css":0.011494252873563218,"variables":0.011494252873563218,"refhtmlpreelementreference":0.011494252873563218,"pre":0.011494252873563218,"element":0.011494252873563218,"contains":0.011494252873563218},"124":{"input":0.5,"form":0.5},"125":{"a":0.1,"label":0.1,"is":0.1,"useful":0.1,"when":0.1,"using":0.1,"multiple":0.1,"instance":0.1,"of":0.1,"superdebug":0.1},"126":{"to":0.07692307692307693,"see":0.07692307692307693,"this":0.07692307692307693,"in":0.07692307692307693,"action":0.07692307692307693,"scroll":0.07692307692307693,"the":0.07692307692307693,"product":0.07692307692307693,"data":0.07692307692307693,"below":0.07692307692307693,"and":0.07692307692307693,"hit":0.07692307692307693,"refresh":0.07692307692307693},"127":{"if":0.0625,"you":0.0625,"want":0.0625,"to":0.0625,"debug":0.0625,"multiple":0.0625,"stores":0.0625,"objects":0.0625,"in":0.0625,"the":0.0625,"same":0.0625,"instance":0.0625,"superdebug":0.0625,"data":0.0625,"form":0.0625,"errors":0.0625},"128":{"superdebug":0.125,"displays":0.125,"file":0.125,"and":0.125,"filelist":0.125,"objects":0.125,"as":0.125,"well":0.125},"129":{"you":0.125,"can":0.125,"pass":0.125,"a":0.125,"store":0.125,"directly":0.125,"to":0.125,"superdebug":0.125},"130":{"superdebug":0.14285714285714285,"data":0.14285714285714285,"form":0.14285714285714285,"theme":0.14285714285714285,"vscode":0.14285714285714285,"--sd-code-date":0.14285714285714285,"lightgreen":0.14285714285714285},"131":{"note":0.09090909090909091,"that":0.09090909090909091,"styling":0.09090909090909091,"the":0.09090909090909091,"component":0.09090909090909091,"produces":0.09090909090909091,"side-effect":0.09090909090909091,"described":0.09090909090909091,"in":0.09090909090909091,"svelte":0.09090909090909091,"docs":0.09090909090909091},"132":{"debugging":0.047619047619047616,"svelte's":0.047619047619047616,"page":0.047619047619047616,"data":0.047619047619047616,"when":0.047619047619047616,"the":0.047619047619047616,"going":0.047619047619047616,"gets":0.047619047619047616,"tough":0.047619047619047616,"since":0.047619047619047616,"it":0.047619047619047616,"can":0.047619047619047616,"contain":0.047619047619047616,"a":0.047619047619047616,"lot":0.047619047619047616,"of":0.047619047619047616,"using":0.047619047619047616,"collapsible":0.047619047619047616,"prop":0.047619047619047616,"is":0.047619047619047616,"convenient":0.047619047619047616},"133":{},"134":{"there":0.1,"are":0.1,"two":0.1,"ways":0.1,"of":0.1,"getting":0.1,"support":0.1,"with":0.1,"using":0.1,"superforms":0.1},"135":{"if":0.03125,"you're":0.03125,"using":0.03125,"superforms":0.03125,"in":0.03125,"a":0.03125,"personal":0.03125,"or":0.03125,"non-profit":0.03125,"project":0.03125,"support":0.03125,"is":0.03125,"completely":0.03125,"free":0.03125,"star":0.03125,"on":0.03125,"github":0.03125,"more":0.03125,"than":0.03125,"enough":0.03125,"you":0.03125,"want":0.03125,"to":0.03125,"show":0.03125,"your":0.03125,"appreciation":0.03125,"join":0.03125,"free-support":0.03125,"discord":0.03125,"and":0.03125,"ask":0.03125,"away":0.03125},"136":{"10":0.015873015873015872,"if":0.015873015873015872,"you're":0.015873015873015872,"making":0.015873015873015872,"or":0.015873015873015872,"aiming":0.015873015873015872,"to":0.015873015873015872,"make":0.015873015873015872,"money":0.015873015873015872,"on":0.015873015873015872,"your":0.015873015873015872,"project":0.015873015873015872,"a":0.015873015873015872,"donation":0.015873015873015872,"proportional":0.015873015873015872,"the":0.015873015873015872,"current":0.015873015873015872,"profit":0.015873015873015872,"of":0.015873015873015872,"company":0.015873015873015872,"you":0.015873015873015872,"work":0.015873015873015872,"for":0.015873015873015872,"will":0.015873015873015872,"give":0.015873015873015872,"month":0.015873015873015872,"commercial":0.015873015873015872,"support":0.015873015873015872,"donate":0.015873015873015872,"with":0.015873015873015872,"one":0.015873015873015872,"options":0.015873015873015872,"below":0.015873015873015872,"then":0.015873015873015872,"ask":0.015873015873015872,"in":0.015873015873015872,"commercial-support":0.015873015873015872,"channel":0.015873015873015872,"discord":0.015873015873015872,"github":0.015873015873015872,"longer":0.015873015873015872,"period":0.015873015873015872,"can":0.015873015873015872,"monthly":0.015873015873015872,"any":0.015873015873015872,"higher":0.015873015873015872,"be":0.015873015873015872,"listed":0.015873015873015872,"sponsors":0.015873015873015872,"page":0.015873015873015872,"picture":0.015873015873015872,"and":0.015873015873015872,"link":0.015873015873015872,"as":0.015873015873015872,"sponsor":0.015873015873015872,"many":0.015873015873015872,"thanks":0.015873015873015872,"want":0.015873015873015872,"open":0.015873015873015872,"source":0.015873015873015872,"software":0.015873015873015872,"this":0.015873015873015872,"way":0.015873015873015872},"137":{"please":0.022222222222222223,"report":0.022222222222222223,"bugs":0.022222222222222223,"as":0.022222222222222223,"an":0.022222222222222223,"issue":0.022222222222222223,"on":0.022222222222222223,"github":0.022222222222222223,"fixing":0.022222222222222223,"and":0.022222222222222223,"working":0.022222222222222223,"new":0.022222222222222223,"features":0.022222222222222223,"will":0.022222222222222223,"be":0.022222222222222223,"handled":0.022222222222222223,"in":0.022222222222222223,"due":0.022222222222222223,"time":0.022222222222222223,"but":0.022222222222222223,"if":0.022222222222222223,"you":0.022222222222222223,"want":0.022222222222222223,"to":0.022222222222222223,"speed":0.022222222222222223,"up":0.022222222222222223,"the":0.022222222222222223,"process":0.022222222222222223,"a":0.022222222222222223,"donation":0.022222222222222223,"is":0.022222222222222223,"welcome":0.022222222222222223,"or":0.022222222222222223,"can":0.022222222222222223,"submit":0.022222222222222223,"pull":0.022222222222222223,"request":0.022222222222222223,"since":0.022222222222222223,"with":0.022222222222222223,"open":0.022222222222222223,"source":0.022222222222222223,"we":0.022222222222222223,"also":0.022222222222222223,"pay":0.022222222222222223,"our":0.022222222222222223},"138":{"0":0.05,"1":0.05,"after":0.05,"a":0.05,"lot":0.05,"of":0.05,"work":0.05,"superforms":0.05,"has":0.05,"been":0.05,"released":0.05,"here":0.05,"are":0.05,"the":0.05,"most":0.05,"important":0.05,"new":0.05,"features":0.05,"and":0.05,"improvements":0.05},"139":{"setting":0.018518518518518517,"a":0.018518518518518517,"form":0.018518518518518517,"id":0.018518518518518517,"for":0.018518518518518517,"multiple":0.018518518518518517,"forms":0.018518518518518517,"on":0.018518518518518517,"the":0.018518518518518517,"same":0.018518518518518517,"page":0.018518518518518517,"is":0.018518518518518517,"not":0.018518518518518517,"required":0.018518518518518517,"anymore":0.018518518518518517,"when":0.018518518518518517,"using":0.018518518518518517,"use":0.018518518518518517,"enhance":0.018518518518518517,"one":0.018518518518518517,"exception":0.018518518518518517,"if":0.018518518518518517,"are":0.018518518518518517,"schema":0.018518518518518517,"identical":0.018518518518518517,"content":0.018518518518518517,"then":0.018518518518518517,"you'll":0.018518518518518517,"need":0.018518518518518517,"an":0.018518518518518517,"without":0.018518518518518517,"work":0.018518518518518517,"as":0.018518518518518517,"well":0.018518518518518517,"but":0.018518518518518517,"must":0.018518518518518517,"be":0.018518518518518517,"manually":0.018518518518518517,"specified":0.018518518518518517,"either":0.018518518518518517,"option":0.018518518518518517,"or":0.018518518518518517,"in":0.018518518518518517,"hidden":0.018518518518518517,"field":0.018518518518518517,"called":0.018518518518518517,"__superform_id":0.018518518518518517,"extra":0.018518518518518517,"safety":0.018518518518518517,"warning":0.018518518518518517,"will":0.018518518518518517,"emitted":0.018518518518518517,"id's":0.018518518518518517,"detected":0.018518518518518517},"140":{"this":0.038461538461538464,"method":0.038461538461538464,"will":0.038461538461538464,"provide":0.038461538461538464,"you":0.038461538461538464,"with":0.038461538461538464,"the":0.038461538461538464,"default":0.038461538461538464,"values":0.038461538461538464,"for":0.038461538461538464,"a":0.038461538461538464,"schema":0.038461538461538464,"was":0.038461538461538464,"previously":0.038461538461538464,"an":0.038461538461538464,"undocumented":0.038461538461538464,"function":0.038461538461538464,"called":0.038461538461538464,"defaultdata":0.038461538461538464,"if":0.038461538461538464,"you've":0.038461538461538464,"used":0.038461538461538464,"it":0.038461538461538464,"rename":0.038461538461538464,"to":0.038461538461538464,"defaultvalues":0.038461538461538464},"141":{"when":0.02,"using":0.02,"supervalidate":0.02,"on":0.02,"the":0.02,"client":0.02,"you":0.02,"previously":0.02,"had":0.02,"to":0.02,"use":0.02,"a":0.02,"page":0.02,"ts":0.02,"file":0.02,"call":0.02,"since":0.02,"it":0.02,"is":0.02,"asynchronous":0.02,"now":0.02,"can":0.02,"import":0.02,"supervalidatesync":0.02,"and":0.02,"in":0.02,"components":0.02,"directly":0.02,"which":0.02,"assumes":0.02,"that":0.02,"there":0.02,"no":0.02,"async":0.02,"validation":0.02,"schema":0.02,"be":0.02,"very":0.02,"convenient":0.02,"spa's":0.02,"just":0.02,"aware":0.02,"bundle":0.02,"size":0.02,"will":0.02,"increase":0.02,"bit":0.02,"compared":0.02,"only":0.02,"server":0.02},"142":{"for":0.027777777777777776,"errors":0.027777777777777776,"and":0.027777777777777776,"proxies":0.027777777777777776,"with":0.027777777777777776,"nested":0.027777777777777776,"data":0.027777777777777776,"the":0.027777777777777776,"array":0.027777777777777776,"syntax":0.027777777777777776,"was":0.027777777777777776,"a":0.027777777777777776,"bit":0.027777777777777776,"clunky":0.027777777777777776,"it":0.027777777777777776,"has":0.027777777777777776,"now":0.027777777777777776,"been":0.027777777777777776,"replaced":0.027777777777777776,"typesafe":0.027777777777777776,"string":0.027777777777777776,"path":0.027777777777777776,"so":0.027777777777777776,"you":0.027777777777777776,"can":0.027777777777777776,"write":0.027777777777777776,"just":0.027777777777777776,"as":0.027777777777777776,"would":0.027777777777777776,"access":0.027777777777777776,"an":0.027777777777777776,"object":0.027777777777777776,"property":0.027777777777777776,"in":0.027777777777777776,"normal":0.027777777777777776,"js":0.027777777777777776},"143":{"you":0.058823529411764705,"can":0.058823529411764705,"now":0.058823529411764705,"test":0.058823529411764705,"if":0.058823529411764705,"the":0.058823529411764705,"form":0.058823529411764705,"has":0.058823529411764705,"been":0.058823529411764705,"previously":0.058823529411764705,"posted":0.058823529411764705,"by":0.058823529411764705,"deconstructing":0.058823529411764705,"boolean":0.058823529411764705,"store":0.058823529411764705,"from":0.058823529411764705,"superform":0.058823529411764705},"144":{"you":0.05,"can":0.05,"now":0.05,"use":0.05,"the":0.05,"data":0.05,"and":0.05,"id":0.05,"options":0.05,"when":0.05,"calling":0.05,"reset":0.05,"to":0.05,"form":0.05,"different":0.05,"than":0.05,"initial":0.05,"one":0.05,"be":0.05,"partial":0.05},"145":{"intproxy":0.05,"numberproxy":0.05,"dateproxy":0.05,"and":0.05,"stringproxy":0.05,"now":0.05,"have":0.05,"an":0.05,"empty":0.05,"option":0.05,"so":0.05,"values":0.05,"can":0.05,"be":0.05,"automatically":0.05,"set":0.05,"to":0.05,"null":0.05,"or":0.05,"undefined":0.05},"146":{"the":0.037037037037037035,"validate":0.037037037037037035,"function":0.037037037037037035,"can":0.037037037037037035,"be":0.037037037037037035,"used":0.037037037037037035,"to":0.037037037037037035,"a":0.037037037037037035,"specific":0.037037037037037035,"field":0.037037037037037035,"in":0.037037037037037035,"form":0.037037037037037035,"but":0.037037037037037035,"now":0.037037037037037035,"you":0.037037037037037035,"also":0.037037037037037035,"call":0.037037037037037035,"with":0.037037037037037035,"no":0.037037037037037035,"arguments":0.037037037037037035,"and":0.037037037037037035,"get":0.037037037037037035,"validation":0.037037037037037035,"result":0.037037037037037035,"back":0.037037037037037035,"for":0.037037037037037035,"whole":0.037037037037037035},"147":{"0":0.022222222222222223,"1":0.022222222222222223,"previously":0.022222222222222223,"it":0.022222222222222223,"wasn't":0.022222222222222223,"possible":0.022222222222222223,"to":0.022222222222222223,"handle":0.022222222222222223,"errors":0.022222222222222223,"for":0.022222222222222223,"arrays":0.022222222222222223,"in":0.022222222222222223,"the":0.022222222222222223,"schema":0.022222222222222223,"like":0.022222222222222223,"a":0.022222222222222223,"minimum":0.022222222222222223,"or":0.022222222222222223,"maximum":0.022222222222222223,"number":0.022222222222222223,"of":0.022222222222222223,"items":0.022222222222222223,"now":0.022222222222222223,"it's":0.022222222222222223,"release":0.022222222222222223,"notes":0.022222222222222223,"have":0.022222222222222223,"full":0.022222222222222223,"list":0.022222222222222223,"changes":0.022222222222222223,"and":0.022222222222222223,"as":0.022222222222222223,"usual":0.022222222222222223,"let":0.022222222222222223,"me":0.022222222222222223,"know":0.022222222222222223,"on":0.022222222222222223,"github":0.022222222222222223,"discord":0.022222222222222223,"if":0.022222222222222223,"something":0.022222222222222223,"is":0.022222222222222223,"unclear":0.022222222222222223,"not":0.022222222222222223,"working":0.022222222222222223},"148":{"2":0.06666666666666667,"superforms":0.06666666666666667,"has":0.06666666666666667,"finally":0.06666666666666667,"been":0.06666666666666667,"released":0.06666666666666667,"here's":0.06666666666666667,"a":0.06666666666666667,"presentation":0.06666666666666667,"of":0.06666666666666667,"the":0.06666666666666667,"new":0.06666666666666667,"features":0.06666666666666667,"and":0.06666666666666667,"improvements":0.06666666666666667},"149":{"finally":0.047619047619047616,"it's":0.047619047619047616,"possible":0.047619047619047616,"to":0.047619047619047616,"handle":0.047619047619047616,"files":0.047619047619047616,"with":0.047619047619047616,"superforms":0.047619047619047616,"even":0.047619047619047616,"validation":0.047619047619047616,"on":0.047619047619047616,"the":0.047619047619047616,"client":0.047619047619047616,"see":0.047619047619047616,"dedicated":0.047619047619047616,"file":0.047619047619047616,"uploads":0.047619047619047616,"section":0.047619047619047616,"for":0.047619047619047616,"more":0.047619047619047616,"information":0.047619047619047616},"150":{"now":0.09090909090909091,"that":0.09090909090909091,"file":0.09090909090909091,"uploads":0.09090909090909091,"is":0.09090909090909091,"a":0.09090909090909091,"feature":0.09090909090909091,"superdebug":0.09090909090909091,"displays":0.09090909090909091,"objects":0.09090909090909091,"properly":0.09090909090909091},"151":{"an":0.03333333333333333,"oft-requested":0.03333333333333333,"feature":0.03333333333333333,"has":0.03333333333333333,"been":0.03333333333333333,"support":0.03333333333333333,"for":0.03333333333333333,"unions":0.03333333333333333,"which":0.03333333333333333,"always":0.03333333333333333,"a":0.03333333333333333,"bit":0.03333333333333333,"difficult":0.03333333333333333,"to":0.03333333333333333,"handle":0.03333333333333333,"with":0.03333333333333333,"formdata":0.03333333333333333,"parsing":0.03333333333333333,"and":0.03333333333333333,"default":0.03333333333333333,"values":0.03333333333333333,"but":0.03333333333333333,"can":0.03333333333333333,"now":0.03333333333333333,"be":0.03333333333333333,"used":0.03333333333333333,"in":0.03333333333333333,"schemas":0.03333333333333333,"few":0.03333333333333333,"compromises":0.03333333333333333},"152":{"if":0.03571428571428571,"a":0.03571428571428571,"schema":0.03571428571428571,"field":0.03571428571428571,"can":0.03571428571428571,"be":0.03571428571428571,"more":0.03571428571428571,"than":0.03571428571428571,"one":0.03571428571428571,"type":0.03571428571428571,"it's":0.03571428571428571,"not":0.03571428571428571,"possible":0.03571428571428571,"to":0.03571428571428571,"know":0.03571428571428571,"what":0.03571428571428571,"default":0.03571428571428571,"value":0.03571428571428571,"should":0.03571428571428571,"set":0.03571428571428571,"for":0.03571428571428571,"it":0.03571428571428571,"therefore":0.03571428571428571,"you":0.03571428571428571,"must":0.03571428571428571,"specify":0.03571428571428571,"unions":0.03571428571428571,"explicitly":0.03571428571428571},"153":{"123":0.017241379310344827,"unions":0.017241379310344827,"are":0.017241379310344827,"also":0.017241379310344827,"quite":0.017241379310344827,"difficult":0.017241379310344827,"to":0.017241379310344827,"make":0.017241379310344827,"assumptions":0.017241379310344827,"about":0.017241379310344827,"in":0.017241379310344827,"formdata":0.017241379310344827,"if":0.017241379310344827,"was":0.017241379310344827,"posted":0.017241379310344827,"as":0.017241379310344827,"all":0.017241379310344827,"values":0.017241379310344827,"strings":0.017241379310344827,"should":0.017241379310344827,"it":0.017241379310344827,"be":0.017241379310344827,"parsed":0.017241379310344827,"a":0.017241379310344827,"string":0.017241379310344827,"or":0.017241379310344827,"number":0.017241379310344827,"the":0.017241379310344827,"above":0.017241379310344827,"case":0.017241379310344827,"there":0.017241379310344827,"is":0.017241379310344827,"no":0.017241379310344827,"obvious":0.017241379310344827,"answer":0.017241379310344827,"so":0.017241379310344827,"with":0.017241379310344827,"more":0.017241379310344827,"than":0.017241379310344827,"one":0.017241379310344827,"type":0.017241379310344827,"can":0.017241379310344827,"only":0.017241379310344827,"used":0.017241379310344827,"when":0.017241379310344827,"datatype":0.017241379310344827,"option":0.017241379310344827,"set":0.017241379310344827,"'json'":0.017241379310344827,"which":0.017241379310344827,"will":0.017241379310344827,"bypass":0.017241379310344827,"whole":0.017241379310344827,"parsing":0.017241379310344827,"by":0.017241379310344827,"serializing":0.017241379310344827,"form":0.017241379310344827,"data":0.017241379310344827},"154":{"to":0.06666666666666667,"better":0.06666666666666667,"follow":0.06666666666666667,"the":0.06666666666666667,"sveltekit":0.06666666666666667,"defaults":0.06666666666666667,"resetform":0.06666666666666667,"option":0.06666666666666667,"for":0.06666666666666667,"superform":0.06666666666666667,"is":0.06666666666666667,"now":0.06666666666666667,"true":0.06666666666666667,"as":0.06666666666666667,"default":0.06666666666666667},"155":{"the":0.017241379310344827,"default":0.017241379310344827,"for":0.017241379310344827,"taintedmessage":0.017241379310344827,"changed":0.017241379310344827,"too":0.017241379310344827,"it":0.017241379310344827,"is":0.017241379310344827,"now":0.017241379310344827,"false":0.017241379310344827,"so":0.017241379310344827,"no":0.017241379310344827,"message":0.017241379310344827,"will":0.017241379310344827,"be":0.017241379310344827,"displayed":0.017241379310344827,"if":0.017241379310344827,"form":0.017241379310344827,"modified":0.017241379310344827,"unless":0.017241379310344827,"you":0.017241379310344827,"set":0.017241379310344827,"to":0.017241379310344827,"either":0.017241379310344827,"true":0.017241379310344827,"a":0.017241379310344827,"string":0.017241379310344827,"or":0.017241379310344827,"function":0.017241379310344827,"that":0.017241379310344827,"returns":0.017241379310344827,"promise":0.017241379310344827,"resolved":0.017241379310344827,"navigation":0.017241379310344827,"should":0.017241379310344827,"proceed":0.017241379310344827,"can":0.017241379310344827,"use":0.017241379310344827,"custom":0.017241379310344827,"dialog":0.017241379310344827,"displaying":0.017241379310344827,"tainted":0.017241379310344827,"store":0.017241379310344827,"also":0.017241379310344827,"smarter":0.017241379310344827,"keeping":0.017241379310344827,"track":0.017241379310344827,"of":0.017241379310344827,"original":0.017241379310344827,"data":0.017241379310344827,"go":0.017241379310344827,"back":0.017241379310344827,"previous":0.017241379310344827,"value":0.017241379310344827,"it's":0.017241379310344827,"not":0.017241379310344827,"considered":0.017241379310344827,"anymore":0.017241379310344827},"156":{"a":0.03571428571428571,"new":0.03571428571428571,"istainted":0.03571428571428571,"method":0.03571428571428571,"is":0.03571428571428571,"available":0.03571428571428571,"on":0.03571428571428571,"superform":0.03571428571428571,"to":0.03571428571428571,"check":0.03571428571428571,"whether":0.03571428571428571,"any":0.03571428571428571,"part":0.03571428571428571,"of":0.03571428571428571,"the":0.03571428571428571,"form":0.03571428571428571,"tainted":0.03571428571428571,"use":0.03571428571428571,"it":0.03571428571428571,"instead":0.03571428571428571,"testing":0.03571428571428571,"against":0.03571428571428571,"store":0.03571428571428571,"which":0.03571428571428571,"may":0.03571428571428571,"give":0.03571428571428571,"unexpected":0.03571428571428571,"results":0.03571428571428571},"157":{"an":0.047619047619047616,"onchange":0.047619047619047616,"event":0.047619047619047616,"is":0.047619047619047616,"added":0.047619047619047616,"to":0.047619047619047616,"the":0.047619047619047616,"superform":0.047619047619047616,"options":0.047619047619047616,"so":0.047619047619047616,"you":0.047619047619047616,"can":0.047619047619047616,"track":0.047619047619047616,"specific":0.047619047619047616,"fields":0.047619047619047616,"for":0.047619047619047616,"changes":0.047619047619047616,"check":0.047619047619047616,"events":0.047619047619047616,"page":0.047619047619047616,"details":0.047619047619047616},"158":{"previously":0.023809523809523808,"you":0.023809523809523808,"could":0.023809523809523808,"call":0.023809523809523808,"validate":0.023809523809523808,"for":0.023809523809523808,"retrieving":0.023809523809523808,"a":0.023809523809523808,"validation":0.023809523809523808,"result":0.023809523809523808,"the":0.023809523809523808,"whole":0.023809523809523808,"form":0.023809523809523808,"but":0.023809523809523808,"must":0.023809523809523808,"now":0.023809523809523808,"use":0.023809523809523808,"validateform":0.023809523809523808,"there":0.023809523809523808,"are":0.023809523809523808,"two":0.023809523809523808,"options":0.023809523809523808,"update":0.023809523809523808,"true":0.023809523809523808,"schema":0.023809523809523808,"validationadapter":0.023809523809523808,"partial":0.023809523809523808,"t":0.023809523809523808,"which":0.023809523809523808,"can":0.023809523809523808,"be":0.023809523809523808,"used":0.023809523809523808,"to":0.023809523809523808,"trigger":0.023809523809523808,"full":0.023809523809523808,"client-side":0.023809523809523808,"and":0.023809523809523808,"partially":0.023809523809523808,"is":0.023809523809523808,"useful":0.023809523809523808,"multi-step":0.023809523809523808,"forms":0.023809523809523808},"159":{"0":0.018867924528301886,"for":0.018867924528301886,"number":0.018867924528301886,"fields":0.018867924528301886,"a":0.018867924528301886,"ux":0.018867924528301886,"problem":0.018867924528301886,"has":0.018867924528301886,"been":0.018867924528301886,"that":0.018867924528301886,"the":0.018867924528301886,"default":0.018867924528301886,"value":0.018867924528301886,"numbers":0.018867924528301886,"hides":0.018867924528301886,"placeholder":0.018867924528301886,"text":0.018867924528301886,"and":0.018867924528301886,"it's":0.018867924528301886,"not":0.018867924528301886,"always":0.018867924528301886,"wanted":0.018867924528301886,"to":0.018867924528301886,"have":0.018867924528301886,"there":0.018867924528301886,"initially":0.018867924528301886,"but":0.018867924528301886,"now":0.018867924528301886,"possible":0.018867924528301886,"make":0.018867924528301886,"this":0.018867924528301886,"work":0.018867924528301886,"with":0.018867924528301886,"two":0.018867924528301886,"new":0.018867924528301886,"options":0.018867924528301886,"in":0.018867924528301886,"intproxy":0.018867924528301886,"numberproxy":0.018867924528301886,"empty":0.018867924528301886,"option":0.018867924528301886,"if":0.018867924528301886,"set":0.018867924528301886,"'zero'":0.018867924528301886,"will":0.018867924528301886,"field":0.018867924528301886,"unfortunately":0.018867924528301886,"long":0.018867924528301886,"initiallyemptyifzero":0.018867924528301886,"ensure":0.018867924528301886,"is":0.018867924528301886,"at":0.018867924528301886,"first":0.018867924528301886},"160":{"you":0.03125,"may":0.03125,"have":0.03125,"noticed":0.03125,"in":0.03125,"the":0.03125,"examples":0.03125,"that":0.03125,"client":0.03125,"and":0.03125,"server":0.03125,"isn't":0.03125,"needed":0.03125,"anymore":0.03125,"simply":0.03125,"import":0.03125,"everything":0.03125,"except":0.03125,"adapters":0.03125,"from":0.03125,"sveltekit-superforms":0.03125,"same":0.03125,"goes":0.03125,"for":0.03125,"superdebug":0.03125,"which":0.03125,"is":0.03125,"now":0.03125,"default":0.03125,"export":0.03125,"of":0.03125,"library":0.03125},"161":{"2":0.04,"read":0.04,"the":0.04,"detailed":0.04,"migration":0.04,"guide":0.04,"to":0.04,"convert":0.04,"your":0.04,"projects":0.04,"superforms":0.04,"version":0.04,"ask":0.04,"any":0.04,"questions":0.04,"in":0.04,"v2-migration":0.04,"discord":0.04,"channel":0.04,"or":0.04,"open":0.04,"an":0.04,"issue":0.04,"on":0.04,"github":0.04},"162":{"0":0.09090909090909091,"2":0.09090909090909091,"the":0.09090909090909091,"release":0.09090909090909091,"notes":0.09090909090909091,"have":0.09090909090909091,"a":0.09090909090909091,"full":0.09090909090909091,"list":0.09090909090909091,"of":0.09090909090909091,"changes":0.09090909090909091},"163":{"there":0.030303030303030304,"are":0.030303030303030304,"two":0.030303030303030304,"client-side":0.030303030303030304,"validation":0.030303030303030304,"options":0.030303030303030304,"with":0.030303030303030304,"superforms":0.030303030303030304,"the":0.030303030303030304,"built-in":0.030303030303030304,"browser":0.030303030303030304,"which":0.030303030303030304,"doesn't":0.030303030303030304,"require":0.030303030303030304,"javascript":0.030303030303030304,"to":0.030303030303030304,"be":0.030303030303030304,"enabled":0.030303030303030304,"in":0.030303030303030304,"using":0.030303030303030304,"a":0.030303030303030304,"schema":0.030303030303030304,"usually":0.030303030303030304,"same":0.030303030303030304,"one":0.030303030303030304,"as":0.030303030303030304,"on":0.030303030303030304,"server":0.030303030303030304,"requires":0.030303030303030304,"and":0.030303030303030304,"use":0.030303030303030304,"enhance":0.030303030303030304,"concepts":0.030303030303030304},"164":{"there":0.05263157894736842,"is":0.05263157894736842,"a":0.05263157894736842,"web":0.05263157894736842,"standard":0.05263157894736842,"for":0.05263157894736842,"form":0.05263157894736842,"input":0.05263157894736842,"which":0.05263157894736842,"doesn't":0.05263157894736842,"require":0.05263157894736842,"javascript":0.05263157894736842,"and":0.05263157894736842,"virtually":0.05263157894736842,"effortless":0.05263157894736842,"to":0.05263157894736842,"use":0.05263157894736842,"with":0.05263157894736842,"superforms":0.05263157894736842},"165":{"to":0.041666666666666664,"use":0.041666666666666664,"the":0.041666666666666664,"built-in":0.041666666666666664,"browser":0.041666666666666664,"validation":0.041666666666666664,"just":0.041666666666666664,"spread":0.041666666666666664,"constraints":0.041666666666666664,"store":0.041666666666666664,"for":0.041666666666666664,"a":0.041666666666666664,"schema":0.041666666666666664,"field":0.041666666666666664,"on":0.041666666666666664,"its":0.041666666666666664,"input":0.041666666666666664,"is":0.041666666666666664,"an":0.041666666666666664,"object":0.041666666666666664,"with":0.041666666666666664,"properties":0.041666666666666664,"mapped":0.041666666666666664,"from":0.041666666666666664},"166":{"for":0.02127659574468085,"some":0.02127659574468085,"input":0.02127659574468085,"types":0.02127659574468085,"a":0.02127659574468085,"certain":0.02127659574468085,"format":0.02127659574468085,"is":0.02127659574468085,"required":0.02127659574468085,"example":0.02127659574468085,"with":0.02127659574468085,"date":0.02127659574468085,"fields":0.02127659574468085,"both":0.02127659574468085,"the":0.02127659574468085,"underlying":0.02127659574468085,"data":0.02127659574468085,"and":0.02127659574468085,"constraint":0.02127659574468085,"needs":0.02127659574468085,"to":0.02127659574468085,"be":0.02127659574468085,"in":0.02127659574468085,"yyyy-mm-dd":0.02127659574468085,"which":0.02127659574468085,"can":0.02127659574468085,"handled":0.02127659574468085,"by":0.02127659574468085,"using":0.02127659574468085,"proxy":0.02127659574468085,"adding":0.02127659574468085,"attributes":0.02127659574468085,"after":0.02127659574468085,"constraints":0.02127659574468085,"spread":0.02127659574468085,"case":0.02127659574468085,"they":0.02127659574468085,"will":0.02127659574468085,"take":0.02127659574468085,"precedence":0.02127659574468085,"check":0.02127659574468085,"validation":0.02127659574468085,"their":0.02127659574468085,"valid":0.02127659574468085,"values":0.02127659574468085,"at":0.02127659574468085,"mdn":0.02127659574468085},"167":{"the":0.022727272727272728,"built-in":0.022727272727272728,"browser":0.022727272727272728,"validation":0.022727272727272728,"can":0.022727272727272728,"be":0.022727272727272728,"a":0.022727272727272728,"bit":0.022727272727272728,"constrained":0.022727272727272728,"for":0.022727272727272728,"example":0.022727272727272728,"you":0.022727272727272728,"can't":0.022727272727272728,"easily":0.022727272727272728,"control":0.022727272727272728,"position":0.022727272727272728,"and":0.022727272727272728,"appearance":0.022727272727272728,"of":0.022727272727272728,"error":0.022727272727272728,"messages":0.022727272727272728,"instead":0.022727272727272728,"or":0.022727272727272728,"supplementary":0.022727272727272728,"use":0.022727272727272728,"schema":0.022727272727272728,"customize":0.022727272727272728,"with":0.022727272727272728,"number":0.022727272727272728,"options":0.022727272727272728,"so":0.022727272727272728,"form":0.022727272727272728,"errors":0.022727272727272728,"will":0.022727272727272728,"displayed":0.022727272727272728,"in":0.022727272727272728,"real-time":0.022727272727272728,"as":0.022727272727272728,"most":0.022727272727272728,"client-side":0.022727272727272728,"functionality":0.022727272727272728,"enhance":0.022727272727272728,"is":0.022727272727272728,"required":0.022727272727272728},"168":{"setting":0.011764705882352941,"the":0.011764705882352941,"validators":0.011764705882352941,"option":0.011764705882352941,"to":0.011764705882352941,"an":0.011764705882352941,"adapter":0.011764705882352941,"with":0.011764705882352941,"same":0.011764705882352941,"schema":0.011764705882352941,"as":0.011764705882352941,"on":0.011764705882352941,"server":0.011764705882352941,"is":0.011764705882352941,"most":0.011764705882352941,"convenient":0.011764705882352941,"and":0.011764705882352941,"recommended":0.011764705882352941,"way":0.011764705882352941,"just":0.011764705882352941,"put":0.011764705882352941,"in":0.011764705882352941,"a":0.011764705882352941,"shared":0.011764705882352941,"directory":0.011764705882352941,"lib":0.011764705882352941,"schemas":0.011764705882352941,"for":0.011764705882352941,"example":0.011764705882352941,"import":0.011764705882352941,"it":0.011764705882352941,"client":0.011764705882352941,"well":0.011764705882352941,"adding":0.011764705882352941,"will":0.011764705882352941,"increase":0.011764705882352941,"bundle":0.011764705882352941,"size":0.011764705882352941,"bit":0.011764705882352941,"since":0.011764705882352941,"validation":0.011764705882352941,"library":0.011764705882352941,"now":0.011764705882352941,"has":0.011764705882352941,"be":0.011764705882352941,"imported":0.011764705882352941,"there":0.011764705882352941,"too":0.011764705882352941,"but":0.011764705882352941,"client-side":0.011764705882352941,"optimized":0.011764705882352941,"small":0.011764705882352941,"possible":0.011764705882352941,"so":0.011764705882352941,"shouldn't":0.011764705882352941,"much":0.011764705882352941,"of":0.011764705882352941,"issue":0.011764705882352941,"use":0.011764705882352941,"append":0.011764705882352941,"this":0.011764705882352941,"works":0.011764705882352941,"only":0.011764705882352941,"one":0.011764705882352941,"used":0.011764705882352941,"if":0.011764705882352941,"you":0.011764705882352941,"need":0.011764705882352941,"switch":0.011764705882352941,"full":0.011764705882352941,"zod":0.011764705882352941,"instead":0.011764705882352941,"zodclient":0.011764705882352941,"super-simple":0.011764705882352941,"alternative":0.011764705882352941,"can":0.011764705882352941,"also":0.011764705882352941,"set":0.011764705882352941,"'clear'":0.011764705882352941,"remove":0.011764705882352941,"errors":0.011764705882352941,"field":0.011764705882352941,"soon":0.011764705882352941,"it's":0.011764705882352941,"modified":0.011764705882352941},"169":{"you":0.025,"can":0.025,"even":0.025,"switch":0.025,"schemas":0.025,"dynamically":0.025,"with":0.025,"the":0.025,"options":0.025,"object":0.025,"validators":0.025,"accepts":0.025,"a":0.025,"partial":0.025,"validator":0.025,"which":0.025,"be":0.025,"very":0.025,"useful":0.025,"for":0.025,"multi-step":0.025,"forms":0.025,"as":0.025,"mentioned":0.025,"need":0.025,"full":0.025,"adapter":0.025,"to":0.025,"an":0.025,"exception":0.025,"will":0.025,"thrown":0.025,"if":0.025,"client":0.025,"is":0.025,"detected":0.025,"different":0.025,"from":0.025,"initial":0.025,"option":0.025},"170":{"the":0.012195121951219513,"validation":0.012195121951219513,"is":0.012195121951219513,"triggered":0.012195121951219513,"when":0.012195121951219513,"a":0.012195121951219513,"value":0.012195121951219513,"changed":0.012195121951219513,"not":0.012195121951219513,"just":0.012195121951219513,"focusing":0.012195121951219513,"on":0.012195121951219513,"or":0.012195121951219513,"tabbing":0.012195121951219513,"through":0.012195121951219513,"field":0.012195121951219513,"default":0.012195121951219513,"method":0.012195121951219513,"based":0.012195121951219513,"reward":0.012195121951219513,"early":0.012195121951219513,"validate":0.012195121951219513,"late":0.012195121951219513,"pattern":0.012195121951219513,"researched":0.012195121951219513,"way":0.012195121951219513,"of":0.012195121951219513,"validating":0.012195121951219513,"input":0.012195121951219513,"data":0.012195121951219513,"that":0.012195121951219513,"makes":0.012195121951219513,"for":0.012195121951219513,"high":0.012195121951219513,"user":0.012195121951219513,"satisfaction":0.012195121951219513,"if":0.012195121951219513,"entering":0.012195121951219513,"in":0.012195121951219513,"has":0.012195121951219513,"previously":0.012195121951219513,"had":0.012195121951219513,"errors":0.012195121951219513,"otherwise":0.012195121951219513,"blur":0.012195121951219513,"but":0.012195121951219513,"you":0.012195121951219513,"can":0.012195121951219513,"instead":0.012195121951219513,"use":0.012195121951219513,"oninput":0.012195121951219513,"onblur":0.012195121951219513,"settings":0.012195121951219513,"to":0.012195121951219513,"always":0.012195121951219513,"one":0.012195121951219513,"these":0.012195121951219513,"respective":0.012195121951219513,"events":0.012195121951219513,"onsubmit":0.012195121951219513,"only":0.012195121951219513,"submit":0.012195121951219513,"be":0.012195121951219513,"aware":0.012195121951219513,"whole":0.012195121951219513,"schema":0.012195121951219513,"will":0.012195121951219513,"validated":0.012195121951219513,"modified":0.012195121951219513,"because":0.012195121951219513,"added":0.012195121951219513,"any":0.012195121951219513,"during":0.012195121951219513,"with":0.012195121951219513,"zod's":0.012195121951219513,"refine":0.012195121951219513,"similar":0.012195121951219513,"so":0.012195121951219513,"must":0.012195121951219513,"know":0.012195121951219513,"final":0.012195121951219513,"result":0.012195121951219513},"171":{"this":0.03571428571428571,"option":0.03571428571428571,"uses":0.03571428571428571,"the":0.03571428571428571,"browser":0.03571428571428571,"built-in":0.03571428571428571,"tooltip":0.03571428571428571,"to":0.03571428571428571,"display":0.03571428571428571,"validation":0.03571428571428571,"errors":0.03571428571428571,"so":0.03571428571428571,"neither":0.03571428571428571,"nor":0.03571428571428571,"constraints":0.03571428571428571,"are":0.03571428571428571,"required":0.03571428571428571,"on":0.03571428571428571,"form":0.03571428571428571,"see":0.03571428571428571,"error":0.03571428571428571,"handling":0.03571428571428571,"page":0.03571428571428571,"for":0.03571428571428571,"details":0.03571428571428571,"and":0.03571428571428571,"an":0.03571428571428571,"example":0.03571428571428571},"172":{"the":0.045454545454545456,"validate":0.045454545454545456,"function":0.045454545454545456,"deconstructed":0.045454545454545456,"from":0.045454545454545456,"superform":0.045454545454545456,"gives":0.045454545454545456,"you":0.045454545454545456,"complete":0.045454545454545456,"control":0.045454545454545456,"over":0.045454545454545456,"validation":0.045454545454545456,"process":0.045454545454545456,"for":0.045454545454545456,"specific":0.045454545454545456,"fields":0.045454545454545456,"examples":0.045454545454545456,"of":0.045454545454545456,"how":0.045454545454545456,"to":0.045454545454545456,"use":0.045454545454545456,"it":0.045454545454545456},"173":{"similar":0.07142857142857142,"to":0.07142857142857142,"validate":0.07142857142857142,"validateform":0.07142857142857142,"lets":0.07142857142857142,"you":0.07142857142857142,"the":0.07142857142857142,"whole":0.07142857142857142,"form":0.07142857142857142,"and":0.07142857142857142,"return":0.07142857142857142,"a":0.07142857142857142,"supervalidated":0.07142857142857142,"result":0.07142857142857142},"174":{"the":0.021739130434782608,"validation":0.021739130434782608,"is":0.021739130434782608,"asynchronous":0.021739130434782608,"but":0.021739130434782608,"a":0.021739130434782608,"slow":0.021739130434782608,"validator":0.021739130434782608,"will":0.021739130434782608,"delay":0.021739130434782608,"final":0.021739130434782608,"result":0.021739130434782608,"so":0.021739130434782608,"for":0.021739130434782608,"server":0.021739130434782608,"round-trip":0.021739130434782608,"like":0.021739130434782608,"checking":0.021739130434782608,"if":0.021739130434782608,"username":0.021739130434782608,"available":0.021739130434782608,"you":0.021739130434782608,"might":0.021739130434782608,"want":0.021739130434782608,"to":0.021739130434782608,"consider":0.021739130434782608,"spa":0.021739130434782608,"action":0.021739130434782608,"form":0.021739130434782608,"or":0.021739130434782608,"handle":0.021739130434782608,"it":0.021739130434782608,"with":0.021739130434782608,"on":0.021739130434782608,"input":0.021739130434782608,"and":0.021739130434782608,"package":0.021739130434782608,"throttle-debounce":0.021739130434782608,"errors":0.021739130434782608,"can":0.021739130434782608,"be":0.021739130434782608,"set":0.021739130434782608,"manually":0.021739130434782608,"by":0.021739130434782608,"updating":0.021739130434782608,"store":0.021739130434782608},"175":{"this":0.02040816326530612,"example":0.02040816326530612,"demonstrates":0.02040816326530612,"how":0.02040816326530612,"validators":0.02040816326530612,"are":0.02040816326530612,"used":0.02040816326530612,"to":0.02040816326530612,"check":0.02040816326530612,"if":0.02040816326530612,"tags":0.02040816326530612,"of":0.02040816326530612,"the":0.02040816326530612,"correct":0.02040816326530612,"length":0.02040816326530612,"set":0.02040816326530612,"a":0.02040816326530612,"tag":0.02040816326530612,"name":0.02040816326530612,"blank":0.02040816326530612,"and":0.02040816326530612,"see":0.02040816326530612,"that":0.02040816326530612,"no":0.02040816326530612,"errors":0.02040816326530612,"show":0.02040816326530612,"up":0.02040816326530612,"until":0.02040816326530612,"you":0.02040816326530612,"move":0.02040816326530612,"focus":0.02040816326530612,"outside":0.02040816326530612,"field":0.02040816326530612,"blur":0.02040816326530612,"when":0.02040816326530612,"go":0.02040816326530612,"back":0.02040816326530612,"mistake":0.02040816326530612,"error":0.02040816326530612,"is":0.02040816326530612,"removed":0.02040816326530612,"as":0.02040816326530612,"soon":0.02040816326530612,"enter":0.02040816326530612,"more":0.02040816326530612,"than":0.02040816326530612,"one":0.02040816326530612,"character":0.02040816326530612,"input":0.02040816326530612},"176":{"by":0.013888888888888888,"using":0.013888888888888888,"enhance":0.013888888888888888,"returned":0.013888888888888888,"from":0.013888888888888888,"superform":0.013888888888888888,"we'll":0.013888888888888888,"get":0.013888888888888888,"the":0.013888888888888888,"client-side":0.013888888888888888,"enhancement":0.013888888888888888,"expected":0.013888888888888888,"a":0.013888888888888888,"modern":0.013888888888888888,"website":0.013888888888888888,"use":0.013888888888888888,"action":0.013888888888888888,"takes":0.013888888888888888,"no":0.013888888888888888,"arguments":0.013888888888888888,"instead":0.013888888888888888,"events":0.013888888888888888,"are":0.013888888888888888,"used":0.013888888888888888,"to":0.013888888888888888,"hook":0.013888888888888888,"into":0.013888888888888888,"default":0.013888888888888888,"sveltekit":0.013888888888888888,"parameters":0.013888888888888888,"and":0.013888888888888888,"more":0.013888888888888888,"check":0.013888888888888888,"out":0.013888888888888888,"page":0.013888888888888888,"for":0.013888888888888888,"details":0.013888888888888888,"without":0.013888888888888888,"javascript":0.013888888888888888,"enabled":0.013888888888888888,"in":0.013888888888888888,"browser":0.013888888888888888,"form":0.013888888888888888,"will":0.013888888888888888,"be":0.013888888888888888,"static":0.013888888888888888,"loading":0.013888888888888888,"timers":0.013888888888888888,"auto-focus":0.013888888888888888,"etc":0.013888888888888888,"only":0.013888888888888888,"things":0.013888888888888888,"that":0.013888888888888888,"work":0.013888888888888888,"constraints":0.013888888888888888,"also":0.013888888888888888,"note":0.013888888888888888,"sveltekit's":0.013888888888888888,"own":0.013888888888888888,"cannot":0.013888888888888888,"you":0.013888888888888888,"must":0.013888888888888888,"one":0.013888888888888888,"it":0.013888888888888888,"should":0.013888888888888888,"on":0.013888888888888888,"single":0.013888888888888888,"element":0.013888888888888888,"-":0.013888888888888888,"share":0.013888888888888888,"between":0.013888888888888888,"forms":0.013888888888888888},"177":{"the":0.03571428571428571,"default":0.03571428571428571,"use":0.03571428571428571,"enhance":0.03571428571428571,"behavior":0.03571428571428571,"can":0.03571428571428571,"be":0.03571428571428571,"modified":0.03571428571428571,"there":0.03571428571428571,"are":0.03571428571428571,"three":0.03571428571428571,"options":0.03571428571428571,"available":0.03571428571428571,"here":0.03571428571428571,"shown":0.03571428571428571,"with":0.03571428571428571,"values":0.03571428571428571,"you":0.03571428571428571,"don't":0.03571428571428571,"need":0.03571428571428571,"to":0.03571428571428571,"add":0.03571428571428571,"them":0.03571428571428571,"unless":0.03571428571428571,"want":0.03571428571428571,"change":0.03571428571428571,"a":0.03571428571428571,"value":0.03571428571428571},"178":{"when":0.020833333333333332,"applyaction":0.020833333333333332,"is":0.020833333333333332,"true":0.020833333333333332,"the":0.020833333333333332,"form":0.020833333333333332,"will":0.020833333333333332,"have":0.020833333333333332,"default":0.020833333333333332,"sveltekit":0.020833333333333332,"behavior":0.020833333333333332,"of":0.020833333333333332,"both":0.020833333333333332,"updating":0.020833333333333332,"and":0.020833333333333332,"reacting":0.020833333333333332,"on":0.020833333333333332,"page":0.020833333333333332,"status":0.020833333333333332,"also":0.020833333333333332,"redirecting":0.020833333333333332,"automatically":0.020833333333333332,"turning":0.020833333333333332,"this":0.020833333333333332,"off":0.020833333333333332,"can":0.020833333333333332,"be":0.020833333333333332,"useful":0.020833333333333332,"you":0.020833333333333332,"want":0.020833333333333332,"to":0.020833333333333332,"isolate":0.020833333333333332,"from":0.020833333333333332,"other":0.020833333333333332,"sources":0.020833333333333332,"for":0.020833333333333332,"example":0.020833333333333332,"supabase":0.020833333333333332,"events":0.020833333333333332,"a":0.020833333333333332,"known":0.020833333333333332,"source":0.020833333333333332,"confusing":0.020833333333333332,"read":0.020833333333333332,"more":0.020833333333333332,"about":0.020833333333333332,"in":0.020833333333333332,"docs":0.020833333333333332},"179":{"when":0.02,"invalidateall":0.02,"is":0.02,"true":0.02,"the":0.02,"default":0.02,"and":0.02,"a":0.02,"successful":0.02,"validation":0.02,"result":0.02,"returned":0.02,"from":0.02,"server":0.02,"page":0.02,"will":0.02,"be":0.02,"invalidated":0.02,"load":0.02,"functions":0.02,"run":0.02,"again":0.02,"login":0.02,"form":0.02,"takes":0.02,"advantage":0.02,"of":0.02,"this":0.02,"to":0.02,"update":0.02,"user":0.02,"information":0.02,"on":0.02,"but":0.02,"setting":0.02,"may":0.02,"cause":0.02,"problems":0.02,"with":0.02,"multiple":0.02,"forms":0.02,"same":0.02,"since":0.02,"function":0.02,"reload":0.02,"data":0.02,"for":0.02,"all":0.02,"defined":0.02,"there":0.02},"180":{"there":0.01694915254237288,"can":0.01694915254237288,"be":0.01694915254237288,"a":0.01694915254237288,"conflict":0.01694915254237288,"between":0.01694915254237288,"the":0.01694915254237288,"data":0.01694915254237288,"returned":0.01694915254237288,"in":0.01694915254237288,"form":0.01694915254237288,"action":0.01694915254237288,"and":0.01694915254237288,"new":0.01694915254237288,"from":0.01694915254237288,"load":0.01694915254237288,"function":0.01694915254237288,"is":0.01694915254237288,"optimistic":0.01694915254237288,"meaning":0.01694915254237288,"that":0.01694915254237288,"what's":0.01694915254237288,"will":0.01694915254237288,"displayed":0.01694915254237288,"assuming":0.01694915254237288,"all":0.01694915254237288,"was":0.01694915254237288,"supposed":0.01694915254237288,"to":0.01694915254237288,"updated":0.01694915254237288,"but":0.01694915254237288,"if":0.01694915254237288,"you":0.01694915254237288,"update":0.01694915254237288,"partially":0.01694915254237288,"out":0.01694915254237288,"of":0.01694915254237288,"sync":0.01694915254237288,"with":0.01694915254237288,"which":0.01694915254237288,"case":0.01694915254237288,"may":0.01694915254237288,"want":0.01694915254237288,"wait":0.01694915254237288,"for":0.01694915254237288,"this":0.01694915254237288,"achieved":0.01694915254237288,"by":0.01694915254237288,"setting":0.01694915254237288,"invalidateall":0.01694915254237288,"'force'":0.01694915254237288,"now":0.01694915254237288,"prioritized":0.01694915254237288,"reset":0.01694915254237288,"also":0.01694915254237288,"use":0.01694915254237288,"latest":0.01694915254237288,"when":0.01694915254237288,"called":0.01694915254237288},"181":{"when":0.015151515151515152,"true":0.015151515151515152,"reset":0.015151515151515152,"the":0.015151515151515152,"form":0.015151515151515152,"upon":0.015151515151515152,"a":0.015151515151515152,"successful":0.015151515151515152,"validation":0.015151515151515152,"result":0.015151515151515152,"note":0.015151515151515152,"however":0.015151515151515152,"that":0.015151515151515152,"since":0.015151515151515152,"we're":0.015151515151515152,"using":0.015151515151515152,"bind":0.015151515151515152,"value":0.015151515151515152,"on":0.015151515151515152,"input":0.015151515151515152,"fields":0.015151515151515152,"html":0.015151515151515152,"clearing":0.015151515151515152,"all":0.015151515151515152,"in":0.015151515151515152,"dom":0.015151515151515152,"won't":0.015151515151515152,"have":0.015151515151515152,"any":0.015151515151515152,"effect":0.015151515151515152,"so":0.015151515151515152,"superforms":0.015151515151515152,"resetting":0.015151515151515152,"means":0.015151515151515152,"going":0.015151515151515152,"back":0.015151515151515152,"to":0.015151515151515152,"initial":0.015151515151515152,"state":0.015151515151515152,"of":0.015151515151515152,"data":0.015151515151515152,"basically":0.015151515151515152,"setting":0.015151515151515152,"what":0.015151515151515152,"was":0.015151515151515152,"initially":0.015151515151515152,"sent":0.015151515151515152,"superform":0.015151515151515152,"for":0.015151515151515152,"custom":0.015151515151515152,"you":0.015151515151515152,"can":0.015151515151515152,"instead":0.015151515151515152,"modify":0.015151515151515152,"field":0.015151515151515152,"returned":0.015151515151515152,"from":0.015151515151515152,"supervalidate":0.015151515151515152,"server":0.015151515151515152,"or":0.015151515151515152,"use":0.015151515151515152,"events":0.015151515151515152,"together":0.015151515151515152,"with":0.015151515151515152,"function":0.015151515151515152,"client":0.015151515151515152},"182":{"quite":0.02857142857142857,"rarely":0.02857142857142857,"if":0.02857142857142857,"you":0.02857142857142857,"have":0.02857142857142857,"a":0.02857142857142857,"single":0.02857142857142857,"form":0.02857142857142857,"on":0.02857142857142857,"the":0.02857142857142857,"page":0.02857142857142857,"and":0.02857142857142857,"nothing":0.02857142857142857,"else":0.02857142857142857,"is":0.02857142857142857,"causing":0.02857142857142857,"to":0.02857142857142857,"invalidate":0.02857142857142857,"you'll":0.02857142857142857,"probably":0.02857142857142857,"be":0.02857142857142857,"fine":0.02857142857142857,"as":0.02857142857142857,"it":0.02857142857142857,"for":0.02857142857142857,"multiple":0.02857142857142857,"forms":0.02857142857142857,"same":0.02857142857142857,"experiment":0.02857142857142857,"with":0.02857142857142857,"these":0.02857142857142857,"three":0.02857142857142857,"options":0.02857142857142857,"read":0.02857142857142857,"more":0.02857142857142857},"183":{"any":0.015873015873015872,"actionresult":0.015873015873015872,"with":0.015873015873015872,"status":0.015873015873015872,"error":0.015873015873015872,"is":0.015873015873015872,"transformed":0.015873015873015872,"into":0.015873015873015872,"failure":0.015873015873015872,"by":0.015873015873015872,"superforms":0.015873015873015872,"to":0.015873015873015872,"avoid":0.015873015873015872,"form":0.015873015873015872,"data":0.015873015873015872,"loss":0.015873015873015872,"the":0.015873015873015872,"sveltekit":0.015873015873015872,"default":0.015873015873015872,"render":0.015873015873015872,"nearest":0.015873015873015872,"svelte":0.015873015873015872,"page":0.015873015873015872,"which":0.015873015873015872,"will":0.015873015873015872,"wipe":0.015873015873015872,"out":0.015873015873015872,"and":0.015873015873015872,"all":0.015873015873015872,"that":0.015873015873015872,"was":0.015873015873015872,"just":0.015873015873015872,"entered":0.015873015873015872,"returning":0.015873015873015872,"fail":0.015873015873015872,"a":0.015873015873015872,"message":0.015873015873015872,"or":0.015873015873015872,"using":0.015873015873015872,"onerror":0.015873015873015872,"event":0.015873015873015872,"more":0.015873015873015872,"user-friendly":0.015873015873015872,"way":0.015873015873015872,"of":0.015873015873015872,"handling":0.015873015873015872,"server":0.015873015873015872,"errors":0.015873015873015872,"you":0.015873015873015872,"can":0.015873015873015872,"prevent":0.015873015873015872,"this":0.015873015873015872,"setting":0.015873015873015872,"following":0.015873015873015872,"option":0.015873015873015872,"use":0.015873015873015872,"care":0.015873015873015872,"since":0.015873015873015872,"purpose":0.015873015873015872,"change":0.015873015873015872,"protect":0.015873015873015872,"user":0.015873015873015872,"from":0.015873015873015872},"184":{"by":0.02857142857142857,"deconstructing":0.02857142857142857,"errors":0.02857142857142857,"from":0.02857142857142857,"superform":0.02857142857142857,"you'll":0.02857142857142857,"get":0.02857142857142857,"an":0.02857142857142857,"object":0.02857142857142857,"with":0.02857142857142857,"form":0.02857142857142857,"that":0.02857142857142857,"you":0.02857142857142857,"can":0.02857142857142857,"display":0.02857142857142857,"where":0.02857142857142857,"it's":0.02857142857142857,"appropriate":0.02857142857142857,"the":0.02857142857142857,"aria-invalid":0.02857142857142857,"attribute":0.02857142857142857,"is":0.02857142857142857,"used":0.02857142857142857,"to":0.02857142857142857,"automatically":0.02857142857142857,"focus":0.02857142857142857,"on":0.02857142857142857,"first":0.02857142857142857,"error":0.02857142857142857,"field":0.02857142857142857,"see":0.02857142857142857,"errorselector":0.02857142857142857,"option":0.02857142857142857,"further":0.02857142857142857,"below":0.02857142857142857},"185":{"400":0.013333333333333334,"most":0.013333333333333334,"errors":0.013333333333333334,"will":0.013333333333333334,"be":0.013333333333333334,"set":0.013333333333333334,"automatically":0.013333333333333334,"when":0.013333333333333334,"the":0.013333333333333334,"data":0.013333333333333334,"is":0.013333333333333334,"validated":0.013333333333333334,"but":0.013333333333333334,"you":0.013333333333333334,"may":0.013333333333333334,"want":0.013333333333333334,"to":0.013333333333333334,"add":0.013333333333333334,"after":0.013333333333333334,"determining":0.013333333333333334,"that":0.013333333333333334,"valid":0.013333333333333334,"this":0.013333333333333334,"easily":0.013333333333333334,"done":0.013333333333333334,"with":0.013333333333333334,"seterror":0.013333333333333334,"helper":0.013333333333333334,"function":0.013333333333333334,"returns":0.013333333333333334,"a":0.013333333333333334,"fail":0.013333333333333334,"form":0.013333333333333334,"so":0.013333333333333334,"it":0.013333333333333334,"can":0.013333333333333334,"returned":0.013333333333333334,"immediately":0.013333333333333334,"or":0.013333333333333334,"more":0.013333333333333334,"added":0.013333333333333334,"by":0.013333333333333334,"calling":0.013333333333333334,"multiple":0.013333333333333334,"times":0.013333333333333334,"before":0.013333333333333334,"returning":0.013333333333333334,"check":0.013333333333333334,"api":0.013333333333333334,"for":0.013333333333333334,"additional":0.013333333333333334,"options":0.013333333333333334,"if":0.013333333333333334,"you're":0.013333333333333334,"using":0.013333333333333334,"nested":0.013333333333333334,"string":0.013333333333333334,"path":0.013333333333333334,"used":0.013333333333333334,"specify":0.013333333333333334,"where":0.013333333333333334,"in":0.013333333333333334,"structure":0.013333333333333334,"error":0.013333333333333334,"removed":0.013333333333333334,"schema":0.013333333333333334,"client-side":0.013333333333333334,"validation":0.013333333333333334,"and":0.013333333333333334,"first":0.013333333333333334,"occurs":0.013333333333333334,"such":0.013333333333333334,"as":0.013333333333333334,"modifying":0.013333333333333334,"field":0.013333333333333334},"186":{"404":0.0125,"429":0.0125,"in":0.0125,"the":0.0125,"case":0.0125,"of":0.0125,"a":0.0125,"server":0.0125,"error":0.0125,"superforms":0.0125,"will":0.0125,"normalize":0.0125,"different":0.0125,"kind":0.0125,"errors":0.0125,"that":0.0125,"can":0.0125,"occur":0.0125,"typeexampleexpected":0.0125,"code":0.0125,"'user_not_found'":0.0125,"message":0.0125,"'not":0.0125,"found'":0.0125,"exception":0.0125,"throw":0.0125,"new":0.0125,"database":0.0125,"connection":0.0125,"json":0.0125,"response":0.0125,"return":0.0125,"'rate_limited'":0.0125,"status":0.0125,"other":0.0125,"doctype":0.0125,"html":0.0125,"lang":0.0125,"en":0.0125,"head":0.0125,"meta":0.0125,"charset":0.0125,"these":0.0125,"be":0.0125,"handled":0.0125,"with":0.0125,"onerror":0.0125,"event":0.0125,"assuming":0.0125,"use":0.0125,"enhance":0.0125,"action":0.0125,"is":0.0125,"applied":0.0125,"to":0.0125,"form":0.0125,"if":0.0125,"it":0.0125,"isn't":0.0125,"nearest":0.0125,"svelte":0.0125,"page":0.0125,"rendered":0.0125,"general":0.0125,"returning":0.0125,"recommended":0.0125,"instead":0.0125,"calling":0.0125,"or":0.0125,"throwing":0.0125,"exceptions":0.0125,"as":0.0125,"this":0.0125,"make":0.0125,"even":0.0125,"non-js":0.0125,"users":0.0125,"keep":0.0125,"their":0.0125,"data":0.0125},"187":{"the":0.015873015873015872,"default":0.015873015873015872,"data":0.015873015873015872,"in":0.015873015873015872,"an":0.015873015873015872,"empty":0.015873015873015872,"form":0.015873015873015872,"is":0.015873015873015872,"usually":0.015873015873015872,"invalid":0.015873015873015872,"but":0.015873015873015872,"displaying":0.015873015873015872,"lots":0.015873015873015872,"of":0.015873015873015872,"errors":0.015873015873015872,"upon":0.015873015873015872,"page":0.015873015873015872,"load":0.015873015873015872,"doesn't":0.015873015873015872,"look":0.015873015873015872,"good":0.015873015873015872,"superforms":0.015873015873015872,"handles":0.015873015873015872,"it":0.015873015873015872,"like":0.015873015873015872,"this":0.015873015873015872,"if":0.015873015873015872,"no":0.015873015873015872,"was":0.015873015873015872,"posted":0.015873015873015872,"or":0.015873015873015872,"sent":0.015873015873015872,"to":0.015873015873015872,"supervalidate":0.015873015873015872,"will":0.015873015873015872,"be":0.015873015873015872,"returned":0.015873015873015872,"unless":0.015873015873015872,"option":0.015873015873015872,"true":0.015873015873015872,"what":0.015873015873015872,"happens":0.015873015873015872,"functions":0.015873015873015872,"when":0.015873015873015872,"only":0.015873015873015872,"schema":0.015873015873015872,"either":0.015873015873015872,"populated":0.015873015873015872,"with":0.015873015873015872,"false":0.015873015873015872,"does":0.015873015873015872,"not":0.015873015873015872,"affect":0.015873015873015872,"valid":0.015873015873015872,"property":0.015873015873015872,"supervalidated":0.015873015873015872,"object":0.015873015873015872,"which":0.015873015873015872,"always":0.015873015873015872,"indicates":0.015873015873015872,"whether":0.015873015873015872,"validation":0.015873015873015872,"succeeded":0.015873015873015872},"188":{"as":0.021739130434782608,"said":0.021739130434782608,"errors":0.021739130434782608,"are":0.021739130434782608,"available":0.021739130434782608,"in":0.021739130434782608,"the":0.021739130434782608,"store":0.021739130434782608,"it":0.021739130434782608,"gives":0.021739130434782608,"you":0.021739130434782608,"high":0.021739130434782608,"flexibility":0.021739130434782608,"since":0.021739130434782608,"can":0.021739130434782608,"place":0.021739130434782608,"error":0.021739130434782608,"messages":0.021739130434782608,"anywhere":0.021739130434782608,"on":0.021739130434782608,"page":0.021739130434782608,"larger":0.021739130434782608,"forms":0.021739130434782608,"submit":0.021739130434782608,"button":0.021739130434782608,"may":0.021739130434782608,"be":0.021739130434782608,"far":0.021739130434782608,"away":0.021739130434782608,"from":0.021739130434782608,"so":0.021739130434782608,"it's":0.021739130434782608,"nice":0.021739130434782608,"to":0.021739130434782608,"show":0.021739130434782608,"user":0.021739130434782608,"where":0.021739130434782608,"first":0.021739130434782608,"is":0.021739130434782608,"there":0.021739130434782608,"a":0.021739130434782608,"couple":0.021739130434782608,"of":0.021739130434782608,"options":0.021739130434782608,"for":0.021739130434782608,"that":0.021739130434782608},"189":{"this":0.02702702702702703,"is":0.02702702702702703,"the":0.02702702702702703,"css":0.02702702702702703,"selector":0.02702702702702703,"used":0.02702702702702703,"to":0.02702702702702703,"locate":0.02702702702702703,"invalid":0.02702702702702703,"input":0.02702702702702703,"fields":0.02702702702702703,"after":0.02702702702702703,"form":0.02702702702702703,"submission":0.02702702702702703,"default":0.02702702702702703,"aria-invalid":0.02702702702702703,"true":0.02702702702702703,"data-invalid":0.02702702702702703,"and":0.02702702702702703,"first":0.02702702702702703,"one":0.02702702702702703,"found":0.02702702702702703,"in":0.02702702702702703,"will":0.02702702702702703,"be":0.02702702702702703,"scrolled":0.02702702702702703,"focused":0.02702702702702703,"on":0.02702702702702703,"depending":0.02702702702702703,"other":0.02702702702702703,"settings":0.02702702702702703,"you":0.02702702702702703,"usually":0.02702702702702703,"set":0.02702702702702703,"it":0.02702702702702703,"as":0.02702702702702703,"such":0.02702702702702703},"190":{"the":0.02631578947368421,"scrolltoerror":0.02631578947368421,"option":0.02631578947368421,"determines":0.02631578947368421,"how":0.02631578947368421,"to":0.02631578947368421,"scroll":0.02631578947368421,"first":0.02631578947368421,"error":0.02631578947368421,"message":0.02631578947368421,"in":0.02631578947368421,"form":0.02631578947368421,"smooth":0.02631578947368421,"and":0.02631578947368421,"auto":0.02631578947368421,"are":0.02631578947368421,"values":0.02631578947368421,"from":0.02631578947368421,"window":0.02631578947368421,"if":0.02631578947368421,"non-string":0.02631578947368421,"options":0.02631578947368421,"used":0.02631578947368421,"element":0.02631578947368421,"scrollintoview":0.02631578947368421,"will":0.02631578947368421,"be":0.02631578947368421,"called":0.02631578947368421,"with":0.02631578947368421,"this":0.02631578947368421,"is":0.02631578947368421,"mostly":0.02631578947368421,"nested":0.02631578947368421,"scrollbars":0.02631578947368421,"which":0.02631578947368421,"case":0.02631578947368421,"won't":0.02631578947368421,"work":0.02631578947368421},"191":{"when":0.024390243902439025,"autofocusonerror":0.024390243902439025,"is":0.024390243902439025,"set":0.024390243902439025,"to":0.024390243902439025,"its":0.024390243902439025,"default":0.024390243902439025,"value":0.024390243902439025,"detect":0.024390243902439025,"it":0.024390243902439025,"checks":0.024390243902439025,"if":0.024390243902439025,"the":0.024390243902439025,"user":0.024390243902439025,"on":0.024390243902439025,"a":0.024390243902439025,"mobile":0.024390243902439025,"device":0.024390243902439025,"not":0.024390243902439025,"will":0.024390243902439025,"automatically":0.024390243902439025,"focus":0.024390243902439025,"first":0.024390243902439025,"error":0.024390243902439025,"input":0.024390243902439025,"field":0.024390243902439025,"it's":0.024390243902439025,"prevented":0.024390243902439025,"devices":0.024390243902439025,"since":0.024390243902439025,"focusing":0.024390243902439025,"open":0.024390243902439025,"on-screen":0.024390243902439025,"keyboard":0.024390243902439025,"causing":0.024390243902439025,"viewport":0.024390243902439025,"shift":0.024390243902439025,"which":0.024390243902439025,"could":0.024390243902439025,"hide":0.024390243902439025,"validation":0.024390243902439025},"192":{"if":0.047619047619047616,"you":0.047619047619047616,"have":0.047619047619047616,"a":0.047619047619047616,"sticky":0.047619047619047616,"navbar":0.047619047619047616,"set":0.047619047619047616,"its":0.047619047619047616,"css":0.047619047619047616,"selector":0.047619047619047616,"here":0.047619047619047616,"and":0.047619047619047616,"it":0.047619047619047616,"won't":0.047619047619047616,"hide":0.047619047619047616,"any":0.047619047619047616,"errors":0.047619047619047616,"due":0.047619047619047616,"to":0.047619047619047616,"height":0.047619047619047616,"z-index":0.047619047619047616},"193":{"this":0.012658227848101266,"option":0.012658227848101266,"uses":0.012658227848101266,"the":0.012658227848101266,"constraint":0.012658227848101266,"validation":0.012658227848101266,"api":0.012658227848101266,"to":0.012658227848101266,"display":0.012658227848101266,"errors":0.012658227848101266,"by":0.012658227848101266,"enabling":0.012658227848101266,"with":0.012658227848101266,"use":0.012658227848101266,"enhance":0.012658227848101266,"added":0.012658227848101266,"form":0.012658227848101266,"instead":0.012658227848101266,"of":0.012658227848101266,"standard":0.012658227848101266,"messages":0.012658227848101266,"zod":0.012658227848101266,"will":0.012658227848101266,"now":0.012658227848101266,"be":0.012658227848101266,"displayed":0.012658227848101266,"in":0.012658227848101266,"browser":0.012658227848101266,"tooltip":0.012658227848101266,"submit":0.012658227848101266,"following":0.012658227848101266,"without":0.012658227848101266,"entering":0.012658227848101266,"any":0.012658227848101266,"data":0.012658227848101266,"see":0.012658227848101266,"it":0.012658227848101266,"action":0.012658227848101266,"customvalidity":0.012658227848101266,"since":0.012658227848101266,"is":0.012658227848101266,"handled":0.012658227848101266,"superforms":0.012658227848101266,"there":0.012658227848101266,"no":0.012658227848101266,"need":0.012658227848101266,"for":0.012658227848101266,"spreading":0.012658227848101266,"constraints":0.012658227848101266,"on":0.012658227848101266,"field":0.012658227848101266,"but":0.012658227848101266,"biggest":0.012658227848101266,"win":0.012658227848101266,"that":0.012658227848101266,"making":0.012658227848101266,"a":0.012658227848101266,"minimal":0.012658227848101266,"html":0.012658227848101266,"name":0.012658227848101266,"attribute":0.012658227848101266,"required":0.012658227848101266,"input":0.012658227848101266,"fields":0.012658227848101266,"if":0.012658227848101266,"you":0.012658227848101266,"want":0.012658227848101266,"exclude":0.012658227848101266,"from":0.012658227848101266,"displaying":0.012658227848101266,"add":0.012658227848101266,"data-no-custom-validity":0.012658227848101266,"just":0.012658227848101266,"aware":0.012658227848101266,"needed":0.012658227848101266,"requires":0.012658227848101266,"javascript":0.012658227848101266,"enabled":0.012658227848101266,"unlike":0.012658227848101266},"194":{"it's":0.021739130434782608,"possible":0.021739130434782608,"to":0.021739130434782608,"set":0.021739130434782608,"form-level":0.021739130434782608,"errors":0.021739130434782608,"by":0.021739130434782608,"refining":0.021739130434782608,"the":0.021739130434782608,"schema":0.021739130434782608,"which":0.021739130434782608,"works":0.021739130434782608,"better":0.021739130434782608,"together":0.021739130434782608,"with":0.021739130434782608,"client-side":0.021739130434782608,"validation":0.021739130434782608,"as":0.021739130434782608,"added":0.021739130434782608,"seterror":0.021739130434782608,"won't":0.021739130434782608,"persist":0.021739130434782608,"longer":0.021739130434782608,"than":0.021739130434782608,"first":0.021739130434782608,"of":0.021739130434782608,"on":0.021739130434782608,"client":0.021739130434782608,"these":0.021739130434782608,"can":0.021739130434782608,"be":0.021739130434782608,"accessed":0.021739130434782608,"through":0.021739130434782608,"_errors":0.021739130434782608,"same":0.021739130434782608,"goes":0.021739130434782608,"for":0.021739130434782608,"array":0.021739130434782608,"in":0.021739130434782608,"above":0.021739130434782608,"case":0.021739130434782608,"tags":0.021739130434782608,"alternatively":0.021739130434782608,"use":0.021739130434782608,"an":0.021739130434782608,"arrayproxy":0.021739130434782608},"195":{"you":0.015151515151515152,"may":0.015151515151515152,"want":0.015151515151515152,"to":0.015151515151515152,"set":0.015151515151515152,"the":0.015151515151515152,"error":0.015151515151515152,"on":0.015151515151515152,"password":0.015151515151515152,"or":0.015151515151515152,"confirm":0.015151515151515152,"field":0.015151515151515152,"instead":0.015151515151515152,"of":0.015151515151515152,"a":0.015151515151515152,"form-level":0.015151515151515152,"in":0.015151515151515152,"that":0.015151515151515152,"case":0.015151515151515152,"can":0.015151515151515152,"add":0.015151515151515152,"path":0.015151515151515152,"zod":0.015151515151515152,"refine":0.015151515151515152,"option":0.015151515151515152,"for":0.015151515151515152,"nested":0.015151515151515152,"data":0.015151515151515152,"use":0.015151515151515152,"multiple":0.015151515151515152,"elements":0.015151515151515152,"like":0.015151515151515152,"user":0.015151515151515152,"email":0.015151515151515152,"which":0.015151515151515152,"corresponds":0.015151515151515152,"schema":0.015151515151515152,"as":0.015151515151515152,"said":0.015151515151515152,"setting":0.015151515151515152,"errors":0.015151515151515152,"this":0.015151515151515152,"is":0.015151515151515152,"preferred":0.015151515151515152,"but":0.015151515151515152,"it":0.015151515151515152,"not":0.015151515151515152,"always":0.015151515151515152,"be":0.015151515151515152,"possible":0.015151515151515152,"when":0.015151515151515152,"need":0.015151515151515152,"after":0.015151515151515152,"validation":0.015151515151515152,"seterror":0.015151515151515152,"function":0.015151515151515152,"if":0.015151515151515152,"would":0.015151515151515152,"message":0.015151515151515152,"persist":0.015151515151515152,"until":0.015151515151515152,"next":0.015151515151515152,"form":0.015151515151515152,"submission":0.015151515151515152,"regardless":0.015151515151515152,"status":0.015151515151515152},"196":{"you":0.027777777777777776,"may":0.027777777777777776,"also":0.027777777777777776,"want":0.027777777777777776,"to":0.027777777777777776,"list":0.027777777777777776,"the":0.027777777777777776,"errors":0.027777777777777776,"above":0.027777777777777776,"form":0.027777777777777776,"allerrors":0.027777777777777776,"store":0.027777777777777776,"can":0.027777777777777776,"be":0.027777777777777776,"used":0.027777777777777776,"for":0.027777777777777776,"this":0.027777777777777776,"it's":0.027777777777777776,"an":0.027777777777777776,"array":0.027777777777777776,"that":0.027777777777777776,"contains":0.027777777777777776,"all":0.027777777777777776,"and":0.027777777777777776,"their":0.027777777777777776,"field":0.027777777777777776,"names":0.027777777777777776,"length":0.027777777777777776,"useful":0.027777777777777776,"disable":0.027777777777777776,"submit":0.027777777777777776,"button":0.027777777777777776,"if":0.027777777777777776,"there":0.027777777777777776,"are":0.027777777777777776,"any":0.027777777777777776},"197":{"most":0.03333333333333333,"methods":0.03333333333333333,"in":0.03333333333333333,"the":0.03333333333333333,"validation":0.03333333333333333,"schema":0.03333333333333333,"has":0.03333333333333333,"a":0.03333333333333333,"parameter":0.03333333333333333,"for":0.03333333333333333,"custom":0.03333333333333333,"error":0.03333333333333333,"message":0.03333333333333333,"so":0.03333333333333333,"you":0.03333333333333333,"can":0.03333333333333333,"just":0.03333333333333333,"add":0.03333333333333333,"them":0.03333333333333333,"there":0.03333333333333333,"example":0.03333333333333333,"with":0.03333333333333333,"zod":0.03333333333333333,"this":0.03333333333333333,"is":0.03333333333333333,"also":0.03333333333333333,"good":0.03333333333333333,"place":0.03333333333333333,"translation":0.03333333333333333,"strings":0.03333333333333333},"198":{"this":0.03333333333333333,"form":0.03333333333333333,"has":0.03333333333333333,"aria-invalid":0.03333333333333333,"set":0.03333333333333333,"on":0.03333333333333333,"erroneous":0.03333333333333333,"fields":0.03333333333333333,"and":0.03333333333333333,"lists":0.03333333333333333,"all":0.03333333333333333,"errors":0.03333333333333333,"top":0.03333333333333333,"of":0.03333333333333333,"the":0.03333333333333333,"using":0.03333333333333333,"allerrors":0.03333333333333333,"try":0.03333333333333333,"to":0.03333333333333333,"submit":0.03333333333333333,"see":0.03333333333333333,"that":0.03333333333333333,"first":0.03333333333333333,"error":0.03333333333333333,"field":0.03333333333333333,"gets":0.03333333333333333,"focus":0.03333333333333333,"automatically":0.03333333333333333,"unless":0.03333333333333333,"mobile":0.03333333333333333},"199":{"a":0.030303030303030304,"number":0.030303030303030304,"of":0.030303030303030304,"events":0.030303030303030304,"give":0.030303030303030304,"you":0.030303030303030304,"full":0.030303030303030304,"control":0.030303030303030304,"over":0.030303030303030304,"the":0.030303030303030304,"submit":0.030303030303030304,"process":0.030303030303030304,"they":0.030303030303030304,"are":0.030303030303030304,"triggered":0.030303030303030304,"every":0.030303030303030304,"time":0.030303030303030304,"form":0.030303030303030304,"is":0.030303030303030304,"submitted":0.030303030303030304,"only":0.030303030303030304,"available":0.030303030303030304,"when":0.030303030303030304,"javascript":0.030303030303030304,"enabled":0.030303030303030304,"in":0.030303030303030304,"browser":0.030303030303030304,"and":0.030303030303030304,"custom":0.030303030303030304,"use":0.030303030303030304,"enhance":0.030303030303030304,"added":0.030303030303030304,"to":0.030303030303030304},"200":{"in":0.041666666666666664,"a":0.041666666666666664,"single-page":0.041666666666666664,"application":0.041666666666666664,"or":0.041666666666666664,"if":0.041666666666666664,"client-side":0.041666666666666664,"validation":0.041666666666666664,"fails":0.041666666666666664,"the":0.041666666666666664,"happens":0.041666666666666664,"entirely":0.041666666666666664,"on":0.041666666666666664,"client":0.041666666666666664,"instead":0.041666666666666664,"of":0.041666666666666664,"being":0.041666666666666664,"returned":0.041666666666666664,"from":0.041666666666666664,"server":0.041666666666666664,"between":0.041666666666666664,"onsubmit":0.041666666666666664,"and":0.041666666666666664,"onresult":0.041666666666666664},"201":{"the":0.025,"onsubmit":0.025,"event":0.025,"is":0.025,"first":0.025,"one":0.025,"triggered":0.025,"being":0.025,"essentially":0.025,"same":0.025,"as":0.025,"sveltekit's":0.025,"own":0.025,"use":0.025,"enhance":0.025,"function":0.025,"it":0.025,"gives":0.025,"you":0.025,"a":0.025,"chance":0.025,"to":0.025,"cancel":0.025,"submission":0.025,"altogether":0.025,"see":0.025,"sveltekit":0.025,"docs":0.025,"for":0.025,"most":0.025,"of":0.025,"submitfunction":0.025,"signature":0.025,"there":0.025,"are":0.025,"two":0.025,"extra":0.025,"properties":0.025,"in":0.025,"superforms":0.025},"202":{"if":0.017857142857142856,"you're":0.017857142857142856,"using":0.017857142857142856,"nested":0.017857142857142856,"data":0.017857142857142856,"the":0.017857142857142856,"formdata":0.017857142857142856,"property":0.017857142857142856,"cannot":0.017857142857142856,"be":0.017857142857142856,"used":0.017857142857142856,"to":0.017857142857142856,"modify":0.017857142857142856,"posted":0.017857142857142856,"since":0.017857142857142856,"form":0.017857142857142856,"is":0.017857142857142856,"serialized":0.017857142857142856,"and":0.017857142857142856,"instead":0.017857142857142856,"you":0.017857142857142856,"want":0.017857142857142856,"post":0.017857142857142856,"something":0.017857142857142856,"else":0.017857142857142856,"than":0.017857142857142856,"can":0.017857142857142856,"do":0.017857142857142856,"it":0.017857142857142856,"with":0.017857142857142856,"jsondata":0.017857142857142856,"function":0.017857142857142856,"note":0.017857142857142856,"that":0.017857142857142856,"client-side":0.017857142857142856,"validation":0.017857142857142856,"enabled":0.017857142857142856,"it's":0.017857142857142856,"always":0.017857142857142856,"will":0.017857142857142856,"validated":0.017857142857142856,"only":0.017857142857142856,"passes":0.017857142857142856,"sent":0.017857142857142856,"does":0.017857142857142856,"not":0.017857142857142856,"work":0.017857142857142856,"in":0.017857142857142856,"spa":0.017857142857142856,"mode":0.017857142857142856,"either":0.017857142857142856,"as":0.017857142857142856,"transformation":0.017857142857142856,"handled":0.017857142857142856,"onupdate":0.017857142857142856,"case":0.017857142857142856},"203":{"for":0.06666666666666667,"advanced":0.06666666666666667,"validation":0.06666666666666667,"you":0.06666666666666667,"can":0.06666666666666667,"change":0.06666666666666667,"client-side":0.06666666666666667,"validators":0.06666666666666667,"the":0.06666666666666667,"current":0.06666666666666667,"form":0.06666666666666667,"submission":0.06666666666666667,"with":0.06666666666666667,"this":0.06666666666666667,"function":0.06666666666666667},"204":{"if":0.016129032258064516,"the":0.016129032258064516,"submission":0.016129032258064516,"isn't":0.016129032258064516,"cancelled":0.016129032258064516,"and":0.016129032258064516,"client-side":0.016129032258064516,"validation":0.016129032258064516,"succeeds":0.016129032258064516,"form":0.016129032258064516,"is":0.016129032258064516,"posted":0.016129032258064516,"to":0.016129032258064516,"server":0.016129032258064516,"it":0.016129032258064516,"then":0.016129032258064516,"responds":0.016129032258064516,"with":0.016129032258064516,"a":0.016129032258064516,"sveltekit":0.016129032258064516,"actionresult":0.016129032258064516,"triggering":0.016129032258064516,"onresult":0.016129032258064516,"event":0.016129032258064516,"result":0.016129032258064516,"contains":0.016129032258064516,"you":0.016129032258064516,"can":0.016129032258064516,"modify":0.016129032258064516,"changes":0.016129032258064516,"will":0.016129032258064516,"be":0.016129032258064516,"applied":0.016129032258064516,"further":0.016129032258064516,"down":0.016129032258064516,"chain":0.016129032258064516,"formelement":0.016129032258064516,"htmlformelement":0.016129032258064516,"of":0.016129032258064516,"cancel":0.016129032258064516,"function":0.016129032258064516,"which":0.016129032258064516,"rest":0.016129032258064516,"any":0.016129032258064516,"updates":0.016129032258064516,"in":0.016129032258064516,"most":0.016129032258064516,"cases":0.016129032258064516,"don't":0.016129032258064516,"have":0.016129032258064516,"care":0.016129032258064516,"about":0.016129032258064516,"check":0.016129032258064516,"succeeded":0.016129032258064516,"use":0.016129032258064516,"onupdated":0.016129032258064516,"or":0.016129032258064516,"onupdate":0.016129032258064516,"want":0.016129032258064516,"before":0.016129032258064516,"it's":0.016129032258064516,"displayed":0.016129032258064516},"205":{"onresult":0.02564102564102564,"is":0.02564102564102564,"useful":0.02564102564102564,"when":0.02564102564102564,"you":0.02564102564102564,"have":0.02564102564102564,"set":0.02564102564102564,"applyaction":0.02564102564102564,"false":0.02564102564102564,"and":0.02564102564102564,"still":0.02564102564102564,"want":0.02564102564102564,"to":0.02564102564102564,"redirect":0.02564102564102564,"since":0.02564102564102564,"the":0.02564102564102564,"form":0.02564102564102564,"doesn't":0.02564102564102564,"do":0.02564102564102564,"that":0.02564102564102564,"automatically":0.02564102564102564,"in":0.02564102564102564,"case":0.02564102564102564,"then":0.02564102564102564,"can":0.02564102564102564,"also":0.02564102564102564,"if":0.02564102564102564,"which":0.02564102564102564,"means":0.02564102564102564,"page":0.02564102564102564,"status":0.02564102564102564,"won't":0.02564102564102564,"update":0.02564102564102564,"you'll":0.02564102564102564,"find":0.02564102564102564,"code":0.02564102564102564,"for":0.02564102564102564,"request":0.02564102564102564,"result":0.02564102564102564},"206":{"the":0.012987012987012988,"onupdate":0.012987012987012988,"event":0.012987012987012988,"is":0.012987012987012988,"triggered":0.012987012987012988,"right":0.012987012987012988,"before":0.012987012987012988,"form":0.012987012987012988,"update":0.012987012987012988,"being":0.012987012987012988,"applied":0.012987012987012988,"giving":0.012987012987012988,"you":0.012987012987012988,"option":0.012987012987012988,"to":0.012987012987012988,"modify":0.012987012987012988,"validation":0.012987012987012988,"result":0.012987012987012988,"in":0.012987012987012988,"or":0.012987012987012988,"use":0.012987012987012988,"cancel":0.012987012987012988,"negate":0.012987012987012988,"altogether":0.012987012987012988,"also":0.012987012987012988,"have":0.012987012987012988,"access":0.012987012987012988,"form's":0.012987012987012988,"htmlformelement":0.012987012987012988,"with":0.012987012987012988,"formelement":0.012987012987012988,"if":0.012987012987012988,"your":0.012987012987012988,"app":0.012987012987012988,"a":0.012987012987012988,"single-page":0.012987012987012988,"application":0.012987012987012988,"most":0.012987012987012988,"convenient":0.012987012987012988,"process":0.012987012987012988,"data":0.012987012987012988,"see":0.012987012987012988,"spa":0.012987012987012988,"page":0.012987012987012988,"for":0.012987012987012988,"more":0.012987012987012988,"details":0.012987012987012988,"parameter":0.012987012987012988,"deliberately":0.012987012987012988,"named":0.012987012987012988,"avoid":0.012987012987012988,"using":0.012987012987012988,"store":0.012987012987012988,"as":0.012987012987012988,"changes":0.012987012987012988,"are":0.012987012987012988,"and":0.012987012987012988,"other":0.012987012987012988,"stores":0.012987012987012988,"when":0.012987012987012988,"completed":0.012987012987012988,"can":0.012987012987012988,"actionresult":0.012987012987012988,"which":0.012987012987012988,"narrowed":0.012987012987012988,"type":0.012987012987012988,"'success'":0.012987012987012988,"'failure'":0.012987012987012988,"here":0.012987012987012988,"it":0.012987012987012988,"together":0.012987012987012988,"formresult":0.012987012987012988,"helper":0.012987012987012988,"conventiently":0.012987012987012988,"any":0.012987012987012988,"additional":0.012987012987012988,"action":0.012987012987012988},"207":{"if":0.024390243902439025,"you":0.024390243902439025,"just":0.024390243902439025,"want":0.024390243902439025,"to":0.024390243902439025,"ensure":0.024390243902439025,"that":0.024390243902439025,"the":0.024390243902439025,"form":0.024390243902439025,"is":0.024390243902439025,"validated":0.024390243902439025,"and":0.024390243902439025,"do":0.024390243902439025,"something":0.024390243902439025,"extra":0.024390243902439025,"afterwards":0.024390243902439025,"like":0.024390243902439025,"showing":0.024390243902439025,"a":0.024390243902439025,"toast":0.024390243902439025,"notification":0.024390243902439025,"onupdated":0.024390243902439025,"easiest":0.024390243902439025,"way":0.024390243902439025,"parameter":0.024390243902439025,"contains":0.024390243902439025,"validation":0.024390243902439025,"result":0.024390243902439025,"should":0.024390243902439025,"be":0.024390243902439025,"considered":0.024390243902439025,"read-only":0.024390243902439025,"here":0.024390243902439025,"since":0.024390243902439025,"stores":0.024390243902439025,"have":0.024390243902439025,"updated":0.024390243902439025,"at":0.024390243902439025,"this":0.024390243902439025,"point":0.024390243902439025,"example":0.024390243902439025},"208":{"500":0.009900990099009901,"when":0.009900990099009901,"the":0.009900990099009901,"sveltekit":0.009900990099009901,"error":0.009900990099009901,"function":0.009900990099009901,"is":0.009900990099009901,"called":0.009900990099009901,"on":0.009900990099009901,"server":0.009900990099009901,"you":0.009900990099009901,"can":0.009900990099009901,"use":0.009900990099009901,"onerror":0.009900990099009901,"event":0.009900990099009901,"to":0.009900990099009901,"catch":0.009900990099009901,"it":0.009900990099009901,"result":0.009900990099009901,"actionresult":0.009900990099009901,"with":0.009900990099009901,"its":0.009900990099009901,"property":0.009900990099009901,"depending":0.009900990099009901,"what":0.009900990099009901,"kind":0.009900990099009901,"of":0.009900990099009901,"occurs":0.009900990099009901,"will":0.009900990099009901,"have":0.009900990099009901,"a":0.009900990099009901,"different":0.009900990099009901,"shape":0.009900990099009901,"typeshapeexpected":0.009900990099009901,"app":0.009900990099009901,"exception":0.009900990099009901,"message":0.009900990099009901,"string":0.009900990099009901,"json":0.009900990099009901,"responseunexpected":0.009900990099009901,"responses":0.009900990099009901,"such":0.009900990099009901,"as":0.009900990099009901,"from":0.009900990099009901,"proxy":0.009900990099009901,"should":0.009900990099009901,"be":0.009900990099009901,"included":0.009900990099009901,"in":0.009900990099009901,"type-safe":0.009900990099009901,"other":0.009900990099009901,"responseif":0.009900990099009901,"fetch":0.009900990099009901,"fails":0.009900990099009901,"or":0.009900990099009901,"html":0.009900990099009901,"returned":0.009900990099009901,"for":0.009900990099009901,"example":0.009900990099009901,"type":0.009900990099009901,"mdn":0.009900990099009901,"usually":0.009900990099009901,"parse":0.009900990099009901,"has":0.009900990099009901,"this":0.009900990099009901,"simple":0.009900990099009901,"store":0.009900990099009901,"set":0.009900990099009901,"fallback":0.009900990099009901,"if":0.009900990099009901,"http":0.009900990099009901,"status":0.009900990099009901,"code":0.009900990099009901,"taken":0.009900990099009901,"instead":0.009900990099009901,"default":0.009900990099009901,"unexpected":0.009900990099009901,"errors":0.009900990099009901,"also":0.009900990099009901,"value":0.009900990099009901,"'apply'":0.009900990099009901,"which":0.009900990099009901,"case":0.009900990099009901,"behaviour":0.009900990099009901,"used":0.009900990099009901,"render":0.009900990099009901,"nearest":0.009900990099009901,"page":0.009900990099009901,"wiping":0.009900990099009901,"out":0.009900990099009901,"form":0.009900990099009901,"avoid":0.009900990099009901,"data":0.009900990099009901,"loss":0.009900990099009901,"even":0.009900990099009901,"non-javascript":0.009900990099009901,"users":0.009900990099009901,"returning":0.009900990099009901,"throwing":0.009900990099009901,"an":0.009900990099009901,"recommended":0.009900990099009901},"209":{"the":0.022222222222222223,"onchange":0.022222222222222223,"event":0.022222222222222223,"is":0.022222222222222223,"not":0.022222222222222223,"triggered":0.022222222222222223,"when":0.022222222222222223,"submitting":0.022222222222222223,"but":0.022222222222222223,"every":0.022222222222222223,"time":0.022222222222222223,"form":0.022222222222222223,"modified":0.022222222222222223,"both":0.022222222222222223,"as":0.022222222222222223,"a":0.022222222222222223,"html":0.022222222222222223,"with":0.022222222222222223,"bind":0.022222222222222223,"value":0.022222222222222223,"and":0.022222222222222223,"programmatically":0.022222222222222223,"direct":0.022222222222222223,"assignment":0.022222222222222223,"to":0.022222222222222223,"discriminated":0.022222222222222223,"union":0.022222222222222223,"that":0.022222222222222223,"you":0.022222222222222223,"can":0.022222222222222223,"distinguish":0.022222222222222223,"between":0.022222222222222223,"using":0.022222222222222223,"target":0.022222222222222223,"property":0.022222222222222223,"if":0.022222222222222223,"want":0.022222222222222223,"handle":0.022222222222222223,"all":0.022222222222222223,"change":0.022222222222222223,"events":0.022222222222222223,"access":0.022222222222222223,"paths":0.022222222222222223,"without":0.022222222222222223,"distinguishing":0.022222222222222223},"210":{"2":0.047619047619047616,"from":0.047619047619047616,"version":0.047619047619047616,"superforms":0.047619047619047616,"has":0.047619047619047616,"full":0.047619047619047616,"support":0.047619047619047616,"for":0.047619047619047616,"file":0.047619047619047616,"uploads":0.047619047619047616,"that":0.047619047619047616,"you":0.047619047619047616,"need":0.047619047619047616,"a":0.047619047619047616,"schema":0.047619047619047616,"can":0.047619047619047616,"validate":0.047619047619047616,"files":0.047619047619047616,"zod":0.047619047619047616,"this":0.047619047619047616,"possibility":0.047619047619047616},"211":{"important":0.02702702702702703,"because":0.02702702702702703,"file":0.02702702702702703,"objects":0.02702702702702703,"cannot":0.02702702702702703,"be":0.02702702702702703,"serialized":0.02702702702702703,"you":0.02702702702702703,"must":0.02702702702702703,"return":0.02702702702702703,"the":0.02702702702702703,"form":0.02702702702702703,"using":0.02702702702702703,"fail":0.02702702702702703,"message":0.02702702702702703,"or":0.02702702702702703,"seterror":0.02702702702702703,"imported":0.02702702702702703,"from":0.02702702702702703,"superforms":0.02702702702702703,"otherwise":0.02702702702702703,"a":0.02702702702702703,"withfiles":0.02702702702702703,"helper":0.02702702702702703,"function":0.02702702702702703,"is":0.02702702702702703,"required":0.02702702702702703,"this":0.02702702702702703,"will":0.02702702702702703,"remove":0.02702702702702703,"data":0.02702702702702703,"so":0.02702702702702703,"sveltekit":0.02702702702702703,"can":0.02702702702702703,"serialize":0.02702702702702703,"it":0.02702702702702703,"properly":0.02702702702702703},"212":{"the":0.024390243902439025,"recommended":0.024390243902439025,"way":0.024390243902439025,"to":0.024390243902439025,"bind":0.024390243902439025,"file":0.024390243902439025,"input":0.024390243902439025,"form":0.024390243902439025,"data":0.024390243902439025,"is":0.024390243902439025,"through":0.024390243902439025,"a":0.024390243902439025,"fileproxy":0.024390243902439025,"or":0.024390243902439025,"filesproxy":0.024390243902439025,"but":0.024390243902439025,"you":0.024390243902439025,"can":0.024390243902439025,"also":0.024390243902439025,"do":0.024390243902439025,"it":0.024390243902439025,"with":0.024390243902439025,"an":0.024390243902439025,"on":0.024390243902439025,"handler":0.024390243902439025,"here":0.024390243902439025,"are":0.024390243902439025,"examples":0.024390243902439025,"for":0.024390243902439025,"both":0.024390243902439025,"which":0.024390243902439025,"shows":0.024390243902439025,"how":0.024390243902439025,"add":0.024390243902439025,"client-side":0.024390243902439025,"validation":0.024390243902439025,"files":0.024390243902439025,"save":0.024390243902439025,"plenty":0.024390243902439025,"of":0.024390243902439025,"bandwidth":0.024390243902439025},"213":{"the":0.02702702702702703,"as":0.02702702702702703,"file":0.02702702702702703,"casting":0.02702702702702703,"is":0.02702702702702703,"needed":0.02702702702702703,"since":0.02702702702702703,"null":0.02702702702702703,"value":0.02702702702702703,"for":0.02702702702702703,"no":0.02702702702702703,"so":0.02702702702702703,"be":0.02702702702702703,"aware":0.02702702702702703,"that":0.02702702702702703,"form":0.02702702702702703,"image":0.02702702702702703,"may":0.02702702702702703,"even":0.02702702702702703,"though":0.02702702702702703,"schema":0.02702702702702703,"type":0.02702702702702703,"says":0.02702702702702703,"otherwise":0.02702702702702703,"if":0.02702702702702703,"you":0.02702702702702703,"want":0.02702702702702703,"upload":0.02702702702702703,"to":0.02702702702702703,"optional":0.02702702702702703,"set":0.02702702702702703,"field":0.02702702702702703,"nullable":0.02702702702702703,"and":0.02702702702702703,"it":0.02702702702702703,"will":0.02702702702702703,"type-safe":0.02702702702702703},"214":{"we":0.023255813953488372,"need":0.023255813953488372,"an":0.023255813953488372,"array":0.023255813953488372,"to":0.023255813953488372,"validate":0.023255813953488372,"multiple":0.023255813953488372,"files":0.023255813953488372,"as":0.023255813953488372,"there":0.023255813953488372,"is":0.023255813953488372,"no":0.023255813953488372,"bind":0.023255813953488372,"attribute":0.023255813953488372,"on":0.023255813953488372,"the":0.023255813953488372,"input":0.023255813953488372,"field":0.023255813953488372,"note":0.023255813953488372,"that":0.023255813953488372,"it":0.023255813953488372,"cannot":0.023255813953488372,"be":0.023255813953488372,"hidden":0.023255813953488372,"with":0.023255813953488372,"if":0.023255813953488372,"block":0.023255813953488372,"use":0.023255813953488372,"css":0.023255813953488372,"instead":0.023255813953488372,"hide":0.023255813953488372,"file":0.023255813953488372,"proxies":0.023255813953488372,"in":0.023255813953488372,"a":0.023255813953488372,"component":0.023255813953488372,"filefieldproxy":0.023255813953488372,"and":0.023255813953488372,"filesfieldproxy":0.023255813953488372,"are":0.023255813953488372,"available":0.023255813953488372,"complement":0.023255813953488372,"formfieldproxy":0.023255813953488372},"215":{"if":0.022727272727272728,"your":0.022727272727272728,"validation":0.022727272727272728,"library":0.022727272727272728,"cannot":0.022727272727272728,"validate":0.022727272727272728,"files":0.022727272727272728,"you":0.022727272727272728,"can":0.022727272727272728,"obtain":0.022727272727272728,"formdata":0.022727272727272728,"from":0.022727272727272728,"the":0.022727272727272728,"request":0.022727272727272728,"and":0.022727272727272728,"extract":0.022727272727272728,"there":0.022727272727272728,"after":0.022727272727272728,"file":0.022727272727272728,"field":0.022727272727272728,"isn't":0.022727272727272728,"a":0.022727272727272728,"part":0.022727272727272728,"of":0.022727272727272728,"schema":0.022727272727272728,"but":0.022727272727272728,"still":0.022727272727272728,"want":0.022727272727272728,"errors":0.022727272727272728,"for":0.022727272727272728,"it":0.022727272727272728,"add":0.022727272727272728,"an":0.022727272727272728,"optional":0.022727272727272728,"to":0.022727272727272728,"with":0.022727272727272728,"same":0.022727272727272728,"name":0.022727272727272728,"use":0.022727272727272728,"seterror":0.022727272727272728,"set":0.022727272727272728,"display":0.022727272727272728,"error":0.022727272727272728,"message":0.022727272727272728},"216":{"1":0.027777777777777776,"to":0.027777777777777776,"prevent":0.027777777777777776,"file":0.027777777777777776,"uploads":0.027777777777777776,"set":0.027777777777777776,"the":0.027777777777777776,"allowfiles":0.027777777777777776,"false":0.027777777777777776,"option":0.027777777777777776,"in":0.027777777777777776,"supervalidate":0.027777777777777776,"this":0.027777777777777776,"will":0.027777777777777776,"all":0.027777777777777776,"files":0.027777777777777776,"undefined":0.027777777777777776,"so":0.027777777777777776,"you":0.027777777777777776,"don't":0.027777777777777776,"have":0.027777777777777776,"use":0.027777777777777776,"withfiles":0.027777777777777776,"also":0.027777777777777776,"happen":0.027777777777777776,"if":0.027777777777777776,"migrated":0.027777777777777776,"from":0.027777777777777776,"version":0.027777777777777776,"and":0.027777777777777776,"defined":0.027777777777777776,"superforms_legacy":0.027777777777777776,"that":0.027777777777777776,"case":0.027777777777777776,"true":0.027777777777777776,"allow":0.027777777777777776},"217":{"a":0.05263157894736842,"status":0.05263157894736842,"message":0.05263157894736842,"like":0.05263157894736842,"form":0.05263157894736842,"posted":0.05263157894736842,"can":0.05263157894736842,"be":0.05263157894736842,"displayed":0.05263157894736842,"after":0.05263157894736842,"submitting":0.05263157894736842,"the":0.05263157894736842,"validation":0.05263157894736842,"object":0.05263157894736842,"contains":0.05263157894736842,"store":0.05263157894736842,"used":0.05263157894736842,"for":0.05263157894736842,"this":0.05263157894736842},"218":{"it":0.038461538461538464,"is":0.038461538461538464,"used":0.038461538461538464,"to":0.038461538461538464,"display":0.038461538461538464,"the":0.038461538461538464,"message":0.038461538461538464,"on":0.038461538461538464,"client":0.038461538461538464,"like":0.038461538461538464,"any":0.038461538461538464,"other":0.038461538461538464,"store":0.038461538461538464,"however":0.038461538461538464,"we":0.038461538461538464,"need":0.038461538461538464,"send":0.038461538461538464,"from":0.038461538461538464,"server":0.038461538461538464,"first":0.038461538461538464,"using":0.038461538461538464,"function":0.038461538461538464,"makes":0.038461538461538464,"this":0.038461538461538464,"rather":0.038461538461538464,"simple":0.038461538461538464},"219":{"200":0.018518518518518517,"you":0.018518518518518517,"can":0.018518518518518517,"return":0.018518518518518517,"any":0.018518518518518517,"type":0.018518518518518517,"with":0.018518518518518517,"the":0.018518518518518517,"message":0.018518518518518517,"like":0.018518518518518517,"an":0.018518518518518517,"object":0.018518518518518517,"if":0.018518518518518517,"want":0.018518518518518517,"to":0.018518518518518517,"send":0.018518518518518517,"more":0.018518518518518517,"information":0.018518518518518517,"than":0.018518518518518517,"a":0.018518518518518517,"string":0.018518518518518517,"see":0.018518518518518517,"right":0.018518518518518517,"below":0.018518518518518517,"for":0.018518518518518517,"how":0.018518518518518517,"make":0.018518518518518517,"this":0.018518518518518517,"data":0.018518518518518517,"strongly":0.018518518518518517,"typed":0.018518518518518517,"successful":0.018518518518518517,"form":0.018518518518518517,"action":0.018518518518518517,"in":0.018518518518518517,"sveltekit":0.018518518518518517,"only":0.018518518518518517,"status":0.018518518518518517,"code":0.018518518518518517,"so":0.018518518518518517,"option":0.018518518518518517,"must":0.018518518518518517,"be":0.018518518518518517,"range":0.018518518518518517,"400-599":0.018518518518518517,"otherwise":0.018518518518518517,"will":0.018518518518518517,"returned":0.018518518518518517,"of":0.018518518518518517,"no":0.018518518518518517,"matter":0.018518518518518517,"what":0.018518518518518517,"is":0.018518518518518517,"set":0.018518518518518517},"220":{"the":0.013888888888888888,"message":0.013888888888888888,"is":0.013888888888888888,"of":0.013888888888888888,"type":0.013888888888888888,"any":0.013888888888888888,"by":0.013888888888888888,"default":0.013888888888888888,"but":0.013888888888888888,"you":0.013888888888888888,"can":0.013888888888888888,"it":0.013888888888888888,"using":0.013888888888888888,"supervalidate":0.013888888888888888,"parameters":0.013888888888888888,"a":0.013888888888888888,"string":0.013888888888888888,"be":0.013888888888888888,"bit":0.013888888888888888,"limiting":0.013888888888888888,"though":0.013888888888888888,"more":0.013888888888888888,"realistically":0.013888888888888888,"there":0.013888888888888888,"will":0.013888888888888888,"some":0.013888888888888888,"kind":0.013888888888888888,"status":0.013888888888888888,"for":0.013888888888888888,"form":0.013888888888888888,"submission":0.013888888888888888,"so":0.013888888888888888,"making":0.013888888888888888,"useful":0.013888888888888888,"consistency":0.013888888888888888,"to":0.013888888888888888,"simplify":0.013888888888888888,"this":0.013888888888888888,"even":0.013888888888888888,"further":0.013888888888888888,"if":0.013888888888888888,"have":0.013888888888888888,"same":0.013888888888888888,"all":0.013888888888888888,"messages":0.013888888888888888,"across":0.013888888888888888,"project":0.013888888888888888,"add":0.013888888888888888,"app":0.013888888888888888,"superforms":0.013888888888888888,"namespace":0.013888888888888888,"in":0.013888888888888888,"src":0.013888888888888888,"d":0.013888888888888888,"ts":0.013888888888888888,"and":0.013888888888888888,"automatically":0.013888888888888888,"set":0.013888888888888888,"no":0.013888888888888888,"need":0.013888888888888888,"generic":0.013888888888888888,"routes":0.013888888888888888,"page":0.013888888888888888,"svelte":0.013888888888888888,"want":0.013888888888888888,"keep":0.013888888888888888,"simple":0.013888888888888888,"with":0.013888888888888888,"or":0.013888888888888888,"use":0.013888888888888888,"style":0.013888888888888888,"appropriately":0.013888888888888888},"221":{"if":0.020833333333333332,"you":0.020833333333333332,"return":0.020833333333333332,"data":0.020833333333333332,"that":0.020833333333333332,"want":0.020833333333333332,"to":0.020833333333333332,"use":0.020833333333333332,"programmatically":0.020833333333333332,"instead":0.020833333333333332,"of":0.020833333333333332,"just":0.020833333333333332,"displaying":0.020833333333333332,"it":0.020833333333333332,"like":0.020833333333333332,"in":0.020833333333333332,"a":0.020833333333333332,"toast":0.020833333333333332,"message":0.020833333333333332,"can":0.020833333333333332,"do":0.020833333333333332,"the":0.020833333333333332,"onupdate":0.020833333333333332,"or":0.020833333333333332,"onupdated":0.020833333333333332,"event":0.020833333333333332,"difference":0.020833333333333332,"between":0.020833333333333332,"two":0.020833333333333332,"events":0.020833333333333332,"is":0.020833333333333332,"modify":0.020833333333333332,"and":0.020833333333333332,"cancel":0.020833333333333332,"update":0.020833333333333332,"compared":0.020833333333333332,"where":0.020833333333333332,"form":0.020833333333333332,"errors":0.020833333333333332,"etc":0.020833333333333332,"have":0.020833333333333332,"already":0.020833333333333332,"updated":0.020833333333333332,"making":0.020833333333333332,"best":0.020833333333333332,"for":0.020833333333333332,"non-store-related":0.020833333333333332,"things":0.020833333333333332},"222":{"since":0.02,"there":0.02,"is":0.02,"no":0.02,"form":0.02,"data":0.02,"returned":0.02,"when":0.02,"redirecting":0.02,"in":0.02,"that":0.02,"case":0.02,"the":0.02,"message":0.02,"will":0.02,"be":0.02,"lost":0.02,"it's":0.02,"quite":0.02,"common":0.02,"to":0.02,"redirect":0.02,"after":0.02,"a":0.02,"successful":0.02,"post":0.02,"so":0.02,"property":0.02,"isn't":0.02,"general":0.02,"solution":0.02,"for":0.02,"displaying":0.02,"status":0.02,"messages":0.02,"library":0.02,"sveltekit-flash-message":0.02,"complete":0.02,"works":0.02,"with":0.02,"redirects":0.02,"however":0.02,"it":0.02,"can":0.02,"directly":0.02,"integrated":0.02,"into":0.02,"superforms":0.02,"documented":0.02,"here":0.02},"223":{"since":0.007407407407407408,"there":0.007407407407407408,"is":0.007407407407407408,"only":0.007407407407407408,"one":0.007407407407407408,"page":0.007407407407407408,"store":0.007407407407407408,"per":0.007407407407407408,"route":0.007407407407407408,"multiple":0.007407407407407408,"forms":0.007407407407407408,"on":0.007407407407407408,"the":0.007407407407407408,"same":0.007407407407407408,"like":0.007407407407407408,"a":0.007407407407407408,"register":0.007407407407407408,"and":0.007407407407407408,"login":0.007407407407407408,"form":0.007407407407407408,"can":0.007407407407407408,"cause":0.007407407407407408,"problems":0.007407407407407408,"both":0.007407407407407408,"actions":0.007407407407407408,"will":0.007407407407407408,"update":0.007407407407407408,"possibly":0.007407407407407408,"affecting":0.007407407407407408,"other":0.007407407407407408,"with":0.007407407407407408,"superforms":0.007407407407407408,"are":0.007407407407407408,"handled":0.007407407407407408,"automatically":0.007407407407407408,"if":0.007407407407407408,"you":0.007407407407407408,"using":0.007407407407407408,"use":0.007407407407407408,"enhance":0.007407407407407408,"have":0.007407407407407408,"different":0.007407407407407408,"schema":0.007407407407407408,"types":0.007407407407407408,"when":0.007407407407407408,"for":0.007407407407407408,"need":0.007407407407407408,"to":0.007407407407407408,"set":0.007407407407407408,"id":0.007407407407407408,"option":0.007407407407407408,"by":0.007407407407407408,"setting":0.007407407407407408,"an":0.007407407407407408,"server":0.007407407407407408,"you'll":0.007407407407407408,"ensure":0.007407407407407408,"that":0.007407407407407408,"matching":0.007407407407407408,"client":0.007407407407407408,"react":0.007407407407407408,"updates":0.007407407407407408,"means":0.007407407407407408,"fields":0.007407407407407408,"so":0.007407407407407408,"just":0.007407407407407408,"copying":0.007407407407407408,"giving":0.007407407407407408,"it":0.007407407407407408,"variable":0.007407407407407408,"name":0.007407407407407408,"still":0.007407407407407408,"count":0.007407407407407408,"as":0.007407407407407408,"contents":0.007407407407407408,"of":0.007407407407407408,"schemas":0.007407407407407408,"differ":0.007407407407407408,"here's":0.007407407407407408,"example":0.007407407407407408,"how":0.007407407407407408,"handle":0.007407407407407408,"registration":0.007407407407407408,"ts":0.007407407407407408,"code":0.007407407407407408,"above":0.007407407407407408,"uses":0.007407407407407408,"named":0.007407407407407408,"determine":0.007407407407407408,"which":0.007407407407407408,"was":0.007407407407407408,"posted":0.007407407407407408,"post":0.007407407407407408,"these":0.007407407407407408,"respective":0.007407407407407408,"svelte":0.007407407407407408,"note":0.007407407407407408,"separate":0.007407407407407408,"each":0.007407407407407408,"-":0.007407407407407408,"cannot":0.007407407407407408,"share":0.007407407407407408,"action":0.007407407407407408,"between":0.007407407407407408,"works":0.007407407407407408,"well":0.007407407407407408,"posts":0.007407407407407408,"dedicated":0.007407407407407408,"but":0.007407407407407408,"more":0.007407407407407408,"dynamic":0.007407407407407408,"scenarios":0.007407407407407408,"let's":0.007407407407407408,"say":0.007407407407407408,"database":0.007407407407407408,"table":0.007407407407407408,"where":0.007407407407407408,"rows":0.007407407407407408,"be":0.007407407407407408,"edited":0.007407407407407408,"should":0.007407407407407408,"correspond":0.007407407407407408,"row":0.007407407407407408,"you'd":0.007407407407407408,"want":0.007407407407407408,"communicate":0.007407407407407408,"sent":0.007407407407407408,"this":0.007407407407407408,"done":0.007407407407407408,"modifying":0.007407407407407408,"formid":0.007407407407407408,"let":0.007407407407407408,"know":0.007407407407407408,"what":0.007407407407407408,"respond":0.007407407407407408},"224":{"on":0.029411764705882353,"the":0.029411764705882353,"client":0.029411764705882353,"id":0.029411764705882353,"is":0.029411764705882353,"picked":0.029411764705882353,"up":0.029411764705882353,"automatically":0.029411764705882353,"when":0.029411764705882353,"you":0.029411764705882353,"pass":0.029411764705882353,"data":0.029411764705882353,"form":0.029411764705882353,"to":0.029411764705882353,"superform":0.029411764705882353,"so":0.029411764705882353,"in":0.029411764705882353,"general":0.029411764705882353,"don't":0.029411764705882353,"have":0.029411764705882353,"add":0.029411764705882353,"it":0.029411764705882353,"can":0.029411764705882353,"also":0.029411764705882353,"change":0.029411764705882353,"dynamically":0.029411764705882353,"with":0.029411764705882353,"formid":0.029411764705882353,"store":0.029411764705882353,"or":0.029411764705882353,"set":0.029411764705882353,"directly":0.029411764705882353,"following":0.029411764705882353,"method":0.029411764705882353},"225":{"multiple":0.02857142857142857,"forms":0.02857142857142857,"also":0.02857142857142857,"work":0.02857142857142857,"without":0.02857142857142857,"use":0.02857142857142857,"enhance":0.02857142857142857,"though":0.02857142857142857,"in":0.02857142857142857,"this":0.02857142857142857,"case":0.02857142857142857,"you":0.02857142857142857,"must":0.02857142857142857,"add":0.02857142857142857,"a":0.02857142857142857,"hidden":0.02857142857142857,"form":0.02857142857142857,"field":0.02857142857142857,"called":0.02857142857142857,"__superform_id":0.02857142857142857,"with":0.02857142857142857,"the":0.02857142857142857,"formid":0.02857142857142857,"value":0.02857142857142857,"is":0.02857142857142857,"required":0.02857142857142857,"if":0.02857142857142857,"you're":0.02857142857142857,"changing":0.02857142857142857,"schemas":0.02857142857142857,"action":0.02857142857142857,"as":0.02857142857142857,"can":0.02857142857142857,"happen":0.02857142857142857,"multi-step":0.02857142857142857},"226":{"due":0.013513513513513514,"to":0.013513513513513514,"the":0.013513513513513514,"many":0.013513513513513514,"different":0.013513513513513514,"use":0.013513513513513514,"cases":0.013513513513513514,"it's":0.013513513513513514,"hard":0.013513513513513514,"set":0.013513513513513514,"sensible":0.013513513513513514,"default":0.013513513513513514,"options":0.013513513513513514,"for":0.013513513513513514,"multiple":0.013513513513513514,"forms":0.013513513513513514,"a":0.013513513513513514,"common":0.013513513513513514,"issue":0.013513513513513514,"is":0.013513513513513514,"that":0.013513513513513514,"when":0.013513513513513514,"one":0.013513513513513514,"form":0.013513513513513514,"submitted":0.013513513513513514,"other":0.013513513513513514,"forms'":0.013513513513513514,"data":0.013513513513513514,"are":0.013513513513513514,"lost":0.013513513513513514,"this":0.013513513513513514,"page":0.013513513513513514,"being":0.013513513513513514,"invalidated":0.013513513513513514,"by":0.013513513513513514,"on":0.013513513513513514,"successful":0.013513513513513514,"response":0.013513513513513514,"if":0.013513513513513514,"you":0.013513513513513514,"want":0.013513513513513514,"preserve":0.013513513513513514,"their":0.013513513513513514,"you'd":0.013513513513513514,"almost":0.013513513513513514,"certainly":0.013513513513513514,"invalidateall":0.013513513513513514,"false":0.013513513513513514,"or":0.013513513513513514,"applyaction":0.013513513513513514,"them":0.013513513513513514,"as":0.013513513513513514,"in":0.013513513513513514,"example":0.013513513513513514,"above":0.013513513513513514,"enhance":0.013513513513513514,"option":0.013513513513513514,"explains":0.013513513513513514,"differences":0.013513513513513514,"between":0.013513513513513514,"also":0.013513513513513514,"check":0.013513513513513514,"out":0.013513513513513514,"componentization":0.013513513513513514,"ideas":0.013513513513513514,"how":0.013513513513513514,"place":0.013513513513513514,"into":0.013513513513513514,"separate":0.013513513513513514,"components":0.013513513513513514,"make":0.013513513513513514,"svelte":0.013513513513513514,"less":0.013513513513513514,"cluttered":0.013513513513513514},"227":{"here":0.03333333333333333,"we":0.03333333333333333,"have":0.03333333333333333,"two":0.03333333333333333,"forms":0.03333333333333333,"with":0.03333333333333333,"separate":0.03333333333333333,"id's":0.03333333333333333,"and":0.03333333333333333,"their":0.03333333333333333,"invalidateall":0.03333333333333333,"option":0.03333333333333333,"set":0.03333333333333333,"to":0.03333333333333333,"false":0.03333333333333333,"prevent":0.03333333333333333,"page":0.03333333333333333,"invalidation":0.03333333333333333,"which":0.03333333333333333,"would":0.03333333333333333,"otherwise":0.03333333333333333,"clear":0.03333333333333333,"the":0.03333333333333333,"other":0.03333333333333333,"form":0.03333333333333333,"when":0.03333333333333333,"load":0.03333333333333333,"function":0.03333333333333333,"executes":0.03333333333333333,"again":0.03333333333333333},"228":{"html":0.02702702702702703,"forms":0.02702702702702703,"can":0.02702702702702703,"only":0.02702702702702703,"handle":0.02702702702702703,"string":0.02702702702702703,"values":0.02702702702702703,"and":0.02702702702702703,"the":0.02702702702702703,"form":0.02702702702702703,"element":0.02702702702702703,"cannot":0.02702702702702703,"nest":0.02702702702702703,"other":0.02702702702702703,"so":0.02702702702702703,"there":0.02702702702702703,"is":0.02702702702702703,"no":0.02702702702702703,"standardized":0.02702702702702703,"way":0.02702702702702703,"to":0.02702702702702703,"represent":0.02702702702702703,"a":0.02702702702702703,"nested":0.02702702702702703,"data":0.02702702702702703,"structure":0.02702702702702703,"or":0.02702702702702703,"more":0.02702702702702703,"complex":0.02702702702702703,"like":0.02702702702702703,"dates":0.02702702702702703,"fortunately":0.02702702702702703,"superforms":0.02702702702702703,"has":0.02702702702702703,"solution":0.02702702702702703,"for":0.02702702702702703,"this":0.02702702702702703},"229":{"by":0.009174311926605505,"simply":0.009174311926605505,"setting":0.009174311926605505,"datatype":0.009174311926605505,"to":0.009174311926605505,"'json'":0.009174311926605505,"you":0.009174311926605505,"can":0.009174311926605505,"store":0.009174311926605505,"any":0.009174311926605505,"data":0.009174311926605505,"structure":0.009174311926605505,"allowed":0.009174311926605505,"devalue":0.009174311926605505,"in":0.009174311926605505,"the":0.009174311926605505,"form":0.009174311926605505,"and":0.009174311926605505,"don't":0.009174311926605505,"have":0.009174311926605505,"worry":0.009174311926605505,"about":0.009174311926605505,"failed":0.009174311926605505,"coercion":0.009174311926605505,"converting":0.009174311926605505,"strings":0.009174311926605505,"objects":0.009174311926605505,"arrays":0.009174311926605505,"etc":0.009174311926605505,"even":0.009174311926605505,"set":0.009174311926605505,"a":0.009174311926605505,"name":0.009174311926605505,"on":0.009174311926605505,"fields":0.009174311926605505,"anymore":0.009174311926605505,"since":0.009174311926605505,"actual":0.009174311926605505,"is":0.009174311926605505,"now":0.009174311926605505,"posted":0.009174311926605505,"not":0.009174311926605505,"input":0.009174311926605505,"html":0.009174311926605505,"they":0.009174311926605505,"are":0.009174311926605505,"ui":0.009174311926605505,"components":0.009174311926605505,"for":0.009174311926605505,"modifying":0.009174311926605505,"model":0.009174311926605505,"as":0.009174311926605505,"should":0.009174311926605505,"be":0.009174311926605505,"when":0.009174311926605505,"onsubmit":0.009174311926605505,"event":0.009174311926605505,"will":0.009174311926605505,"contain":0.009174311926605505,"formdata":0.009174311926605505,"but":0.009174311926605505,"it":0.009174311926605505,"cannot":0.009174311926605505,"used":0.009174311926605505,"modify":0.009174311926605505,"need":0.009174311926605505,"or":0.009174311926605505,"update":0.009174311926605505,"special":0.009174311926605505,"cases":0.009174311926605505,"use":0.009174311926605505,"jsondata":0.009174311926605505,"this":0.009174311926605505,"also":0.009174311926605505,"means":0.009174311926605505,"that":0.009174311926605505,"disabled":0.009174311926605505,"attribute":0.009174311926605505,"which":0.009174311926605505,"normally":0.009174311926605505,"prevents":0.009174311926605505,"from":0.009174311926605505,"being":0.009174311926605505,"submitted":0.009174311926605505,"effect":0.009174311926605505,"everything":0.009174311926605505,"programmatically":0.009174311926605505,"easy":0.009174311926605505,"either":0.009174311926605505,"assign":0.009174311926605505,"field":0.009174311926605505,"directly":0.009174311926605505,"taint":0.009174311926605505,"affected":0.009174311926605505,"if":0.009174311926605505,"want":0.009174311926605505,"prevent":0.009174311926605505,"tainted":0.009174311926605505,"with":0.009174311926605505,"an":0.009174311926605505,"extra":0.009174311926605505,"option":0.009174311926605505,"options":0.009174311926605505,"only":0.009174311926605505,"tainting":0.009174311926605505,"untaint":0.009174311926605505,"modified":0.009174311926605505,"s":0.009174311926605505,"whole":0.009174311926605505},"230":{"the":0.045454545454545456,"requirements":0.045454545454545456,"for":0.045454545454545456,"nested":0.045454545454545456,"data":0.045454545454545456,"to":0.045454545454545456,"work":0.045454545454545456,"are":0.045454545454545456,"as":0.045454545454545456,"follows":0.045454545454545456,"javascript":0.045454545454545456,"is":0.045454545454545456,"enabled":0.045454545454545456,"in":0.045454545454545456,"browser":0.045454545454545456,"form":0.045454545454545456,"has":0.045454545454545456,"superforms":0.045454545454545456,"use":0.045454545454545456,"enhance":0.045454545454545456,"concepts":0.045454545454545456,"applied":0.045454545454545456},"231":{"when":0.02631578947368421,"your":0.02631578947368421,"schema":0.02631578947368421,"contains":0.02631578947368421,"arrays":0.02631578947368421,"or":0.02631578947368421,"objects":0.02631578947368421,"you":0.02631578947368421,"can":0.02631578947368421,"access":0.02631578947368421,"them":0.02631578947368421,"through":0.02631578947368421,"form":0.02631578947368421,"as":0.02631578947368421,"an":0.02631578947368421,"ordinary":0.02631578947368421,"object":0.02631578947368421,"but":0.02631578947368421,"how":0.02631578947368421,"does":0.02631578947368421,"it":0.02631578947368421,"work":0.02631578947368421,"with":0.02631578947368421,"errors":0.02631578947368421,"and":0.02631578947368421,"constraints":0.02631578947368421,"actually":0.02631578947368421,"mirror":0.02631578947368421,"the":0.02631578947368421,"data":0.02631578947368421,"every":0.02631578947368421,"field":0.02631578947368421,"leaf":0.02631578947368421,"in":0.02631578947368421,"replaced":0.02631578947368421,"string":0.02631578947368421,"inputconstraints":0.02631578947368421,"respectively":0.02631578947368421},"232":{"given":0.016666666666666666,"the":0.016666666666666666,"following":0.016666666666666666,"schema":0.016666666666666666,"which":0.016666666666666666,"describes":0.016666666666666666,"an":0.016666666666666666,"array":0.016666666666666666,"of":0.016666666666666666,"tag":0.016666666666666666,"objects":0.016666666666666666,"you":0.016666666666666666,"can":0.016666666666666666,"build":0.016666666666666666,"a":0.016666666666666666,"html":0.016666666666666666,"form":0.016666666666666666,"for":0.016666666666666666,"these":0.016666666666666666,"tags":0.016666666666666666,"using":0.016666666666666666,"each":0.016666666666666666,"loop":0.016666666666666666,"take":0.016666666666666666,"extra":0.016666666666666666,"care":0.016666666666666666,"with":0.016666666666666666,"optional":0.016666666666666666,"chaining":0.016666666666666666,"operator":0.016666666666666666,"it's":0.016666666666666666,"easy":0.016666666666666666,"to":0.016666666666666666,"miss":0.016666666666666666,"question":0.016666666666666666,"mark":0.016666666666666666,"will":0.016666666666666666,"lead":0.016666666666666666,"confusing":0.016666666666666666,"errors":0.016666666666666666,"note":0.016666666666666666,"that":0.016666666666666666,"we're":0.016666666666666666,"index":0.016666666666666666,"so":0.016666666666666666,"value":0.016666666666666666,"be":0.016666666666666666,"bound":0.016666666666666666,"directly":0.016666666666666666,"can't":0.016666666666666666,"use":0.016666666666666666,"variable":0.016666666666666666,"hence":0.016666666666666666,"underscore":0.016666666666666666,"this":0.016666666666666666,"is":0.016666666666666666,"what":0.016666666666666666,"it":0.016666666666666666,"looks":0.016666666666666666,"like":0.016666666666666666},"233":{"3":0.011494252873563218,"it's":0.011494252873563218,"possible":0.011494252873563218,"to":0.011494252873563218,"post":0.011494252873563218,"multiple":0.011494252873563218,"html":0.011494252873563218,"elements":0.011494252873563218,"with":0.011494252873563218,"the":0.011494252873563218,"same":0.011494252873563218,"name":0.011494252873563218,"so":0.011494252873563218,"you":0.011494252873563218,"don't":0.011494252873563218,"have":0.011494252873563218,"use":0.011494252873563218,"datatype":0.011494252873563218,"'json'":0.011494252873563218,"for":0.011494252873563218,"arrays":0.011494252873563218,"of":0.011494252873563218,"primitive":0.011494252873563218,"values":0.011494252873563218,"like":0.011494252873563218,"numbers":0.011494252873563218,"and":0.011494252873563218,"strings":0.011494252873563218,"just":0.011494252873563218,"add":0.011494252873563218,"input":0.011494252873563218,"fields":0.011494252873563218,"all":0.011494252873563218,"as":0.011494252873563218,"schema":0.011494252873563218,"field":0.011494252873563218,"which":0.011494252873563218,"can":0.011494252873563218,"only":0.011494252873563218,"be":0.011494252873563218,"at":0.011494252873563218,"top":0.011494252873563218,"level":0.011494252873563218,"superforms":0.011494252873563218,"will":0.011494252873563218,"handle":0.011494252873563218,"type":0.011494252873563218,"coercion":0.011494252873563218,"array":0.011494252873563218,"automatically":0.011494252873563218,"long":0.011494252873563218,"attribute":0.011494252873563218,"summarize":0.011494252873563218,"index":0.011494252873563218,"i":0.011494252873563218,"each":0.011494252873563218,"loop":0.011494252873563218,"is":0.011494252873563218,"used":0.011494252873563218,"access":0.011494252873563218,"form":0.011494252873563218,"tags":0.011494252873563218,"where":0.011494252873563218,"current":0.011494252873563218,"are":0.011494252873563218,"cannot":0.011494252873563218,"variable":0.011494252873563218,"then":0.011494252873563218,"set":0.011494252873563218,"its":0.011494252873563218,"populated":0.011494252873563218,"when":0.011494252873563218,"posted":0.011494252873563218,"this":0.011494252873563218,"example":0.011494252873563218,"having":0.011494252873563218,"a":0.011494252873563218,"max":0.011494252873563218,"limitation":0.011494252873563218,"number":0.011494252873563218,"also":0.011494252873563218,"shows":0.011494252873563218,"how":0.011494252873563218,"display":0.011494252873563218,"array-level":0.011494252873563218,"errors":0.011494252873563218,"_errors":0.011494252873563218},"234":{"validation":0.017543859649122806,"libraries":0.017543859649122806,"like":0.017543859649122806,"zod":0.017543859649122806,"can":0.017543859649122806,"refine":0.017543859649122806,"the":0.017543859649122806,"classic":0.017543859649122806,"example":0.017543859649122806,"is":0.017543859649122806,"to":0.017543859649122806,"check":0.017543859649122806,"if":0.017543859649122806,"two":0.017543859649122806,"password":0.017543859649122806,"fields":0.017543859649122806,"are":0.017543859649122806,"identical":0.017543859649122806,"when":0.017543859649122806,"updating":0.017543859649122806,"a":0.017543859649122806,"usually":0.017543859649122806,"there's":0.017543859649122806,"path":0.017543859649122806,"specifier":0.017543859649122806,"for":0.017543859649122806,"setting":0.017543859649122806,"errors":0.017543859649122806,"on":0.017543859649122806,"those":0.017543859649122806,"in":0.017543859649122806,"function":0.017543859649122806,"this":0.017543859649122806,"works":0.017543859649122806,"fine":0.017543859649122806,"top-level":0.017543859649122806,"properties":0.017543859649122806,"but":0.017543859649122806,"nested":0.017543859649122806,"data":0.017543859649122806,"you":0.017543859649122806,"must":0.017543859649122806,"specify":0.017543859649122806,"that":0.017543859649122806,"as":0.017543859649122806,"an":0.017543859649122806,"array":0.017543859649122806,"each":0.017543859649122806,"segment":0.017543859649122806,"its":0.017543859649122806,"own":0.017543859649122806,"element":0.017543859649122806,"not":0.017543859649122806,"string":0.017543859649122806,"do":0.017543859649122806,"formpathleaves":0.017543859649122806,"type":0.017543859649122806},"235":{"sometimes":0.01098901098901099,"you":0.01098901098901099,"get":0.01098901098901099,"a":0.01098901098901099,"string":0.01098901098901099,"value":0.01098901098901099,"from":0.01098901098901099,"an":0.01098901098901099,"input":0.01098901098901099,"field":0.01098901098901099,"or":0.01098901098901099,"third-party":0.01098901098901099,"library":0.01098901098901099,"and":0.01098901098901099,"want":0.01098901098901099,"it":0.01098901098901099,"to":0.01098901098901099,"be":0.01098901098901099,"automatically":0.01098901098901099,"converted":0.01098901098901099,"updated":0.01098901098901099,"with":0.01098901098901099,"non-string":0.01098901098901099,"in":0.01098901098901099,"your":0.01098901098901099,"schema":0.01098901098901099,"this":0.01098901098901099,"is":0.01098901098901099,"what":0.01098901098901099,"proxies":0.01098901098901099,"are":0.01098901098901099,"for":0.01098901098901099,"the":0.01098901098901099,"usage":0.01098901098901099,"all":0.01098901098901099,"of":0.01098901098901099,"them":0.01098901098901099,"practically":0.01098901098901099,"same":0.01098901098901099,"can":0.01098901098901099,"use":0.01098901098901099,"form":0.01098901098901099,"store":0.01098901098901099,"whole":0.01098901098901099,"superform":0.01098901098901099,"as":0.01098901098901099,"which":0.01098901098901099,"allows":0.01098901098901099,"set":0.01098901098901099,"tainted":0.01098901098901099,"option":0.01098901098901099,"case":0.01098901098901099,"don't":0.01098901098901099,"taint":0.01098901098901099,"when":0.01098901098901099,"updates":0.01098901098901099,"now":0.01098901098901099,"if":0.01098901098901099,"bind":0.01098901098901099,"idproxy":0.01098901098901099,"instead":0.01098901098901099,"id":0.01098901098901099,"will":0.01098901098901099,"integer":0.01098901098901099,"note":0.01098901098901099,"that":0.01098901098901099,"kind":0.01098901098901099,"conversion":0.01098901098901099,"usually":0.01098901098901099,"happen":0.01098901098901099,"intproxy":0.01098901098901099,"numberproxy":0.01098901098901099,"rarely":0.01098901098901099,"needed":0.01098901098901099,"svelte":0.01098901098901099,"handles":0.01098901098901099,"but":0.01098901098901099,"may":0.01098901098901099,"still":0.01098901098901099,"useful":0.01098901098901099,"undefined":0.01098901098901099,"null":0.01098901098901099,"falsy":0.01098901098901099,"empty":0.01098901098901099,"see":0.01098901098901099,"api":0.01098901098901099,"more":0.01098901098901099,"details":0.01098901098901099,"options":0.01098901098901099,"each":0.01098901098901099,"proxy":0.01098901098901099},"236":{"you":0.041666666666666664,"can":0.041666666666666664,"use":0.041666666666666664,"a":0.041666666666666664,"proxy":0.041666666666666664,"for":0.041666666666666664,"nested":0.041666666666666664,"data":0.041666666666666664,"like":0.041666666666666664,"'user":0.041666666666666664,"profile":0.041666666666666664,"email'":0.041666666666666664,"in":0.041666666666666664,"which":0.041666666666666664,"case":0.041666666666666664,"parent":0.041666666666666664,"objects":0.041666666666666664,"will":0.041666666666666664,"be":0.041666666666666664,"created":0.041666666666666664,"if":0.041666666666666664,"they":0.041666666666666664,"don't":0.041666666666666664,"exist":0.041666666666666664},"237":{"the":0.01818181818181818,"date":0.01818181818181818,"input":0.01818181818181818,"type":0.01818181818181818,"is":0.01818181818181818,"a":0.01818181818181818,"bit":0.01818181818181818,"special":0.01818181818181818,"its":0.01818181818181818,"underlying":0.01818181818181818,"data":0.01818181818181818,"string":0.01818181818181818,"in":0.01818181818181818,"yyyy-mm-dd":0.01818181818181818,"format":0.01818181818181818,"but":0.01818181818181818,"dateproxy":0.01818181818181818,"returns":0.01818181818181818,"an":0.01818181818181818,"iso":0.01818181818181818,"as":0.01818181818181818,"default":0.01818181818181818,"so":0.01818181818181818,"you":0.01818181818181818,"need":0.01818181818181818,"to":0.01818181818181818,"use":0.01818181818181818,"option":0.01818181818181818,"return":0.01818181818181818,"part":0.01818181818181818,"only":0.01818181818181818,"we're":0.01818181818181818,"also":0.01818181818181818,"taking":0.01818181818181818,"using":0.01818181818181818,"min":0.01818181818181818,"and":0.01818181818181818,"max":0.01818181818181818,"constraints":0.01818181818181818,"limit":0.01818181818181818,"picker":0.01818181818181818,"selection":0.01818181818181818,"following":0.01818181818181818,"example":0.01818181818181818,"limits":0.01818181818181818,"from":0.01818181818181818,"today":0.01818181818181818,"forward":0.01818181818181818,"uses":0.01818181818181818,"empty":0.01818181818181818,"of":0.01818181818181818,"proxy":0.01818181818181818,"set":0.01818181818181818,"invalid":0.01818181818181818,"undefined":0.01818181818181818},"238":{"a":0.02040816326530612,"nice":0.02040816326530612,"sveltekit":0.02040816326530612,"feature":0.02040816326530612,"is":0.02040816326530612,"snapshots":0.02040816326530612,"which":0.02040816326530612,"saves":0.02040816326530612,"and":0.02040816326530612,"restores":0.02040816326530612,"data":0.02040816326530612,"when":0.02040816326530612,"the":0.02040816326530612,"user":0.02040816326530612,"navigates":0.02040816326530612,"on":0.02040816326530612,"site":0.02040816326530612,"this":0.02040816326530612,"perfect":0.02040816326530612,"for":0.02040816326530612,"saving":0.02040816326530612,"form":0.02040816326530612,"state":0.02040816326530612,"with":0.02040816326530612,"superforms":0.02040816326530612,"you":0.02040816326530612,"can":0.02040816326530612,"take":0.02040816326530612,"advantage":0.02040816326530612,"of":0.02040816326530612,"in":0.02040816326530612,"one":0.02040816326530612,"line":0.02040816326530612,"code":0.02040816326530612,"as":0.02040816326530612,"an":0.02040816326530612,"alternative":0.02040816326530612,"to":0.02040816326530612,"tainted":0.02040816326530612,"message":0.02040816326530612,"note":0.02040816326530612,"that":0.02040816326530612,"it":0.02040816326530612,"only":0.02040816326530612,"works":0.02040816326530612,"browser":0.02040816326530612,"history":0.02040816326530612,"navigation":0.02040816326530612,"though":0.02040816326530612},"239":{"the":0.030303030303030304,"export":0.030303030303030304,"has":0.030303030303030304,"to":0.030303030303030304,"be":0.030303030303030304,"on":0.030303030303030304,"a":0.030303030303030304,"page":0.030303030303030304,"svelte":0.030303030303030304,"work":0.030303030303030304,"it":0.030303030303030304,"cannot":0.030303030303030304,"in":0.030303030303030304,"component":0.030303030303030304,"options":0.030303030303030304,"object":0.030303030303030304,"contains":0.030303030303030304,"functions":0.030303030303030304,"and":0.030303030303030304,"serialized":0.030303030303030304,"for":0.030303030303030304,"snapshot":0.030303030303030304,"if":0.030303030303030304,"you":0.030303030303030304,"modify":0.030303030303030304,"dynamically":0.030303030303030304,"make":0.030303030303030304,"custom":0.030303030303030304,"version":0.030303030303030304,"of":0.030303030303030304,"methods":0.030303030303030304,"handle":0.030303030303030304,"changes":0.030303030303030304},"240":{"modify":0.047619047619047616,"the":0.047619047619047616,"form":0.047619047619047616,"below":0.047619047619047616,"without":0.047619047619047616,"submitting":0.047619047619047616,"then":0.047619047619047616,"click":0.047619047619047616,"browser":0.047619047619047616,"back":0.047619047619047616,"button":0.047619047619047616,"and":0.047619047619047616,"forward":0.047619047619047616,"again":0.047619047619047616,"should":0.047619047619047616,"be":0.047619047619047616,"restored":0.047619047619047616,"to":0.047619047619047616,"its":0.047619047619047616,"intermediate":0.047619047619047616,"state":0.047619047619047616},"241":{},"242":{"it's":0.02702702702702703,"possible":0.02702702702702703,"to":0.02702702702702703,"use":0.02702702702702703,"the":0.02702702702702703,"whole":0.02702702702702703,"superforms":0.02702702702702703,"library":0.02702702702702703,"on":0.02702702702702703,"client":0.02702702702702703,"for":0.02702702702702703,"example":0.02702702702702703,"in":0.02702702702702703,"single":0.02702702702702703,"page":0.02702702702702703,"applications":0.02702702702702703,"or":0.02702702702702703,"when":0.02702702702702703,"you":0.02702702702702703,"want":0.02702702702702703,"call":0.02702702702702703,"an":0.02702702702702703,"external":0.02702702702702703,"api":0.02702702702702703,"instead":0.02702702702702703,"of":0.02702702702702703,"sveltekit":0.02702702702702703,"form":0.02702702702702703,"actions":0.02702702702702703,"a":0.02702702702702703,"spa":0.02702702702702703,"is":0.02702702702702703,"easy":0.02702702702702703,"create":0.02702702702702703,"with":0.02702702702702703,"documented":0.02702702702702703,"here":0.02702702702702703},"243":{"by":0.020833333333333332,"setting":0.020833333333333332,"the":0.020833333333333332,"spa":0.020833333333333332,"option":0.020833333333333332,"to":0.020833333333333332,"true":0.020833333333333332,"form":0.020833333333333332,"won't":0.020833333333333332,"be":0.020833333333333332,"sent":0.020833333333333332,"server":0.020833333333333332,"when":0.020833333333333332,"submitted":0.020833333333333332,"instead":0.020833333333333332,"client-side":0.020833333333333332,"validators":0.020833333333333332,"will":0.020833333333333332,"determine":0.020833333333333332,"if":0.020833333333333332,"is":0.020833333333333332,"valid":0.020833333333333332,"and":0.020833333333333332,"you":0.020833333333333332,"can":0.020833333333333332,"then":0.020833333333333332,"use":0.020833333333333332,"onupdate":0.020833333333333332,"event":0.020833333333333332,"as":0.020833333333333332,"a":0.020833333333333332,"submit":0.020833333333333332,"handler":0.020833333333333332,"for":0.020833333333333332,"example":0.020833333333333332,"call":0.020833333333333332,"an":0.020833333333333332,"external":0.020833333333333332,"api":0.020833333333333332,"with":0.020833333333333332,"data":0.020833333333333332,"remember":0.020833333333333332,"that":0.020833333333333332,"superforms":0.020833333333333332,"enhance":0.020833333333333332,"must":0.020833333333333332,"added":0.020833333333333332,"work":0.020833333333333332},"244":{"since":0.022727272727272728,"spa":0.022727272727272728,"pages":0.022727272727272728,"don't":0.022727272727272728,"have":0.022727272727272728,"a":0.022727272727272728,"server":0.022727272727272728,"representation":0.022727272727272728,"you":0.022727272727272728,"can":0.022727272727272728,"use":0.022727272727272728,"page":0.022727272727272728,"ts":0.022727272727272728,"to":0.022727272727272728,"load":0.022727272727272728,"initial":0.022727272727272728,"data":0.022727272727272728,"combined":0.022727272727272728,"with":0.022727272727272728,"route":0.022727272727272728,"parameter":0.022727272727272728,"we":0.022727272727272728,"make":0.022727272727272728,"crud-like":0.022727272727272728,"in":0.022727272727272728,"straightforward":0.022727272727272728,"manner":0.022727272727272728,"src":0.022727272727272728,"routes":0.022727272727272728,"user":0.022727272727272728,"id":0.022727272727272728,"if":0.022727272727272728,"no":0.022727272727272728,"should":0.022727272727272728,"be":0.022727272727272728,"loaded":0.022727272727272728,"from":0.022727272727272728,"read":0.022727272727272728,"further":0.022727272727272728,"down":0.022727272727272728,"about":0.022727272727272728,"the":0.022727272727272728,"defaults":0.022727272727272728,"function":0.022727272727272728},"245":{"we":0.014492753623188406,"display":0.014492753623188406,"the":0.014492753623188406,"form":0.014492753623188406,"in":0.014492753623188406,"page":0.014492753623188406,"svelte":0.014492753623188406,"like":0.014492753623188406,"before":0.014492753623188406,"but":0.014492753623188406,"with":0.014492753623188406,"spa":0.014492753623188406,"option":0.014492753623188406,"added":0.014492753623188406,"and":0.014492753623188406,"onupdate":0.014492753623188406,"event":0.014492753623188406,"now":0.014492753623188406,"being":0.014492753623188406,"used":0.014492753623188406,"to":0.014492753623188406,"validate":0.014492753623188406,"data":0.014492753623188406,"instead":0.014492753623188406,"of":0.014492753623188406,"on":0.014492753623188406,"server":0.014492753623188406,"src":0.014492753623188406,"routes":0.014492753623188406,"user":0.014492753623188406,"id":0.014492753623188406,"validation":0.014492753623188406,"is":0.014492753623188406,"almost":0.014492753623188406,"same":0.014492753623188406,"as":0.014492753623188406,"validating":0.014492753623188406,"a":0.014492753623188406,"action":0.014492753623188406,"nothing":0.014492753623188406,"needs":0.014492753623188406,"be":0.014492753623188406,"returned":0.014492753623188406,"at":0.014492753623188406,"end":0.014492753623188406,"since":0.014492753623188406,"all":0.014492753623188406,"modifications":0.014492753623188406,"parameter":0.014492753623188406,"will":0.014492753623188406,"update":0.014492753623188406,"course":0.014492753623188406,"this":0.014492753623188406,"done":0.014492753623188406,"client":0.014492753623188406,"it's":0.014492753623188406,"easy":0.014492753623188406,"tamper":0.014492753623188406,"see":0.014492753623188406,"it":0.014492753623188406,"convenient":0.014492753623188406,"way":0.014492753623188406,"collecting":0.014492753623188406,"doing":0.014492753623188406,"proper":0.014492753623188406,"through":0.014492753623188406,"an":0.014492753623188406,"external":0.014492753623188406,"api":0.014492753623188406},"246":{"since":0.030303030303030304,"you":0.030303030303030304,"can't":0.030303030303030304,"use":0.030303030303030304,"top-level":0.030303030303030304,"await":0.030303030303030304,"in":0.030303030303030304,"svelte":0.030303030303030304,"components":0.030303030303030304,"supervalidate":0.030303030303030304,"directly":0.030303030303030304,"page":0.030303030303030304,"as":0.030303030303030304,"it":0.030303030303030304,"is":0.030303030303030304,"async":0.030303030303030304,"but":0.030303030303030304,"if":0.030303030303030304,"want":0.030303030303030304,"the":0.030303030303030304,"default":0.030303030303030304,"values":0.030303030303030304,"only":0.030303030303030304,"for":0.030303030303030304,"schema":0.030303030303030304,"can":0.030303030303030304,"import":0.030303030303030304,"defaults":0.030303030303030304,"to":0.030303030303030304,"avoid":0.030303030303030304,"having":0.030303030303030304,"a":0.030303030303030304,"ts":0.030303030303030304},"247":{"if":0.022727272727272728,"you":0.022727272727272728,"have":0.022727272727272728,"initial":0.022727272727272728,"data":0.022727272727272728,"in":0.022727272727272728,"the":0.022727272727272728,"top":0.022727272727272728,"level":0.022727272727272728,"of":0.022727272727272728,"component":0.022727272727272728,"can":0.022727272727272728,"pass":0.022727272727272728,"it":0.022727272727272728,"as":0.022727272727272728,"a":0.022727272727272728,"first":0.022727272727272728,"parameter":0.022727272727272728,"to":0.022727272727272728,"defaults":0.022727272727272728,"but":0.022727272727272728,"remember":0.022727272727272728,"that":0.022727272727272728,"won't":0.022727272727272728,"be":0.022727272727272728,"validated":0.022727272727272728,"there's":0.022727272727272728,"trick":0.022727272727272728,"though":0.022727272727272728,"want":0.022727272727272728,"show":0.022727272727272728,"errors":0.022727272727272728,"for":0.022727272727272728,"call":0.022727272727272728,"validateform":0.022727272727272728,"directly":0.022727272727272728,"after":0.022727272727272728,"superform":0.022727272727272728,"validators":0.022727272727272728,"option":0.022727272727272728,"must":0.022727272727272728,"set":0.022727272727272728,"this":0.022727272727272728,"work":0.022727272727272728},"248":{"sometimes":0.009345794392523364,"you":0.009345794392523364,"want":0.009345794392523364,"a":0.009345794392523364,"fetch":0.009345794392523364,"function":0.009345794392523364,"for":0.009345794392523364,"form":0.009345794392523364,"field":0.009345794392523364,"or":0.009345794392523364,"list":0.009345794392523364,"of":0.009345794392523364,"items":0.009345794392523364,"example":0.009345794392523364,"checking":0.009345794392523364,"if":0.009345794392523364,"username":0.009345794392523364,"is":0.009345794392523364,"valid":0.009345794392523364,"while":0.009345794392523364,"entering":0.009345794392523364,"it":0.009345794392523364,"deleting":0.009345794392523364,"rows":0.009345794392523364,"in":0.009345794392523364,"data":0.009345794392523364,"instead":0.009345794392523364,"doing":0.009345794392523364,"this":0.009345794392523364,"manually":0.009345794392523364,"with":0.009345794392523364,"which":0.009345794392523364,"cannot":0.009345794392523364,"take":0.009345794392523364,"advantage":0.009345794392523364,"superforms'":0.009345794392523364,"loading":0.009345794392523364,"timers":0.009345794392523364,"events":0.009345794392523364,"and":0.009345794392523364,"other":0.009345794392523364,"functionality":0.009345794392523364,"can":0.009345794392523364,"create":0.009345794392523364,"spa":0.009345794392523364,"action":0.009345794392523364,"hidden":0.009345794392523364,"that":0.009345794392523364,"does":0.009345794392523364,"most":0.009345794392523364,"the":0.009345794392523364,"work":0.009345794392523364,"convenience":0.009345794392523364,"get":0.009345794392523364,"from":0.009345794392523364,"superform":0.009345794392523364,"takes":0.009345794392523364,"supervalidated":0.009345794392523364,"object":0.009345794392523364,"as":0.009345794392523364,"usual":0.009345794392523364,"first":0.009345794392523364,"parameter":0.009345794392523364,"specify":0.009345794392523364,"default":0.009345794392523364,"values":0.009345794392523364,"directly":0.009345794392523364,"then":0.009345794392523364,"url":0.009345794392523364,"option":0.009345794392523364,"have":0.009345794392523364,"populate":0.009345794392523364,"onsubmit":0.009345794392523364,"event":0.009345794392523364,"its":0.009345794392523364,"enhance":0.009345794392523364,"method":0.009345794392523364,"be":0.009345794392523364,"used":0.009345794392523364,"on":0.009345794392523364,"any":0.009345794392523364,"number":0.009345794392523364,"forms":0.009345794392523364,"page":0.009345794392523364,"one":0.009345794392523364,"each":0.009345794392523364,"row":0.009345794392523364,"you'd":0.009345794392523364,"usually":0.009345794392523364,"no":0.009345794392523364,"updates":0.009345794392523364,"has":0.009345794392523364,"invalidateall":0.009345794392523364,"applyaction":0.009345794392523364,"set":0.009345794392523364,"to":0.009345794392523364,"false":0.009345794392523364,"but":0.009345794392523364,"changed":0.009345794392523364,"options":0.009345794392523364,"finally":0.009345794392523364,"an":0.009345794392523364,"input":0.009345794392523364,"full":0.009345794392523364,"check":0.009345794392523364,"available":0.009345794392523364,"sveltelab":0.009345794392523364},"249":{"superforms":0.01282051282051282,"is":0.01282051282051282,"quite":0.01282051282051282,"forgiving":0.01282051282051282,"with":0.01282051282051282,"missing":0.01282051282051282,"fields":0.01282051282051282,"in":0.01282051282051282,"the":0.01282051282051282,"posted":0.01282051282051282,"data":0.01282051282051282,"assumption":0.01282051282051282,"that":0.01282051282051282,"if":0.01282051282051282,"you":0.01282051282051282,"add":0.01282051282051282,"a":0.01282051282051282,"field":0.01282051282051282,"to":0.01282051282051282,"schema":0.01282051282051282,"it":0.01282051282051282,"will":0.01282051282051282,"sooner":0.01282051282051282,"or":0.01282051282051282,"later":0.01282051282051282,"be":0.01282051282051282,"added":0.01282051282051282,"form":0.01282051282051282,"so":0.01282051282051282,"default":0.01282051282051282,"value":0.01282051282051282,"applied":0.01282051282051282,"all":0.01282051282051282,"but":0.01282051282051282,"may":0.01282051282051282,"want":0.01282051282051282,"more":0.01282051282051282,"strict":0.01282051282051282,"and":0.01282051282051282,"assert":0.01282051282051282,"input":0.01282051282051282,"must":0.01282051282051282,"exist":0.01282051282051282,"otherwise":0.01282051282051282,"something":0.01282051282051282,"wrong":0.01282051282051282,"for":0.01282051282051282,"can":0.01282051282051282,"use":0.01282051282051282,"mode":0.01282051282051282,"when":0.01282051282051282,"calling":0.01282051282051282,"supervalidate":0.01282051282051282,"now":0.01282051282051282,"following":0.01282051282051282,"true":0.01282051282051282,"any":0.01282051282051282,"required":0.01282051282051282,"reported":0.01282051282051282,"as":0.01282051282051282,"an":0.01282051282051282,"error":0.01282051282051282,"errors":0.01282051282051282,"displayed":0.01282051282051282,"changed":0.01282051282051282,"option":0.01282051282051282,"checkboxes":0.01282051282051282,"aren't":0.01282051282051282,"unless":0.01282051282051282,"checked":0.01282051282051282,"they":0.01282051282051282,"fail":0.01282051282051282,"validation":0.01282051282051282,"empty":0.01282051282051282,"hidden":0.01282051282051282,"checkbox":0.01282051282051282,"signifying":0.01282051282051282,"false":0.01282051282051282},"250":{"some":0.041666666666666664,"validation":0.041666666666666664,"libraries":0.041666666666666664,"have":0.041666666666666664,"a":0.041666666666666664,"catch-all":0.041666666666666664,"feature":0.041666666666666664,"allowing":0.041666666666666664,"extra":0.041666666666666664,"fields":0.041666666666666664,"to":0.041666666666666664,"be":0.041666666666666664,"posted":0.041666666666666664,"and":0.041666666666666664,"validated":0.041666666666666664,"here's":0.041666666666666664,"an":0.041666666666666664,"example":0.041666666666666664,"of":0.041666666666666664,"how":0.041666666666666664,"use":0.041666666666666664,"it":0.041666666666666664,"with":0.041666666666666664,"zod":0.041666666666666664},"251":{"when":0.034482758620689655,"a":0.034482758620689655,"form":0.034482758620689655,"is":0.034482758620689655,"submitted":0.034482758620689655,"it's":0.034482758620689655,"important":0.034482758620689655,"for":0.034482758620689655,"the":0.034482758620689655,"ux":0.034482758620689655,"to":0.034482758620689655,"show":0.034482758620689655,"that":0.034482758620689655,"things":0.034482758620689655,"are":0.034482758620689655,"happening":0.034482758620689655,"on":0.034482758620689655,"server":0.034482758620689655,"superforms":0.034482758620689655,"provides":0.034482758620689655,"you":0.034482758620689655,"with":0.034482758620689655,"loading":0.034482758620689655,"timers":0.034482758620689655,"and":0.034482758620689655,"following":0.034482758620689655,"options":0.034482758620689655,"handling":0.034482758620689655,"this":0.034482758620689655},"252":{"the":0.023809523809523808,"clearonsubmit":0.023809523809523808,"option":0.023809523809523808,"decides":0.023809523809523808,"what":0.023809523809523808,"should":0.023809523809523808,"happen":0.023809523809523808,"to":0.023809523809523808,"form":0.023809523809523808,"when":0.023809523809523808,"submitting":0.023809523809523808,"it":0.023809523809523808,"can":0.023809523809523808,"clear":0.023809523809523808,"status":0.023809523809523808,"message":0.023809523809523808,"all":0.023809523809523808,"errors":0.023809523809523808,"both":0.023809523809523808,"or":0.023809523809523808,"none":0.023809523809523808,"default":0.023809523809523808,"is":0.023809523809523808,"if":0.023809523809523808,"you":0.023809523809523808,"don't":0.023809523809523808,"want":0.023809523809523808,"any":0.023809523809523808,"jumping":0.023809523809523808,"content":0.023809523809523808,"which":0.023809523809523808,"could":0.023809523809523808,"occur":0.023809523809523808,"and":0.023809523809523808,"messages":0.023809523809523808,"are":0.023809523809523808,"removed":0.023809523809523808,"from":0.023809523809523808,"dom":0.023809523809523808,"setting":0.023809523809523808,"be":0.023809523809523808,"useful":0.023809523809523808},"253":{"this":0.017543859649122806,"one":0.017543859649122806,"handles":0.017543859649122806,"the":0.017543859649122806,"occurence":0.017543859649122806,"of":0.017543859649122806,"multiple":0.017543859649122806,"form":0.017543859649122806,"submissions":0.017543859649122806,"before":0.017543859649122806,"a":0.017543859649122806,"result":0.017543859649122806,"has":0.017543859649122806,"been":0.017543859649122806,"returned":0.017543859649122806,"when":0.017543859649122806,"set":0.017543859649122806,"to":0.017543859649122806,"default":0.017543859649122806,"prevent":0.017543859649122806,"cannot":0.017543859649122806,"be":0.017543859649122806,"submitted":0.017543859649122806,"again":0.017543859649122806,"until":0.017543859649122806,"is":0.017543859649122806,"or":0.017543859649122806,"timeout":0.017543859649122806,"state":0.017543859649122806,"reached":0.017543859649122806,"see":0.017543859649122806,"section":0.017543859649122806,"about":0.017543859649122806,"loading":0.017543859649122806,"timers":0.017543859649122806,"concepts":0.017543859649122806,"abort":0.017543859649122806,"next":0.017543859649122806,"sensible":0.017543859649122806,"approach":0.017543859649122806,"which":0.017543859649122806,"will":0.017543859649122806,"cancel":0.017543859649122806,"previous":0.017543859649122806,"request":0.017543859649122806,"submitting":0.017543859649122806,"finally":0.017543859649122806,"allow":0.017543859649122806,"pass":0.017543859649122806,"through":0.017543859649122806,"any":0.017543859649122806,"number":0.017543859649122806,"frenetic":0.017543859649122806,"clicks":0.017543859649122806,"on":0.017543859649122806,"submit":0.017543859649122806,"button":0.017543859649122806},"254":{"it's":0.03125,"important":0.03125,"that":0.03125,"users":0.03125,"understand":0.03125,"things":0.03125,"are":0.03125,"happening":0.03125,"when":0.03125,"they":0.03125,"submit":0.03125,"a":0.03125,"form":0.03125,"loading":0.03125,"timers":0.03125,"can":0.03125,"be":0.03125,"used":0.03125,"to":0.03125,"provide":0.03125,"feedback":0.03125,"there":0.03125,"is":0.03125,"server":0.03125,"response":0.03125,"delay":0.03125,"for":0.03125,"example":0.03125,"by":0.03125,"displaying":0.03125,"spinner":0.03125,"icon":0.03125},"255":{"delayms":0.03225806451612903,"should":0.03225806451612903,"be":0.03225806451612903,"positive":0.03225806451612903,"and":0.03225806451612903,"always":0.03225806451612903,"smaller":0.03225806451612903,"than":0.03225806451612903,"or":0.03225806451612903,"equal":0.03225806451612903,"to":0.03225806451612903,"timeoutms":0.03225806451612903,"otherwise":0.03225806451612903,"the":0.03225806451612903,"timer":0.03225806451612903,"behavior":0.03225806451612903,"will":0.03225806451612903,"undefined":0.03225806451612903,"of":0.03225806451612903,"course":0.03225806451612903,"superforms":0.03225806451612903,"use":0.03225806451612903,"enhance":0.03225806451612903,"must":0.03225806451612903,"added":0.03225806451612903,"form":0.03225806451612903,"element":0.03225806451612903,"since":0.03225806451612903,"this":0.03225806451612903,"is":0.03225806451612903,"client-side":0.03225806451612903},"256":{"after":0.025,"a":0.025,"certain":0.025,"time":0.025,"when":0.025,"the":0.025,"form":0.025,"is":0.025,"submitted":0.025,"determined":0.025,"by":0.025,"delayms":0.025,"and":0.025,"timeoutms":0.025,"timers":0.025,"changes":0.025,"state":0.025,"states":0.025,"are":0.025,"these":0.025,"affect":0.025,"readable":0.025,"stores":0.025,"submitting":0.025,"delayed":0.025,"timeout":0.025,"returned":0.025,"from":0.025,"superform":0.025,"they":0.025,"not":0.025,"mutually":0.025,"exclusive":0.025,"so":0.025,"won't":0.025,"change":0.025,"to":0.025,"false":0.025,"becomes":0.025,"true":0.025},"257":{"3":0.02,"a":0.02,"perfect":0.02,"use":0.02,"for":0.02,"these":0.02,"timers":0.02,"is":0.02,"to":0.02,"show":0.02,"loading":0.02,"indicator":0.02,"while":0.02,"the":0.02,"form":0.02,"submitting":0.02,"src":0.02,"routes":0.02,"page":0.02,"svelte":0.02,"reason":0.02,"using":0.02,"delayed":0.02,"instead":0.02,"of":0.02,"based":0.02,"on":0.02,"article":0.02,"response":0.02,"times":0.02,"important":0.02,"limits":0.02,"which":0.02,"states":0.02,"that":0.02,"short":0.02,"waiting":0.02,"periods":0.02,"no":0.02,"feedback":0.02,"required":0.02,"except":0.02,"display":0.02,"result":0.02,"therefore":0.02,"used":0.02,"after":0.02,"little":0.02,"not":0.02,"instantly":0.02},"258":{"submit":0.0196078431372549,"the":0.0196078431372549,"following":0.0196078431372549,"form":0.0196078431372549,"and":0.0196078431372549,"play":0.0196078431372549,"around":0.0196078431372549,"with":0.0196078431372549,"different":0.0196078431372549,"settings":0.0196078431372549,"loading":0.0196078431372549,"spinners":0.0196078431372549,"are":0.0196078431372549,"set":0.0196078431372549,"to":0.0196078431372549,"display":0.0196078431372549,"when":0.0196078431372549,"delayed":0.0196078431372549,"timeout":0.0196078431372549,"true":0.0196078431372549,"respectively":0.0196078431372549,"default":0.0196078431372549,"multiplesubmits":0.0196078431372549,"setting":0.0196078431372549,"prevents":0.0196078431372549,"from":0.0196078431372549,"being":0.0196078431372549,"submitted":0.0196078431372549,"multiple":0.0196078431372549,"times":0.0196078431372549,"until":0.0196078431372549,"state":0.0196078431372549,"is":0.0196078431372549,"reached":0.0196078431372549,"click":0.0196078431372549,"see":0.0196078431372549,"effect":0.0196078431372549,"of":0.0196078431372549,"that":0.0196078431372549,"by":0.0196078431372549,"experimenting":0.0196078431372549,"timers":0.0196078431372549,"delay":0.0196078431372549,"between":0.0196078431372549,"them":0.0196078431372549,"it's":0.0196078431372549,"certainly":0.0196078431372549,"possible":0.0196078431372549,"prevent":0.0196078431372549,"feeling":0.0196078431372549,"unresponsiveness":0.0196078431372549},"259":{"when":0.034482758620689655,"the":0.034482758620689655,"form":0.034482758620689655,"data":0.034482758620689655,"is":0.034482758620689655,"modified":0.034482758620689655,"through":0.034482758620689655,"modifying":0.034482758620689655,"and":0.034482758620689655,"in":0.034482758620689655,"turn":0.034482758620689655,"considered":0.034482758620689655,"tainted":0.034482758620689655,"also":0.034482758620689655,"known":0.034482758620689655,"as":0.034482758620689655,"dirty":0.034482758620689655,"other":0.034482758620689655,"libraries":0.034482758620689655,"a":0.034482758620689655,"superforms":0.034482758620689655,"feature":0.034482758620689655,"to":0.034482758620689655,"prevent":0.034482758620689655,"user":0.034482758620689655,"from":0.034482758620689655,"losing":0.034482758620689655,"navigating":0.034482758620689655,"away":0.034482758620689655},"260":{"you":0.013513513513513514,"can":0.013513513513513514,"set":0.013513513513513514,"the":0.013513513513513514,"option":0.013513513513513514,"to":0.013513513513513514,"true":0.013513513513513514,"have":0.013513513513513514,"a":0.013513513513513514,"default":0.013513513513513514,"message":0.013513513513513514,"in":0.013513513513513514,"english":0.013513513513513514,"shown":0.013513513513513514,"when":0.013513513513513514,"navigating":0.013513513513513514,"away":0.013513513513513514,"from":0.013513513513513514,"tainted":0.013513513513513514,"form":0.013513513513513514,"or":0.013513513513513514,"your":0.013513513513513514,"own":0.013513513513513514,"with":0.013513513513513514,"string":0.013513513513513514,"value":0.013513513513513514,"note":0.013513513513513514,"that":0.013513513513513514,"this":0.013513513513513514,"will":0.013513513513513514,"only":0.013513513513513514,"be":0.013513513513513514,"displayed":0.013513513513513514,"page":0.013513513513513514,"within":0.013513513513513514,"same":0.013513513513513514,"site":0.013513513513513514,"closing":0.013513513513513514,"tab":0.013513513513513514,"reloading":0.013513513513513514,"browser":0.013513513513513514,"instead":0.013513513513513514,"alternatively":0.013513513513513514,"taintedmessage":0.013513513513513514,"promise":0.013513513513513514,"boolean":0.013513513513513514,"function":0.013513513513513514,"should":0.013513513513513514,"resolve":0.013513513513513514,"if":0.013513513513513514,"is":0.013513513513513514,"ok":0.013513513513513514,"enables":0.013513513513513514,"provide":0.013513513513513514,"dialog":0.013513513513513514,"code":0.013513513513513514,"demonstrates":0.013513513513513514,"custom":0.013513513513513514,"skeleton":0.013513513513513514,"modal":0.013513513513513514,"try":0.013513513513513514,"it":0.013513513513513514,"out":0.013513513513513514,"below":0.013513513513513514,"modify":0.013513513513513514,"then":0.013513513513513514,"click":0.013513513513513514,"back":0.013513513513513514,"button":0.013513513513513514,"pop":0.013513513513513514,"up":0.013513513513513514,"preventing":0.013513513513513514,"losing":0.013513513513513514,"changes":0.013513513513513514},"261":{"when":0.029411764705882353,"a":0.029411764705882353,"successful":0.029411764705882353,"validation":0.029411764705882353,"result":0.029411764705882353,"is":0.029411764705882353,"returned":0.029411764705882353,"for":0.029411764705882353,"the":0.029411764705882353,"form":0.029411764705882353,"with":0.029411764705882353,"valid":0.029411764705882353,"status":0.029411764705882353,"set":0.029411764705882353,"to":0.029411764705882353,"true":0.029411764705882353,"automatically":0.029411764705882353,"marked":0.029411764705882353,"as":0.029411764705882353,"untainted":0.029411764705882353,"try":0.029411764705882353,"that":0.029411764705882353,"by":0.029411764705882353,"posting":0.029411764705882353,"values":0.029411764705882353,"tainted":0.029411764705882353,"message":0.029411764705882353,"should":0.029411764705882353,"not":0.029411764705882353,"appear":0.029411764705882353,"browsing":0.029411764705882353,"away":0.029411764705882353,"from":0.029411764705882353,"page":0.029411764705882353},"262":{"an":0.0625,"istainted":0.0625,"method":0.0625,"is":0.0625,"available":0.0625,"on":0.0625,"superform":0.0625,"to":0.0625,"check":0.0625,"whether":0.0625,"any":0.0625,"part":0.0625,"of":0.0625,"the":0.0625,"form":0.0625,"tainted":0.0625},"263":{"if":0.0196078431372549,"you":0.0196078431372549,"want":0.0196078431372549,"to":0.0196078431372549,"modify":0.0196078431372549,"the":0.0196078431372549,"form":0.0196078431372549,"store":0.0196078431372549,"without":0.0196078431372549,"tainting":0.0196078431372549,"any":0.0196078431372549,"fields":0.0196078431372549,"can":0.0196078431372549,"update":0.0196078431372549,"it":0.0196078431372549,"with":0.0196078431372549,"an":0.0196078431372549,"extra":0.0196078431372549,"option":0.0196078431372549,"taint":0.0196078431372549,"options":0.0196078431372549,"are":0.0196078431372549,"which":0.0196078431372549,"be":0.0196078431372549,"used":0.0196078431372549,"not":0.0196078431372549,"only":0.0196078431372549,"prevent":0.0196078431372549,"but":0.0196078431372549,"also":0.0196078431372549,"untaint":0.0196078431372549,"modified":0.0196078431372549,"field":0.0196078431372549,"s":0.0196078431372549,"or":0.0196078431372549,"untainting":0.0196078431372549,"whole":0.0196078431372549,"for":0.0196078431372549,"login":0.0196078431372549,"and":0.0196078431372549,"registration":0.0196078431372549,"forms":0.0196078431372549,"password":0.0196078431372549,"managers":0.0196078431372549,"could":0.0196078431372549,"automatically":0.0196078431372549,"when":0.0196078431372549,"inserting":0.0196078431372549,"saved":0.0196078431372549,"usernames":0.0196078431372549,"passwords":0.0196078431372549},"264":{},"265":{"select":0.02040816326530612,"your":0.02040816326530612,"environment":0.02040816326530612,"above":0.02040816326530612,"and":0.02040816326530612,"run":0.02040816326530612,"the":0.02040816326530612,"install":0.02040816326530612,"command":0.02040816326530612,"in":0.02040816326530612,"project":0.02040816326530612,"folder":0.02040816326530612,"if":0.02040816326530612,"you're":0.02040816326530612,"starting":0.02040816326530612,"from":0.02040816326530612,"scratch":0.02040816326530612,"create":0.02040816326530612,"a":0.02040816326530612,"new":0.02040816326530612,"sveltekit":0.02040816326530612,"settings":0.02040816326530612,"pm":0.02040816326530612,"'npm":0.02040816326530612,"i":0.02040816326530612,"-d'":0.02040816326530612,"else":0.02040816326530612,"'pnpm":0.02040816326530612,"'yarn":0.02040816326530612,"add":0.02040816326530612,"--dev'":0.02040816326530612,"''":0.02040816326530612,"'ajv'":0.02040816326530612,"'superstruct'":0.02040816326530612,"'n":0.02040816326530612,"a'":0.02040816326530612,"includes":0.02040816326530612,"lib":0.02040816326530612,"please":0.02040816326530612,"validation":0.02040816326530612,"library":0.02040816326530612,"before":0.02040816326530612,"continuing":0.02040816326530612,"as":0.02040816326530612,"tutorial":0.02040816326530612,"changes":0.02040816326530612,"depending":0.02040816326530612,"on":0.02040816326530612,"that":0.02040816326530612},"266":{"this":0.05,"tutorial":0.05,"will":0.05,"create":0.05,"a":0.05,"superform":0.05,"containing":0.05,"name":0.05,"and":0.05,"an":0.05,"email":0.05,"address":0.05,"ready":0.05,"to":0.05,"be":0.05,"expanded":0.05,"with":0.05,"more":0.05,"form":0.05,"data":0.05},"267":{"the":0.025,"main":0.025,"thing":0.025,"required":0.025,"to":0.025,"create":0.025,"a":0.025,"superform":0.025,"is":0.025,"validation":0.025,"schema":0.025,"representing":0.025,"form":0.025,"data":0.025,"for":0.025,"single":0.025,"if":0.025,"settings":0.025,"lib":0.025,"'arktype'":0.025,"else":0.025,"'joi'":0.025,"'json-schema'":0.025,"'":0.025,"sinclair":0.025,"typebox'":0.025,"'valibot'":0.025,"vinejs":0.025,"vine'":0.025,"'yup'":0.025,"'zod'":0.025,"select":0.025,"library":0.025,"at":0.025,"top":0.025,"of":0.025,"page":0.025,"see":0.025,"example":0.025,"code":0.025},"268":{"the":0.022222222222222223,"schema":0.022222222222222223,"should":0.022222222222222223,"be":0.022222222222222223,"defined":0.022222222222222223,"outside":0.022222222222222223,"load":0.022222222222222223,"function":0.022222222222222223,"in":0.022222222222222223,"this":0.022222222222222223,"case":0.022222222222222223,"on":0.022222222222222223,"top":0.022222222222222223,"level":0.022222222222222223,"of":0.022222222222222223,"module":0.022222222222222223,"is":0.022222222222222223,"very":0.022222222222222223,"important":0.022222222222222223,"to":0.022222222222222223,"make":0.022222222222222223,"caching":0.022222222222222223,"work":0.022222222222222223,"adapter":0.022222222222222223,"memoized":0.022222222222222223,"cached":0.022222222222222223,"with":0.022222222222222223,"its":0.022222222222222223,"arguments":0.022222222222222223,"so":0.022222222222222223,"they":0.022222222222222223,"must":0.022222222222222223,"kept":0.022222222222222223,"memory":0.022222222222222223,"therefore":0.022222222222222223,"define":0.022222222222222223,"options":0.022222222222222223,"and":0.022222222222222223,"eventual":0.022222222222222223,"defaults":0.022222222222222223,"a":0.022222222222222223,"always":0.022222222222222223,"refer":0.022222222222222223,"same":0.022222222222222223,"object":0.022222222222222223},"269":{"to":0.01694915254237288,"initialize":0.01694915254237288,"the":0.01694915254237288,"form":0.01694915254237288,"you":0.01694915254237288,"import":0.01694915254237288,"an":0.01694915254237288,"adapter":0.01694915254237288,"corresponding":0.01694915254237288,"your":0.01694915254237288,"library":0.01694915254237288,"of":0.01694915254237288,"choice":0.01694915254237288,"together":0.01694915254237288,"with":0.01694915254237288,"schema":0.01694915254237288,"and":0.01694915254237288,"pass":0.01694915254237288,"it":0.01694915254237288,"in":0.01694915254237288,"a":0.01694915254237288,"load":0.01694915254237288,"function":0.01694915254237288,"supervalidate":0.01694915254237288,"src":0.01694915254237288,"routes":0.01694915254237288,"page":0.01694915254237288,"server":0.01694915254237288,"ts":0.01694915254237288,"if":0.01694915254237288,"settings":0.01694915254237288,"lib":0.01694915254237288,"'arktype'":0.01694915254237288,"else":0.01694915254237288,"'joi'":0.01694915254237288,"'json-schema'":0.01694915254237288,"'":0.01694915254237288,"sinclair":0.01694915254237288,"typebox'":0.01694915254237288,"'valibot'":0.01694915254237288,"vinejs":0.01694915254237288,"vine'":0.01694915254237288,"'yup'":0.01694915254237288,"'zod'":0.01694915254237288,"select":0.01694915254237288,"validation":0.01694915254237288,"at":0.01694915254237288,"top":0.01694915254237288,"see":0.01694915254237288,"example":0.01694915254237288,"code":0.01694915254237288,"superform":0.01694915254237288,"api":0.01694915254237288,"is":0.01694915254237288,"called":0.01694915254237288,"can":0.01694915254237288,"call":0.01694915254237288,"two":0.01694915254237288,"ways":0.01694915254237288},"270":{"if":0.029411764705882353,"you":0.029411764705882353,"want":0.029411764705882353,"the":0.029411764705882353,"form":0.029411764705882353,"to":0.029411764705882353,"be":0.029411764705882353,"initially":0.029411764705882353,"empty":0.029411764705882353,"just":0.029411764705882353,"pass":0.029411764705882353,"adapter":0.029411764705882353,"as":0.029411764705882353,"in":0.029411764705882353,"example":0.029411764705882353,"above":0.029411764705882353,"and":0.029411764705882353,"will":0.029411764705882353,"filled":0.029411764705882353,"with":0.029411764705882353,"default":0.029411764705882353,"values":0.029411764705882353,"based":0.029411764705882353,"on":0.029411764705882353,"schema":0.029411764705882353,"for":0.029411764705882353,"a":0.029411764705882353,"string":0.029411764705882353,"field":0.029411764705882353,"results":0.029411764705882353,"an":0.029411764705882353,"unless":0.029411764705882353,"have":0.029411764705882353,"set":0.029411764705882353},"271":{"123":0.018518518518518517,"if":0.018518518518518517,"you":0.018518518518518517,"want":0.018518518518518517,"to":0.018518518518518517,"populate":0.018518518518518517,"the":0.018518518518518517,"form":0.018518518518518517,"can":0.018518518518518517,"send":0.018518518518518517,"data":0.018518518518518517,"supervalidate":0.018518518518518517,"as":0.018518518518518517,"first":0.018518518518518517,"parameter":0.018518518518518517,"adapter":0.018518518518518517,"second":0.018518518518518517,"like":0.018518518518518517,"this":0.018518518518518517,"long":0.018518518518518517,"partially":0.018518518518518517,"matches":0.018518518518518517,"schema":0.018518518518518517,"pass":0.018518518518518517,"it":0.018518518518518517,"directly":0.018518518518518517,"is":0.018518518518518517,"useful":0.018518518518518517,"for":0.018518518518518517,"backend":0.018518518518518517,"interfaces":0.018518518518518517,"where":0.018518518518518517,"should":0.018518518518518517,"usually":0.018518518518518517,"be":0.018518518518518517,"populated":0.018518518518518517,"based":0.018518518518518517,"on":0.018518518518518517,"a":0.018518518518518517,"url":0.018518518518518517,"users":0.018518518518518517,"errors":0.018518518518518517,"will":0.018518518518518517,"automatically":0.018518518518518517,"displayed":0.018518518518518517,"when":0.018518518518518517,"but":0.018518518518518517,"not":0.018518518518518517,"empty":0.018518518518518517,"modify":0.018518518518518517,"behavior":0.018518518518518517,"with":0.018518518518518517,"an":0.018518518518518517,"option":0.018518518518518517},"272":{"unless":0.020833333333333332,"you":0.020833333333333332,"call":0.020833333333333332,"the":0.020833333333333332,"sveltekit":0.020833333333333332,"redirect":0.020833333333333332,"or":0.020833333333333332,"error":0.020833333333333332,"functions":0.020833333333333332,"should":0.020833333333333332,"always":0.020833333333333332,"return":0.020833333333333332,"form":0.020833333333333332,"object":0.020833333333333332,"to":0.020833333333333332,"client":0.020833333333333332,"either":0.020833333333333332,"directly":0.020833333333333332,"through":0.020833333333333332,"a":0.020833333333333332,"helper":0.020833333333333332,"function":0.020833333333333332,"name":0.020833333333333332,"of":0.020833333333333332,"variable":0.020833333333333332,"doesn't":0.020833333333333332,"matter":0.020833333333333332,"can":0.020833333333333332,"it":0.020833333333333332,"loginform":0.020833333333333332,"anything":0.020833333333333332,"else":0.020833333333333332,"but":0.020833333333333332,"needs":0.020833333333333332,"be":0.020833333333333332,"returned":0.020833333333333332,"like":0.020833333333333332,"this":0.020833333333333332,"in":0.020833333333333332,"all":0.020833333333333332,"code":0.020833333333333332,"paths":0.020833333333333332,"that":0.020833333333333332,"returns":0.020833333333333332,"both":0.020833333333333332,"load":0.020833333333333332,"and":0.020833333333333332,"actions":0.020833333333333332},"273":{"the":0.014492753623188406,"supervalidate":0.014492753623188406,"function":0.014492753623188406,"returns":0.014492753623188406,"data":0.014492753623188406,"required":0.014492753623188406,"to":0.014492753623188406,"instantiate":0.014492753623188406,"a":0.014492753623188406,"form":0.014492753623188406,"on":0.014492753623188406,"client":0.014492753623188406,"now":0.014492753623188406,"available":0.014492753623188406,"in":0.014492753623188406,"page":0.014492753623188406,"svelte":0.014492753623188406,"as":0.014492753623188406,"we":0.014492753623188406,"did":0.014492753623188406,"return":0.014492753623188406,"there":0.014492753623188406,"we'll":0.014492753623188406,"use":0.014492753623188406,"part":0.014492753623188406,"of":0.014492753623188406,"api":0.014492753623188406,"src":0.014492753623188406,"routes":0.014492753623188406,"superform":0.014492753623188406,"is":0.014492753623188406,"used":0.014492753623188406,"create":0.014492753623188406,"and":0.014492753623188406,"bind":0.014492753623188406,"value":0.014492753623188406,"two-way":0.014492753623188406,"binding":0.014492753623188406,"between":0.014492753623188406,"input":0.014492753623188406,"fields":0.014492753623188406,"two":0.014492753623188406,"notes":0.014492753623188406,"should":0.014492753623188406,"be":0.014492753623188406,"only":0.014492753623188406,"one":0.014492753623188406,"instance":0.014492753623188406,"per":0.014492753623188406,"-":0.014492753623188406,"its":0.014492753623188406,"methods":0.014492753623188406,"cannot":0.014492753623188406,"multiple":0.014492753623188406,"forms":0.014492753623188406,"don't":0.014492753623188406,"forget":0.014492753623188406,"name":0.014492753623188406,"attribute":0.014492753623188406,"unless":0.014492753623188406,"you":0.014492753623188406,"are":0.014492753623188406,"using":0.014492753623188406,"nested":0.014492753623188406,"they":0.014492753623188406,"this":0.014492753623188406,"what":0.014492753623188406,"look":0.014492753623188406,"like":0.014492753623188406},"274":{"we":0.017857142857142856,"can":0.017857142857142856,"see":0.017857142857142856,"that":0.017857142857142856,"the":0.017857142857142856,"form":0.017857142857142856,"has":0.017857142857142856,"been":0.017857142857142856,"populated":0.017857142857142856,"with":0.017857142857142856,"default":0.017857142857142856,"values":0.017857142857142856,"but":0.017857142857142856,"let's":0.017857142857142856,"add":0.017857142857142856,"debugging":0.017857142857142856,"component":0.017857142857142856,"superdebug":0.017857142857142856,"to":0.017857142857142856,"look":0.017857142857142856,"behind":0.017857142857142856,"scenes":0.017857142857142856,"src":0.017857142857142856,"routes":0.017857142857142856,"page":0.017857142857142856,"svelte":0.017857142857142856,"this":0.017857142857142856,"should":0.017857142857142856,"be":0.017857142857142856,"displayed":0.017857142857142856,"when":0.017857142857142856,"editing":0.017857142857142856,"fields":0.017857142857142856,"try":0.017857142857142856,"in":0.017857142857142856,"above":0.017857142857142856,"data":0.017857142857142856,"is":0.017857142857142856,"automatically":0.017857142857142856,"updated":0.017857142857142856,"also":0.017857142857142856,"displays":0.017857142857142856,"a":0.017857142857142856,"copy":0.017857142857142856,"button":0.017857142857142856,"and":0.017857142857142856,"current":0.017857142857142856,"status":0.017857142857142856,"right":0.017857142857142856,"corner":0.017857142857142856,"there":0.017857142857142856,"are":0.017857142857142856,"many":0.017857142857142856,"configuration":0.017857142857142856,"options":0.017857142857142856,"available":0.017857142857142856},"275":{"in":0.007352941176470588,"the":0.007352941176470588,"form":0.007352941176470588,"actions":0.007352941176470588,"defined":0.007352941176470588,"page":0.007352941176470588,"server":0.007352941176470588,"ts":0.007352941176470588,"we'll":0.007352941176470588,"use":0.007352941176470588,"supervalidate":0.007352941176470588,"function":0.007352941176470588,"again":0.007352941176470588,"but":0.007352941176470588,"now":0.007352941176470588,"it":0.007352941176470588,"should":0.007352941176470588,"handle":0.007352941176470588,"formdata":0.007352941176470588,"this":0.007352941176470588,"can":0.007352941176470588,"be":0.007352941176470588,"done":0.007352941176470588,"several":0.007352941176470588,"ways":0.007352941176470588,"request":0.007352941176470588,"parameter":0.007352941176470588,"which":0.007352941176470588,"contains":0.007352941176470588,"event":0.007352941176470588,"object":0.007352941176470588,"directly":0.007352941176470588,"if":0.007352941176470588,"you":0.007352941176470588,"need":0.007352941176470588,"to":0.007352941176470588,"access":0.007352941176470588,"before":0.007352941176470588,"calling":0.007352941176470588,"most":0.007352941176470588,"common":0.007352941176470588,"is":0.007352941176470588,"src":0.007352941176470588,"routes":0.007352941176470588,"settings":0.007352941176470588,"lib":0.007352941176470588,"'json-schema'":0.007352941176470588,"else":0.007352941176470588,"we":0.007352941176470588,"post":0.007352941176470588,"back":0.007352941176470588,"submit":0.007352941176470588,"and":0.007352941176470588,"see":0.007352941176470588,"what's":0.007352941176470588,"happening":0.007352941176470588,"on":0.007352941176470588,"validation":0.007352941176470588,"returned":0.007352941176470588,"from":0.007352941176470588,"containing":0.007352941176470588,"data":0.007352941176470588,"needed":0.007352941176470588,"update":0.007352941176470588,"propertypurposeidid":0.007352941176470588,"for":0.007352941176470588,"schema":0.007352941176470588,"multiple":0.007352941176470588,"forms":0.007352941176470588,"same":0.007352941176470588,"validtells":0.007352941176470588,"whether":0.007352941176470588,"succeeded":0.007352941176470588,"or":0.007352941176470588,"not":0.007352941176470588,"used":0.007352941176470588,"events":0.007352941176470588,"postedtells":0.007352941176470588,"was":0.007352941176470588,"posted":0.007352941176470588,"a":0.007352941176470588,"action":0.007352941176470588,"load":0.007352941176470588,"datathe":0.007352941176470588,"client":0.007352941176470588,"using":0.007352941176470588,"fail":0.007352941176470588,"valid":0.007352941176470588,"errorsan":0.007352941176470588,"with":0.007352941176470588,"all":0.007352941176470588,"errors":0.007352941176470588,"structure":0.007352941176470588,"reflecting":0.007352941176470588,"message":0.007352941176470588,"optional":0.007352941176470588,"set":0.007352941176470588,"as":0.007352941176470588,"status":0.007352941176470588,"there":0.007352941176470588,"are":0.007352941176470588,"some":0.007352941176470588,"other":0.007352941176470588,"properties":0.007352941176470588,"well":0.007352941176470588,"only":0.007352941176470588,"being":0.007352941176470588,"sent":0.007352941176470588,"propertypurposeconstraintsan":0.007352941176470588},"276":{"now":0.01020408163265306,"we":0.01020408163265306,"know":0.01020408163265306,"that":0.01020408163265306,"validation":0.01020408163265306,"has":0.01020408163265306,"failed":0.01020408163265306,"and":0.01020408163265306,"there":0.01020408163265306,"are":0.01020408163265306,"errors":0.01020408163265306,"being":0.01020408163265306,"sent":0.01020408163265306,"to":0.01020408163265306,"the":0.01020408163265306,"client":0.01020408163265306,"display":0.01020408163265306,"these":0.01020408163265306,"by":0.01020408163265306,"adding":0.01020408163265306,"properties":0.01020408163265306,"destructuring":0.01020408163265306,"assignment":0.01020408163265306,"of":0.01020408163265306,"superform":0.01020408163265306,"src":0.01020408163265306,"routes":0.01020408163265306,"page":0.01020408163265306,"svelte":0.01020408163265306,"as":0.01020408163265306,"you":0.01020408163265306,"see":0.01020408163265306,"including":0.01020408163265306,"can":0.01020408163265306,"where":0.01020408163265306,"it's":0.01020408163265306,"appropriate":0.01020408163265306,"through":0.01020408163265306,"constraints":0.01020408163265306,"provided":0.01020408163265306,"load":0.01020408163265306,"function":0.01020408163265306,"get":0.01020408163265306,"browser":0.01020408163265306,"even":0.01020408163265306,"without":0.01020408163265306,"javascript":0.01020408163265306,"enabled":0.01020408163265306,"aria-invalid":0.01020408163265306,"attribute":0.01020408163265306,"is":0.01020408163265306,"used":0.01020408163265306,"automatically":0.01020408163265306,"focus":0.01020408163265306,"on":0.01020408163265306,"first":0.01020408163265306,"error":0.01020408163265306,"field":0.01020408163265306,"finally":0.01020408163265306,"added":0.01020408163265306,"a":0.01020408163265306,"status":0.01020408163265306,"message":0.01020408163265306,"above":0.01020408163265306,"form":0.01020408163265306,"show":0.01020408163265306,"if":0.01020408163265306,"it":0.01020408163265306,"was":0.01020408163265306,"posted":0.01020408163265306,"successfully":0.01020408163265306,"have":0.01020408163265306,"fully":0.01020408163265306,"working":0.01020408163265306,"with":0.01020408163265306,"convenient":0.01020408163265306,"handling":0.01020408163265306,"data":0.01020408163265306,"both":0.01020408163265306,"server":0.01020408163265306,"no":0.01020408163265306,"hidden":0.01020408163265306,"dom":0.01020408163265306,"manipulations":0.01020408163265306,"or":0.01020408163265306,"other":0.01020408163265306,"secrets":0.01020408163265306,"just":0.01020408163265306,"html":0.01020408163265306,"attributes":0.01020408163265306,"stores":0.01020408163265306,"so":0.01020408163265306,"works":0.01020408163265306,"server-side":0.01020408163265306,"rendering":0.01020408163265306,"required":0.01020408163265306,"for":0.01020408163265306,"basics":0.01020408163265306},"277":{"as":0.011235955056179775,"a":0.011235955056179775,"last":0.011235955056179775,"step":0.011235955056179775,"let's":0.011235955056179775,"add":0.011235955056179775,"progressive":0.011235955056179775,"enhancement":0.011235955056179775,"so":0.011235955056179775,"users":0.011235955056179775,"with":0.011235955056179775,"javascript":0.011235955056179775,"enabled":0.011235955056179775,"will":0.011235955056179775,"have":0.011235955056179775,"nicer":0.011235955056179775,"experience":0.011235955056179775,"it's":0.011235955056179775,"also":0.011235955056179775,"required":0.011235955056179775,"to":0.011235955056179775,"enable":0.011235955056179775,"client-side":0.011235955056179775,"validation":0.011235955056179775,"and":0.011235955056179775,"events":0.011235955056179775,"of":0.011235955056179775,"course":0.011235955056179775,"avoid":0.011235955056179775,"reloading":0.011235955056179775,"the":0.011235955056179775,"page":0.011235955056179775,"when":0.011235955056179775,"form":0.011235955056179775,"is":0.011235955056179775,"posted":0.011235955056179775,"this":0.011235955056179775,"simply":0.011235955056179775,"done":0.011235955056179775,"enhance":0.011235955056179775,"returned":0.011235955056179775,"from":0.011235955056179775,"superform":0.011235955056179775,"now":0.011235955056179775,"won't":0.011235955056179775,"fully":0.011235955056179775,"reload":0.011235955056179775,"submitting":0.011235955056179775,"we":0.011235955056179775,"unlock":0.011235955056179775,"lots":0.011235955056179775,"features":0.011235955056179775,"like":0.011235955056179775,"timers":0.011235955056179775,"for":0.011235955056179775,"loading":0.011235955056179775,"spinners":0.011235955056179775,"auto":0.011235955056179775,"error":0.011235955056179775,"focus":0.011235955056179775,"tainted":0.011235955056179775,"fields":0.011235955056179775,"etc":0.011235955056179775,"which":0.011235955056179775,"you":0.011235955056179775,"can":0.011235955056179775,"read":0.011235955056179775,"about":0.011235955056179775,"under":0.011235955056179775,"concepts":0.011235955056179775,"section":0.011235955056179775,"in":0.011235955056179775,"navigation":0.011235955056179775,"use":0.011235955056179775,"action":0.011235955056179775,"takes":0.011235955056179775,"no":0.011235955056179775,"arguments":0.011235955056179775,"instead":0.011235955056179775,"are":0.011235955056179775,"used":0.011235955056179775,"hook":0.011235955056179775,"into":0.011235955056179775,"sveltekit":0.011235955056179775,"parameters":0.011235955056179775,"more":0.011235955056179775,"check":0.011235955056179775,"out":0.011235955056179775,"details":0.011235955056179775},"278":{"150":0.015384615384615385,"this":0.015384615384615385,"concludes":0.015384615384615385,"the":0.015384615384615385,"tutorial":0.015384615384615385,"to":0.015384615384615385,"learn":0.015384615384615385,"details":0.015384615384615385,"keep":0.015384615384615385,"reading":0.015384615384615385,"under":0.015384615384615385,"concepts":0.015384615384615385,"section":0.015384615384615385,"in":0.015384615384615385,"navigation":0.015384615384615385,"status":0.015384615384615385,"messages":0.015384615384615385,"are":0.015384615384615385,"very":0.015384615384615385,"common":0.015384615384615385,"add":0.015384615384615385,"for":0.015384615384615385,"example":0.015384615384615385,"also":0.015384615384615385,"if":0.015384615384615385,"you":0.015384615384615385,"plan":0.015384615384615385,"use":0.015384615384615385,"nested":0.015384615384615385,"data":0.015384615384615385,"objects":0.015384615384615385,"and":0.015384615384615385,"arrays":0.015384615384615385,"within":0.015384615384615385,"schema":0.015384615384615385,"read":0.015384615384615385,"page":0.015384615384615385,"carefully":0.015384615384615385,"same":0.015384615384615385,"goes":0.015384615384615385,"having":0.015384615384615385,"multiple":0.015384615384615385,"forms":0.015384615384615385,"on":0.015384615384615385,"when":0.015384615384615385,"you're":0.015384615384615385,"ready":0.015384615384615385,"something":0.015384615384615385,"more":0.015384615384615385,"advanced":0.015384615384615385,"check":0.015384615384615385,"out":0.015384615384615385,"crud":0.015384615384615385,"which":0.015384615384615385,"shows":0.015384615384615385,"how":0.015384615384615385,"make":0.015384615384615385,"a":0.015384615384615385,"fully":0.015384615384615385,"working":0.015384615384615385,"backend":0.015384615384615385,"about":0.015384615384615385,"lines":0.015384615384615385,"of":0.015384615384615385,"code":0.015384615384615385}},"code":{"1":{"3":0.029411764705882353,"type":0.029411764705882353,"t":0.029411764705882353,"name":0.029411764705882353,"string":0.029411764705882353,"undefined":0.029411764705882353,"email":0.029411764705882353,"nested":0.029411764705882353,"m":0.029411764705882353,"any":0.029411764705882353,"import":0.029411764705882353,"infer":0.029411764705882353,"inferin":0.029411764705882353,"from":0.029411764705882353,"'sveltekit-superforms'":0.029411764705882353,"zod":0.029411764705882353,"zodclient":0.029411764705882353,"'sveltekit-superforms":0.029411764705882353,"adapters'":0.029411764705882353,"z":0.029411764705882353,"'zod'":0.029411764705882353,"const":0.029411764705882353,"schema":0.029411764705882353,"object":0.029411764705882353,"min":0.029411764705882353,"is":0.029411764705882353,"now":0.029411764705882353,"validationadapter":0.029411764705882353,"typeof":0.029411764705882353,"which":0.029411764705882353,"the":0.029411764705882353,"same":0.029411764705882353,"as":0.029411764705882353,"adapter":0.029411764705882353},"2":{"supervalidate":0.05,"t":0.05,"m":0.05,"any":0.05,"in":0.05,"adapter":0.05,"validationadapter":0.05,"options":0.05,"supervalidateoptions":0.05,"promise":0.05,"supervalidated":0.05,"data":0.05,"requestevent":0.05,"request":0.05,"formdata":0.05,"url":0.05,"urlsearchparams":0.05,"partial":0.05,"null":0.05,"undefined":0.05},"3":{"supervalidateoptions":0.017241379310344827,"errors":0.017241379310344827,"boolean":0.017241379310344827,"add":0.017241379310344827,"or":0.017241379310344827,"remove":0.017241379310344827,"from":0.017241379310344827,"output":0.017241379310344827,"valid":0.017241379310344827,"status":0.017241379310344827,"is":0.017241379310344827,"always":0.017241379310344827,"preserved":0.017241379310344827,"id":0.017241379310344827,"string":0.017241379310344827,"form":0.017241379310344827,"for":0.017241379310344827,"multiple":0.017241379310344827,"forms":0.017241379310344827,"support":0.017241379310344827,"set":0.017241379310344827,"automatically":0.017241379310344827,"by":0.017241379310344827,"default":0.017241379310344827,"preprocessed":0.017241379310344827,"keyof":0.017241379310344827,"t":0.017241379310344827,"bypass":0.017241379310344827,"supervalidate":0.017241379310344827,"data":0.017241379310344827,"coercion":0.017241379310344827,"posted":0.017241379310344827,"fields":0.017241379310344827,"in":0.017241379310344827,"this":0.017241379310344827,"array":0.017241379310344827,"defaults":0.017241379310344827,"override":0.017241379310344827,"values":0.017241379310344827,"the":0.017241379310344827,"schema":0.017241379310344827,"jsonschema":0.017241379310344827,"json":0.017241379310344827,"adapter":0.017241379310344827,"strict":0.017241379310344827,"if":0.017241379310344827,"true":0.017241379310344827,"validate":0.017241379310344827,"exactly":0.017241379310344827,"no":0.017241379310344827,"added":0.017241379310344827,"allowfiles":0.017241379310344827,"false":0.017241379310344827,"all":0.017241379310344827,"file":0.017241379310344827,"objects":0.017241379310344827,"to":0.017241379310344827,"undefined":0.017241379310344827},"4":{"supervalidated":0.05263157894736842,"t":0.05263157894736842,"m":0.05263157894736842,"any":0.05263157894736842,"in":0.05263157894736842,"id":0.05263157894736842,"string":0.05263157894736842,"valid":0.05263157894736842,"boolean":0.05263157894736842,"posted":0.05263157894736842,"data":0.05263157894736842,"errors":0.05263157894736842,"nested":0.05263157894736842,"undefined":0.05263157894736842,"constraints":0.05263157894736842,"inputconstraints":0.05263157894736842,"message":0.05263157894736842,"false":0.05263157894736842,"options":0.05263157894736842},"5":{"400":0.05555555555555555,"seterror":0.05555555555555555,"form":0.05555555555555555,"supervalidated":0.05555555555555555,"t":0.05555555555555555,"m":0.05555555555555555,"in":0.05555555555555555,"field":0.05555555555555555,"''":0.05555555555555555,"formpathleaves":0.05555555555555555,"error":0.05555555555555555,"string":0.05555555555555555,"options":0.05555555555555555,"overwrite":0.05555555555555555,"false":0.05555555555555555,"status":0.05555555555555555,"errorstatus":0.05555555555555555,"actionfailure":0.05555555555555555},"6":{"400":0.0196078431372549,"403":0.0196078431372549,"599":0.0196078431372549,"message":0.0196078431372549,"form":0.0196078431372549,"supervalidated":0.0196078431372549,"t":0.0196078431372549,"m":0.0196078431372549,"in":0.0196078431372549,"options":0.0196078431372549,"status":0.0196078431372549,"numericrange":0.0196078431372549,"actionfailure":0.0196078431372549,"import":0.0196078431372549,"supervalidate":0.0196078431372549,"from":0.0196078431372549,"'sveltekit-superforms":0.0196078431372549,"server'":0.0196078431372549,"export":0.0196078431372549,"const":0.0196078431372549,"actions":0.0196078431372549,"default":0.0196078431372549,"async":0.0196078431372549,"event":0.0196078431372549,"await":0.0196078431372549,"typeof":0.0196078431372549,"schema":0.0196078431372549,"string":0.0196078431372549,"if":0.0196078431372549,"valid":0.0196078431372549,"will":0.0196078431372549,"return":0.0196078431372549,"fail":0.0196078431372549,"since":0.0196078431372549,"isn't":0.0196078431372549,"'invalid":0.0196078431372549,"form'":0.0196078431372549,"data":0.0196078431372549,"email":0.0196078431372549,"includes":0.0196078431372549,"'spam'":0.0196078431372549,"and":0.0196078431372549,"set":0.0196078431372549,"false":0.0196078431372549,"is":0.0196078431372549,"'no":0.0196078431372549,"spam":0.0196078431372549,"please'":0.0196078431372549,"returns":0.0196078431372549,"'valid":0.0196078431372549,"'":0.0196078431372549},"7":{"1":0.04,"2":0.04,"import":0.04,"defaultvalues":0.04,"from":0.04,"'sveltekit-superforms'":0.04,"zod":0.04,"'sveltekit-superforms":0.04,"adapters'":0.04,"z":0.04,"'zod'":0.04,"const":0.04,"schema":0.04,"object":0.04,"name":0.04,"string":0.04,"min":0.04,"tags":0.04,"array":0.04,"default":0.04,"'a'":0.04,"'b'":0.04,"returns":0.04,"''":0.04,"defaults":0.04},"8":{"200":0.041666666666666664,"303":0.041666666666666664,"400":0.041666666666666664,"500":0.041666666666666664,"import":0.041666666666666664,"actionresult":0.041666666666666664,"from":0.041666666666666664,"'sveltekit-superforms'":0.041666666666666664,"'success'":0.041666666666666664,"form":0.041666666666666664,"'failure'":0.041666666666666664,"'redirect'":0.041666666666666664,"'":0.041666666666666664,"'error'":0.041666666666666664,"'error":0.041666666666666664,"message'":0.041666666666666664,"message":0.041666666666666664,"type":0.041666666666666664,"text":0.041666666666666664,"'posted":0.041666666666666664,"successfully":0.041666666666666664,"cookieoptions":0.041666666666666664,"samesite":0.041666666666666664,"'lax'":0.041666666666666664},"9":{"5":0.029411764705882353,"import":0.029411764705882353,"actionresult":0.029411764705882353,"supervalidate":0.029411764705882353,"from":0.029411764705882353,"'":0.029411764705882353,"lib":0.029411764705882353,"server'":0.029411764705882353,"zod":0.029411764705882353,"'sveltekit-superforms":0.029411764705882353,"adapters'":0.029411764705882353,"z":0.029411764705882353,"'zod'":0.029411764705882353,"const":0.029411764705882353,"loginschema":0.029411764705882353,"object":0.029411764705882353,"email":0.029411764705882353,"string":0.029411764705882353,"password":0.029411764705882353,"min":0.029411764705882353,"export":0.029411764705882353,"post":0.029411764705882353,"async":0.029411764705882353,"request":0.029411764705882353,"form":0.029411764705882353,"await":0.029411764705882353,"if":0.029411764705882353,"valid":0.029411764705882353,"return":0.029411764705882353,"'failure'":0.029411764705882353,"verify":0.029411764705882353,"login":0.029411764705882353,"here":0.029411764705882353,"'success'":0.029411764705882353},"10":{"type":0.007692307692307693,"formoptions":0.007692307692307693,"t":0.007692307692307693,"m":0.007692307692307693,"in":0.007692307692307693,"partial":0.007692307692307693,"basics":0.007692307692307693,"id":0.007692307692307693,"string":0.007692307692307693,"applyaction":0.007692307692307693,"boolean":0.007692307692307693,"invalidateall":0.007692307692307693,"'force'":0.007692307692307693,"resetform":0.007692307692307693,"taintedmessage":0.007692307692307693,"promise":0.007692307692307693,"datatype":0.007692307692307693,"'form'":0.007692307692307693,"'json'":0.007692307692307693,"multiplesubmits":0.007692307692307693,"'prevent'":0.007692307692307693,"'allow'":0.007692307692307693,"'abort'":0.007692307692307693,"spa":0.007692307692307693,"true":0.007692307692307693,"failstatus":0.007692307692307693,"number":0.007692307692307693,"error":0.007692307692307693,"handling":0.007692307692307693,"scrolltoerror":0.007692307692307693,"'auto'":0.007692307692307693,"'smooth'":0.007692307692307693,"'off'":0.007692307692307693,"scrollintoviewoptions":0.007692307692307693,"autofocusonerror":0.007692307692307693,"'detect'":0.007692307692307693,"errorselector":0.007692307692307693,"selecterrortext":0.007692307692307693,"stickynavbar":0.007692307692307693,"events":0.007692307692307693,"onsubmit":0.007692307692307693,"submit":0.007692307692307693,"parameters":0.007692307692307693,"submitfunction":0.007692307692307693,"jsondata":0.007692307692307693,"data":0.007692307692307693,"record":0.007692307692307693,"unknown":0.007692307692307693,"void":0.007692307692307693,"validators":0.007692307692307693,"validationadapter":0.007692307692307693,"false":0.007692307692307693,"maybepromise":0.007692307692307693,"onresult":0.007692307692307693,"event":0.007692307692307693,"result":0.007692307692307693,"actionresult":0.007692307692307693,"formel":0.007692307692307693,"htmlformelement":0.007692307692307693,"cancel":0.007692307692307693,"onupdate":0.007692307692307693,"form":0.007692307692307693,"supervalidated":0.007692307692307693,"extract":0.007692307692307693,"'success'":0.007692307692307693,"'failure'":0.007692307692307693,"onupdated":0.007692307692307693,"readonly":0.007692307692307693,"onchange":0.007692307692307693,"changeevent":0.007692307692307693,"onerror":0.007692307692307693,"'apply'":0.007692307692307693,"'error'":0.007692307692307693,"status":0.007692307692307693,"app":0.007692307692307693,"message":0.007692307692307693,"writable":0.007692307692307693,"'message'":0.007692307692307693,"client-side":0.007692307692307693,"validation":0.007692307692307693,"clientvalidationadapter":0.007692307692307693,"'clear'":0.007692307692307693,"validationmethod":0.007692307692307693,"'oninput'":0.007692307692307693,"'onblur'":0.007692307692307693,"'onsubmit'":0.007692307692307693,"clearonsubmit":0.007692307692307693,"'errors-and-message'":0.007692307692307693,"'errors'":0.007692307692307693,"'none'":0.007692307692307693,"delayms":0.007692307692307693,"timeoutms":0.007692307692307693,"special":0.007692307692307693,"flash":0.007692307692307693,"integration":0.007692307692307693,"not":0.007692307692307693,"usually":0.007692307692307693,"required":0.007692307692307693,"syncflashmessage":0.007692307692307693,"flashmessage":0.007692307692307693,"module":0.007692307692307693,"import":0.007692307692307693,"as":0.007692307692307693,"flashmodule":0.007692307692307693,"from":0.007692307692307693,"'sveltekit-flash-message":0.007692307692307693,"client'":0.007692307692307693,"pagedata":0.007692307692307693,"'flash'":0.007692307692307693,"cookiepath":0.007692307692307693,"cookiename":0.007692307692307693,"disable":0.007692307692307693,"warnings":0.007692307692307693,"duplicateid":0.007692307692307693,"path":0.007692307692307693,"formpath":0.007692307692307693,"paths":0.007692307692307693,"formelement":0.007692307692307693,"target":0.007692307692307693,"element":0.007692307692307693,"set":0.007692307692307693,"extends":0.007692307692307693,"value":0.007692307692307693,"formpathtype":0.007692307692307693,"options":0.007692307692307693,"taint":0.007692307692307693,"'untaint'":0.007692307692307693,"'untaint-form'":0.007692307692307693,"get":0.007692307692307693,"undefined":0.007692307692307693},"11":{"defaults":0.07142857142857142,"t":0.07142857142857142,"m":0.07142857142857142,"any":0.07142857142857142,"data":0.07142857142857142,"partial":0.07142857142857142,"null":0.07142857142857142,"undefined":0.07142857142857142,"schema":0.07142857142857142,"clientvalidationadapter":0.07142857142857142,"options":0.07142857142857142,"supervalidateoptions":0.07142857142857142,"supervalidated":0.07142857142857142,"in":0.07142857142857142},"12":{"import":0.034482758620689655,"the":0.034482758620689655,"primitives":0.034482758620689655,"return":0.034482758620689655,"a":0.034482758620689655,"writable":0.034482758620689655,"string":0.034482758620689655,"booleanproxy":0.034482758620689655,"dateproxy":0.034482758620689655,"intproxy":0.034482758620689655,"numberproxy":0.034482758620689655,"stringproxy":0.034482758620689655,"file":0.034482758620689655,"proxies":0.034482758620689655,"fileproxy":0.034482758620689655,"filefieldproxy":0.034482758620689655,"formfieldproxy":0.034482758620689655,"filesproxy":0.034482758620689655,"filesfieldproxy":0.034482758620689655,"arrayproxy":0.034482758620689655,"type":0.034482758620689655,"of":0.034482758620689655,"others":0.034482758620689655,"depends":0.034482758620689655,"on":0.034482758620689655,"field":0.034482758620689655,"fieldproxy":0.034482758620689655,"from":0.034482758620689655,"'sveltekit-superforms'":0.034482758620689655},"13":{"import":0.045454545454545456,"superform":0.045454545454545456,"intproxy":0.045454545454545456,"from":0.045454545454545456,"'sveltekit-superforms'":0.045454545454545456,"export":0.045454545454545456,"let":0.045454545454545456,"data":0.045454545454545456,"const":0.045454545454545456,"form":0.045454545454545456,"proxy":0.045454545454545456,"'field'":0.045454545454545456,"options":0.045454545454545456,"empty":0.045454545454545456,"'null'":0.045454545454545456,"'undefined'":0.045454545454545456,"'zero'":0.045454545454545456,"initiallyemptyifzero":0.045454545454545456,"boolean":0.045454545454545456,"taint":0.045454545454545456,"'untaint'":0.045454545454545456,"'untaint-form'":0.045454545454545456},"14":{"import":0.045454545454545456,"superform":0.045454545454545456,"numberproxy":0.045454545454545456,"from":0.045454545454545456,"'sveltekit-superforms'":0.045454545454545456,"export":0.045454545454545456,"let":0.045454545454545456,"data":0.045454545454545456,"const":0.045454545454545456,"form":0.045454545454545456,"proxy":0.045454545454545456,"'field'":0.045454545454545456,"options":0.045454545454545456,"empty":0.045454545454545456,"'null'":0.045454545454545456,"'undefined'":0.045454545454545456,"'zero'":0.045454545454545456,"initiallyemptyifzero":0.045454545454545456,"boolean":0.045454545454545456,"taint":0.045454545454545456,"'untaint'":0.045454545454545456,"'untaint-form'":0.045454545454545456},"15":{"import":0.05263157894736842,"superform":0.05263157894736842,"booleanproxy":0.05263157894736842,"from":0.05263157894736842,"'sveltekit-superforms'":0.05263157894736842,"export":0.05263157894736842,"let":0.05263157894736842,"data":0.05263157894736842,"const":0.05263157894736842,"form":0.05263157894736842,"proxy":0.05263157894736842,"'field'":0.05263157894736842,"options":0.05263157894736842,"truestringvalue":0.05263157894736842,"'true'":0.05263157894736842,"taint":0.05263157894736842,"boolean":0.05263157894736842,"'untaint'":0.05263157894736842,"'untaint-form'":0.05263157894736842},"16":{"import":0.021739130434782608,"superform":0.021739130434782608,"dateproxy":0.021739130434782608,"from":0.021739130434782608,"'sveltekit-superforms'":0.021739130434782608,"export":0.021739130434782608,"let":0.021739130434782608,"data":0.021739130434782608,"const":0.021739130434782608,"form":0.021739130434782608,"proxy":0.021739130434782608,"'field'":0.021739130434782608,"options":0.021739130434782608,"format":0.021739130434782608,"extract":0.021739130434782608,"the":0.021739130434782608,"part":0.021739130434782608,"of":0.021739130434782608,"date":0.021739130434782608,"as":0.021739130434782608,"a":0.021739130434782608,"substring":0.021739130434782608,"'date'":0.021739130434782608,"'datetime'":0.021739130434782608,"'time'":0.021739130434782608,"convert":0.021739130434782608,"to":0.021739130434782608,"utc":0.021739130434782608,"'date-utc'":0.021739130434782608,"'datetime-utc'":0.021739130434782608,"'time-utc'":0.021739130434782608,"local":0.021739130434782608,"time":0.021739130434782608,"'date-local'":0.021739130434782608,"'datetime-local'":0.021739130434782608,"'time-local'":0.021739130434782608,"default":0.021739130434782608,"isodatestring":0.021739130434782608,"'iso'":0.021739130434782608,"empty":0.021739130434782608,"'null'":0.021739130434782608,"'undefined'":0.021739130434782608,"taint":0.021739130434782608,"boolean":0.021739130434782608,"'untaint'":0.021739130434782608,"'untaint-form'":0.021739130434782608},"17":{"import":0.05,"superform":0.05,"stringproxy":0.05,"from":0.05,"'sveltekit-superforms'":0.05,"export":0.05,"let":0.05,"data":0.05,"const":0.05,"form":0.05,"proxy":0.05,"'field'":0.05,"options":0.05,"empty":0.05,"'null'":0.05,"'undefined'":0.05,"taint":0.05,"boolean":0.05,"'untaint'":0.05,"'untaint-form'":0.05},"18":{"script":0.03125,"lang":0.03125,"ts":0.03125,"import":0.03125,"superform":0.03125,"formfieldproxy":0.03125,"from":0.03125,"'sveltekit-superforms'":0.03125,"export":0.03125,"let":0.03125,"data":0.03125,"const":0.03125,"form":0.03125,"the":0.03125,"whole":0.03125,"object":0.03125,"is":0.03125,"required":0.03125,"deconstruct":0.03125,"as":0.03125,"usual":0.03125,"here":0.03125,"path":0.03125,"value":0.03125,"errors":0.03125,"constraints":0.03125,"tainted":0.03125,"'name'":0.03125,"taint":0.03125,"boolean":0.03125,"'untaint'":0.03125,"'untaint-all'":0.03125},"19":{"script":0.03225806451612903,"lang":0.03225806451612903,"ts":0.03225806451612903,"import":0.03225806451612903,"superform":0.03225806451612903,"arrayproxy":0.03225806451612903,"from":0.03225806451612903,"'sveltekit-superforms'":0.03225806451612903,"export":0.03225806451612903,"let":0.03225806451612903,"data":0.03225806451612903,"const":0.03225806451612903,"form":0.03225806451612903,"the":0.03225806451612903,"whole":0.03225806451612903,"object":0.03225806451612903,"is":0.03225806451612903,"required":0.03225806451612903,"deconstruct":0.03225806451612903,"as":0.03225806451612903,"usual":0.03225806451612903,"here":0.03225806451612903,"path":0.03225806451612903,"values":0.03225806451612903,"errors":0.03225806451612903,"valueerrors":0.03225806451612903,"'tags'":0.03225806451612903,"taint":0.03225806451612903,"boolean":0.03225806451612903,"'untaint'":0.03225806451612903,"'untaint-all'":0.03225806451612903},"20":{"script":0.04,"lang":0.04,"ts":0.04,"import":0.04,"superform":0.04,"fieldproxy":0.04,"from":0.04,"'sveltekit-superforms'":0.04,"export":0.04,"let":0.04,"data":0.04,"const":0.04,"form":0.04,"proxy":0.04,"any":0.04,"field":0.04,"in":0.04,"an":0.04,"object":0.04,"nameproxy":0.04,"'name'":0.04,"taint":0.04,"boolean":0.04,"'untaint'":0.04,"'untaint-all'":0.04},"21":{"const":0.03125,"schema":0.03125,"z":0.03125,"object":0.03125,"date":0.03125,"optional":0.03125,"script":0.03125,"lang":0.03125,"ts":0.03125,"import":0.03125,"superform":0.03125,"dateproxy":0.03125,"from":0.03125,"'sveltekit-superforms'":0.03125,"type":0.03125,"pagedata":0.03125,"'":0.03125,"types":0.03125,"js'":0.03125,"export":0.03125,"let":0.03125,"data":0.03125,"form":0.03125,"enhance":0.03125,"'date'":0.03125,"format":0.03125,"empty":0.03125,"'undefined'":0.03125,"input":0.03125,"name":0.03125,"bind":0.03125,"value":0.03125},"22":{},"23":{},"24":{"--":0.02564102564102564,"for":0.02564102564102564,"each":0.02564102564102564,"form":0.02564102564102564,"field":0.02564102564102564,"label":0.02564102564102564,"name":0.02564102564102564,"input":0.02564102564102564,"type":0.02564102564102564,"text":0.02564102564102564,"aria-invalid":0.02564102564102564,"errors":0.02564102564102564,"'true'":0.02564102564102564,"undefined":0.02564102564102564,"bind":0.02564102564102564,"value":0.02564102564102564,"constraints":0.02564102564102564,"if":0.02564102564102564,"span":0.02564102564102564,"class":0.02564102564102564,"invalid":0.02564102564102564,"script":0.02564102564102564,"lang":0.02564102564102564,"ts":0.02564102564102564,"import":0.02564102564102564,"superform":0.02564102564102564,"from":0.02564102564102564,"'sveltekit-superforms'":0.02564102564102564,"export":0.02564102564102564,"let":0.02564102564102564,"data":0.02564102564102564,"const":0.02564102564102564,"loginform":0.02564102564102564,"loginerrors":0.02564102564102564,"enhance":0.02564102564102564,"loginenhance":0.02564102564102564,"registerform":0.02564102564102564,"registererrors":0.02564102564102564,"registerenhance":0.02564102564102564},"25":{"export":0.023809523809523808,"const":0.023809523809523808,"loginschema":0.023809523809523808,"z":0.023809523809523808,"object":0.023809523809523808,"email":0.023809523809523808,"string":0.023809523809523808,"password":0.023809523809523808,"type":0.023809523809523808,"typeof":0.023809523809523808,"script":0.023809523809523808,"lang":0.023809523809523808,"ts":0.023809523809523808,"import":0.023809523809523808,"supervalidated":0.023809523809523808,"infer":0.023809523809523808,"from":0.023809523809523808,"'sveltekit-superforms'":0.023809523809523808,"superform":0.023809523809523808,"'":0.023809523809523808,"lib":0.023809523809523808,"schemas'":0.023809523809523808,"let":0.023809523809523808,"data":0.023809523809523808,"form":0.023809523809523808,"errors":0.023809523809523808,"enhance":0.023809523809523808,"method":0.023809523809523808,"post":0.023809523809523808,"use":0.023809523809523808,"--":0.023809523809523808,"business":0.023809523809523808,"as":0.023809523809523808,"usual":0.023809523809523808,"loginform":0.023809523809523808,"registerform":0.023809523809523808,"inferin":0.023809523809523808,"status":0.023809523809523808,"number":0.023809523809523808,"text":0.023809523809523808,"message":0.023809523809523808,"if":0.023809523809523808},"26":{"script":0.025,"lang":0.025,"ts":0.025,"import":0.025,"type":0.025,"inputconstraint":0.025,"from":0.025,"'sveltekit-superforms'":0.025,"export":0.025,"let":0.025,"value":0.025,"string":0.025,"label":0.025,"undefined":0.025,"errors":0.025,"constraints":0.025,"if":0.025,"span":0.025,"br":0.025,"input":0.025,"text":0.025,"bind":0.025,"aria-invalid":0.025,"'true'":0.025,"restprops":0.025,"class":0.025,"invalid":0.025,"form":0.025,"method":0.025,"post":0.025,"use":0.025,"enhance":0.025,"textinput":0.025,"name":0.025,"h4":0.025,"tags":0.025,"each":0.025,"as":0.025,"_":0.025,"i":0.025},"27":{"script":0.041666666666666664,"lang":0.041666666666666664,"ts":0.041666666666666664,"import":0.041666666666666664,"superform":0.041666666666666664,"fieldproxy":0.041666666666666664,"from":0.041666666666666664,"'sveltekit-superforms":0.041666666666666664,"client'":0.041666666666666664,"export":0.041666666666666664,"let":0.041666666666666664,"data":0.041666666666666664,"const":0.041666666666666664,"form":0.041666666666666664,"name":0.041666666666666664,"'name'":0.041666666666666664,"div":0.041666666666666664,"button":0.041666666666666664,"on":0.041666666666666664,"click":0.041666666666666664,"''":0.041666666666666664,"clear":0.041666666666666664,"taint":0.041666666666666664,"false":0.041666666666666664},"28":{"script":0.02,"lang":0.02,"ts":0.02,"import":0.02,"type":0.02,"pagedata":0.02,"from":0.02,"'":0.02,"types":0.02,"js'":0.02,"superform":0.02,"formfieldproxy":0.02,"'sveltekit-superforms":0.02,"client'":0.02,"export":0.02,"let":0.02,"data":0.02,"const":0.02,"form":0.02,"path":0.02,"value":0.02,"errors":0.02,"constraints":0.02,"'name'":0.02,"textfield":0.02,"field":0.02,"name":0.02,"context":0.02,"module":0.02,"t":0.02,"record":0.02,"string":0.02,"unknown":0.02,"generics":0.02,"extends":0.02,"formpathleaves":0.02,"'sveltekit-superforms'":0.02,"label":0.02,"br":0.02,"input":0.02,"text":0.02,"aria-invalid":0.02,"'true'":0.02,"undefined":0.02,"bind":0.02,"restprops":0.02,"if":0.02,"span":0.02,"class":0.02,"invalid":0.02},"29":{"script":0.029411764705882353,"lang":0.029411764705882353,"ts":0.029411764705882353,"context":0.029411764705882353,"module":0.029411764705882353,"type":0.029411764705882353,"t":0.029411764705882353,"record":0.029411764705882353,"string":0.029411764705882353,"unknown":0.029411764705882353,"generics":0.029411764705882353,"extends":0.029411764705882353,"import":0.029411764705882353,"formfieldproxy":0.029411764705882353,"superform":0.029411764705882353,"formpathleaves":0.029411764705882353,"from":0.029411764705882353,"'sveltekit-superforms'":0.029411764705882353,"export":0.029411764705882353,"let":0.029411764705882353,"field":0.029411764705882353,"boolean":0.029411764705882353,"const":0.029411764705882353,"value":0.029411764705882353,"errors":0.029411764705882353,"constraints":0.029411764705882353,"satisfies":0.029411764705882353,"input":0.029411764705882353,"name":0.029411764705882353,"checkbox":0.029411764705882353,"class":0.029411764705882353,"bind":0.029411764705882353,"checked":0.029411764705882353,"restprops":0.029411764705882353},"30":{"textfield":0.06666666666666667,"superform":0.06666666666666667,"field":0.06666666666666667,"name":0.06666666666666667,"form":0.06666666666666667,"method":0.06666666666666667,"post":0.06666666666666667,"use":0.06666666666666667,"enhance":0.06666666666666667,"h4":0.06666666666666667,"tags":0.06666666666666667,"each":0.06666666666666667,"as":0.06666666666666667,"_":0.06666666666666667,"i":0.06666666666666667},"31":{},"32":{"npm":0.2,"install":0.2,"run":0.2,"dev":0.2,"pnpm":0.2},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{"0":0.05555555555555555,"1":0.05555555555555555,"8":0.05555555555555555,"npm":0.05555555555555555,"create":0.05555555555555555,"svelte":0.05555555555555555,"latest":0.05555555555555555,"pnpm":0.05555555555555555,"link":0.05555555555555555,"rel":0.05555555555555555,"stylesheet":0.05555555555555555,"href":0.05555555555555555,"https":0.05555555555555555,"unpkg":0.05555555555555555,"com":0.05555555555555555,"normalize":0.05555555555555555,"css":0.05555555555555555,"sakura":0.05555555555555555},"39":{"2":0.02127659574468085,"import":0.02127659574468085,"z":0.02127659574468085,"from":0.02127659574468085,"'zod'":0.02127659574468085,"see":0.02127659574468085,"https":0.02127659574468085,"zod":0.02127659574468085,"dev":0.02127659574468085,"id":0.02127659574468085,"primitives":0.02127659574468085,"for":0.02127659574468085,"schema":0.02127659574468085,"syntax":0.02127659574468085,"export":0.02127659574468085,"const":0.02127659574468085,"userschema":0.02127659574468085,"object":0.02127659574468085,"string":0.02127659574468085,"regex":0.02127659574468085,"d":0.02127659574468085,"name":0.02127659574468085,"min":0.02127659574468085,"email":0.02127659574468085,"type":0.02127659574468085,"userdb":0.02127659574468085,"infer":0.02127659574468085,"typeof":0.02127659574468085,"let's":0.02127659574468085,"worry":0.02127659574468085,"about":0.02127659574468085,"collisions":0.02127659574468085,"later":0.02127659574468085,"userid":0.02127659574468085,"math":0.02127659574468085,"random":0.02127659574468085,"slice":0.02127659574468085,"a":0.02127659574468085,"simple":0.02127659574468085,"user":0.02127659574468085,"database":0.02127659574468085,"users":0.02127659574468085,"'important":0.02127659574468085,"customer'":0.02127659574468085,"example":0.02127659574468085,"com'":0.02127659574468085,"'super":0.02127659574468085},"40":{"import":0.08333333333333333,"userschema":0.08333333333333333,"from":0.08333333333333333,"'":0.08333333333333333,"lib":0.08333333333333333,"users'":0.08333333333333333,"const":0.08333333333333333,"crudschema":0.08333333333333333,"extend":0.08333333333333333,"id":0.08333333333333333,"shape":0.08333333333333333,"optional":0.08333333333333333},"41":{"400":0.010101010101010102,"404":0.010101010101010102,"import":0.010101010101010102,"supervalidate":0.010101010101010102,"message":0.010101010101010102,"from":0.010101010101010102,"'sveltekit-superforms'":0.010101010101010102,"zod":0.010101010101010102,"'sveltekit-superforms":0.010101010101010102,"adapters'":0.010101010101010102,"error":0.010101010101010102,"fail":0.010101010101010102,"redirect":0.010101010101010102,"'":0.010101010101010102,"sveltejs":0.010101010101010102,"kit'":0.010101010101010102,"users":0.010101010101010102,"userid":0.010101010101010102,"lib":0.010101010101010102,"users'":0.010101010101010102,"export":0.010101010101010102,"const":0.010101010101010102,"load":0.010101010101010102,"async":0.010101010101010102,"url":0.010101010101010102,"params":0.010101010101010102,"read":0.010101010101010102,"user":0.010101010101010102,"find":0.010101010101010102,"u":0.010101010101010102,"id":0.010101010101010102,"if":0.010101010101010102,"throw":0.010101010101010102,"'user":0.010101010101010102,"not":0.010101010101010102,"found":0.010101010101010102,"is":0.010101010101010102,"null":0.010101010101010102,"default":0.010101010101010102,"values":0.010101010101010102,"for":0.010101010101010102,"the":0.010101010101010102,"schema":0.010101010101010102,"will":0.010101010101010102,"be":0.010101010101010102,"returned":0.010101010101010102,"form":0.010101010101010102,"await":0.010101010101010102,"crudschema":0.010101010101010102,"return":0.010101010101010102,"script":0.010101010101010102,"lang":0.010101010101010102,"ts":0.010101010101010102,"type":0.010101010101010102,"pagedata":0.010101010101010102,"types":0.010101010101010102,"js'":0.010101010101010102,"page":0.010101010101010102,"app":0.010101010101010102,"stores'":0.010101010101010102,"superform":0.010101010101010102,"let":0.010101010101010102,"data":0.010101010101010102,"errors":0.010101010101010102,"constraints":0.010101010101010102,"enhance":0.010101010101010102,"delayed":0.010101010101010102,"resetform":0.010101010101010102,"false":0.010101010101010102,"h3":0.010101010101010102,"class":0.010101010101010102,"invalid":0.010101010101010102,"status":0.010101010101010102,"h2":0.010101010101010102,"'create'":0.010101010101010102,"'update'":0.010101010101010102,"method":0.010101010101010102,"post":0.010101010101010102,"use":0.010101010101010102,"input":0.010101010101010102,"hidden":0.010101010101010102,"name":0.010101010101010102,"bind":0.010101010101010102,"value":0.010101010101010102,"label":0.010101010101010102,"br":0.010101010101010102,"aria-invalid":0.010101010101010102,"'true'":0.010101010101010102,"undefined":0.010101010101010102,"span":0.010101010101010102,"e-mail":0.010101010101010102,"email":0.010101010101010102,"button":0.010101010101010102,"submit":0.010101010101010102,"working":0.010101010101010102,"style":0.010101010101010102,"color":0.010101010101010102,"red":0.010101010101010102,"superdebug":0.010101010101010102},"42":{"400":0.02564102564102564,"404":0.02564102564102564,"export":0.02564102564102564,"const":0.02564102564102564,"actions":0.02564102564102564,"default":0.02564102564102564,"async":0.02564102564102564,"request":0.02564102564102564,"form":0.02564102564102564,"await":0.02564102564102564,"supervalidate":0.02564102564102564,"zod":0.02564102564102564,"crudschema":0.02564102564102564,"if":0.02564102564102564,"valid":0.02564102564102564,"return":0.02564102564102564,"fail":0.02564102564102564,"data":0.02564102564102564,"id":0.02564102564102564,"create":0.02564102564102564,"user":0.02564102564102564,"userid":0.02564102564102564,"users":0.02564102564102564,"push":0.02564102564102564,"message":0.02564102564102564,"'user":0.02564102564102564,"created":0.02564102564102564,"'":0.02564102564102564,"else":0.02564102564102564,"update":0.02564102564102564,"index":0.02564102564102564,"findindex":0.02564102564102564,"u":0.02564102564102564,"-1":0.02564102564102564,"throw":0.02564102564102564,"error":0.02564102564102564,"not":0.02564102564102564,"found":0.02564102564102564,"updated":0.02564102564102564},"43":{"1":0.014492753623188406,"303":0.014492753623188406,"400":0.014492753623188406,"404":0.014492753623188406,"2000":0.014492753623188406,"if":0.014492753623188406,"form":0.014492753623188406,"id":0.014492753623188406,"button":0.014492753623188406,"name":0.014492753623188406,"delete":0.014492753623188406,"on":0.014492753623188406,"click":0.014492753623188406,"e":0.014492753623188406,"confirm":0.014492753623188406,"'are":0.014492753623188406,"you":0.014492753623188406,"sure":0.014492753623188406,"'":0.014492753623188406,"preventdefault":0.014492753623188406,"class":0.014492753623188406,"danger":0.014492753623188406,"user":0.014492753623188406,"delay":0.014492753623188406,"submit":0.014492753623188406,"delayed":0.014492753623188406,"export":0.014492753623188406,"const":0.014492753623188406,"actions":0.014492753623188406,"default":0.014492753623188406,"async":0.014492753623188406,"request":0.014492753623188406,"formdata":0.014492753623188406,"await":0.014492753623188406,"supervalidate":0.014492753623188406,"zod":0.014492753623188406,"crudschema":0.014492753623188406,"has":0.014492753623188406,"'delay'":0.014492753623188406,"new":0.014492753623188406,"promise":0.014492753623188406,"r":0.014492753623188406,"settimeout":0.014492753623188406,"valid":0.014492753623188406,"return":0.014492753623188406,"fail":0.014492753623188406,"data":0.014492753623188406,"create":0.014492753623188406,"userid":0.014492753623188406,"users":0.014492753623188406,"push":0.014492753623188406,"message":0.014492753623188406,"'user":0.014492753623188406,"created":0.014492753623188406,"else":0.014492753623188406,"index":0.014492753623188406,"findindex":0.014492753623188406,"u":0.014492753623188406,"-1":0.014492753623188406,"throw":0.014492753623188406,"error":0.014492753623188406,"not":0.014492753623188406,"found":0.014492753623188406,"'delete'":0.014492753623188406,"splice":0.014492753623188406,"redirect":0.014492753623188406,"users'":0.014492753623188406,"update":0.014492753623188406,"updated":0.014492753623188406},"44":{"3":0.022727272727272728,"100":0.022727272727272728,"h3":0.022727272727272728,"users":0.022727272727272728,"div":0.022727272727272728,"class":0.022727272727272728,"each":0.022727272727272728,"data":0.022727272727272728,"as":0.022727272727272728,"user":0.022727272727272728,"a":0.022727272727272728,"href":0.022727272727272728,"id":0.022727272727272728,"name":0.022727272727272728,"style":0.022727272727272728,"invalid":0.022727272727272728,"color":0.022727272727272728,"red":0.022727272727272728,"danger":0.022727272727272728,"background-color":0.022727272727272728,"brown":0.022727272727272728,"delay":0.022727272727272728,"lightblue":0.022727272727272728,"form":0.022727272727272728,"display":0.022727272727272728,"flex":0.022727272727272728,"flex-direction":0.022727272727272728,"column":0.022727272727272728,"gap":0.022727272727272728,"1em":0.022727272727272728,"align-items":0.022727272727272728,"flex-start":0.022727272727272728,"margin-bottom":0.022727272727272728,"2em":0.022727272727272728,"hr":0.022727272727272728,"width":0.022727272727272728,"margin-block":0.022727272727272728,"columns":0.022727272727272728,"150px":0.022727272727272728,"block":0.022727272727272728,"white-space":0.022727272727272728,"nowrap":0.022727272727272728,"overflow-x":0.022727272727272728,"hidden":0.022727272727272728},"45":{},"46":{},"47":{"const":0.06666666666666667,"schema":0.06666666666666667,"z":0.06666666666666667,"object":0.06666666666666667,"age":0.06666666666666667,"number":0.06666666666666667,"positive":0.06666666666666667,"default":0.06666666666666667,"''":0.06666666666666667,"as":0.06666666666666667,"unknown":0.06666666666666667,"agree":0.06666666666666667,"literal":0.06666666666666667,"true":0.06666666666666667,"false":0.06666666666666667},"48":{},"49":{"123":0.05263157894736842,"const":0.05263157894736842,"schema":0.05263157894736842,"z":0.05263157894736842,"object":0.05263157894736842,"either":0.05263157894736842,"union":0.05263157894736842,"number":0.05263157894736842,"string":0.05263157894736842,"default":0.05263157894736842,"fish":0.05263157894736842,"enum":0.05263157894736842,"'salmon'":0.05263157894736842,"'tuna'":0.05263157894736842,"'trout'":0.05263157894736842,"will":0.05263157894736842,"be":0.05263157894736842,"schema2":0.05263157894736842,"nullable":0.05263157894736842},"50":{"const":0.08333333333333333,"schema2":0.08333333333333333,"z":0.08333333333333333,"object":0.08333333333333333,"fish":0.08333333333333333,"enum":0.08333333333333333,"'salmon'":0.08333333333333333,"'tuna'":0.08333333333333333,"'trout'":0.08333333333333333,"default":0.08333333333333333,"''":0.08333333333333333,"as":0.08333333333333333},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{"export":0.02857142857142857,"const":0.02857142857142857,"load":0.02857142857142857,"async":0.02857142857142857,"locals":0.02857142857142857,"loginform":0.02857142857142857,"await":0.02857142857142857,"supervalidate":0.02857142857142857,"zod":0.02857142857142857,"loginschema":0.02857142857142857,"username":0.02857142857142857,"currentuser":0.02857142857142857,"name":0.02857142857142857,"return":0.02857142857142857,"script":0.02857142857142857,"lang":0.02857142857142857,"ts":0.02857142857142857,"import":0.02857142857142857,"type":0.02857142857142857,"pagedata":0.02857142857142857,"from":0.02857142857142857,"'":0.02857142857142857,"types":0.02857142857142857,"js'":0.02857142857142857,"let":0.02857142857142857,"data":0.02857142857142857,"form":0.02857142857142857,"errors":0.02857142857142857,"enhance":0.02857142857142857,"superform":0.02857142857142857,"p":0.02857142857142857,"currently":0.02857142857142857,"logged":0.02857142857142857,"in":0.02857142857142857,"as":0.02857142857142857},"61":{"400":0.015873015873015872,"export":0.015873015873015872,"const":0.015873015873015872,"actions":0.015873015873015872,"default":0.015873015873015872,"async":0.015873015873015872,"request":0.015873015873015872,"locals":0.015873015873015872,"form":0.015873015873015872,"await":0.015873015873015872,"supervalidate":0.015873015873015872,"zod":0.015873015873015872,"schema":0.015873015873015872,"if":0.015873015873015872,"valid":0.015873015873015872,"return":0.015873015873015872,"fail":0.015873015873015872,"the":0.015873015873015872,"username":0.015873015873015872,"as":0.015873015873015872,"extra":0.015873015873015872,"data":0.015873015873015872,"currentuser":0.015873015873015872,"name":0.015873015873015872,"script":0.015873015873015872,"lang":0.015873015873015872,"ts":0.015873015873015872,"import":0.015873015873015872,"superform":0.015873015873015872,"type":0.015873015873015872,"formresult":0.015873015873015872,"from":0.015873015873015872,"'sveltekit-superforms'":0.015873015873015872,"actiondata":0.015873015873015872,"'":0.015873015873015872,"types":0.015873015873015872,"js'":0.015873015873015872,"let":0.015873015873015872,"errors":0.015873015873015872,"message":0.015873015873015872,"enhance":0.015873015873015872,"onupdate":0.015873015873015872,"result":0.015873015873015872,"action":0.015873015873015872,"do":0.015873015873015872,"something":0.015873015873015872,"with":0.015873015873015872,"pagedata":0.015873015873015872,"'sveltekit-superforms":0.015873015873015872,"client'":0.015873015873015872,"need":0.015873015873015872,"to":0.015873015873015872,"rename":0.015873015873015872,"here":0.015873015873015872,"since":0.015873015873015872,"it's":0.015873015873015872,"used":0.015873015873015872,"by":0.015873015873015872,"formdata":0.015873015873015872,"p":0.015873015873015872,"currently":0.015873015873015872,"logged":0.015873015873015872,"in":0.015873015873015872},"62":{"400":0.03125,"export":0.03125,"const":0.03125,"actions":0.03125,"default":0.03125,"async":0.03125,"request":0.03125,"formdata":0.03125,"await":0.03125,"form":0.03125,"supervalidate":0.03125,"zod":0.03125,"schema":0.03125,"if":0.03125,"valid":0.03125,"return":0.03125,"fail":0.03125,"has":0.03125,"'extra'":0.03125,"do":0.03125,"something":0.03125,"with":0.03125,"the":0.03125,"extra":0.03125,"data":0.03125,"errors":0.03125,"enhance":0.03125,"superform":0.03125,"loginform":0.03125,"onsubmit":0.03125,"set":0.03125,"'value'":0.03125},"63":{},"64":{"export":0.058823529411764705,"const":0.058823529411764705,"actions":0.058823529411764705,"default":0.058823529411764705,"async":0.058823529411764705,"request":0.058823529411764705,"formdata":0.058823529411764705,"await":0.058823529411764705,"form":0.058823529411764705,"supervalidate":0.058823529411764705,"zod":0.058823529411764705,"schema":0.058823529411764705,"form2":0.058823529411764705,"anotherschema":0.058823529411764705,"business":0.058823529411764705,"as":0.058823529411764705,"usual":0.058823529411764705},"65":{},"66":{},"67":{},"68":{"0":0.023255813953488372,"1":0.023255813953488372,"300":0.023255813953488372,"import":0.023255813953488372,"superform":0.023255813953488372,"from":0.023255813953488372,"'sveltekit-superforms'":0.023255813953488372,"export":0.023255813953488372,"type":0.023255813953488372,"message":0.023255813953488372,"status":0.023255813953488372,"'success'":0.023255813953488372,"'error'":0.023255813953488372,"'warning'":0.023255813953488372,"text":0.023255813953488372,"string":0.023255813953488372,"if":0.023255813953488372,"no":0.023255813953488372,"strongly":0.023255813953488372,"is":0.023255813953488372,"needed":0.023255813953488372,"leave":0.023255813953488372,"out":0.023255813953488372,"the":0.023255813953488372,"m":0.023255813953488372,"parameter":0.023255813953488372,"function":0.023255813953488372,"mysuperform":0.023255813953488372,"t":0.023255813953488372,"extends":0.023255813953488372,"record":0.023255813953488372,"unknown":0.023255813953488372,"params":0.023255813953488372,"parameters":0.023255813953488372,"typeof":0.023255813953488372,"return":0.023255813953488372,"your":0.023255813953488372,"defaults":0.023255813953488372,"here":0.023255813953488372,"errorselector":0.023255813953488372,"'":0.023255813953488372,"has-error'":0.023255813953488372,"delayms":0.023255813953488372},"69":{},"70":{"import":0.029411764705882353,"as":0.029411764705882353,"flashmodule":0.029411764705882353,"from":0.029411764705882353,"'sveltekit-flash-message":0.029411764705882353,"client'":0.029411764705882353,"const":0.029411764705882353,"form":0.029411764705882353,"errors":0.029411764705882353,"enhance":0.029411764705882353,"superform":0.029411764705882353,"data":0.029411764705882353,"flashmessage":0.029411764705882353,"module":0.029411764705882353,"onerror":0.029411764705882353,"result":0.029411764705882353,"error":0.029411764705882353,"handling":0.029411764705882353,"for":0.029411764705882353,"the":0.029411764705882353,"flash":0.029411764705882353,"message":0.029411764705882353,"-":0.029411764705882353,"is":0.029411764705882353,"actionresult":0.029411764705882353,"store":0.029411764705882353,"not":0.029411764705882353,"status":0.029411764705882353,"errormessage":0.029411764705882353,"set":0.029411764705882353,"your":0.029411764705882353,"type":0.029411764705882353,"syncflashmessage":0.029411764705882353,"false":0.029411764705882353},"71":{},"72":{},"73":{"10":0.02702702702702703,"form":0.02702702702702703,"method":0.02702702702702703,"post":0.02702702702702703,"use":0.02702702702702703,"enhance":0.02702702702702703,"field":0.02702702702702703,"name":0.02702702702702703,"control":0.02702702702702703,"let":0.02702702702702703,"attrs":0.02702702702702703,"label":0.02702702702702703,"input":0.02702702702702703,"bind":0.02702702702702703,"value":0.02702702702702703,"formdata":0.02702702702702703,"description":0.02702702702702703,"be":0.02702702702702703,"sure":0.02702702702702703,"to":0.02702702702702703,"your":0.02702702702702703,"real":0.02702702702702703,"fielderrors":0.02702702702702703,"email":0.02702702702702703,"type":0.02702702702702703,"it's":0.02702702702702703,"preferred":0.02702702702702703,"that":0.02702702702702703,"you":0.02702702702702703,"company":0.02702702702702703,"password":0.02702702702702703,"ensure":0.02702702702702703,"the":0.02702702702702703,"is":0.02702702702702703,"at":0.02702702702702703,"least":0.02702702702702703,"characters":0.02702702702702703},"74":{},"75":{},"76":{},"77":{"0":0.25,"1":0.25,"devdependencies":0.25,"sveltekit-superforms":0.25},"78":{"no":0.038461538461538464,"form":0.038461538461538464,"data":0.038461538461538464,"sent":0.038461538461538464,"to":0.038461538461538464,"superform":0.038461538461538464,"schema":0.038461538461538464,"type":0.038461538461538464,"safety":0.038461538461538464,"cannot":0.038461538461538464,"be":0.038461538461538464,"guaranteed":0.038461538461538464,"also":0.038461538461538464,"constraints":0.038461538461538464,"will":0.038461538461538464,"exist":0.038461538461538464,"for":0.038461538461538464,"the":0.038461538461538464,"set":0.038461538461538464,"warnings":0.038461538461538464,"novalidationandconstraints":0.038461538461538464,"option":0.038461538461538464,"false":0.038461538461538464,"disable":0.038461538461538464,"this":0.038461538461538464,"warning":0.038461538461538464},"79":{},"80":{"8":0.02857142857142857,"400":0.02857142857142857,"const":0.02857142857142857,"schema":0.02857142857142857,"z":0.02857142857142857,"object":0.02857142857142857,"password":0.02857142857142857,"string":0.02857142857142857,"min":0.02857142857142857,"confirmpassword":0.02857142857142857,"refine":0.02857142857142857,"data":0.02857142857142857,"passwords":0.02857142857142857,"doesn't":0.02857142857142857,"match":0.02857142857142857,"form":0.02857142857142857,"await":0.02857142857142857,"supervalidate":0.02857142857142857,"request":0.02857142857142857,"zod":0.02857142857142857,"if":0.02857142857142857,"valid":0.02857142857142857,"return":0.02857142857142857,"fail":0.02857142857142857,"stays":0.02857142857142857,"until":0.02857142857142857,"is":0.02857142857142857,"posted":0.02857142857142857,"again":0.02857142857142857,"regardless":0.02857142857142857,"of":0.02857142857142857,"client-side":0.02857142857142857,"validation":0.02857142857142857,"message":0.02857142857142857,"status":0.02857142857142857},"81":{"0":0.014492753623188406,"1":0.014492753623188406,"const":0.014492753623188406,"form":0.014492753623188406,"enhance":0.014492753623188406,"validate":0.014492753623188406,"superform":0.014492753623188406,"data":0.014492753623188406,"-":0.014492753623188406,"'tags'":0.014492753623188406,"i":0.014492753623188406,"'name'":0.014492753623188406,"update":0.014492753623188406,"false":0.014492753623188406,"tags":0.014492753623188406,"name":0.014492753623188406,"script":0.014492753623188406,"lang":0.014492753623188406,"ts":0.014492753623188406,"import":0.014492753623188406,"type":0.014492753623188406,"z":0.014492753623188406,"anyzodobject":0.014492753623188406,"from":0.014492753623188406,"'zod'":0.014492753623188406,"zodvalidation":0.014492753623188406,"formpathleaves":0.014492753623188406,"'sveltekit-superforms'":0.014492753623188406,"formfieldproxy":0.014492753623188406,"'sveltekit-superforms":0.014492753623188406,"client'":0.014492753623188406,"t":0.014492753623188406,"generic":0.014492753623188406,"export":0.014492753623188406,"let":0.014492753623188406,"unknown":0.014492753623188406,"field":0.014492753623188406,"infer":0.014492753623188406,"value":0.014492753623188406,"errors":0.014492753623188406,"constraints":0.014492753623188406,"schema":0.014492753623188406,"object":0.014492753623188406,"id":0.014492753623188406,"number":0.014492753623188406,"string":0.014492753623188406,"min":0.014492753623188406,"array":0.014492753623188406,"formdata":0.014492753623188406,"this":0.014492753623188406,"won't":0.014492753623188406,"work":0.014492753623188406,"not":0.014492753623188406,"either":0.014492753623188406,"tag":0.014492753623188406,"'tags":0.014492753623188406,"'":0.014492753623188406,"but":0.014492753623188406,"will":0.014492753623188406,"since":0.014492753623188406,"it's":0.014492753623188406,"a":0.014492753623188406,"at":0.014492753623188406,"the":0.014492753623188406,"end":0.014492753623188406,"of":0.014492753623188406,"tagname":0.014492753623188406,"name'":0.014492753623188406,"fieldproxy":0.014492753623188406},"82":{"-":0.0625,"path":0.0625,"string":0.0625,"message":0.0625,"messages":0.0625,"if":0.0625,"allerrors":0.0625,"length":0.0625,"ul":0.0625,"each":0.0625,"as":0.0625,"error":0.0625,"li":0.0625,"b":0.0625,"join":0.0625,"'":0.0625},"83":{"-":0.14285714285714285,"import":0.14285714285714285,"defaultdata":0.14285714285714285,"from":0.14285714285714285,"'sveltekit-superforms":0.14285714285714285,"server":0.14285714285714285,"defaultvalues":0.14285714285714285},"84":{},"85":{},"86":{},"87":{},"88":{"input":0.09090909090909091,"name":0.09090909090909091,"bind":0.09090909090909091,"value":0.09090909090909091,"form":0.09090909090909091,"-":0.09090909090909091,"data-invalid":0.09090909090909091,"errors":0.09090909090909091,"aria-invalid":0.09090909090909091,"'true'":0.09090909090909091,"undefined":0.09090909090909091},"89":{},"90":{"add":0.08333333333333333,"errors":0.08333333333333333,"to":0.08333333333333333,"an":0.08333333333333333,"empty":0.08333333333333333,"form":0.08333333333333333,"const":0.08333333333333333,"await":0.08333333333333333,"supervalidate":0.08333333333333333,"zod":0.08333333333333333,"schema":0.08333333333333333,"true":0.08333333333333333},"91":{},"92":{},"93":{"export":0.06666666666666667,"default":0.06666666666666667,"defineconfig":0.06666666666666667,"plugins":0.06666666666666667,"sveltekit":0.06666666666666667,"test":0.06666666666666667,"include":0.06666666666666667,"'src":0.06666666666666667,"spec":0.06666666666666667,"js":0.06666666666666667,"ts":0.06666666666666667,"'":0.06666666666666667,"define":0.06666666666666667,"superforms_legacy":0.06666666666666667,"true":0.06666666666666667},"94":{"0":0.02857142857142857,"2":0.02857142857142857,"import":0.02857142857142857,"supervalidate":0.02857142857142857,"from":0.02857142857142857,"'sveltekit-superforms'":0.02857142857142857,"zod":0.02857142857142857,"'sveltekit-superforms":0.02857142857142857,"adapters'":0.02857142857142857,"const":0.02857142857142857,"form":0.02857142857142857,"await":0.02857142857142857,"schema":0.02857142857142857,"type":0.02857142857142857,"'arktype'":0.02857142857142857,"arktype":0.02857142857142857,"powerful":0.02857142857142857,"stuff":0.02857142857142857,"name":0.02857142857142857,"'string'":0.02857142857142857,"email":0.02857142857142857,"'email'":0.02857142857142857,"tags":0.02857142857142857,"'":0.02857142857142857,"string":0.02857142857142857,"3'":0.02857142857142857,"score":0.02857142857142857,"'integer":0.02857142857142857,"0'":0.02857142857142857,"defaults":0.02857142857142857,"''":0.02857142857142857,"export":0.02857142857142857,"load":0.02857142857142857,"async":0.02857142857142857,"return":0.02857142857142857},"95":{},"96":{"2":0.030303030303030304,"import":0.030303030303030304,"valibotclient":0.030303030303030304,"from":0.030303030303030304,"'sveltekit-superforms":0.030303030303030304,"adapters'":0.030303030303030304,"schema":0.030303030303030304,"'":0.030303030303030304,"js'":0.030303030303030304,"const":0.030303030303030304,"form":0.030303030303030304,"errors":0.030303030303030304,"enhance":0.030303030303030304,"options":0.030303030303030304,"superform":0.030303030303030304,"data":0.030303030303030304,"validators":0.030303030303030304,"type":0.030303030303030304,"infer":0.030303030303030304,"'sveltekit-superforms'":0.030303030303030304,"superformclient":0.030303030303030304,"typeof":0.030303030303030304,"name":0.030303030303030304,"if":0.030303030303030304,"length":0.030303030303030304,"return":0.030303030303030304,"'name":0.030303030303030304,"must":0.030303030303030304,"be":0.030303030303030304,"at":0.030303030303030304,"least":0.030303030303030304,"two":0.030303030303030304,"characters'":0.030303030303030304},"97":{"import":0.03225806451612903,"type":0.03225806451612903,"infer":0.03225806451612903,"from":0.03225806451612903,"'sveltekit-superforms'":0.03225806451612903,"zod":0.03225806451612903,"'sveltekit-superforms":0.03225806451612903,"adapters'":0.03225806451612903,"schema":0.03225806451612903,"'":0.03225806451612903,"js'":0.03225806451612903,"message":0.03225806451612903,"status":0.03225806451612903,"'success'":0.03225806451612903,"'failure'":0.03225806451612903,"text":0.03225806451612903,"string":0.03225806451612903,"const":0.03225806451612903,"form":0.03225806451612903,"await":0.03225806451612903,"supervalidate":0.03225806451612903,"typeof":0.03225806451612903,"loginschema":0.03225806451612903,"lib":0.03225806451612903,"schemas'":0.03225806451612903,"export":0.03225806451612903,"let":0.03225806451612903,"data":0.03225806451612903,"supervalidated":0.03225806451612903,"inferin":0.03225806451612903,"validated":0.03225806451612903},"98":{"import":0.03333333333333333,"defaults":0.03333333333333333,"from":0.03333333333333333,"'sveltekit-superforms'":0.03333333333333333,"getting":0.03333333333333333,"the":0.03333333333333333,"default":0.03333333333333333,"values":0.03333333333333333,"schema":0.03333333333333333,"const":0.03333333333333333,"form":0.03333333333333333,"errors":0.03333333333333333,"enhance":0.03333333333333333,"superform":0.03333333333333333,"zod":0.03333333333333333,"spa":0.03333333333333333,"true":0.03333333333333333,"validators":0.03333333333333333,"supplying":0.03333333333333333,"initial":0.03333333333333333,"data":0.03333333333333333,"can":0.03333333333333333,"be":0.03333333333333333,"partial":0.03333333333333333,"won't":0.03333333333333333,"validated":0.03333333333333333,"initialdata":0.03333333333333333,"name":0.03333333333333333,"'new":0.03333333333333333,"user'":0.03333333333333333},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{"0":0.045454545454545456,"1":0.045454545454545456,"2":0.045454545454545456,"3":0.045454545454545456,"cannot":0.045454545454545456,"post":0.045454545454545456,"the":0.045454545454545456,"string":0.045454545454545456,"delayed":0.045454545454545456,"and":0.045454545454545456,"expect":0.045454545454545456,"it":0.045454545454545456,"to":0.045454545454545456,"be":0.045454545454545456,"parsed":0.045454545454545456,"as":0.045454545454545456,"anymore":0.045454545454545456,"enum":0.045454545454545456,"fetchstatus":0.045454545454545456,"idle":0.045454545454545456,"submitting":0.045454545454545456,"timeout":0.045454545454545456},"105":{"2":0.045454545454545456,"3":0.045454545454545456,"export":0.045454545454545456,"enum":0.045454545454545456,"foo":0.045454545454545456,"a":0.045454545454545456,"b":0.045454545454545456,"const":0.045454545454545456,"schema":0.045454545454545456,"z":0.045454545454545456,"object":0.045454545454545456,"nativeenum":0.045454545454545456,"default":0.045454545454545456,"is":0.045454545454545456,"field":0.045454545454545456,"required":0.045454545454545456,"zodenum":0.045454545454545456,"'a'":0.045454545454545456,"'b'":0.045454545454545456,"'c'":0.045454545454545456,"explicit":0.045454545454545456,"optional":0.045454545454545456},"106":{"const":0.07142857142857142,"form":0.07142857142857142,"enhance":0.07142857142857142,"istainted":0.07142857142857142,"superform":0.07142857142857142,"data":0.07142857142857142,"check":0.07142857142857142,"the":0.07142857142857142,"whole":0.07142857142857142,"if":0.07142857142857142,"a":0.07142857142857142,"part":0.07142857142857142,"of":0.07142857142857142,"'name'":0.07142857142857142},"107":{},"108":{"const":0.125,"form":0.125,"await":0.125,"supervalidate":0.125,"zod":0.125,"schema":0.125,"errors":0.125,"true":0.125},"109":{},"110":{"script":0.0196078431372549,"lang":0.0196078431372549,"ts":0.0196078431372549,"context":0.0196078431372549,"module":0.0196078431372549,"type":0.0196078431372549,"t":0.0196078431372549,"record":0.0196078431372549,"string":0.0196078431372549,"unknown":0.0196078431372549,"generics":0.0196078431372549,"extends":0.0196078431372549,"import":0.0196078431372549,"formfieldproxy":0.0196078431372549,"superform":0.0196078431372549,"formpathleaves":0.0196078431372549,"from":0.0196078431372549,"'sveltekit-superforms'":0.0196078431372549,"export":0.0196078431372549,"let":0.0196078431372549,"field":0.0196078431372549,"label":0.0196078431372549,"''":0.0196078431372549,"const":0.0196078431372549,"value":0.0196078431372549,"errors":0.0196078431372549,"constraints":0.0196078431372549,"if":0.0196078431372549,"br":0.0196078431372549,"input":0.0196078431372549,"name":0.0196078431372549,"text":0.0196078431372549,"aria-invalid":0.0196078431372549,"'true'":0.0196078431372549,"undefined":0.0196078431372549,"bind":0.0196078431372549,"restprops":0.0196078431372549,"span":0.0196078431372549,"class":0.0196078431372549,"invalid":0.0196078431372549,"textinput":0.0196078431372549,"'":0.0196078431372549,"svelte'":0.0196078431372549,"data":0.0196078431372549,"form":0.0196078431372549,"enhance":0.0196078431372549,"method":0.0196078431372549,"post":0.0196078431372549,"use":0.0196078431372549,"button":0.0196078431372549,"submit":0.0196078431372549},"111":{"import":0.1,"superform":0.1,"supervalidate":0.1,"dateproxy":0.1,"from":0.1,"'sveltekit-superforms'":0.1,"zod":0.1,"'sveltekit-superforms":0.1,"adapters'":0.1,"superdebug":0.1},"112":{},"113":{},"114":{"const":0.1111111111111111,"form":0.1111111111111111,"message":0.1111111111111111,"enhance":0.1111111111111111,"superform":0.1111111111111111,"data":0.1111111111111111,"onerror":0.1111111111111111,"result":0.1111111111111111,"error":0.1111111111111111},"115":{},"116":{},"117":{"5":0.023809523809523808,"10":0.023809523809523808,"429":0.023809523809523808,"import":0.023809523809523808,"error":0.023809523809523808,"from":0.023809523809523808,"'":0.023809523809523808,"sveltejs":0.023809523809523808,"kit'":0.023809523809523808,"ratelimiter":0.023809523809523808,"'sveltekit-rate-limiter":0.023809523809523808,"server'":0.023809523809523808,"const":0.023809523809523808,"limiter":0.023809523809523808,"new":0.023809523809523808,"ip":0.023809523809523808,"'h'":0.023809523809523808,"address":0.023809523809523808,"ipua":0.023809523809523808,"'m'":0.023809523809523808,"user":0.023809523809523808,"agent":0.023809523809523808,"export":0.023809523809523808,"actions":0.023809523809523808,"default":0.023809523809523808,"async":0.023809523809523808,"event":0.023809523809523808,"every":0.023809523809523808,"call":0.023809523809523808,"to":0.023809523809523808,"islimited":0.023809523809523808,"counts":0.023809523809523808,"as":0.023809523809523808,"a":0.023809523809523808,"hit":0.023809523809523808,"towards":0.023809523809523808,"the":0.023809523809523808,"rate":0.023809523809523808,"limit":0.023809523809523808,"for":0.023809523809523808,"if":0.023809523809523808,"await":0.023809523809523808},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{"120":0.05263157894736842,"superdebug":0.05263157894736842,"data":0.05263157894736842,"any":0.05263157894736842,"display":0.05263157894736842,"true":0.05263157894736842,"status":0.05263157894736842,"label":0.05263157894736842,"''":0.05263157894736842,"collapsible":0.05263157894736842,"false":0.05263157894736842,"collapsed":0.05263157894736842,"stringtruncate":0.05263157894736842,"raw":0.05263157894736842,"functions":0.05263157894736842,"theme":0.05263157894736842,"'default'":0.05263157894736842,"ref":0.05263157894736842,"htmlpreelement":0.05263157894736842},"124":{},"125":{"superdebug":0.2,"label":0.2,"useful":0.2,"data":0.2,"form":0.2},"126":{"page":0.047619047619047616,"ts":0.047619047619047616,"export":0.047619047619047616,"const":0.047619047619047616,"load":0.047619047619047616,"async":0.047619047619047616,"fetch":0.047619047619047616,"promiseproduct":0.047619047619047616,"'https":0.047619047619047616,"dummyjson":0.047619047619047616,"com":0.047619047619047616,"products":0.047619047619047616,"1'":0.047619047619047616,"then":0.047619047619047616,"response":0.047619047619047616,"json":0.047619047619047616,"return":0.047619047619047616,"superdebug":0.047619047619047616,"label":0.047619047619047616,"product":0.047619047619047616,"data":0.047619047619047616},"127":{"superdebug":0.25,"data":0.25,"form":0.25,"errors":0.25},"128":{"superdebug":0.3333333333333333,"data":0.3333333333333333,"form":0.3333333333333333},"129":{"superdebug":0.3333333333333333,"data":0.3333333333333333,"form":0.3333333333333333},"130":{"superdebug":0.14285714285714285,"data":0.14285714285714285,"form":0.14285714285714285,"theme":0.14285714285714285,"vscode":0.14285714285714285,"--sd-code-date":0.14285714285714285,"lightgreen":0.14285714285714285},"131":{},"132":{"script":0.07692307692307693,"lang":0.07692307692307693,"ts":0.07692307692307693,"import":0.07692307692307693,"page":0.07692307692307693,"from":0.07692307692307693,"'":0.07692307692307693,"app":0.07692307692307693,"stores'":0.07692307692307693,"superdebug":0.07692307692307693,"label":0.07692307692307693,"data":0.07692307692307693,"collapsible":0.07692307692307693},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{"const":0.058823529411764705,"loginform":0.058823529411764705,"await":0.058823529411764705,"supervalidate":0.058823529411764705,"loginschema":0.058823529411764705,"-":0.058823529411764705,"id":0.058823529411764705,"'loginform'":0.058823529411764705,"registerform":0.058823529411764705,"registerschema":0.058823529411764705,"'registerform'":0.058823529411764705,"return":0.058823529411764705,"form1":0.058823529411764705,"schema":0.058823529411764705,"'form1'":0.058823529411764705,"form2":0.058823529411764705,"'form2'":0.058823529411764705},"140":{"1":0.02702702702702703,"2":0.02702702702702703,"import":0.02702702702702703,"defaultvalues":0.02702702702702703,"from":0.02702702702702703,"'sveltekit-superforms":0.02702702702702703,"server'":0.02702702702702703,"z":0.02702702702702703,"'zod'":0.02702702702702703,"const":0.02702702702702703,"schema":0.02702702702702703,"object":0.02702702702702703,"name":0.02702702702702703,"string":0.02702702702702703,"min":0.02702702702702703,"tags":0.02702702702702703,"array":0.02702702702702703,"default":0.02702702702702703,"'a'":0.02702702702702703,"'b'":0.02702702702702703,"returns":0.02702702702702703,"''":0.02702702702702703,"defaults":0.02702702702702703,"which":0.02702702702702703,"is":0.02702702702702703,"the":0.02702702702702703,"same":0.02702702702702703,"as":0.02702702702702703,"form":0.02702702702702703,"data":0.02702702702702703,"in":0.02702702702702703,"supervalidate":0.02702702702702703,"when":0.02702702702702703,"called":0.02702702702702703,"with":0.02702702702702703,"only":0.02702702702702703,"await":0.02702702702702703},"141":{"script":0.045454545454545456,"lang":0.045454545454545456,"ts":0.045454545454545456,"import":0.045454545454545456,"schema":0.045454545454545456,"from":0.045454545454545456,"'":0.045454545454545456,"lib":0.045454545454545456,"schemas'":0.045454545454545456,"supervalidatesync":0.045454545454545456,"superform":0.045454545454545456,"'sveltekit-superforms":0.045454545454545456,"client'":0.045454545454545456,"same":0.045454545454545456,"as":0.045454545454545456,"returning":0.045454545454545456,"form":0.045454545454545456,"in":0.045454545454545456,"a":0.045454545454545456,"load":0.045454545454545456,"function":0.045454545454545456,"const":0.045454545454545456},"142":{"1":0.037037037037037035,"import":0.037037037037037035,"seterror":0.037037037037037035,"from":0.037037037037037035,"'sveltekit-superforms":0.037037037037037035,"server'":0.037037037037037035,"const":0.037037037037037035,"i":0.037037037037037035,"-":0.037037037037037035,"form":0.037037037037037035,"'tags'":0.037037037037037035,"'name'":0.037037037037037035,"'incorrect":0.037037037037037035,"name'":0.037037037037037035,"tags":0.037037037037037035,"name":0.037037037037037035,"intproxy":0.037037037037037035,"client'":0.037037037037037035,"superform":0.037037037037037035,"data":0.037037037037037035,"idproxy":0.037037037037037035,"'user'":0.037037037037037035,"'profile'":0.037037037037037035,"'id'":0.037037037037037035,"'user":0.037037037037037035,"profile":0.037037037037037035,"id'":0.037037037037037035},"143":{},"144":{},"145":{},"146":{},"147":{"3":0.06666666666666667,"const":0.06666666666666667,"schema":0.06666666666666667,"z":0.06666666666666667,"object":0.06666666666666667,"tags":0.06666666666666667,"string":0.06666666666666667,"array":0.06666666666666667,"max":0.06666666666666667,"form":0.06666666666666667,"errors":0.06666666666666667,"superform":0.06666666666666667,"data":0.06666666666666667,"if":0.06666666666666667,"_errors":0.06666666666666667},"148":{},"149":{},"150":{},"151":{},"152":{"0":0.1,"const":0.1,"schema":0.1,"z":0.1,"object":0.1,"undecided":0.1,"union":0.1,"string":0.1,"number":0.1,"default":0.1},"153":{},"154":{},"155":{},"156":{"script":0.024390243902439025,"lang":0.024390243902439025,"ts":0.024390243902439025,"const":0.024390243902439025,"form":0.024390243902439025,"enhance":0.024390243902439025,"tainted":0.024390243902439025,"istainted":0.024390243902439025,"superform":0.024390243902439025,"data":0.024390243902439025,"check":0.024390243902439025,"the":0.024390243902439025,"whole":0.024390243902439025,"if":0.024390243902439025,"console":0.024390243902439025,"log":0.024390243902439025,"'the":0.024390243902439025,"is":0.024390243902439025,"tainted'":0.024390243902439025,"a":0.024390243902439025,"part":0.024390243902439025,"of":0.024390243902439025,"'name'":0.024390243902439025,"name":0.024390243902439025,"field":0.024390243902439025,"--":0.024390243902439025,"make":0.024390243902439025,"function":0.024390243902439025,"reactive":0.024390243902439025,"by":0.024390243902439025,"passing":0.024390243902439025,"store":0.024390243902439025,"button":0.024390243902439025,"disabled":0.024390243902439025,"submit":0.024390243902439025,"it":0.024390243902439025,"even":0.024390243902439025,"works":0.024390243902439025,"with":0.024390243902439025,"individual":0.024390243902439025,"fields":0.024390243902439025},"157":{},"158":{},"159":{"const":0.07142857142857142,"schema":0.07142857142857142,"z":0.07142857142857142,"object":0.07142857142857142,"num":0.07142857142857142,"number":0.07142857142857142,"proxy":0.07142857142857142,"intproxy":0.07142857142857142,"form":0.07142857142857142,"'num'":0.07142857142857142,"empty":0.07142857142857142,"'zero'":0.07142857142857142,"initiallyemptyifzero":0.07142857142857142,"true":0.07142857142857142},"160":{"import":0.1,"superform":0.1,"supervalidate":0.1,"dateproxy":0.1,"from":0.1,"'sveltekit-superforms'":0.1,"zod":0.1,"'sveltekit-superforms":0.1,"adapters'":0.1,"superdebug":0.1},"161":{},"162":{},"163":{},"164":{},"165":{"script":0.022727272727272728,"lang":0.022727272727272728,"ts":0.022727272727272728,"export":0.022727272727272728,"let":0.022727272727272728,"data":0.022727272727272728,"const":0.022727272727272728,"form":0.022727272727272728,"constraints":0.022727272727272728,"superform":0.022727272727272728,"input":0.022727272727272728,"name":0.022727272727272728,"email":0.022727272727272728,"type":0.022727272727272728,"bind":0.022727272727272728,"value":0.022727272727272728,"pattern":0.022727272727272728,"string":0.022727272727272728,"the":0.022727272727272728,"first":0.022727272727272728,"validator":0.022727272727272728,"with":0.022727272727272728,"a":0.022727272727272728,"regexp":0.022727272727272728,"step":0.022727272727272728,"number":0.022727272727272728,"'any'":0.022727272727272728,"minlength":0.022727272727272728,"minimum":0.022727272727272728,"length":0.022727272727272728,"maxlength":0.022727272727272728,"maximum":0.022727272727272728,"min":0.022727272727272728,"if":0.022727272727272728,"iso":0.022727272727272728,"date":0.022727272727272728,"max":0.022727272727272728,"required":0.022727272727272728,"true":0.022727272727272728,"not":0.022727272727272728,"nullable":0.022727272727272728,"nullish":0.022727272727272728,"or":0.022727272727272728,"optional":0.022727272727272728},"166":{"0":0.058823529411764705,"10":0.058823529411764705,"input":0.058823529411764705,"name":0.058823529411764705,"date":0.058823529411764705,"type":0.058823529411764705,"aria-invalid":0.058823529411764705,"errors":0.058823529411764705,"'true'":0.058823529411764705,"undefined":0.058823529411764705,"bind":0.058823529411764705,"value":0.058823529411764705,"proxydate":0.058823529411764705,"constraints":0.058823529411764705,"min":0.058823529411764705,"tostring":0.058823529411764705,"slice":0.058823529411764705},"167":{"const":0.05,"form":0.05,"enhance":0.05,"constraints":0.05,"validate":0.05,"validateform":0.05,"superform":0.05,"data":0.05,"validators":0.05,"clientvalidationadapter":0.05,"s":0.05,"'clear'":0.05,"false":0.05,"validationmethod":0.05,"'auto'":0.05,"'oninput'":0.05,"'onblur'":0.05,"'submit-only'":0.05,"customvalidity":0.05,"boolean":0.05},"168":{"validators":0.05263157894736842,"clientvalidationadapter":0.05263157894736842,"s":0.05263157894736842,"'clear'":0.05263157894736842,"false":0.05263157894736842,"import":0.05263157894736842,"valibotclient":0.05263157894736842,"from":0.05263157894736842,"'sveltekit-superforms":0.05263157894736842,"adapters'":0.05263157894736842,"schema":0.05263157894736842,"'":0.05263157894736842,"js'":0.05263157894736842,"const":0.05263157894736842,"form":0.05263157894736842,"errors":0.05263157894736842,"enhance":0.05263157894736842,"superform":0.05263157894736842,"data":0.05263157894736842},"169":{"import":0.038461538461538464,"valibot":0.038461538461538464,"from":0.038461538461538464,"'sveltekit-superforms":0.038461538461538464,"adapters'":0.038461538461538464,"schema":0.038461538461538464,"partialschema":0.038461538461538464,"'":0.038461538461538464,"js'":0.038461538461538464,"const":0.038461538461538464,"form":0.038461538461538464,"errors":0.038461538461538464,"enhance":0.038461538461538464,"options":0.038461538461538464,"superform":0.038461538461538464,"data":0.038461538461538464,"validate":0.038461538461538464,"the":0.038461538461538464,"first":0.038461538461538464,"step":0.038461538461538464,"of":0.038461538461538464,"validators":0.038461538461538464,"when":0.038461538461538464,"moving":0.038461538461538464,"to":0.038461538461538464,"last":0.038461538461538464},"170":{"validationmethod":0.2,"'auto'":0.2,"'oninput'":0.2,"'onblur'":0.2,"'onsubmit'":0.2},"171":{},"172":{"1":0.02127659574468085,"const":0.02127659574468085,"form":0.02127659574468085,"enhance":0.02127659574468085,"validate":0.02127659574468085,"superform":0.02127659574468085,"data":0.02127659574468085,"validators":0.02127659574468085,"zod":0.02127659574468085,"schema":0.02127659574468085,"required":0.02127659574468085,"option":0.02127659574468085,"for":0.02127659574468085,"to":0.02127659574468085,"work":0.02127659574468085,"simplest":0.02127659574468085,"case":0.02127659574468085,"what's":0.02127659574468085,"in":0.02127659574468085,"the":0.02127659574468085,"field":0.02127659574468085,"right":0.02127659574468085,"now":0.02127659574468085,"'name'":0.02127659574468085,"without":0.02127659574468085,"updating":0.02127659574468085,"error":0.02127659574468085,"checking":0.02127659574468085,"nameerrors":0.02127659574468085,"await":0.02127659574468085,"update":0.02127659574468085,"false":0.02127659574468085,"and":0.02127659574468085,"with":0.02127659574468085,"a":0.02127659574468085,"custom":0.02127659574468085,"value":0.02127659574468085,"'test'":0.02127659574468085,"errors":0.02127659574468085,"only":0.02127659574468085,"'errors'":0.02127659574468085,"nested":0.02127659574468085,"also":0.02127659574468085,"taint":0.02127659574468085,"'tags":0.02127659574468085,"name'":0.02127659574468085,"true":0.02127659574468085},"173":{"const":0.030303030303030304,"form":0.030303030303030304,"enhance":0.030303030303030304,"validateform":0.030303030303030304,"superform":0.030303030303030304,"data":0.030303030303030304,"validators":0.030303030303030304,"zod":0.030303030303030304,"schema":0.030303030303030304,"required":0.030303030303030304,"option":0.030303030303030304,"for":0.030303030303030304,"validate":0.030303030303030304,"to":0.030303030303030304,"work":0.030303030303030304,"result":0.030303030303030304,"await":0.030303030303030304,"if":0.030303030303030304,"valid":0.030303030303030304,"you":0.030303030303030304,"can":0.030303030303030304,"use":0.030303030303030304,"the":0.030303030303030304,"update":0.030303030303030304,"trigger":0.030303030303030304,"a":0.030303030303030304,"client-side":0.030303030303030304,"validation":0.030303030303030304,"true":0.030303030303030304,"or":0.030303030303030304,"partially":0.030303030303030304,"result2":0.030303030303030304,"partialschema":0.030303030303030304},"174":{"needs":0.08333333333333333,"to":0.08333333333333333,"be":0.08333333333333333,"a":0.08333333333333333,"string":0.08333333333333333,"errors":0.08333333333333333,"username":0.08333333333333333,"'username":0.08333333333333333,"is":0.08333333333333333,"already":0.08333333333333333,"taken":0.08333333333333333,"'":0.08333333333333333},"175":{},"176":{"script":0.09090909090909091,"lang":0.09090909090909091,"ts":0.09090909090909091,"const":0.09090909090909091,"form":0.09090909090909091,"enhance":0.09090909090909091,"superform":0.09090909090909091,"data":0.09090909090909091,"method":0.09090909090909091,"post":0.09090909090909091,"use":0.09090909090909091},"177":{"const":0.09090909090909091,"form":0.09090909090909091,"enhance":0.09090909090909091,"reset":0.09090909090909091,"superform":0.09090909090909091,"data":0.09090909090909091,"applyaction":0.09090909090909091,"true":0.09090909090909091,"invalidateall":0.09090909090909091,"'force'":0.09090909090909091,"resetform":0.09090909090909091},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{"const":0.06666666666666667,"form":0.06666666666666667,"enhance":0.06666666666666667,"superform":0.06666666666666667,"data":0.06666666666666667,"on":0.06666666666666667,"actionresult":0.06666666666666667,"error":0.06666666666666667,"render":0.06666666666666667,"the":0.06666666666666667,"nearest":0.06666666666666667,"svelte":0.06666666666666667,"page":0.06666666666666667,"onerror":0.06666666666666667,"'apply'":0.06666666666666667},"184":{"script":0.038461538461538464,"lang":0.038461538461538464,"ts":0.038461538461538464,"const":0.038461538461538464,"form":0.038461538461538464,"errors":0.038461538461538464,"superform":0.038461538461538464,"data":0.038461538461538464,"method":0.038461538461538464,"post":0.038461538461538464,"label":0.038461538461538464,"for":0.038461538461538464,"name":0.038461538461538464,"input":0.038461538461538464,"aria-invalid":0.038461538461538464,"'true'":0.038461538461538464,"undefined":0.038461538461538464,"bind":0.038461538461538464,"value":0.038461538461538464,"if":0.038461538461538464,"span":0.038461538461538464,"class":0.038461538461538464,"invalid":0.038461538461538464,"div":0.038461538461538464,"button":0.038461538461538464,"submit":0.038461538461538464},"185":{"400":0.02564102564102564,"import":0.02564102564102564,"seterror":0.02564102564102564,"supervalidate":0.02564102564102564,"fail":0.02564102564102564,"from":0.02564102564102564,"'sveltekit-superforms'":0.02564102564102564,"zod":0.02564102564102564,"'sveltekit-superforms":0.02564102564102564,"adapters'":0.02564102564102564,"export":0.02564102564102564,"const":0.02564102564102564,"actions":0.02564102564102564,"default":0.02564102564102564,"async":0.02564102564102564,"request":0.02564102564102564,"form":0.02564102564102564,"await":0.02564102564102564,"schema":0.02564102564102564,"if":0.02564102564102564,"valid":0.02564102564102564,"return":0.02564102564102564,"db":0.02564102564102564,"users":0.02564102564102564,"find":0.02564102564102564,"where":0.02564102564102564,"email":0.02564102564102564,"data":0.02564102564102564,"'email'":0.02564102564102564,"'e-mail":0.02564102564102564,"already":0.02564102564102564,"exists":0.02564102564102564,"'":0.02564102564102564,"post":0.02564102564102564,"tags":0.02564102564102564,"i":0.02564102564102564,"name":0.02564102564102564,"'invalid":0.02564102564102564,"tag":0.02564102564102564},"186":{},"187":{"123":0.02,"export":0.02,"const":0.02,"load":0.02,"async":0.02,"no":0.02,"errors":0.02,"set":0.02,"since":0.02,"data":0.02,"is":0.02,"sent":0.02,"to":0.02,"supervalidate":0.02,"form":0.02,"await":0.02,"zod":0.02,"schema":0.02,"but":0.02,"can":0.02,"still":0.02,"be":0.02,"added":0.02,"with":0.02,"an":0.02,"option":0.02,"form2":0.02,"true":0.02,"initialdata":0.02,"test":0.02,"populated":0.02,"so":0.02,"will":0.02,"if":0.02,"validation":0.02,"fails":0.02,"even":0.02,"false":0.02,"actions":0.02,"default":0.02,"request":0.02,"posted":0.02,"unless":0.02,"we":0.02,"turn":0.02,"them":0.02,"off":0.02,"which":0.02,"rare":0.02,"in":0.02},"188":{"const":0.04,"form":0.04,"enhance":0.04,"errors":0.04,"allerrors":0.04,"superform":0.04,"data":0.04,"errorselector":0.04,"string":0.04,"undefined":0.04,"'":0.04,"aria-invalid":0.04,"true":0.04,"data-invalid":0.04,"scrolltoerror":0.04,"'auto'":0.04,"'smooth'":0.04,"'off'":0.04,"boolean":0.04,"scrollintoviewoptions":0.04,"autofocusonerror":0.04,"'detect'":0.04,"stickynavbar":0.04,"customvalidity":0.04,"false":0.04},"189":{"input":0.09090909090909091,"type":0.09090909090909091,"email":0.09090909090909091,"name":0.09090909090909091,"bind":0.09090909090909091,"value":0.09090909090909091,"form":0.09090909090909091,"aria-invalid":0.09090909090909091,"errors":0.09090909090909091,"'true'":0.09090909090909091,"undefined":0.09090909090909091},"190":{},"191":{},"192":{},"193":{"const":0.038461538461538464,"form":0.038461538461538464,"enhance":0.038461538461538464,"superform":0.038461538461538464,"data":0.038461538461538464,"customvalidity":0.038461538461538464,"true":0.038461538461538464,"not":0.038461538461538464,"required":0.038461538461538464,"but":0.038461538461538464,"will":0.038461538461538464,"use":0.038461538461538464,"client-side":0.038461538461538464,"validation":0.038461538461538464,"for":0.038461538461538464,"real-time":0.038461538461538464,"error":0.038461538461538464,"display":0.038461538461538464,"validators":0.038461538461538464,"schema":0.038461538461538464,"input":0.038461538461538464,"type":0.038461538461538464,"text":0.038461538461538464,"name":0.038461538461538464,"bind":0.038461538461538464,"value":0.038461538461538464},"194":{"3":0.05555555555555555,"8":0.05555555555555555,"const":0.05555555555555555,"refined":0.05555555555555555,"z":0.05555555555555555,"object":0.05555555555555555,"tags":0.05555555555555555,"string":0.05555555555555555,"array":0.05555555555555555,"max":0.05555555555555555,"password":0.05555555555555555,"min":0.05555555555555555,"confirm":0.05555555555555555,"refine":0.05555555555555555,"data":0.05555555555555555,"passwords":0.05555555555555555,"didn't":0.05555555555555555,"match":0.05555555555555555},"195":{"3":0.05,"8":0.05,"const":0.05,"refined":0.05,"z":0.05,"object":0.05,"tags":0.05,"string":0.05,"array":0.05,"max":0.05,"password":0.05,"min":0.05,"confirm":0.05,"refine":0.05,"data":0.05,"message":0.05,"passwords":0.05,"didn't":0.05,"match":0.05,"path":0.05},"196":{"if":0.07692307692307693,"allerrors":0.07692307692307693,"length":0.07692307692307693,"ul":0.07692307692307693,"each":0.07692307692307693,"as":0.07692307692307693,"error":0.07692307692307693,"li":0.07692307692307693,"b":0.07692307692307693,"path":0.07692307692307693,"messages":0.07692307692307693,"join":0.07692307692307693,"'":0.07692307692307693},"197":{"2":0.06666666666666667,"const":0.06666666666666667,"schema":0.06666666666666667,"z":0.06666666666666667,"object":0.06666666666666667,"name":0.06666666666666667,"string":0.06666666666666667,"min":0.06666666666666667,"is":0.06666666666666667,"too":0.06666666666666667,"short":0.06666666666666667,"email":0.06666666666666667,"that's":0.06666666666666667,"a":0.06666666666666667,"strange":0.06666666666666667},"198":{},"199":{},"200":{},"201":{"onsubmit":0.1,"action":0.1,"formdata":0.1,"formelement":0.1,"controller":0.1,"submitter":0.1,"cancel":0.1,"jsondata":0.1,"validators":0.1,"void":0.1},"202":{"import":0.030303030303030304,"superform":0.030303030303030304,"type":0.030303030303030304,"formpath":0.030303030303030304,"from":0.030303030303030304,"'sveltekit-superforms'":0.030303030303030304,"const":0.030303030303030304,"form":0.030303030303030304,"enhance":0.030303030303030304,"istainted":0.030303030303030304,"data":0.030303030303030304,"datatype":0.030303030303030304,"'json'":0.030303030303030304,"onsubmit":0.030303030303030304,"jsondata":0.030303030303030304,"only":0.030303030303030304,"post":0.030303030303030304,"tainted":0.030303030303030304,"top-level":0.030303030303030304,"fields":0.030303030303030304,"tainteddata":0.030303030303030304,"object":0.030303030303030304,"fromentries":0.030303030303030304,"entries":0.030303030303030304,"filter":0.030303030303030304,"key":0.030303030303030304,"return":0.030303030303030304,"as":0.030303030303030304,"typeof":0.030303030303030304,"set":0.030303030303030304,"to":0.030303030303030304,"be":0.030303030303030304,"posted":0.030303030303030304},"203":{"1":0.04,"5":0.04,"import":0.04,"superform":0.04,"from":0.04,"'sveltekit-superforms'":0.04,"zod":0.04,"'sveltekit-superforms":0.04,"adapters'":0.04,"customschema":0.04,"'":0.04,"schemas":0.04,"js'":0.04,"let":0.04,"step":0.04,"const":0.04,"laststep":0.04,"form":0.04,"enhance":0.04,"data":0.04,"onsubmit":0.04,"validators":0.04,"if":0.04,"else":0.04,"false":0.04},"204":{"onresult":0.2,"result":0.2,"formelement":0.2,"cancel":0.2,"void":0.2},"205":{"const":0.07142857142857142,"form":0.07142857142857142,"enhance":0.07142857142857142,"superform":0.07142857142857142,"data":0.07142857142857142,"applyaction":0.07142857142857142,"false":0.07142857142857142,"onresult":0.07142857142857142,"result":0.07142857142857142,"if":0.07142857142857142,"type":0.07142857142857142,"'redirect'":0.07142857142857142,"goto":0.07142857142857142,"location":0.07142857142857142},"206":{"123":0.02702702702702703,"onupdate":0.02702702702702703,"form":0.02702702702702703,"formelement":0.02702702702702703,"cancel":0.02702702702702703,"result":0.02702702702702703,"void":0.02702702702702703,"import":0.02702702702702703,"superform":0.02702702702702703,"type":0.02702702702702703,"formresult":0.02702702702702703,"from":0.02702702702702703,"'sveltekit-superforms'":0.02702702702702703,"actiondata":0.02702702702702703,"pagedata":0.02702702702702703,"'":0.02702702702702703,"types":0.02702702702702703,"js'":0.02702702702702703,"export":0.02702702702702703,"let":0.02702702702702703,"data":0.02702702702702703,"const":0.02702702702702703,"errors":0.02702702702702703,"message":0.02702702702702703,"enhance":0.02702702702702703,"action":0.02702702702702703,"as":0.02702702702702703,"if":0.02702702702702703,"you've":0.02702702702702703,"returned":0.02702702702702703,"the":0.02702702702702703,"return":0.02702702702702703,"extra":0.02702702702702703,"valid":0.02702702702702703,"do":0.02702702702702703,"something":0.02702702702702703,"with":0.02702702702702703},"207":{"onupdated":0.041666666666666664,"form":0.041666666666666664,"void":0.041666666666666664,"const":0.041666666666666664,"enhance":0.041666666666666664,"superform":0.041666666666666664,"data":0.041666666666666664,"if":0.041666666666666664,"valid":0.041666666666666664,"successful":0.041666666666666664,"post":0.041666666666666664,"do":0.041666666666666664,"some":0.041666666666666664,"more":0.041666666666666664,"client-side":0.041666666666666664,"stuff":0.041666666666666664,"like":0.041666666666666664,"showing":0.041666666666666664,"a":0.041666666666666664,"toast":0.041666666666666664,"notification":0.041666666666666664,"message":0.041666666666666664,"icon":0.041666666666666664,"'":0.041666666666666664},"208":{"onerror":0.07142857142857142,"result":0.07142857142857142,"void":0.07142857142857142,"'apply'":0.07142857142857142,"app":0.07142857142857142,"error":0.07142857142857142,"message":0.07142857142857142,"string":0.07142857142857142,"const":0.07142857142857142,"form":0.07142857142857142,"enhance":0.07142857142857142,"superform":0.07142857142857142,"data":0.07142857142857142,"unknown":0.07142857142857142},"209":{"const":0.038461538461538464,"form":0.038461538461538464,"errors":0.038461538461538464,"enhance":0.038461538461538464,"superform":0.038461538461538464,"data":0.038461538461538464,"onchange":0.038461538461538464,"event":0.038461538461538464,"if":0.038461538461538464,"target":0.038461538461538464,"input":0.038461538461538464,"console":0.038461538461538464,"log":0.038461538461538464,"path":0.038461538461538464,"'was":0.038461538461538464,"changed":0.038461538461538464,"with'":0.038461538461538464,"'in":0.038461538461538464,"form'":0.038461538461538464,"formelement":0.038461538461538464,"else":0.038461538461538464,"programmatic":0.038461538461538464,"'fields":0.038461538461538464,"updated":0.038461538461538464,"'":0.038461538461538464,"paths":0.038461538461538464},"210":{"100":0.017857142857142856,"400":0.017857142857142856,"note":0.017857142857142856,"import":0.017857142857142856,"fail":0.017857142857142856,"from":0.017857142857142856,"superforms":0.017857142857142856,"not":0.017857142857142856,"sveltejs":0.017857142857142856,"kit":0.017857142857142856,"supervalidate":0.017857142857142856,"message":0.017857142857142856,"'sveltekit-superforms'":0.017857142857142856,"zod":0.017857142857142856,"'sveltekit-superforms":0.017857142857142856,"adapters'":0.017857142857142856,"z":0.017857142857142856,"'zod'":0.017857142857142856,"const":0.017857142857142856,"schema":0.017857142857142856,"object":0.017857142857142856,"image":0.017857142857142856,"instanceof":0.017857142857142856,"file":0.017857142857142856,"'please":0.017857142857142856,"upload":0.017857142857142856,"a":0.017857142857142856,"'":0.017857142857142856,"refine":0.017857142857142856,"f":0.017857142857142856,"size":0.017857142857142856,"100_000":0.017857142857142856,"'max":0.017857142857142856,"kb":0.017857142857142856,"export":0.017857142857142856,"load":0.017857142857142856,"async":0.017857142857142856,"return":0.017857142857142856,"form":0.017857142857142856,"await":0.017857142857142856,"actions":0.017857142857142856,"default":0.017857142857142856,"request":0.017857142857142856,"if":0.017857142857142856,"valid":0.017857142857142856,"todo":0.017857142857142856,"do":0.017857142857142856,"something":0.017857142857142856,"with":0.017857142857142856,"the":0.017857142857142856,"console":0.017857142857142856,"log":0.017857142857142856,"data":0.017857142857142856,"'you":0.017857142857142856,"have":0.017857142857142856,"uploaded":0.017857142857142856},"211":{"400":0.02857142857142857,"import":0.02857142857142857,"message":0.02857142857142857,"seterror":0.02857142857142857,"fail":0.02857142857142857,"from":0.02857142857142857,"'sveltekit-superforms'":0.02857142857142857,"and":0.02857142857142857,"the":0.02857142857142857,"custom":0.02857142857142857,"handles":0.02857142857142857,"this":0.02857142857142857,"automatically":0.02857142857142857,"if":0.02857142857142857,"form":0.02857142857142857,"valid":0.02857142857142857,"return":0.02857142857142857,"'posted":0.02857142857142857,"ok":0.02857142857142857,"'":0.02857142857142857,"'image'":0.02857142857142857,"'could":0.02857142857142857,"not":0.02857142857142857,"process":0.02857142857142857,"file":0.02857142857142857,"importing":0.02857142857142857,"default":0.02857142857142857,"sveltejs":0.02857142857142857,"kit'":0.02857142857142857,"withfiles":0.02857142857142857,"with":0.02857142857142857,"kit":0.02857142857142857,"when":0.02857142857142857,"returning":0.02857142857142857,"just":0.02857142857142857},"212":{},"213":{"0":0.015873015873015872,"100":0.015873015873015872,"export":0.015873015873015872,"const":0.015873015873015872,"schema":0.015873015873015872,"z":0.015873015873015872,"object":0.015873015873015872,"image":0.015873015873015872,"instanceof":0.015873015873015872,"file":0.015873015873015872,"message":0.015873015873015872,"'please":0.015873015873015872,"upload":0.015873015873015872,"a":0.015873015873015872,"'":0.015873015873015872,"refine":0.015873015873015872,"f":0.015873015873015872,"size":0.015873015873015872,"100_000":0.015873015873015872,"'max":0.015873015873015872,"kb":0.015873015873015872,"script":0.015873015873015872,"lang":0.015873015873015872,"ts":0.015873015873015872,"import":0.015873015873015872,"superform":0.015873015873015872,"fileproxy":0.015873015873015872,"from":0.015873015873015872,"'sveltekit-superforms'":0.015873015873015872,"zodclient":0.015873015873015872,"'sveltekit-superforms":0.015873015873015872,"adapters'":0.015873015873015872,"js'":0.015873015873015872,"let":0.015873015873015872,"data":0.015873015873015872,"form":0.015873015873015872,"enhance":0.015873015873015872,"errors":0.015873015873015872,"validators":0.015873015873015872,"'image'":0.015873015873015872,"method":0.015873015873015872,"post":0.015873015873015872,"enctype":0.015873015873015872,"multipart":0.015873015873015872,"form-data":0.015873015873015872,"use":0.015873015873015872,"input":0.015873015873015872,"type":0.015873015873015872,"name":0.015873015873015872,"accept":0.015873015873015872,"png":0.015873015873015872,"jpeg":0.015873015873015872,"bind":0.015873015873015872,"files":0.015873015873015872,"if":0.015873015873015872,"span":0.015873015873015872,"button":0.015873015873015872,"submit":0.015873015873015872,"on":0.015873015873015872,"e":0.015873015873015872,"currenttarget":0.015873015873015872,"item":0.015873015873015872,"as":0.015873015873015872},"214":{"100":0.015873015873015872,"const":0.015873015873015872,"schema":0.015873015873015872,"z":0.015873015873015872,"object":0.015873015873015872,"images":0.015873015873015872,"instanceof":0.015873015873015872,"file":0.015873015873015872,"message":0.015873015873015872,"'please":0.015873015873015872,"upload":0.015873015873015872,"a":0.015873015873015872,"'":0.015873015873015872,"refine":0.015873015873015872,"f":0.015873015873015872,"size":0.015873015873015872,"100_000":0.015873015873015872,"'max":0.015873015873015872,"kb":0.015873015873015872,"array":0.015873015873015872,"script":0.015873015873015872,"lang":0.015873015873015872,"ts":0.015873015873015872,"import":0.015873015873015872,"superform":0.015873015873015872,"filesproxy":0.015873015873015872,"from":0.015873015873015872,"'sveltekit-superforms'":0.015873015873015872,"zodclient":0.015873015873015872,"'sveltekit-superforms":0.015873015873015872,"adapters'":0.015873015873015872,"js'":0.015873015873015872,"export":0.015873015873015872,"let":0.015873015873015872,"data":0.015873015873015872,"form":0.015873015873015872,"enhance":0.015873015873015872,"errors":0.015873015873015872,"validators":0.015873015873015872,"files":0.015873015873015872,"'images'":0.015873015873015872,"method":0.015873015873015872,"post":0.015873015873015872,"enctype":0.015873015873015872,"multipart":0.015873015873015872,"form-data":0.015873015873015872,"use":0.015873015873015872,"input":0.015873015873015872,"type":0.015873015873015872,"multiple":0.015873015873015872,"name":0.015873015873015872,"accept":0.015873015873015872,"image":0.015873015873015872,"png":0.015873015873015872,"jpeg":0.015873015873015872,"bind":0.015873015873015872,"if":0.015873015873015872,"span":0.015873015873015872,"button":0.015873015873015872,"submit":0.015873015873015872,"on":0.015873015873015872,"e":0.015873015873015872,"currenttarget":0.015873015873015872},"215":{"400":0.037037037037037035,"export":0.037037037037037035,"const":0.037037037037037035,"actions":0.037037037037037035,"default":0.037037037037037035,"async":0.037037037037037035,"request":0.037037037037037035,"formdata":0.037037037037037035,"await":0.037037037037037035,"form":0.037037037037037035,"supervalidate":0.037037037037037035,"zod":0.037037037037037035,"schema":0.037037037037037035,"if":0.037037037037037035,"valid":0.037037037037037035,"return":0.037037037037037035,"fail":0.037037037037037035,"withfiles":0.037037037037037035,"image":0.037037037037037035,"get":0.037037037037037035,"'image'":0.037037037037037035,"instanceof":0.037037037037037035,"file":0.037037037037037035,"validate":0.037037037037037035,"and":0.037037037037037035,"process":0.037037037037037035,"the":0.037037037037037035},"216":{},"217":{},"218":{"const":0.125,"form":0.125,"message":0.125,"superform":0.125,"data":0.125,"if":0.125,"div":0.125,"class":0.125},"219":{"200":0.017857142857142856,"400":0.017857142857142856,"403":0.017857142857142856,"import":0.017857142857142856,"message":0.017857142857142856,"supervalidate":0.017857142857142856,"from":0.017857142857142856,"'sveltekit-superforms'":0.017857142857142856,"zod":0.017857142857142856,"'sveltekit-superforms":0.017857142857142856,"adapters'":0.017857142857142856,"export":0.017857142857142856,"const":0.017857142857142856,"actions":0.017857142857142856,"default":0.017857142857142856,"async":0.017857142857142856,"request":0.017857142857142856,"form":0.017857142857142856,"await":0.017857142857142856,"schema":0.017857142857142856,"if":0.017857142857142856,"valid":0.017857142857142856,"will":0.017857142857142856,"return":0.017857142857142856,"fail":0.017857142857142856,"since":0.017857142857142856,"isn't":0.017857142857142856,"'invalid":0.017857142857142856,"form'":0.017857142857142856,"data":0.017857142857142856,"email":0.017857142857142856,"includes":0.017857142857142856,"'spam'":0.017857142857142856,"also":0.017857142857142856,"status":0.017857142857142856,"is":0.017857142857142856,"be":0.017857142857142856,"set":0.017857142857142856,"to":0.017857142857142856,"false":0.017857142857142856,"'no":0.017857142857142856,"spam":0.017857142857142856,"please'":0.017857142857142856,"just":0.017857142857142856,"returns":0.017857142857142856,"with":0.017857142857142856,"the":0.017857142857142856,"and":0.017857142857142856,"code":0.017857142857142856,"'valid":0.017857142857142856,"'":0.017857142857142856,"text":0.017857142857142856,"'user":0.017857142857142856,"created'":0.017857142857142856,"id":0.017857142857142856,"newid":0.017857142857142856},"220":{"200":0.01818181818181818,"400":0.01818181818181818,"import":0.01818181818181818,"type":0.01818181818181818,"infer":0.01818181818181818,"supervalidate":0.01818181818181818,"from":0.01818181818181818,"'sveltekit-superforms'":0.01818181818181818,"zod":0.01818181818181818,"'sveltekit-superforms":0.01818181818181818,"adapters'":0.01818181818181818,"inferred":0.01818181818181818,"schema":0.01818181818181818,"as":0.01818181818181818,"first":0.01818181818181818,"parameter":0.01818181818181818,"message":0.01818181818181818,"second":0.01818181818181818,"const":0.01818181818181818,"form":0.01818181818181818,"await":0.01818181818181818,"typeof":0.01818181818181818,"string":0.01818181818181818,"event":0.01818181818181818,"status":0.01818181818181818,"'error'":0.01818181818181818,"'success'":0.01818181818181818,"'warning'":0.01818181818181818,"text":0.01818181818181818,"declare":0.01818181818181818,"global":0.01818181818181818,"namespace":0.01818181818181818,"app":0.01818181818181818,"interface":0.01818181818181818,"error":0.01818181818181818,"locals":0.01818181818181818,"pagedata":0.01818181818181818,"platform":0.01818181818181818,"superforms":0.01818181818181818,"script":0.01818181818181818,"lang":0.01818181818181818,"ts":0.01818181818181818,"'":0.01818181818181818,"types":0.01818181818181818,"js'":0.01818181818181818,"export":0.01818181818181818,"let":0.01818181818181818,"data":0.01818181818181818,"superform":0.01818181818181818,"if":0.01818181818181818,"div":0.01818181818181818,"class":0.01818181818181818,"success":0.01818181818181818,"page":0.01818181818181818,"stores'":0.01818181818181818},"221":{"return":0.043478260869565216,"message":0.043478260869565216,"form":0.043478260869565216,"status":0.043478260869565216,"'success'":0.043478260869565216,"text":0.043478260869565216,"'all":0.043478260869565216,"went":0.043478260869565216,"well'":0.043478260869565216,"const":0.043478260869565216,"enhance":0.043478260869565216,"superform":0.043478260869565216,"data":0.043478260869565216,"onupdated":0.043478260869565216,"if":0.043478260869565216,"display":0.043478260869565216,"the":0.043478260869565216,"using":0.043478260869565216,"a":0.043478260869565216,"toast":0.043478260869565216,"library":0.043478260869565216,"icon":0.043478260869565216,"'":0.043478260869565216},"222":{},"223":{"8":0.011764705882352941,"400":0.011764705882352941,"const":0.011764705882352941,"form":0.011764705882352941,"await":0.011764705882352941,"supervalidate":0.011764705882352941,"zod":0.011764705882352941,"schema":0.011764705882352941,"id":0.011764705882352941,"string":0.011764705882352941,"undefined":0.011764705882352941,"import":0.011764705882352941,"z":0.011764705882352941,"from":0.011764705882352941,"'zod'":0.011764705882352941,"fail":0.011764705882352941,"'":0.011764705882352941,"sveltejs":0.011764705882352941,"kit'":0.011764705882352941,"message":0.011764705882352941,"'sveltekit-superforms'":0.011764705882352941,"'sveltekit-superforms":0.011764705882352941,"adapters'":0.011764705882352941,"loginschema":0.011764705882352941,"object":0.011764705882352941,"email":0.011764705882352941,"password":0.011764705882352941,"min":0.011764705882352941,"registerschema":0.011764705882352941,"confirmpassword":0.011764705882352941,"export":0.011764705882352941,"load":0.011764705882352941,"async":0.011764705882352941,"different":0.011764705882352941,"schemas":0.011764705882352941,"no":0.011764705882352941,"required":0.011764705882352941,"loginform":0.011764705882352941,"registerform":0.011764705882352941,"return":0.011764705882352941,"them":0.011764705882352941,"both":0.011764705882352941,"actions":0.011764705882352941,"login":0.011764705882352941,"request":0.011764705882352941,"if":0.011764705882352941,"valid":0.011764705882352941,"todo":0.011764705882352941,"user":0.011764705882352941,"'login":0.011764705882352941,"submitted'":0.011764705882352941,"register":0.011764705882352941,"'register":0.011764705882352941,"script":0.011764705882352941,"lang":0.011764705882352941,"ts":0.011764705882352941,"superform":0.011764705882352941,"client'":0.011764705882352941,"type":0.011764705882352941,"pagedata":0.011764705882352941,"types":0.011764705882352941,"js'":0.011764705882352941,"let":0.011764705882352941,"data":0.011764705882352941,"errors":0.011764705882352941,"enhance":0.011764705882352941,"resetform":0.011764705882352941,"true":0.011764705882352941,"registererrors":0.011764705882352941,"registerenhance":0.011764705882352941,"registermessage":0.011764705882352941,"h3":0.011764705882352941,"method":0.011764705882352941,"post":0.011764705882352941,"action":0.011764705882352941,"use":0.011764705882352941,"e-mail":0.011764705882352941,"input":0.011764705882352941,"name":0.011764705882352941,"bind":0.011764705882352941,"value":0.011764705882352941,"button":0.011764705882352941,"submit":0.011764705882352941,"hr":0.011764705882352941,"confirm":0.011764705882352941},"224":{"default":0.030303030303030304,"behavior":0.030303030303030304,"the":0.030303030303030304,"id":0.030303030303030304,"is":0.030303030303030304,"sent":0.030303030303030304,"along":0.030303030303030304,"with":0.030303030303030304,"form":0.030303030303030304,"data":0.030303030303030304,"from":0.030303030303030304,"load":0.030303030303030304,"function":0.030303030303030304,"const":0.030303030303030304,"enhance":0.030303030303030304,"formid":0.030303030303030304,"superform":0.030303030303030304,"loginform":0.030303030303030304,"in":0.030303030303030304,"advanced":0.030303030303030304,"cases":0.030303030303030304,"you":0.030303030303030304,"can":0.030303030303030304,"set":0.030303030303030304,"as":0.030303030303030304,"an":0.030303030303030304,"option":0.030303030303030304,"and":0.030303030303030304,"it":0.030303030303030304,"will":0.030303030303030304,"take":0.030303030303030304,"precedence":0.030303030303030304,"'custom-id'":0.030303030303030304},"225":{"script":0.03333333333333333,"lang":0.03333333333333333,"ts":0.03333333333333333,"import":0.03333333333333333,"superform":0.03333333333333333,"from":0.03333333333333333,"'sveltekit-superforms":0.03333333333333333,"client'":0.03333333333333333,"type":0.03333333333333333,"pagedata":0.03333333333333333,"'":0.03333333333333333,"types":0.03333333333333333,"js'":0.03333333333333333,"export":0.03333333333333333,"let":0.03333333333333333,"data":0.03333333333333333,"const":0.03333333333333333,"form":0.03333333333333333,"errors":0.03333333333333333,"formid":0.03333333333333333,"method":0.03333333333333333,"post":0.03333333333333333,"action":0.03333333333333333,"login":0.03333333333333333,"input":0.03333333333333333,"hidden":0.03333333333333333,"name":0.03333333333333333,"__superform_id":0.03333333333333333,"bind":0.03333333333333333,"value":0.03333333333333333},"226":{},"227":{},"228":{},"229":{"form":0.1,"update":0.1,"name":0.1,"new":0.1,"return":0.1,"taint":0.1,"false":0.1,"boolean":0.1,"'untaint'":0.1,"'untaint-form'":0.1},"230":{},"231":{},"232":{"1":0.019230769230769232,"2":0.019230769230769232,"const":0.019230769230769232,"schema":0.019230769230769232,"z":0.019230769230769232,"object":0.019230769230769232,"tags":0.019230769230769232,"id":0.019230769230769232,"number":0.019230769230769232,"int":0.019230769230769232,"min":0.019230769230769232,"name":0.019230769230769232,"string":0.019230769230769232,"array":0.019230769230769232,"'test'":0.019230769230769232,"export":0.019230769230769232,"load":0.019230769230769232,"async":0.019230769230769232,"form":0.019230769230769232,"await":0.019230769230769232,"supervalidate":0.019230769230769232,"zod":0.019230769230769232,"return":0.019230769230769232,"script":0.019230769230769232,"lang":0.019230769230769232,"ts":0.019230769230769232,"errors":0.019230769230769232,"enhance":0.019230769230769232,"superform":0.019230769230769232,"data":0.019230769230769232,"datatype":0.019230769230769232,"'json'":0.019230769230769232,"method":0.019230769230769232,"post":0.019230769230769232,"use":0.019230769230769232,"each":0.019230769230769232,"as":0.019230769230769232,"_":0.019230769230769232,"i":0.019230769230769232,"div":0.019230769230769232,"input":0.019230769230769232,"type":0.019230769230769232,"data-invalid":0.019230769230769232,"bind":0.019230769230769232,"value":0.019230769230769232,"if":0.019230769230769232,"br":0.019230769230769232,"span":0.019230769230769232,"class":0.019230769230769232,"invalid":0.019230769230769232,"button":0.019230769230769232,"submit":0.019230769230769232},"233":{"2":0.02702702702702703,"3":0.02702702702702703,"export":0.02702702702702703,"const":0.02702702702702703,"schema":0.02702702702702703,"z":0.02702702702702703,"object":0.02702702702702703,"tags":0.02702702702702703,"string":0.02702702702702703,"min":0.02702702702702703,"array":0.02702702702702703,"max":0.02702702702702703,"script":0.02702702702702703,"lang":0.02702702702702703,"ts":0.02702702702702703,"form":0.02702702702702703,"errors":0.02702702702702703,"superform":0.02702702702702703,"data":0.02702702702702703,"method":0.02702702702702703,"post":0.02702702702702703,"div":0.02702702702702703,"if":0.02702702702702703,"_errors":0.02702702702702703,"class":0.02702702702702703,"invalid":0.02702702702702703,"each":0.02702702702702703,"as":0.02702702702702703,"_":0.02702702702702703,"i":0.02702702702702703,"input":0.02702702702702703,"name":0.02702702702702703,"bind":0.02702702702702703,"value":0.02702702702702703,"span":0.02702702702702703,"button":0.02702702702702703,"submit":0.02702702702702703},"234":{"3":0.03333333333333333,"const":0.03333333333333333,"confirmpassword":0.03333333333333333,"z":0.03333333333333333,"object":0.03333333333333333,"password":0.03333333333333333,"string":0.03333333333333333,"confirm":0.03333333333333333,"refine":0.03333333333333333,"data":0.03333333333333333,"message":0.03333333333333333,"passwords":0.03333333333333333,"don't":0.03333333333333333,"match":0.03333333333333333,"path":0.03333333333333333,"of":0.03333333333333333,"error":0.03333333333333333,"ok":0.03333333333333333,"'form'":0.03333333333333333,"'tags'":0.03333333333333333,"will":0.03333333333333333,"not":0.03333333333333333,"work":0.03333333333333333,"with":0.03333333333333333,"zod":0.03333333333333333,"and":0.03333333333333333,"superrefine":0.03333333333333333,"'form":0.03333333333333333,"tags":0.03333333333333333,"'":0.03333333333333333},"235":{"import":0.02127659574468085,"the":0.02127659574468085,"primitives":0.02127659574468085,"return":0.02127659574468085,"a":0.02127659574468085,"writable":0.02127659574468085,"string":0.02127659574468085,"booleanproxy":0.02127659574468085,"dateproxy":0.02127659574468085,"intproxy":0.02127659574468085,"numberproxy":0.02127659574468085,"stringproxy":0.02127659574468085,"type":0.02127659574468085,"of":0.02127659574468085,"other":0.02127659574468085,"three":0.02127659574468085,"depends":0.02127659574468085,"on":0.02127659574468085,"field":0.02127659574468085,"formfieldproxy":0.02127659574468085,"arrayproxy":0.02127659574468085,"fieldproxy":0.02127659574468085,"from":0.02127659574468085,"'sveltekit-superforms'":0.02127659574468085,"superform":0.02127659574468085,"assume":0.02127659574468085,"following":0.02127659574468085,"schema":0.02127659574468085,"id":0.02127659574468085,"number":0.02127659574468085,"const":0.02127659574468085,"data":0.02127659574468085,"form":0.02127659574468085,"errors":0.02127659574468085,"enhance":0.02127659574468085,"returns":0.02127659574468085,"idproxy":0.02127659574468085,"'id'":0.02127659574468085,"use":0.02127659574468085,"whole":0.02127659574468085,"object":0.02127659574468085,"to":0.02127659574468085,"prevent":0.02127659574468085,"tainting":0.02127659574468085,"idproxy2":0.02127659574468085,"taint":0.02127659574468085,"false":0.02127659574468085},"236":{},"237":{"0":0.043478260869565216,"10":0.043478260869565216,"const":0.043478260869565216,"proxydate":0.043478260869565216,"dateproxy":0.043478260869565216,"form":0.043478260869565216,"'date'":0.043478260869565216,"format":0.043478260869565216,"input":0.043478260869565216,"name":0.043478260869565216,"date":0.043478260869565216,"type":0.043478260869565216,"bind":0.043478260869565216,"value":0.043478260869565216,"aria-invalid":0.043478260869565216,"errors":0.043478260869565216,"'true'":0.043478260869565216,"undefined":0.043478260869565216,"constraints":0.043478260869565216,"min":0.043478260869565216,"tostring":0.043478260869565216,"slice":0.043478260869565216,"max":0.043478260869565216},"238":{},"239":{"const":0.125,"form":0.125,"capture":0.125,"restore":0.125,"superform":0.125,"data":0.125,"export":0.125,"snapshot":0.125},"240":{},"241":{},"242":{},"243":{"const":0.07692307692307693,"form":0.07692307692307693,"enhance":0.07692307692307693,"superform":0.07692307692307693,"data":0.07692307692307693,"spa":0.07692307692307693,"true":0.07692307692307693,"failstatus":0.07692307692307693,"number":0.07692307692307693,"validators":0.07692307692307693,"false":0.07692307692307693,"clientvalidationadapter":0.07692307692307693,"s":0.07692307692307693},"244":{"2":0.021739130434782608,"400":0.021739130434782608,"import":0.021739130434782608,"error":0.021739130434782608,"from":0.021739130434782608,"'":0.021739130434782608,"sveltejs":0.021739130434782608,"kit'":0.021739130434782608,"supervalidate":0.021739130434782608,"'sveltekit-superforms'":0.021739130434782608,"zod":0.021739130434782608,"'sveltekit-superforms":0.021739130434782608,"adapters'":0.021739130434782608,"z":0.021739130434782608,"'zod'":0.021739130434782608,"export":0.021739130434782608,"const":0.021739130434782608,"_userschema":0.021739130434782608,"object":0.021739130434782608,"id":0.021739130434782608,"number":0.021739130434782608,"int":0.021739130434782608,"positive":0.021739130434782608,"name":0.021739130434782608,"string":0.021739130434782608,"min":0.021739130434782608,"email":0.021739130434782608,"load":0.021739130434782608,"async":0.021739130434782608,"params":0.021739130434782608,"fetch":0.021739130434782608,"parseint":0.021739130434782608,"request":0.021739130434782608,"await":0.021739130434782608,"https":0.021739130434782608,"jsonplaceholder":0.021739130434782608,"typicode":0.021739130434782608,"com":0.021739130434782608,"users":0.021739130434782608,"if":0.021739130434782608,"status":0.021739130434782608,"throw":0.021739130434782608,"userdata":0.021739130434782608,"json":0.021739130434782608,"form":0.021739130434782608,"return":0.021739130434782608},"245":{"script":0.013513513513513514,"lang":0.013513513513513514,"ts":0.013513513513513514,"import":0.013513513513513514,"superform":0.013513513513513514,"setmessage":0.013513513513513514,"seterror":0.013513513513513514,"from":0.013513513513513514,"'sveltekit-superforms'":0.013513513513513514,"_userschema":0.013513513513513514,"'":0.013513513513513514,"page":0.013513513513513514,"js'":0.013513513513513514,"zod":0.013513513513513514,"'sveltekit-superforms":0.013513513513513514,"adapters'":0.013513513513513514,"export":0.013513513513513514,"let":0.013513513513513514,"data":0.013513513513513514,"const":0.013513513513513514,"form":0.013513513513513514,"errors":0.013513513513513514,"message":0.013513513513513514,"constraints":0.013513513513513514,"enhance":0.013513513513513514,"spa":0.013513513513513514,"true":0.013513513513513514,"validators":0.013513513513513514,"onupdate":0.013513513513513514,"validation":0.013513513513513514,"if":0.013513513513513514,"email":0.013513513513513514,"includes":0.013513513513513514,"'spam'":0.013513513513513514,"'email'":0.013513513513513514,"'suspicious":0.013513513513513514,"address":0.013513513513513514,"else":0.013513513513513514,"valid":0.013513513513513514,"todo":0.013513513513513514,"call":0.013513513513513514,"an":0.013513513513513514,"external":0.013513513513513514,"api":0.013513513513513514,"with":0.013513513513513514,"await":0.013513513513513514,"the":0.013513513513513514,"result":0.013513513513513514,"and":0.013513513513513514,"update":0.013513513513513514,"'valid":0.013513513513513514,"h1":0.013513513513513514,"edit":0.013513513513513514,"user":0.013513513513513514,"h3":0.013513513513513514,"method":0.013513513513513514,"post":0.013513513513513514,"use":0.013513513513513514,"label":0.013513513513513514,"name":0.013513513513513514,"br":0.013513513513513514,"input":0.013513513513513514,"aria-invalid":0.013513513513513514,"'true'":0.013513513513513514,"undefined":0.013513513513513514,"bind":0.013513513513513514,"value":0.013513513513513514,"span":0.013513513513513514,"class":0.013513513513513514,"invalid":0.013513513513513514,"e-mail":0.013513513513513514,"type":0.013513513513513514,"button":0.013513513513513514,"submit":0.013513513513513514},"246":{"script":0.02702702702702703,"lang":0.02702702702702703,"ts":0.02702702702702703,"import":0.02702702702702703,"superform":0.02702702702702703,"defaults":0.02702702702702703,"from":0.02702702702702703,"'sveltekit-superforms'":0.02702702702702703,"zod":0.02702702702702703,"'sveltekit-superforms":0.02702702702702703,"adapters'":0.02702702702702703,"loginschema":0.02702702702702703,"'":0.02702702702702703,"lib":0.02702702702702703,"schemas'":0.02702702702702703,"const":0.02702702702702703,"form":0.02702702702702703,"errors":0.02702702702702703,"enhance":0.02702702702702703,"spa":0.02702702702702703,"true":0.02702702702702703,"validators":0.02702702702702703,"onupdate":0.02702702702702703,"if":0.02702702702702703,"valid":0.02702702702702703,"todo":0.02702702702702703,"call":0.02702702702702703,"an":0.02702702702702703,"external":0.02702702702702703,"api":0.02702702702702703,"with":0.02702702702702703,"data":0.02702702702702703,"await":0.02702702702702703,"the":0.02702702702702703,"result":0.02702702702702703,"and":0.02702702702702703,"update":0.02702702702702703},"247":{"const":0.058823529411764705,"initialdata":0.058823529411764705,"name":0.058823529411764705,"'new":0.058823529411764705,"user'":0.058823529411764705,"form":0.058823529411764705,"errors":0.058823529411764705,"enhance":0.058823529411764705,"validateform":0.058823529411764705,"superform":0.058823529411764705,"defaults":0.058823529411764705,"zod":0.058823529411764705,"loginschema":0.058823529411764705,"spa":0.058823529411764705,"true":0.058823529411764705,"validators":0.058823529411764705,"update":0.058823529411764705},"248":{"300":0.01639344262295082,"400":0.01639344262295082,"const":0.01639344262295082,"submitting":0.01639344262295082,"submit":0.01639344262295082,"superform":0.01639344262295082,"username":0.01639344262295082,"''":0.01639344262295082,"spa":0.01639344262295082,"'":0.01639344262295082,"check'":0.01639344262295082,"onsubmit":0.01639344262295082,"cancel":0.01639344262295082,"formdata":0.01639344262295082,"if":0.01639344262295082,"form":0.01639344262295082,"set":0.01639344262295082,"'username'":0.01639344262295082,"onupdated":0.01639344262295082,"errors":0.01639344262295082,"checkusername":0.01639344262295082,"debounce":0.01639344262295082,"usernameschema":0.01639344262295082,"fullschema":0.01639344262295082,"pick":0.01639344262295082,"true":0.01639344262295082,"export":0.01639344262295082,"actions":0.01639344262295082,"check":0.01639344262295082,"async":0.01639344262295082,"request":0.01639344262295082,"await":0.01639344262295082,"supervalidate":0.01639344262295082,"zod":0.01639344262295082,"valid":0.01639344262295082,"return":0.01639344262295082,"fail":0.01639344262295082,"data":0.01639344262295082,"seterror":0.01639344262295082,"'username":0.01639344262295082,"is":0.01639344262295082,"already":0.01639344262295082,"taken":0.01639344262295082,"input":0.01639344262295082,"name":0.01639344262295082,"aria-invalid":0.01639344262295082,"'true'":0.01639344262295082,"undefined":0.01639344262295082,"bind":0.01639344262295082,"value":0.01639344262295082,"on":0.01639344262295082,"img":0.01639344262295082,"src":0.01639344262295082,"spinner":0.01639344262295082,"alt":0.01639344262295082,"checking":0.01639344262295082,"availability":0.01639344262295082,"else":0.01639344262295082,"div":0.01639344262295082,"class":0.01639344262295082,"invalid":0.01639344262295082},"249":{"const":0.1111111111111111,"form":0.1111111111111111,"await":0.1111111111111111,"supervalidate":0.1111111111111111,"request":0.1111111111111111,"zod":0.1111111111111111,"schema":0.1111111111111111,"strict":0.1111111111111111,"true":0.1111111111111111},"250":{"1":0.020833333333333332,"400":0.020833333333333332,"import":0.020833333333333332,"supervalidate":0.020833333333333332,"from":0.020833333333333332,"'sveltekit-superforms'":0.020833333333333332,"zod":0.020833333333333332,"'sveltekit-superforms":0.020833333333333332,"adapters'":0.020833333333333332,"z":0.020833333333333332,"'zod'":0.020833333333333332,"const":0.020833333333333332,"schema":0.020833333333333332,"object":0.020833333333333332,"name":0.020833333333333332,"string":0.020833333333333332,"min":0.020833333333333332,"catchall":0.020833333333333332,"number":0.020833333333333332,"int":0.020833333333333332,"all":0.020833333333333332,"unknown":0.020833333333333332,"fields":0.020833333333333332,"should":0.020833333333333332,"be":0.020833333333333332,"integers":0.020833333333333332,"export":0.020833333333333332,"actions":0.020833333333333332,"default":0.020833333333333332,"async":0.020833333333333332,"request":0.020833333333333332,"form":0.020833333333333332,"await":0.020833333333333332,"if":0.020833333333333332,"valid":0.020833333333333332,"return":0.020833333333333332,"fail":0.020833333333333332,"typed":0.020833333333333332,"as":0.020833333333333332,"expected":0.020833333333333332,"console":0.020833333333333332,"log":0.020833333333333332,"data":0.020833333333333332,"other":0.020833333333333332,"keys":0.020833333333333332,"are":0.020833333333333332,"first":0.020833333333333332,"second":0.020833333333333332},"251":{},"252":{},"253":{},"254":{},"255":{"500":0.08333333333333333,"8000":0.08333333333333333,"const":0.08333333333333333,"form":0.08333333333333333,"enhance":0.08333333333333333,"submitting":0.08333333333333333,"delayed":0.08333333333333333,"timeout":0.08333333333333333,"superform":0.08333333333333333,"data":0.08333333333333333,"delayms":0.08333333333333333,"timeoutms":0.08333333333333333},"256":{},"257":{"script":0.04,"lang":0.04,"ts":0.04,"const":0.04,"form":0.04,"errors":0.04,"enhance":0.04,"delayed":0.04,"superform":0.04,"data":0.04,"import":0.04,"spinner":0.04,"from":0.04,"'":0.04,"lib":0.04,"assets":0.04,"svg'":0.04,"method":0.04,"post":0.04,"use":0.04,"button":0.04,"submit":0.04,"if":0.04,"img":0.04,"src":0.04},"258":{},"259":{},"260":{"const":0.03125,"form":0.03125,"enhance":0.03125,"superform":0.03125,"data":0.03125,"taintedmessage":0.03125,"string":0.03125,"promise":0.03125,"boolean":0.03125,"false":0.03125,"return":0.03125,"new":0.03125,"resolve":0.03125,"modalstore":0.03125,"trigger":0.03125,"type":0.03125,"'confirm'":0.03125,"title":0.03125,"'do":0.03125,"you":0.03125,"want":0.03125,"to":0.03125,"leave":0.03125,"'":0.03125,"body":0.03125,"'changes":0.03125,"made":0.03125,"may":0.03125,"not":0.03125,"be":0.03125,"saved":0.03125,"response":0.03125},"261":{},"262":{"script":0.024390243902439025,"lang":0.024390243902439025,"ts":0.024390243902439025,"const":0.024390243902439025,"form":0.024390243902439025,"enhance":0.024390243902439025,"tainted":0.024390243902439025,"istainted":0.024390243902439025,"superform":0.024390243902439025,"data":0.024390243902439025,"check":0.024390243902439025,"the":0.024390243902439025,"whole":0.024390243902439025,"if":0.024390243902439025,"console":0.024390243902439025,"log":0.024390243902439025,"'the":0.024390243902439025,"is":0.024390243902439025,"tainted'":0.024390243902439025,"a":0.024390243902439025,"part":0.024390243902439025,"of":0.024390243902439025,"'name'":0.024390243902439025,"name":0.024390243902439025,"field":0.024390243902439025,"--":0.024390243902439025,"make":0.024390243902439025,"function":0.024390243902439025,"reactive":0.024390243902439025,"by":0.024390243902439025,"passing":0.024390243902439025,"store":0.024390243902439025,"button":0.024390243902439025,"disabled":0.024390243902439025,"submit":0.024390243902439025,"it":0.024390243902439025,"even":0.024390243902439025,"works":0.024390243902439025,"with":0.024390243902439025,"individual":0.024390243902439025,"fields":0.024390243902439025},"263":{"const":0.07692307692307693,"form":0.07692307692307693,"superform":0.07692307692307693,"data":0.07692307692307693,"update":0.07692307692307693,"name":0.07692307692307693,"new":0.07692307692307693,"return":0.07692307692307693,"taint":0.07692307692307693,"false":0.07692307692307693,"boolean":0.07692307692307693,"'untaint'":0.07692307692307693,"'untaint-form'":0.07692307692307693},"264":{},"265":{"npm":0.16666666666666666,"create":0.16666666666666666,"svelte":0.16666666666666666,"latest":0.16666666666666666,"pnpm":0.16666666666666666,"yarn":0.16666666666666666},"266":{},"267":{"2":0.02,"import":0.02,"type":0.02,"from":0.02,"'arktype'":0.02,"const":0.02,"schema":0.02,"name":0.02,"'string'":0.02,"email":0.02,"'email'":0.02,"joi":0.02,"'joi'":0.02,"object":0.02,"string":0.02,"default":0.02,"'hello":0.02,"world":0.02,"'":0.02,"required":0.02,"jsonschema":0.02,"'sveltekit-superforms'":0.02,"export":0.02,"'object'":0.02,"properties":0.02,"minlength":0.02,"format":0.02,"'name'":0.02,"additionalproperties":0.02,"false":0.02,"'http":0.02,"json-schema":0.02,"org":0.02,"draft-07":0.02,"as":0.02,"satisfies":0.02,"define":0.02,"to":0.02,"get":0.02,"inference":0.02,"sinclair":0.02,"typebox'":0.02,"optional":0.02,"'valibot'":0.02,"vine":0.02,"vinejs":0.02,"vine'":0.02,"'yup'":0.02,"z":0.02,"'zod'":0.02},"268":{},"269":{"import":0.011627906976744186,"supervalidate":0.011627906976744186,"from":0.011627906976744186,"'sveltekit-superforms'":0.011627906976744186,"arktype":0.011627906976744186,"'sveltekit-superforms":0.011627906976744186,"adapters'":0.011627906976744186,"type":0.011627906976744186,"'arktype'":0.011627906976744186,"define":0.011627906976744186,"outside":0.011627906976744186,"the":0.011627906976744186,"load":0.011627906976744186,"function":0.011627906976744186,"so":0.011627906976744186,"adapter":0.011627906976744186,"can":0.011627906976744186,"be":0.011627906976744186,"cached":0.011627906976744186,"const":0.011627906976744186,"schema":0.011627906976744186,"name":0.011627906976744186,"'string'":0.011627906976744186,"email":0.011627906976744186,"'email'":0.011627906976744186,"defaults":0.011627906976744186,"should":0.011627906976744186,"also":0.011627906976744186,"defined":0.011627906976744186,"'hello":0.011627906976744186,"world":0.011627906976744186,"'":0.011627906976744186,"''":0.011627906976744186,"export":0.011627906976744186,"async":0.011627906976744186,"requires":0.011627906976744186,"explicit":0.011627906976744186,"default":0.011627906976744186,"values":0.011627906976744186,"for":0.011627906976744186},"270":{},"271":{"404":0.029411764705882353,"import":0.029411764705882353,"error":0.029411764705882353,"from":0.029411764705882353,"'":0.029411764705882353,"sveltejs":0.029411764705882353,"kit'":0.029411764705882353,"export":0.029411764705882353,"const":0.029411764705882353,"load":0.029411764705882353,"async":0.029411764705882353,"params":0.029411764705882353,"replace":0.029411764705882353,"with":0.029411764705882353,"your":0.029411764705882353,"database":0.029411764705882353,"user":0.029411764705882353,"db":0.029411764705882353,"users":0.029411764705882353,"findunique":0.029411764705882353,"where":0.029411764705882353,"id":0.029411764705882353,"if":0.029411764705882353,"'not":0.029411764705882353,"found'":0.029411764705882353,"form":0.029411764705882353,"await":0.029411764705882353,"supervalidate":0.029411764705882353,"your_adapter":0.029411764705882353,"schema":0.029411764705882353,"always":0.029411764705882353,"return":0.029411764705882353,"in":0.029411764705882353,"functions":0.029411764705882353},"272":{},"273":{"script":0.034482758620689655,"lang":0.034482758620689655,"ts":0.034482758620689655,"import":0.034482758620689655,"superform":0.034482758620689655,"from":0.034482758620689655,"'sveltekit-superforms'":0.034482758620689655,"export":0.034482758620689655,"let":0.034482758620689655,"data":0.034482758620689655,"client":0.034482758620689655,"api":0.034482758620689655,"const":0.034482758620689655,"form":0.034482758620689655,"method":0.034482758620689655,"post":0.034482758620689655,"label":0.034482758620689655,"for":0.034482758620689655,"name":0.034482758620689655,"input":0.034482758620689655,"type":0.034482758620689655,"text":0.034482758620689655,"bind":0.034482758620689655,"value":0.034482758620689655,"email":0.034482758620689655,"e-mail":0.034482758620689655,"div":0.034482758620689655,"button":0.034482758620689655,"submit":0.034482758620689655},"274":{"script":0.1111111111111111,"lang":0.1111111111111111,"ts":0.1111111111111111,"import":0.1111111111111111,"superdebug":0.1111111111111111,"from":0.1111111111111111,"'sveltekit-superforms'":0.1111111111111111,"data":0.1111111111111111,"form":0.1111111111111111},"276":{"script":0.027777777777777776,"lang":0.027777777777777776,"ts":0.027777777777777776,"const":0.027777777777777776,"form":0.027777777777777776},"277":{"script":0.05263157894736842,"lang":0.05263157894736842,"ts":0.05263157894736842,"const":0.05263157894736842,"form":0.05263157894736842,"errors":0.05263157894736842,"constraints":0.05263157894736842,"message":0.05263157894736842,"enhance":0.05263157894736842,"superform":0.05263157894736842,"data":0.05263157894736842,"--":0.05263157894736842,"add":0.05263157894736842},"278":{}}},"tokenOccurrences":{"title":{"0":2,"2":1,"api":2,"supervalidate":4,"seterror":4,"message":7,"defaultvalues":2,"actionresult":1,"login":1,"superform":7,"defaults":4,"proxy":4,"intproxy":3,"numberproxy":3,"booleanproxy":1,"dateproxy":1,"stringproxy":1,"formfieldproxy":2,"arrayproxy":2,"fieldproxy":2,"superdebug":5,"reference":2,"adapter":1,"options":17,"return":3,"form":34,"schema":9,"type":4,"request":1,"objects":3,"object":1,"example":4,"data":12,"field":3,"fieldname":8,"error":4,"status":3,"forms":3,"factoring":2,"using":6,"and":15,"out":7,"a":22,"narrowing":1,"the":30,"fields":7,"for":10,"componentized":1,"in":11,"paths":2,"components":3,"awesome":1,"ways":1,"contributing":2,"donations":1,"donating":1,"sponsoring":1,"designing":1,"getting":3,"video":1,"stackblitz":1,"new":7,"start":1,"reading":1,"creating":4,"deleting":1,"listing":2,"started":3,"tutorial":2,"sveltekit":2,"-":6,"vs":2,"crud":1,"project":1,"database":4,"user":3,"updating":2,"users":1,"interface":1,"schemas":4,"from":5,"test":5,"playground":1,"default":8,"changing":1,"optional":1,"explicit":3,"enums":3,"values":5,"nullable":1,"group":1,"value":4,"inputs":1,"faq":1,"i":7,"how":7,"can":7,"what":1,"i'm":2,"why":3,"see":1,"to":14,"about":2,"am":1,"does":2,"you":1,"want":1,"handle":1,"use":6,"post":1,"submit":3,"load":2,"json":1,"customize":1,"prevent":1,"file":6,"endpoints":1,"be":4,"function":2,"action":2,"other":1,"parse":1,"superforms":5,"reuse":1,"uploads":3,"instead":2,"an":3,"factored":1,"additional":2,"way":1,"errors":9,"typeerror":1,"get":3,"messages":4,"without":4,"common":2,"of":3,"external":1,"programmatically":2,"around":1,"as":1,"tainted":5,"directly":1,"any":2,"but":1,"into":1,"together":1,"posting":2,"response":1,"body":1,"it's":2,"being":1,"actions":2,"separate":1,"with":9,"when":4,"has":2,"do":1,"not":2,"reset":3,"component":2,"submitting":1,"already":1,"changes":3,"validation":9,"that":1,"posted":1,"after":1,"been":1,"easily":1,"server":5,"consumed":1,"submitted":1,"delete":1,"button":1,"select":1,"on":4,"element":1,"each":1,"row":1,"table":1,"flash":1,"usage":8,"syncflashmessage":1,"flashmessage":2,"onerror":4,"integrate":1,"formsnap":1,"version":3,"legacy":1,"x":1,"migrate":2,"migration":2,"valid":1,"allerrors":1,"defaultdata":1,"meta":1,"client":4,"resetform":2,"errorselector":2,"noerrors":1,"guide":2,"empty":4,"again":1,"setmessage":1,"firsterror":1,"validate":4,"functions":1,"optimized":1,"supervalidated":1,"supervalidatesync":2,"id":3,"no":2,"update":1,"v2":1,"biggest":1,"caching":2,"client-side":2,"is":7,"method":3,"option":3,"defaultvalidators":1,"must":3,"istainted":2,"side-effects":1,"your":1,"features":1,"change":2,"parameters":1,"renamed":3,"have":3,"imports":2,"parameter":2,"important":2,"check":2,"removed":2,"support":9,"changed":1,"arguments":1,"moved":1,"aren't":1,"case":1,"untainting":2,"string":2,"required":1,"specific":1,"anymore":2,"problems":1,"validateform":3,"rate":1,"limiting":1,"super":3,"donate":1,"sponsors":2,"sponsor":1,"props":1,"examples":2,"promise":1,"composing":1,"displaying":4,"custom":1,"css":1,"page":4,"debug":1,"files":4,"loves":1,"styling":1,"variables":1,"label":1,"stores":1,"available":1,"debugging":2,"customization":1,"help":2,"free":1,"commercial":1,"bug":1,"reporting":1,"v1":1,"automatic":1,"extra":1,"better":1,"path":1,"'posted'":1,"accessors":1,"store":1,"whole":1,"arrays":2,"what's":2,"proxies":2,"union":1,"unions":2,"multi-type":1,"onchange":2,"simplified":1,"release":1,"upload":1,"updates":2,"event":2,"'zero'":1,"now":1,"notes":1,"only":1,"by":1,"used":1,"datatype":2,"'json'":1,"built-in":1,"constraints":2,"special":1,"validators":2,"switching":1,"validationmethod":1,"customvalidity":2,"asynchronous":1,"browser":1,"input":3,"it":4,"formats":1,"debouncing":1,"progressive":2,"modifying":1,"applyaction":1,"invalidateall":1,"optimistic":1,"making":1,"enhancement":2,"enhance":2,"behave":1,"behavior":2,"like":1,"initial":2,"scrolltoerror":1,"autofocusonerror":1,"stickynavbar":1,"form-level":1,"setting":2,"customizing":1,"handling":1,"array":1,"refine":1,"events":1,"onsubmit":1,"jsondata":1,"onresult":1,"onupdate":1,"onupdated":1,"flowchart":1,"returning":1,"single":1,"multiple":2,"validating":1,"preventing":2,"manually":1,"strongly":1,"limitations":1,"typed":1,"helper":1,"configuration":1,"troubleshooting":1,"same":1,"nested":4,"requirements":1,"primitive":1,"date":1,"issues":1,"snapshots":1,"single-page":2,"spa":3,"application":1,"applications":1,"ts":2,"top-level":1,"mode":2,"strict":1,"catch-all":1,"clearonsubmit":1,"multiplesubmits":1,"loading":2,"visualizing":1,"timers":2,"state":1,"indicators":1,"if":1,"tainting":1,"initializing":1,"populate":1,"adding":1,"next":1,"note":1,"steps":1},"hash":{"defaults":1,"superdebug":3,"api-reference":1,"supervalidate-options":1,"defaultvaluesschema":1,"superform-options":1,"proxy-objects":2,"proxy-example":1,"supervalidate-return-type":1,"messageform-message-options":1,"login-request-example":1,"fieldproxyobject-fieldname":1,"supervalidateadapter--data-adapter--options-options":1,"intproxyform-fieldname-options":1,"numberproxyform-fieldname-options":1,"booleanproxyform-fieldname-options":1,"dateproxyform-fieldname-options":1,"stringproxyform-fieldname-options":1,"formfieldproxysuperform-fieldname-options":1,"arrayproxysuperform-fieldname-options":1,"seterrorform-field-error-options":1,"actionresulttype-data-options--status":1,"using-a-fieldproxy":1,"using-a-formfieldproxy":1,"factoring-out-a-form":1,"factoring-out-form-fields":1,"type-narrowing-for-paths":1,"forms-and-fields-in-components":2,"using-the-componentized-field-in-awesome-ways":1,"contributing":1,"donations":1,"contributing-donating-and-sponsoring":1,"stackblitz":1,"getting-started":1,"video-tutorial":1,"new-sveltekit-project":1,"deleting-a-user":1,"listing-the-users":1,"designing-a-crud-interface":1,"form-vs-database-schemas":1,"creating-and-updating-a-user":1,"start---creating-a-test-database":1,"reading-a-user-from-the-database":1,"playground":1,"default-values":1,"explicit-defaults":1,"optional-vs-nullable":1,"changing-a-default-value":1,"enums-and-group-inputs":1,"faq":1,"from-a-load-function":1,"from-a-form-action":1,"how-to-handle-file-uploads":1,"how-to-submit-the-form-programmatically":1,"can-i-post-to-an-external-api":1,"can-i-use-endpoints-instead-of-form-actions":1,"can-a-form-be-factored-out-into-a-separate-component":1,"how-can-i-return-additional-data-together-with-the-form":1,"how-to-customize-error-messages-directly-in-the-validation-schema":1,"i-want-to-reuse-common-options-how-to-do-that-easily":1,"what-about-the-other-way-around-posting-additional-data-to-the-server":1,"why-am-im-getting-typeerror-the-body-has-already-been-consumed":1,"i-see-the-data-in-form-but-its-not-posted-to-the-server":1,"how-can-i-prevent-the-form-from-being-reset-after-its-submitted":1,"im-getting-jsonparse-errors-as-response-when-submitting-a-form-why":1,"why-does-the-form-get-tainted-without-any-changes-when-i-use-a-select-element":1,"can-you-use-superforms-without-any-data-for-example-with-a-delete-button-on-each-row-in-a-table":1,"usage":6,"syncflashmessage":1,"flash-messages":1,"flashmessageonerror":1,"integrate-superforms-with-formsnap":1,"legacy-version":1,"version-0x-and-how-to-migrate":1,"updating":1,"superform":1,"seterror":2,"allerrors":1,"defaultdata":1,"meta":1,"resetform":2,"errorselector":2,"noerrors":1,"migration-guide":1,"message-setmessage":1,"client-options":1,"server-options":1,"valid-empty-firsterror":1,"seterror-again-validate-proxy-functions":1,"changes":1,"supervalidate":1,"arrayproxy":1,"components":1,"schema-caching":2,"new-features":1,"optimized-client-side-validation":1,"intproxy-and-numberproxy":1,"enums-in-schemas":1,"schemavalidation-changes":1,"the-biggest-change-important":1,"superformfields-is-removed":1,"superforms-v2---migration-guide":1,"supervalidated-type-parameters-have-changed":1,"supervalidatesync-is-renamed-to-defaults":1,"the-defaultvalidators-option-has-moved":1,"no-side-effects-for-default-values":1,"onerror-message-parameter-is-removed":1,"id-option-must-be-a-string":1,"use-istainted-to-check-tainted-status":1,"flashmessageonerror-message-parameter-renamed-to-flashmessage":1,"enums-must-have-an-explicit-default-value":1,"fields-with-default-values-arent-required-anymore":1,"update-your-imports-in-case-of-problems":1,"superform-does-not-support-untainting-specific-fields-anymore":1,"validate-method-with-no-arguments-is-renamed-to-validateform":1,"rate-limiting":1,"super-sponsors":2,"donate-to-be-a-sponsor":1,"examples":2,"props-reference":1,"promise-support":1,"displaying-files":1,"custom-styling":1,"page-data":1,"with-a-label":1,"composing-debug-data":1,"superdebug-loves-stores":1,"css-variables-available-for-customization":1,"superdebug---the-super-debugging-component":1,"help--support":1,"free-support":1,"commercial-support":1,"bug-reporting":1,"help-and-support-for-superforms":1,"defaultvalues":1,"supervalidatesync":1,"automatic-form-id":1,"string-path-accessors":1,"new-posted-store":1,"extra-options-for-reset":1,"v10---whats-new":1,"errors-for-arrays-and-objects":1,"better-empty-value-support-for-proxies":1,"validate-the-whole-form-on-the-client":1,"union-support":1,"tainted-updates":1,"onchange-event":1,"simplified-imports":1,"migrate-now":1,"release-notes":1,"file-upload-support":1,"new-istainted-method":1,"new-validateform-method":1,"version-2---whats-new":1,"form-is-reset-by-default":1,"unions-must-have-an-explicit-default-value":1,"empty-zero-option-for-intproxy-and-numberproxy":1,"multi-type-unions-can-only-be-used-when-datatype-is-json":1,"constraints":1,"validators":2,"validationmethod":1,"customvalidity":2,"validate":1,"validateform":1,"client-side-validation":1,"switching-schemas":1,"built-in-browser-validation":1,"special-input-formats":1,"test-it-out":4,"using-a-validation-schema":1,"asynchronous-validation-and-debouncing":1,"applyaction":1,"invalidateall":1,"progressive-enhancement":1,"optimistic-updates":1,"modifying-the-useenhance-behavior":1,"when-to-change-the-defaults":1,"making-the-form-behave-like-the-sveltekit-default":1,"scrolltoerror":1,"autofocusonerror":1,"stickynavbar":1,"error-handling":1,"server-errors":1,"usage-client":1,"listing-errors":1,"initial-form-errors":1,"form-level-and-array-errors":1,"setting-field-errors-with-refine":1,"customizing-error-messages-in-the-schema":1,"events":1,"onsubmit":1,"jsondata":1,"onresult":1,"onupdate":1,"onupdated":1,"onerror":1,"onchange":1,"event-flowchart":1,"common-usage":1,"file-uploads":1,"multiple-files":1,"single-file-input":1,"validating-files-manually":1,"preventing-file-uploads":1,"returning-files-in-form-actions":1,"limitations":1,"status-messages":1,"the-message-helper":1,"strongly-typed-message":1,"using-the-message-data-programmatically":1,"without-useenhance":1,"configuration-and-troubleshooting":1,"setting-id-on-the-client":1,"multiple-forms-on-the-same-page":1,"datatype":1,"requirements":1,"example":1,"nested-data":1,"nested-errors-and-constraints":1,"arrays-with-primitive-values":1,"validation-schemas-and-nested-paths":1,"nested-proxies":1,"date-input-issues":1,"snapshots":1,"single-page-applications-spa":1,"displaying-the-form":2,"spa-action-form":1,"single-page-application-spa-mode":1,"with-initial-top-level-data":1,"without-a-pagets-file":1,"using-pagets-instead-of-pageserverts":1,"strict-mode":1,"catch-all-schema":1,"clearonsubmit":1,"multiplesubmits":1,"submit-behavior":1,"loading-timers":1,"submit-state":1,"loading-indicators":1,"visualizing-the-timers":1,"tainted-fields":1,"untainting-the-form":1,"preventing-tainting-the-form":1,"check-if-the-form-is-tainted":1,"debugging":1,"get-started":1,"empty-form":1,"posting-data":1,"displaying-errors":1,"next-steps":1,"creating-a-superform":1,"adding-progressive-enhancement":1,"creating-a-validation-schema":1,"populate-form-from-database":1,"important-note-about-return-values":1,"get-started---tutorial-for-superforms":1,"initializing-the-form-in-the-load-function":1},"url":{"api":22,"components":8,"contributing":3,"crud":11,"examples":1,"default-values":5,"faq":18,"flash-messages":4,"formsnap":1,"legacy":2,"migration":15,"migration-v2":26,"rate-limiting":1,"sponsors":3,"super-debug":12,"support":5,"whats-new-v1":10,"whats-new-v2":15,"concepts":101,"client-validation":13,"enhance":8,"error-handling":15,"events":11,"files":7,"messages":6,"multiple-forms":5,"nested-data":7,"proxy-objects":3,"snapshots":3,"spa":8,"strict-mode":2,"submit-behavior":3,"timers":5,"tainted":5,"get-started":15,"lib":15},"content":{"0":12,"1":8,"2":8,"3":3,"4":3,"10":3,"30":1,"120":1,"123":2,"150":2,"200":1,"400":3,"404":3,"429":1,"500":1,"the":240,"superdebug":13,"throughout":1,"see":33,"returns":8,"defaults":11,"a":191,"given":4,"is":164,"if":115,"message":37,"src":18,"submitfunction":2,"function":41,"proxy":14,"proxies":8,"reference":3,"page":66,"data":81,"default":53,"routes":16,"https":3,"can":132,"handles":8,"creates":5,"field":53,"following":19,"must-have":1,"type":27,"you":149,"about":18,"for":148,"values":26,"when":76,"login":4,"kit":1,"be":132,"bi-directional":1,"an":75,"access":9,"schema":67,"debugging":4,"t":3,"want":49,"multiple":23,"empty":24,"setting":20,"convenience":3,"using":47,"server":34,"svelte":29,"useful":16,"updates":6,"string":32,"form":145,"array":11,"in":136,"component":15,"represents":2,"forms":22,"errors":42,"method":10,"ts":17,"dev":1,"on":91,"and":151,"store":32,"any":35,"that":92,"of":118,"supervalidated":6,"endpoint":1,"docs":4,"client":23,"returning":10,"object":28,"gives":5,"validation":59,"to":213,"information":7,"either":11,"types":10,"transformation":2,"number":12,"boolean":6,"date":5,"stores":10,"usually":16,"html":16,"with":119,"superforms":49,"public-types-submitfunction":1,"integer":2,"similar":6,"colorized":2,"extending":2,"initially":5,"after":16,"best":2,"components":12,"corresponding":2,"it":105,"but":62,"record":2,"use":92,"explained":2,"or":72,"file":14,"details":10,"may":18,"superform":39,"nicely":2,"id":15,"by":36,"ones":3,"instead":39,"spa":13,"option":58,"look":5,"case":27,"formatted":2,"unknown":3,"pass":11,"mode":5,"it's":42,"redundant":1,"formfieldproxy":7,"used":51,"output":4,"adapter":12,"example":38,"set":58,"onsubmit":7,"since":35,"rarely":6,"single":5,"like":30,"as":89,"returned":31,"fail":8,"note":17,"actions":8,"arguments":6,"cannot":21,"needed":8,"arrays":9,"arrayproxy":4,"this":96,"first":20,"status":29,"yourself":2,"have":57,"are":65,"parameter":18,"so":56,"must":25,"actionresult":9,"top-level":4,"change":15,"whole":15,"more":37,"structure":6,"populate":3,"corresponds":2,"return":14,"public-types-actionresult":1,"await":4,"points":1,"what":15,"proxied":1,"convenient":8,"list":10,"onresult":4,"value":33,"format":4,"options":40,"name":14,"will":80,"automatically":23,"should":30,"below":8,"from":64,"immediately":3,"action":21,"reflect":2,"represent":2,"how":16,"email":3,"has":32,"other":19,"bind":10,"true":23,"need":33,"create":12,"required":20,"usage":5,"being":14,"database":6,"range":5,"concepts":6,"here":18,"examples":4,"optional":10,"url":3,"added":16,"400-599":5,"const":2,"enhance":22,"spa-action-form":1,"convert":2,"not":43,"nested":15,"parameters":8,"applied":6,"always":14,"just":26,"r":1,"calling":10,"supervalidate":23,"anything":3,"found":2,"replaces":1,"load":16,"zod":16,"else":9,"false":18,"null":7,"all":28,"times":5,"won't":13,"displays":4,"primitive":3,"before":15,"work":21,"undefined":10,"itself":4,"formdata":10,"some":17,"removes":1,"valid":11,"even":17,"send":7,"throwing":3,"defined":10,"modifier":2,"also":43,"redirect":6,"above":18,"initiallyemptyifzero":3,"items":3,"m":1,"second":2,"expects":1,"initial":10,"too":3,"few":2,"overwrite":1,"zero":2,"valueerrors":2,"validationadapter":2,"helps":1,"show":12,"clientvalidationadapter":1,"remove":3,"construct":1,"placeholder":4,"prevent":12,"lists":3,"one":23,"text":8,"tainting":5,"content":3,"adapters":3,"previously":13,"response":7,"combination":2,"modifying":6,"wrap":3,"different":10,"'zero'":3,"based":5,"than":14,"selected":3,"library":22,"which":63,"your":27,"api":16,"input":29,"endpoints":2,"transformations":2,"pipes":2,"form-level":4,"codes":1,"error":24,"make":20,"argument":3,"each":9,"available":19,"skipped":1,"result":19,"differ":3,"stackblitz":4,"shown":3,"array-level":3,"don't":16,"they":18,"append":4,"same":30,"_errors":4,"include":1,"them":12,"tags":8,"they're":1,"additionally":1,"version":13,"flash":4,"third":2,"you're":20,"messages":11,"cookie":1,"that's":5,"solution":5,"checkboxes":2,"do":15,"looking":1,"seen":2,"at":18,"objects":13,"rather":2,"simple":9,"checked":3,"get":11,"we":21,"helper":7,"now":50,"started":1,"converting":2,"requires":9,"tutorial":5,"producing":1,"obvious":2,"textinput":2,"because":6,"our":5,"quite":12,"off":3,"follows":3,"easily":5,"2023-04-12":1,"bit":13,"into":10,"generic":4,"super":1,"lib":7,"boilerplate":2,"schemas":9,"attribute":10,"power":1,"code":21,"let's":7,"adds":2,"elements":3,"recreate":1,"up":11,"import":10,"special":4,"deconstruct":1,"hard-coded":1,"then":18,"separate":5,"takes":5,"add":30,"textfield":1,"gets":3,"actually":4,"bad":1,"especially":4,"loginform":2,"important":9,"produce":1,"script":1,"part":12,"formpathleaves":4,"narrow":1,"type-safe":3,"didn't":1,"passing":2,"down":4,"specific":6,"directly":19,"those":2,"couple":2,"modify":13,"inside":1,"making":5,"satisfies":1,"much":5,"imagine":1,"operator":2,"less":3,"update":17,"specify":5,"cluttered":2,"index":3,"leads":1,"handle":14,"question":4,"whether":8,"loop":3,"prop":4,"variable":5,"creation":1,"general":7,"its":25,"hence":2,"us":1,"only":33,"fields":28,"underscore":2,"vice":1,"nice":4,"datatype":6,"strongly":3,"versa":1,"would":4,"factored":1,"typed":3,"better":3,"out":13,"'json'":6,"certainly":3,"taint":4,"pulled":1,"works":14,"two":12,"help":2,"without":12,"additional":4,"grouped":2,"require":3,"typesafe":2,"intended":1,"way":11,"tricky":1,"styling":3,"read":11,"there":38,"still":9,"magic":1,"plenty":3,"syntax":4,"group":2,"fieldproxy":2,"attributes":4,"isn't":13,"ice":1,"enough":2,"cream":1,"coerced":1,"things":6,"however":6,"i":4,"we'd":2,"hope":1,"advanced":3,"feel":1,"generics":1,"having":5,"under":3,"constraints":11,"trouble":1,"alternative":3,"resulting":1,"fingers":1,"formsnap":2,"superpowers":1,"problem":5,"again":6,"module":4,"simplifies":2,"context":1,"bring":1,"componentization":4,"lot":4,"ensure":7,"matching":4,"prevents":3,"end":6,"leaves":2,"tree":2,"means":6,"handled":8,"contributions":1,"very":9,"contribute":2,"welcome":2,"future":2,"issues":2,"development":2,"discussion":1,"pages":3,"github":10,"donation":4,"open":7,"appreciated":2,"comments":1,"my":1,"support":12,"discord":6,"easy":8,"keep":7,"fork":1,"rolling":1,"please":6,"repository":1,"source":4,"software":2,"website":2,"execute":1,"running":3,"find":3,"typo":1,"quick":2,"pr":1,"follow":3,"start":3,"along":2,"delete":2,"last":2,"excellent":1,"scratch":2,"starting":2,"loose":1,"user":15,"thread":1,"three":3,"ways":4,"here's":6,"click":5,"new":16,"video":1,"link":3,"sveltekit":19,"display":16,"project":7,"we'll":4,"encounter":1,"ready":3,"backend":4,"executing":1,"interface":2,"thing":2,"creating":2,"users":11,"commonly":1,"button":8,"it'll":1,"differences":2,"browser":13,"element":7,"route":3,"small":3,"commands":1,"trivial":1,"userschema":1,"acronym":2,"seconds":1,"directory":2,"mock":1,"crud":4,"select":6,"requested":1,"top":9,"skeleton":2,"testing":3,"integrity":2,"resetform":6,"typescript":1,"passed":1,"prompts":1,"formdisplay":1,"rest":2,"exist":4,"formpost":1,"where":11,"was":16,"everything":4,"validate":11,"logic":1,"post":9,"datapost":1,"datacreate":1,"entity":2,"converted":2,"thank":2,"head":2,"others":1,"therefore":6,"detect":2,"fetch":4,"app":5,"allow":3,"we're":5,"dataupdate":1,"doing":4,"profit":2,"nicer":2,"fortunately":5,"displayed":13,"visual":1,"manipulations":2,"experience":2,"makes":6,"model":3,"questions":3,"request":11,"usual":4,"check":19,"letters":1,"pressed":1,"duplicating":1,"delayed":4,"populated":5,"mimick":1,"becomes":2,"lines":2,"behavior":6,"slow":2,"sometimes":3,"half":1,"network":1,"implement":1,"crudl":1,"call":13,"shouldn't":2,"steps":1,"course":8,"listing":1,"original":4,"fundamental":2,"kept":5,"intact":1,"management":1,"big":2,"loaded":2,"four":1,"operations":1,"complete":4,"share":3,"issue":6,"variables":3,"idea":1,"extracted":1,"deleting":2,"avoid":6,"refer":4,"we've":1,"deleted":1,"partially":4,"generate":1,"redirecting":3,"editing":2,"prepared":1,"non-specified":1,"test":2,"ensuring":2,"success":1,"maybe":1,"safety":4,"failure":2,"newly":1,"created":2,"title":1,"been":19,"continued":1,"remember":3,"sister":2,"live":1,"bug":1,"reporting":1,"chosen":1,"basic":3,"sveltelab":3,"multi-type":1,"unions":4,"encounters":1,"explicit":2,"take":5,"enum":4,"precedence":2,"own":8,"over":3,"radio":1,"exactly":1,"buttons":1,"supplied":1,"union":2,"menu":2,"both":10,"enums":3,"nullable":3,"doesn't":8,"otherwise":9,"wouldn't":1,"abuse":1,"typing":2,"possible":17,"system":1,"initally":1,"correct":2,"typevaluestring":1,"achieved":2,"classic":2,"agree":1,"no":26,"terms":1,"checkbox":2,"misuse":2,"bigint":1,"symbol":1,"looks":2,"strange":1,"there's":5,"age":1,"casting":2,"hide":5,"unchecked":1,"while":3,"accepting":1,"correspond":2,"zod's":2,"refine":6,"though":7,"these":11,"posted":17,"main":2,"determinant":1,"trustworthy":1,"extra":10,"yes":2,"submit":13,"accessed":4,"uploads":6,"-":7,"pagedata":1,"answer":2,"limited":2,"happens":5,"most":14,"common":6,"related":2,"configure":1,"mistake":2,"constructing":2,"article":2,"previous":5,"suit":1,"forget":2,"functions":6,"methods":6,"stack":1,"described":4,"larger":2,"aren't":3,"several":2,"structures":1,"could":7,"including":3,"happen":5,"together":7,"files":7,"formid":4,"next":4,"submission":8,"during":3,"through":11,"called":12,"fix":3,"treated":1,"you'd":5,"onupdate":8,"dynamically":5,"event":20,"done":7,"extract":2,"normal":2,"actiondata":1,"item":1,"posting":3,"programmatically":4,"reason":3,"good":5,"plain":2,"place":4,"fixed":1,"fails":3,"proper":3,"section":6,"parsing":4,"slightly":1,"cryptic":1,"json":5,"occurs":3,"redirects":2,"cause":3,"updated":7,"configuration":2,"lost":3,"replace":2,"synchronized":1,"honoring":1,"clearonsubmit":2,"flashmessage":2,"onerror":6,"callback":1,"well":11,"transform":1,"successful":7,"interfaces":2,"integrate":1,"closely":2,"property":7,"importing":1,"displaying":7,"sveltekit-flash-message":2,"addon":1,"temporary":1,"sent":9,"least":2,"haven't":1,"touched":1,"subject":1,"accessibility":1,"ui-component":1,"guru":1,"hunter":1,"johnston":1,"aka":1,"huntabyte":1,"community":1,"great":1,"service":1,"his":1,"put":2,"top-class":1,"effort":1,"style":2,"expect":1,"compared":3,"manually":5,"putting":1,"individual":1,"suits":1,"really":1,"x":2,"upgrade":3,"migration":3,"guide":3,"what's":4,"whats-new-v1":1,"documentation":2,"superforms-legacy":1,"vercel":1,"resetting":2,"noerrors":1,"seterror":7,"signature":2,"undocumented":2,"virtually":3,"defaultdata":2,"unused":1,"errorselector":2,"removed":12,"breaking":2,"reasons":1,"allerrors":4,"meta":2,"changes":14,"package":2,"fieldpath":1,"changed":8,"aria-invalid":5,"entry":1,"firsterror":1,"except":4,"gone":2,"containted":1,"defaultvalues":2,"data-invalid":2,"sveltekit-superforms":3,"setmessage":1,"address":2,"easier":1,"metadata":1,"javascript":9,"arbitrary":1,"determine":3,"v0":1,"weren't":1,"path":5,"v1":1,"anymore":12,"accessibility-friendly":1,"you'll":6,"accessor":2,"above-described":1,"reflection":1,"release":3,"notes":4,"conflicts":1,"client-side":19,"full":11,"'tags'":1,"synchronous":2,"written":1,"shows":5,"'id'":1,"affected":2,"applies":1,"let":4,"headlines":1,"me":2,"know":6,"scan":1,"rely":1,"simplified":1,"something":6,"unclear":2,"working":5,"apply":2,"warning":2,"client-only":1,"scenarios":2,"spa's":2,"supervalidatesync":3,"persist":3,"until":5,"finally":6,"maps":1,"brief":1,"were":1,"fielderrors":1,"emptyifzero":1,"underlying":3,"biggest":2,"another":2,"renamed":3,"popular":1,"smallest":1,"hindsight":1,"features":5,"reading":2,"numberproxy":4,"you've":3,"istainted":3,"consistent":1,"further":5,"intproxy":4,"paths":3,"choose":1,"outside":3,"defaultvalidators":1,"inferior":1,"favorite":1,"simpler":1,"imports":1,"minimize":1,"unlike":2,"worthwhile":1,"bundle":3,"potential":1,"size":3,"'clear'":2,"forgiving":2,"untaint":3,"level":4,"nature":1,"validators":8,"numeric":1,"currently":1,"rare":1,"every":5,"supported":1,"anyway":1,"certain":3,"coercion":3,"backwards":1,"pointing":1,"defaultresetform":1,"libraryadapterrequires":1,"tainted":11,"compatibility":1,"updating":4,"defaulttaintedmessage":1,"defaultsarktype":1,"libraries":6,"libaries":1,"arktype":1,"strings":5,"checking":4,"had":3,"problems":3,"might":2,"'sveltekit-superforms":1,"caching":2,"overload":1,"hash":1,"able":1,"parsed":2,"exists":1,"worry":2,"adapters'":1,"caused":1,"made":1,"loading":10,"feature":7,"yesjoi":1,"infer":2,"validated":7,"perfectly":1,"joi":1,"memoized":2,"give":4,"assign":2,"usable":1,"notypebox":1,"cached":2,"uses":5,"unexpected":3,"words":1,"signify":1,"typebox":1,"results":3,"side-effects":1,"novalibot":1,"speaking":1,"valibot":1,"z":1,"modification":1,"novinejs":1,"keeps":1,"vine":1,"unless":9,"track":3,"migrate":1,"yesyup":1,"aware":5,"executed":1,"goes":4,"yup":1,"switch":3,"split":1,"nozod":1,"generated":1,"nowith":1,"memory":2,"define":3,"installed":1,"validateform":4,"go":4,"vite":1,"imported":3,"built-in":6,"inferin":1,"back":8,"export":3,"config":1,"eventual":3,"validator":3,"calls":1,"deprecated":1,"optionally":1,"considered":4,"clear":3,"form-by-form":1,"basis":2,"security":1,"superformclient":1,"legacy":1,"correctly":1,"introspection":1,"capabilities":1,"save":2,"yet":1,"bandwidth":2,"search":1,"reveals":1,"supply":1,"relevant":1,"usages":1,"sure":1,"changing":2,"allowfiles":2,"said":3,"error-prone":1,"replacement":1,"anywhere":2,"completely":2,"external":4,"stored":1,"somewhere":1,"prevention":1,"submissions":2,"limit":2,"rate":1,"spamming":1,"sveltekit-rate-limiter":1,"password":4,"resets":1,"account":1,"registration":3,"etc":5,"requests":1,"limiting":2,"harder":1,"expanded":2,"custom":7,"limiter":1,"plugins":1,"installation":1,"instructions":1,"repo":1,"com":1,"ciscoheat":1,"kind":5,"individuals":1,"organizations":1,"monthly":3,"donating":1,"listed":2,"picture":2,"donated":1,"one-time":1,"amount":1,"whenever":1,"time":5,"reach":1,"say":2,"personally":1,"proptypedefault":1,"valuedescriptiondataanydata":1,"svelte's":1,"label":2,"theme":2,"filelist":1,"vscode":2,"scroll":2,"debug":1,"--sd-code-date":1,"lightgreen":1,"going":2,"product":1,"instance":3,"produces":1,"tough":1,"side-effect":1,"displayboolean":1,"hit":1,"refresh":1,"contain":2,"statusboolean":1,"collapsible":2,"http":2,"current":6,"labelstring":1,"right":4,"corner":2,"instances":1,"collapsibleboolean":1,"cases":4,"per-route":1,"includes":2,"collapsedboolean":1,"promises":1,"sets":1,"collapsed":1,"stringtruncatenumber":1,"truncate":1,"long":4,"valuns":1,"disable":2,"truncating":1,"rawboolean":1,"skip":1,"promise":3,"detection":1,"functionsboolean":1,"enables":2,"customized":1,"css":4,"refhtmlpreelementreference":1,"pre":1,"contains":8,"report":1,"bugs":1,"aiming":1,"getting":1,"personal":1,"money":1,"non-profit":1,"fixing":1,"free":1,"proportional":1,"star":1,"due":3,"company":1,"month":1,"speed":1,"appreciation":1,"commercial":1,"join":1,"free-support":1,"donate":1,"process":4,"ask":3,"away":5,"commercial-support":1,"pull":1,"channel":2,"longer":2,"period":1,"pay":1,"higher":1,"sponsors":1,"sponsor":1,"many":3,"thanks":1,"provide":3,"wasn't":1,"dateproxy":2,"stringproxy":1,"released":2,"deconstructing":2,"reset":3,"clunky":1,"minimum":1,"asynchronous":2,"replaced":2,"maximum":1,"exception":4,"partial":3,"improvements":2,"rename":1,"identical":2,"write":1,"assumes":1,"async":2,"js":1,"specified":1,"hidden":6,"increase":2,"__superform_id":2,"emitted":1,"id's":2,"detected":2,"oft-requested":1,"onchange":2,"detailed":1,"taintedmessage":2,"noticed":1,"retrieving":1,"projects":1,"properly":2,"ux":2,"presentation":1,"difficult":2,"simply":3,"dedicated":2,"assumptions":1,"v2-migration":1,"numbers":2,"modified":8,"events":11,"hides":1,"against":1,"wanted":1,"compromises":1,"explicitly":1,"resolved":1,"navigation":4,"trigger":1,"proceed":1,"dialog":2,"multi-step":3,"smarter":1,"keeping":1,"unfortunately":1,"bypass":1,"serializing":1,"triggered":5,"deconstructed":1,"lets":1,"demonstrates":2,"web":1,"standard":2,"tooltip":2,"spread":2,"control":3,"focusing":2,"constrained":1,"accepts":1,"neither":1,"delay":3,"tabbing":1,"nor":1,"final":2,"can't":3,"effortless":1,"length":2,"recommended":4,"enabled":8,"position":1,"round-trip":1,"reward":1,"tag":2,"constraint":2,"appearance":1,"early":1,"properties":5,"needs":3,"handling":4,"blank":1,"mapped":1,"late":1,"username":2,"shared":1,"pattern":1,"mentioned":1,"researched":1,"yyyy-mm-dd":2,"supplementary":1,"validating":2,"consider":1,"customize":1,"move":1,"adding":3,"thrown":1,"focus":6,"high":2,"satisfaction":1,"blur":2,"entering":3,"real-time":1,"throttle-debounce":1,"functionality":2,"their":5,"soon":2,"enter":1,"mdn":2,"character":1,"optimized":1,"oninput":1,"onblur":1,"settings":7,"respective":2,"zodclient":1,"super-simple":1,"applyaction":4,"invalidateall":5,"conflict":1,"upon":2,"between":9,"enhancement":2,"expected":1,"transformed":1,"modern":1,"reacting":1,"nothing":2,"invalidated":2,"optimistic":1,"causing":2,"run":2,"meaning":1,"invalidate":1,"loss":2,"turning":1,"clearing":1,"probably":1,"advantage":3,"assuming":2,"dom":3,"fine":2,"render":2,"hook":2,"nearest":3,"supposed":1,"effect":3,"isolate":1,"wipe":1,"experiment":1,"sources":1,"supabase":1,"sync":1,"state":6,"entered":1,"known":2,"basically":1,"confusing":2,"reload":2,"wait":1,"static":1,"timers":9,"user-friendly":1,"auto-focus":1,"'force'":1,"prioritized":1,"latest":1,"sveltekit's":2,"care":3,"purpose":1,"protect":1,"scrolltoerror":1,"autofocusonerror":1,"determines":1,"selector":2,"sticky":1,"navbar":1,"locate":1,"invalid":3,"erroneous":1,"normalize":1,"checks":1,"refining":1,"enabling":1,"smooth":1,"flexibility":1,"lots":2,"auto":2,"confirm":1,"occur":2,"mobile":2,"typeexampleexpected":1,"device":1,"appropriate":2,"determining":1,"window":1,"height":1,"try":4,"'user_not_found'":1,"non-string":2,"z-index":1,"'not":1,"found'":1,"scrollintoview":1,"throw":1,"scrolled":1,"focused":1,"prevented":1,"names":1,"connection":1,"far":1,"depending":3,"devices":1,"mostly":1,"'rate_limited'":1,"on-screen":1,"scrollbars":1,"keyboard":1,"translation":1,"viewport":1,"doctype":1,"such":3,"shift":1,"lang":1,"customvalidity":1,"en":1,"charset":1,"alternatively":2,"spreading":1,"preferred":1,"does":4,"win":1,"affect":2,"minimal":1,"indicates":1,"rendered":1,"succeeded":3,"exclude":1,"regardless":1,"exceptions":1,"data-no-custom-validity":1,"non-js":1,"single-page":2,"application":2,"cancelled":1,"submitting":8,"essentially":1,"succeeds":1,"giving":2,"entirely":1,"afterwards":1,"catch":1,"responds":1,"serialized":3,"showing":1,"submitted":8,"toast":2,"chance":1,"notification":1,"triggering":1,"cancel":5,"onupdated":3,"negate":1,"easiest":1,"direct":1,"altogether":2,"assignment":2,"discriminated":1,"form's":1,"htmlformelement":2,"jsondata":2,"formelement":2,"distinguish":1,"read-only":1,"shape":1,"typeshapeexpected":1,"target":1,"chain":1,"responseunexpected":1,"point":1,"responses":1,"passes":1,"distinguishing":1,"included":1,"deliberately":1,"named":2,"responseif":1,"completed":1,"parse":1,"narrowed":1,"'success'":1,"'failure'":1,"fallback":1,"formresult":1,"taken":1,"conventiently":1,"'apply'":1,"behaviour":1,"wiping":1,"non-javascript":1,"obtain":1,"fileproxy":1,"filesproxy":1,"image":1,"possibility":1,"withfiles":2,"handler":2,"says":1,"block":1,"migrated":1,"upload":1,"superforms_legacy":1,"filefieldproxy":1,"serialize":1,"filesfieldproxy":1,"complement":1,"realistically":1,"difference":1,"consistency":1,"simplify":1,"already":1,"integrated":1,"across":1,"documented":2,"non-store-related":1,"matter":2,"namespace":1,"d":1,"appropriately":1,"picked":1,"hard":1,"per":2,"sensible":2,"invalidation":1,"register":1,"forms'":1,"executes":1,"possibly":1,"affecting":1,"preserve":1,"almost":2,"explains":1,"react":1,"ideas":1,"copying":1,"count":1,"contents":1,"posts":1,"dynamic":1,"table":1,"rows":2,"edited":1,"row":2,"communicate":1,"respond":1,"requirements":1,"describes":1,"allowed":1,"nest":1,"devalue":1,"build":1,"ordinary":1,"standardized":1,"failed":2,"chaining":1,"specifier":1,"complex":1,"mirror":1,"dates":1,"miss":1,"leaf":1,"mark":1,"actual":1,"lead":1,"inputconstraints":1,"respectively":2,"ui":1,"bound":1,"segment":1,"summarize":1,"disabled":1,"normally":1,"max":2,"limitation":1,"s":2,"'user":1,"profile":1,"third-party":1,"email'":1,"parent":1,"iso":1,"taking":1,"min":1,"practically":1,"picker":1,"selection":1,"limits":2,"allows":1,"today":1,"forward":2,"idproxy":1,"conversion":1,"falsy":1,"snapshots":1,"saves":1,"restores":1,"navigates":1,"site":2,"perfect":2,"restored":1,"saving":1,"snapshot":1,"intermediate":1,"line":1,"history":1,"representation":1,"applications":1,"combined":1,"crud-like":1,"straightforward":1,"trick":1,"manner":1,"superforms'":1,"modifications":1,"tamper":1,"collecting":1,"missing":1,"catch-all":1,"allowing":1,"assumption":1,"sooner":1,"later":1,"strict":1,"assert":1,"wrong":1,"reported":1,"signifying":1,"decides":1,"occurence":1,"happening":3,"provides":1,"none":1,"timeout":3,"jumping":1,"reached":2,"abort":1,"approach":1,"frenetic":1,"clicks":1,"delayms":2,"positive":1,"understand":1,"smaller":1,"play":1,"around":1,"equal":1,"determined":1,"timeoutms":2,"indicator":1,"spinners":2,"timer":1,"states":2,"feedback":2,"readable":1,"multiplesubmits":1,"spinner":1,"icon":1,"mutually":1,"exclusive":1,"short":1,"waiting":1,"periods":1,"experimenting":1,"little":1,"instantly":1,"feeling":1,"unresponsiveness":1,"turn":1,"english":1,"navigating":2,"dirty":1,"marked":1,"untainted":1,"losing":2,"appear":1,"browsing":1,"within":2,"closing":1,"tab":1,"untainting":1,"reloading":2,"managers":1,"resolve":1,"inserting":1,"ok":1,"saved":1,"usernames":1,"passwords":1,"modal":1,"pop":1,"preventing":1,"concludes":1,"environment":1,"step":1,"initialize":1,"learn":1,"install":1,"containing":2,"progressive":1,"command":1,"instantiate":1,"folder":1,"representing":1,"choice":1,"filled":1,"behind":1,"did":1,"scenes":1,"'arktype'":2,"destructuring":1,"pm":1,"matches":1,"enable":1,"'npm":1,"'joi'":2,"'json-schema'":3,"-d'":1,"'":2,"plan":1,"sinclair":2,"'pnpm":1,"typebox'":2,"'yarn":1,"'valibot'":2,"vinejs":2,"--dev'":1,"vine'":2,"''":1,"'yup'":2,"'ajv'":1,"'zod'":2,"'superstruct'":1,"'n":1,"a'":1,"carefully":1,"two-way":1,"binding":1,"provided":1,"continuing":1,"copy":1,"fully":3,"unlock":1,"propertypurposeidid":1,"validtells":1,"successfully":1,"postedtells":1,"datathe":1,"secrets":1,"errorsan":1,"reflecting":1,"server-side":1,"rendering":1,"basics":1,"propertypurposeconstraintsan":1},"code":{"0":10,"1":13,"2":12,"3":9,"5":3,"8":5,"10":4,"100":4,"120":1,"123":3,"200":3,"300":2,"303":2,"400":19,"403":2,"404":4,"429":1,"500":2,"599":1,"2000":1,"8000":1,"import":68,"actionresult":5,"supervalidate":34,"from":70,"'":52,"lib":8,"supervalidateoptions":3,"server'":5,"errors":48,"zod":38,"boolean":17,"'sveltekit-superforms":34,"add":3,"adapters'":24,"const":113,"or":3,"z":29,"schema":52,"remove":1,"'zod'":11,"defaults":10,"object":34,"output":1,"loginschema":8,"t":13,"script":36,"date":5,"valid":22,"supervalidated":8,"m":8,"lang":36,"optional":5,"status":15,"email":19,"any":6,"ts":38,"is":20,"string":43,"data":99,"superform":77,"always":2,"password":8,"partial":4,"the":37,"dateproxy":7,"preserved":1,"in":16,"message":31,"min":18,"null":3,"primitives":3,"fieldproxy":5,"id":18,"form":113,"undefined":20,"return":33,"'sveltekit-superforms'":49,"export":57,"a":22,"post":22,"type":43,"clientvalidationadapter":5,"writable":3,"let":32,"for":13,"defaultvalues":3,"async":24,"formoptions":1,"options":13,"multiple":2,"posted":5,"request":18,"booleanproxy":3,"forms":1,"pagedata":10,"support":1,"await":34,"intproxy":5,"proxy":7,"set":11,"nested":3,"numericrange":1,"if":52,"numberproxy":3,"'field'":5,"stringproxy":3,"types":9,"automatically":2,"basics":1,"js'":17,"by":4,"constraints":16,"file":7,"format":4,"field":15,"default":29,"inputconstraints":1,"actionfailure":2,"'failure'":4,"proxies":1,"extract":2,"preprocessed":1,"verify":1,"applyaction":3,"fileproxy":2,"an":6,"keyof":1,"false":26,"login":3,"filefieldproxy":1,"part":4,"here":5,"invalidateall":2,"formfieldproxy":7,"of":10,"nameproxy":1,"enhance":51,"bypass":1,"name":50,"'success'":7,"'force'":2,"filesproxy":2,"'name'":11,"'date'":3,"adapter":4,"resetform":4,"filesfieldproxy":1,"as":30,"taint":14,"validationadapter":3,"taintedmessage":2,"arrayproxy":3,"truestringvalue":1,"empty":7,"coercion":1,"promise":4,"'true'":13,"substring":1,"'untaint'":11,"'undefined'":5,"actions":15,"tags":14,"datatype":3,"'untaint-all'":3,"input":25,"fields":5,"'form'":2,"others":1,"'datetime'":1,"'null'":4,"array":10,"'json'":3,"depends":2,"'time'":1,"bind":24,"this":4,"event":5,"multiplesubmits":1,"on":8,"'untaint-form'":8,"convert":1,"value":26,"requestevent":1,"'a'":3,"'prevent'":1,"to":18,"typeof":9,"'b'":3,"'allow'":1,"utc":1,"formdata":10,"override":1,"returns":5,"'abort'":1,"'date-utc'":1,"url":2,"values":5,"''":11,"spa":7,"'datetime-utc'":1,"urlsearchparams":1,"true":23,"'time-utc'":1,"failstatus":2,"local":1,"jsonschema":2,"will":10,"number":13,"time":1,"json":3,"error":18,"'date-local'":1,"fail":15,"handling":2,"'datetime-local'":1,"strict":2,"since":5,"scrolltoerror":2,"'time-local'":1,"isn't":2,"'auto'":4,"'invalid":3,"'smooth'":2,"isodatestring":1,"validate":7,"form'":3,"'off'":2,"'iso'":1,"exactly":1,"scrollintoviewoptions":2,"no":5,"autofocusonerror":2,"'zero'":3,"added":2,"includes":3,"'detect'":2,"initiallyemptyifzero":3,"allowfiles":1,"'spam'":3,"errorselector":3,"and":10,"selecterrortext":1,"whole":6,"all":2,"stickynavbar":2,"seterror":6,"events":1,"objects":1,"onsubmit":6,"required":10,"'no":2,"submit":16,"deconstruct":2,"spam":2,"parameters":2,"please'":2,"submitfunction":1,"usual":4,"jsondata":3,"path":9,"infer":7,"'valid":3,"record":5,"inferin":3,"formpathleaves":5,"unknown":9,"void":6,"validators":17,"tainted":4,"zodclient":3,"overwrite":1,"maybepromise":1,"onresult":3,"errorstatus":1,"result":11,"valueerrors":1,"formel":1,"'tags'":4,"htmlformelement":1,"cancel":5,"onupdate":5,"now":2,"which":3,"onupdated":4,"same":3,"'redirect'":2,"readonly":1,"onchange":2,"changeevent":1,"'error'":4,"onerror":5,"'error":1,"'apply'":3,"message'":1,"app":5,"text":13,"'posted":2,"'message'":1,"successfully":1,"client-side":5,"cookieoptions":1,"validation":6,"samesite":1,"'lax'":1,"'clear'":3,"validationmethod":3,"'oninput'":3,"'onblur'":3,"'onsubmit'":2,"clearonsubmit":1,"'errors-and-message'":1,"'errors'":2,"'none'":1,"delayms":3,"timeoutms":2,"special":1,"flash":2,"integration":1,"not":12,"usually":1,"syncflashmessage":2,"flashmessage":2,"module":5,"flashmodule":2,"'sveltekit-flash-message":2,"client'":10,"'flash'":1,"cookiepath":1,"cookiename":1,"disable":2,"warnings":2,"duplicateid":1,"formpath":2,"paths":2,"formelement":5,"target":2,"element":1,"extends":5,"formpathtype":1,"get":3,"--":5,"each":8,"label":13,"aria-invalid":13,"span":11,"class":15,"invalid":11,"context":3,"schemas'":4,"textfield":2,"method":17,"generics":3,"loginform":7,"use":16,"inputconstraint":1,"loginerrors":1,"business":2,"h4":2,"loginenhance":1,"registerform":4,"registererrors":2,"registerenhance":2,"_":4,"i":7,"div":9,"button":15,"click":2,"br":6,"clear":1,"satisfies":2,"checkbox":1,"restprops":4,"checked":1,"textinput":2,"npm":3,"install":1,"run":1,"dev":2,"pnpm":3,"create":4,"see":1,"svelte":3,"https":3,"latest":2,"link":1,"rel":1,"h3":4,"stylesheet":1,"users":8,"href":2,"syntax":1,"unpkg":1,"com":3,"normalize":1,"userschema":2,"css":1,"user":9,"regex":1,"d":1,"sakura":1,"style":2,"color":2,"red":2,"userdb":1,"danger":2,"background-color":1,"crudschema":4,"brown":1,"let's":1,"delay":2,"worry":1,"lightblue":1,"about":1,"collisions":1,"display":4,"later":1,"flex":1,"userid":4,"flex-direction":1,"math":1,"column":1,"random":1,"gap":1,"slice":3,"1em":1,"align-items":1,"simple":1,"flex-start":1,"push":2,"margin-bottom":1,"database":2,"2em":1,"'user":5,"hr":2,"'important":1,"created":2,"width":1,"customer'":1,"example":1,"else":6,"margin-block":1,"com'":1,"update":10,"columns":1,"'super":1,"index":2,"findindex":2,"150px":1,"u":3,"block":1,"-1":2,"white-space":1,"throw":4,"nowrap":1,"overflow-x":1,"hidden":3,"found":3,"updated":3,"users'":3,"extend":1,"shape":1,"delete":1,"redirect":2,"e":3,"confirm":5,"sveltejs":7,"'are":1,"kit'":6,"you":5,"sure":2,"preventdefault":1,"load":13,"delayed":5,"params":4,"read":1,"find":2,"has":2,"'delay'":1,"new":5,"r":1,"settimeout":1,"be":14,"returned":2,"page":6,"stores'":3,"'delete'":1,"splice":1,"h2":1,"'create'":1,"'update'":1,"e-mail":4,"working":1,"superdebug":12,"schema2":2,"either":2,"union":2,"fish":2,"enum":4,"'salmon'":2,"'tuna'":2,"'trout'":2,"nullable":2,"age":1,"positive":2,"agree":1,"literal":1,"locals":3,"username":4,"currentuser":2,"p":2,"'warning'":2,"currently":2,"logged":2,"strongly":1,"needed":1,"leave":2,"out":1,"parameter":2,"function":6,"mysuperform":1,"extra":3,"form2":3,"anotherschema":1,"your":4,"formresult":2,"actiondata":2,"has-error'":1,"'extra'":1,"do":5,"something":4,"with":17,"action":5,"need":1,"'value'":1,"rename":1,"it's":3,"used":1,"-":7,"store":3,"errormessage":1,"control":1,"attrs":1,"description":1,"real":1,"fielderrors":1,"preferred":1,"that":1,"company":1,"ensure":1,"at":3,"least":2,"characters":1,"data-invalid":3,"defaultdata":1,"server":1,"messages":2,"allerrors":3,"length":4,"ul":2,"li":2,"devdependencies":1,"b":3,"sveltekit-superforms":1,"join":2,"sent":3,"safety":1,"cannot":2,"guaranteed":1,"also":4,"confirmpassword":3,"refine":7,"exist":1,"passwords":4,"doesn't":1,"match":4,"novalidationandconstraints":1,"option":5,"warning":1,"stays":1,"until":1,"again":1,"regardless":1,"anyzodobject":1,"zodvalidation":1,"generic":1,"won't":2,"work":4,"tag":2,"'tags":2,"but":3,"end":1,"tagname":1,"name'":3,"expect":1,"it":4,"parsed":1,"anymore":1,"foo":1,"fetchstatus":1,"idle":1,"submitting":3,"timeout":2,"nativeenum":1,"istainted":4,"zodenum":1,"check":4,"'c'":1,"explicit":2,"svelte'":1,"defineconfig":1,"plugins":1,"sveltekit":1,"test":2,"include":1,"'src":1,"spec":1,"js":1,"'arktype'":3,"arktype":2,"powerful":1,"define":3,"stuff":2,"valibotclient":2,"superforms_legacy":1,"'string'":3,"'email'":5,"3'":1,"score":1,"'integer":1,"0'":1,"validated":2,"superformclient":1,"'name":1,"must":1,"two":1,"characters'":1,"getting":1,"supplying":1,"initial":1,"can":5,"initialdata":3,"'new":2,"user'":2,"ratelimiter":1,"'sveltekit-rate-limiter":1,"limiter":1,"ip":1,"'h'":1,"address":2,"ipua":1,"'m'":1,"agent":1,"every":1,"call":3,"islimited":1,"counts":1,"hit":1,"towards":1,"rate":1,"limit":1,"theme":2,"vscode":1,"--sd-code-date":1,"useful":1,"lightgreen":1,"fetch":2,"promiseproduct":1,"'https":1,"dummyjson":1,"products":1,"1'":1,"then":1,"response":2,"product":1,"collapsible":2,"collapsed":1,"stringtruncate":1,"raw":1,"functions":2,"'default'":1,"ref":1,"htmlpreelement":1,"'incorrect":1,"max":6,"when":3,"idproxy":2,"called":1,"supervalidatesync":1,"'user'":1,"'profile'":1,"only":3,"'id'":2,"'loginform'":1,"profile":1,"_errors":2,"id'":1,"registerschema":2,"returning":2,"'registerform'":1,"form1":1,"'form1'":1,"'form2'":1,"undecided":1,"console":5,"log":5,"'the":2,"tainted'":2,"make":2,"reactive":2,"passing":2,"disabled":2,"num":1,"even":3,"works":2,"'num'":1,"individual":2,"validateform":3,"simplest":1,"case":1,"what's":1,"trigger":2,"pattern":1,"valibot":1,"right":1,"first":4,"validator":1,"partially":1,"without":1,"result2":1,"updating":1,"partialschema":2,"regexp":1,"step":3,"checking":2,"nameerrors":1,"needs":1,"'any'":1,"minlength":2,"minimum":1,"maxlength":1,"maximum":1,"custom":2,"'username":2,"s":3,"iso":1,"'test'":2,"already":3,"proxydate":2,"taken":2,"tostring":2,"'submit-only'":1,"moving":1,"nullish":1,"customvalidity":3,"last":1,"reset":1,"render":1,"nearest":1,"too":1,"short":1,"that's":1,"strange":1,"refined":2,"didn't":2,"still":1,"real-time":1,"populated":1,"so":2,"db":2,"where":2,"fails":1,"'e-mail":1,"exists":1,"unless":1,"we":1,"turn":1,"them":2,"off":1,"rare":1,"customschema":1,"schemas":2,"laststep":1,"controller":1,"submitter":1,"successful":1,"goto":1,"location":1,"some":1,"more":1,"like":1,"showing":1,"'was":1,"toast":2,"changed":1,"notification":1,"with'":1,"'in":1,"icon":2,"programmatic":1,"'fields":1,"top-level":1,"tainteddata":1,"fromentries":1,"entries":1,"filter":1,"key":1,"you've":1,"note":1,"superforms":2,"kit":2,"image":4,"instanceof":4,"'please":3,"upload":3,"images":1,"f":3,"size":3,"handles":1,"100_000":3,"'max":3,"kb":3,"ok":2,"'image'":3,"'could":1,"withfiles":2,"process":2,"importing":1,"todo":4,"'you":1,"just":2,"have":1,"uploaded":1,"enctype":2,"multipart":2,"form-data":2,"files":2,"'images'":1,"accept":2,"png":2,"jpeg":2,"currenttarget":2,"item":1,"'all":1,"went":1,"well'":1,"using":1,"library":1,"inferred":1,"second":2,"declare":1,"global":1,"code":1,"namespace":1,"interface":1,"created'":1,"platform":1,"newid":1,"success":1,"behavior":1,"along":1,"formid":2,"advanced":1,"cases":1,"__superform_id":1,"take":1,"precedence":1,"'custom-id'":1,"different":1,"both":1,"'login":1,"submitted'":1,"register":1,"'register":1,"registermessage":1,"int":3,"don't":1,"superrefine":1,"'form":1,"other":2,"three":1,"assume":1,"following":1,"prevent":1,"tainting":1,"idproxy2":1,"capture":1,"restore":1,"snapshot":1,"_userschema":2,"external":2,"api":3,"setmessage":1,"parseint":1,"jsonplaceholder":1,"typicode":1,"userdata":1,"'suspicious":1,"check'":1,"h1":1,"edit":1,"'username'":1,"checkusername":1,"debounce":1,"usernameschema":1,"fullschema":1,"pick":1,"img":2,"src":2,"spinner":2,"alt":1,"availability":1,"catchall":1,"should":2,"integers":1,"typed":1,"expected":1,"keys":1,"are":1,"assets":1,"svg'":1,"resolve":1,"modalstore":1,"'confirm'":1,"title":1,"'do":1,"want":1,"body":1,"'changes":1,"made":1,"may":1,"saved":1,"joi":1,"'joi'":1,"yarn":1,"'hello":2,"world":2,"'object'":1,"properties":1,"replace":1,"additionalproperties":1,"'http":1,"json-schema":1,"outside":1,"org":1,"findunique":1,"draft-07":1,"'not":1,"found'":1,"client":1,"inference":1,"cached":1,"sinclair":1,"typebox'":1,"your_adapter":1,"'valibot'":1,"vine":1,"vinejs":1,"vine'":1,"'yup'":1,"defined":1,"requires":1}},"avgFieldLength":{"title":3.22243411321152,"hash":0.9656321661955343,"url":1.3762127602219656,"content":39.82750753011055,"code":15.522779660603506},"fieldLengths":{"title":{"1":2,"2":4,"3":2,"4":3,"5":5,"6":3,"7":2,"8":5,"9":3,"10":2,"11":1,"12":2,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":4,"20":3,"21":2,"22":1,"23":5,"24":5,"25":4,"26":4,"27":3,"28":3,"29":4,"30":7,"31":4,"32":1,"33":1,"34":4,"35":2,"36":2,"37":1,"38":3,"39":6,"40":4,"41":6,"42":5,"43":3,"44":3,"45":1,"46":2,"47":4,"48":3,"49":2,"50":4,"51":1,"52":12,"53":12,"54":5,"55":8,"56":7,"57":6,"58":9,"59":10,"60":4,"61":4,"62":11,"63":12,"64":11,"65":15,"66":10,"67":18,"68":10,"69":2,"70":1,"71":1,"72":2,"73":4,"74":7,"75":2,"76":2,"77":1,"78":1,"79":3,"80":1,"81":5,"82":1,"83":1,"84":2,"85":1,"86":2,"87":1,"88":1,"89":2,"90":1,"91":5,"92":1,"93":4,"94":1,"95":2,"96":3,"97":5,"98":5,"99":9,"100":6,"101":1,"102":3,"103":5,"104":3,"105":7,"106":6,"107":3,"108":5,"109":7,"110":1,"111":7,"112":4,"113":8,"114":5,"115":6,"116":2,"117":2,"118":2,"119":2,"120":5,"121":6,"122":1,"123":2,"124":1,"125":3,"126":2,"127":3,"128":2,"129":3,"130":2,"131":5,"132":2,"133":5,"134":2,"135":2,"136":2,"137":2,"138":5,"139":3,"140":1,"141":1,"142":3,"143":3,"144":4,"145":6,"146":6,"147":5,"148":5,"149":3,"150":1,"151":2,"152":7,"153":10,"154":5,"155":2,"156":3,"157":2,"158":3,"159":7,"160":2,"161":2,"162":2,"163":2,"164":3,"165":1,"166":3,"167":4,"168":1,"169":2,"170":1,"171":1,"172":1,"173":1,"174":4,"175":3,"176":2,"177":5,"178":1,"179":1,"180":2,"181":1,"182":5,"183":7,"184":2,"185":1,"186":2,"187":3,"188":2,"189":1,"190":1,"191":1,"192":1,"193":1,"194":4,"195":5,"196":2,"197":6,"198":3,"199":1,"200":2,"201":1,"202":1,"203":1,"204":1,"205":2,"206":1,"207":1,"208":1,"209":1,"210":2,"211":5,"212":1,"213":3,"214":2,"215":3,"216":3,"217":2,"218":1,"219":3,"220":3,"221":5,"222":1,"223":6,"224":5,"225":3,"226":3,"227":3,"228":2,"229":1,"230":1,"231":4,"232":1,"233":4,"234":5,"235":2,"236":2,"237":3,"238":1,"239":1,"240":3,"241":4,"242":3,"243":1,"244":6,"245":3,"246":5,"247":4,"248":3,"249":2,"250":2,"251":2,"252":1,"253":1,"254":2,"255":1,"256":2,"257":2,"258":3,"259":2,"260":1,"261":3,"262":6,"263":4,"264":6,"265":2,"266":3,"267":4,"268":2,"269":6,"270":2,"271":4,"272":5,"273":3,"274":1,"275":2,"276":2,"277":3,"278":2},"hash":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1},"url":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":2,"164":2,"165":2,"166":2,"167":2,"168":2,"169":2,"170":2,"171":2,"172":2,"173":2,"174":2,"175":2,"176":2,"177":2,"178":2,"179":2,"180":2,"181":2,"182":2,"183":2,"184":2,"185":2,"186":2,"187":2,"188":2,"189":2,"190":2,"191":2,"192":2,"193":2,"194":2,"195":2,"196":2,"197":2,"198":2,"199":2,"200":2,"201":2,"202":2,"203":2,"204":2,"205":2,"206":2,"207":2,"208":2,"209":2,"210":2,"211":2,"212":2,"213":2,"214":2,"215":2,"216":2,"217":2,"218":2,"219":2,"220":2,"221":2,"222":2,"223":2,"224":2,"225":2,"226":2,"227":2,"228":2,"229":2,"230":2,"231":2,"232":2,"233":2,"234":2,"235":2,"236":2,"237":2,"238":2,"239":2,"240":2,"241":2,"242":2,"243":2,"244":2,"245":2,"246":2,"247":2,"248":2,"249":2,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"256":2,"257":2,"258":2,"259":2,"260":2,"261":2,"262":2,"263":2,"264":2,"265":2,"266":2,"267":2,"268":2,"269":2,"270":2,"271":2,"272":2,"273":2,"274":2,"275":2,"276":2,"277":2,"278":2},"content":{"1":63,"2":33,"3":12,"4":19,"5":63,"6":23,"7":27,"8":82,"9":5,"10":27,"11":19,"12":22,"13":44,"14":43,"15":26,"16":19,"17":28,"18":48,"19":56,"20":18,"21":15,"22":30,"23":0,"24":53,"25":57,"26":81,"27":79,"28":108,"29":74,"30":76,"31":0,"32":49,"33":35,"34":55,"35":7,"36":25,"37":19,"38":41,"39":35,"40":97,"41":108,"42":53,"43":113,"44":47,"45":25,"46":33,"47":85,"48":25,"49":42,"50":41,"51":0,"52":31,"53":12,"54":16,"55":23,"56":31,"57":7,"58":10,"59":26,"60":9,"61":35,"62":47,"63":61,"64":36,"65":48,"66":13,"67":23,"68":23,"69":61,"70":52,"71":37,"72":37,"73":79,"74":0,"75":33,"76":15,"77":45,"78":65,"79":44,"80":70,"81":86,"82":32,"83":22,"84":24,"85":21,"86":6,"87":27,"88":16,"89":6,"90":40,"91":31,"92":13,"93":71,"94":71,"95":50,"96":83,"97":66,"98":109,"99":38,"100":40,"101":8,"102":9,"103":16,"104":24,"105":32,"106":43,"107":27,"108":44,"109":35,"110":17,"111":38,"112":23,"113":25,"114":26,"115":29,"116":19,"117":80,"118":0,"119":40,"120":17,"121":0,"122":47,"123":87,"124":2,"125":10,"126":13,"127":16,"128":8,"129":8,"130":7,"131":11,"132":21,"133":0,"134":10,"135":32,"136":63,"137":45,"138":20,"139":54,"140":26,"141":50,"142":36,"143":17,"144":20,"145":20,"146":27,"147":45,"148":15,"149":21,"150":11,"151":30,"152":28,"153":58,"154":15,"155":58,"156":28,"157":21,"158":42,"159":53,"160":32,"161":25,"162":11,"163":33,"164":19,"165":24,"166":47,"167":44,"168":85,"169":40,"170":82,"171":28,"172":22,"173":14,"174":46,"175":49,"176":72,"177":28,"178":48,"179":50,"180":59,"181":66,"182":35,"183":63,"184":35,"185":75,"186":80,"187":63,"188":46,"189":37,"190":38,"191":41,"192":21,"193":79,"194":46,"195":66,"196":36,"197":30,"198":30,"199":33,"200":24,"201":40,"202":56,"203":15,"204":62,"205":39,"206":77,"207":41,"208":101,"209":45,"210":21,"211":37,"212":41,"213":37,"214":43,"215":44,"216":36,"217":19,"218":26,"219":54,"220":72,"221":48,"222":50,"223":135,"224":34,"225":35,"226":74,"227":30,"228":37,"229":109,"230":22,"231":38,"232":60,"233":87,"234":57,"235":91,"236":24,"237":55,"238":49,"239":33,"240":21,"241":0,"242":37,"243":48,"244":44,"245":69,"246":33,"247":44,"248":107,"249":78,"250":24,"251":29,"252":42,"253":57,"254":32,"255":31,"256":40,"257":50,"258":51,"259":29,"260":74,"261":34,"262":16,"263":51,"264":0,"265":49,"266":20,"267":40,"268":45,"269":59,"270":34,"271":54,"272":48,"273":69,"274":56,"275":136,"276":98,"277":89,"278":65},"code":{"1":34,"2":20,"3":58,"4":19,"5":18,"6":51,"7":25,"8":24,"9":34,"10":130,"11":14,"12":29,"13":22,"14":22,"15":19,"16":46,"17":20,"18":32,"19":31,"20":25,"21":32,"22":0,"23":0,"24":39,"25":42,"26":40,"27":24,"28":50,"29":34,"30":15,"31":0,"32":5,"33":0,"34":0,"35":0,"36":0,"37":0,"38":18,"39":47,"40":12,"41":99,"42":39,"43":69,"44":44,"45":0,"46":0,"47":15,"48":0,"49":19,"50":12,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":35,"61":63,"62":32,"63":0,"64":17,"65":0,"66":0,"67":0,"68":43,"69":0,"70":34,"71":0,"72":0,"73":37,"74":0,"75":0,"76":0,"77":4,"78":26,"79":0,"80":35,"81":69,"82":16,"83":7,"84":0,"85":0,"86":0,"87":0,"88":11,"89":0,"90":12,"91":0,"92":0,"93":15,"94":35,"95":0,"96":33,"97":31,"98":30,"99":0,"100":0,"101":0,"102":0,"103":0,"104":22,"105":22,"106":14,"107":0,"108":8,"109":0,"110":51,"111":10,"112":0,"113":0,"114":9,"115":0,"116":0,"117":42,"118":0,"119":0,"120":0,"121":0,"122":0,"123":19,"124":0,"125":5,"126":21,"127":4,"128":3,"129":3,"130":7,"131":0,"132":13,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":17,"140":37,"141":22,"142":27,"143":0,"144":0,"145":0,"146":0,"147":15,"148":0,"149":0,"150":0,"151":0,"152":10,"153":0,"154":0,"155":0,"156":41,"157":0,"158":0,"159":14,"160":10,"161":0,"162":0,"163":0,"164":0,"165":44,"166":17,"167":20,"168":19,"169":26,"170":5,"171":0,"172":47,"173":33,"174":12,"175":0,"176":11,"177":11,"178":0,"179":0,"180":0,"181":0,"182":0,"183":15,"184":26,"185":39,"186":0,"187":50,"188":25,"189":11,"190":0,"191":0,"192":0,"193":26,"194":18,"195":20,"196":13,"197":15,"198":0,"199":0,"200":0,"201":10,"202":33,"203":25,"204":5,"205":14,"206":37,"207":24,"208":14,"209":26,"210":56,"211":35,"212":0,"213":63,"214":63,"215":27,"216":0,"217":0,"218":8,"219":56,"220":55,"221":23,"222":0,"223":85,"224":33,"225":30,"226":0,"227":0,"228":0,"229":10,"230":0,"231":0,"232":52,"233":37,"234":30,"235":47,"236":0,"237":23,"238":0,"239":8,"240":0,"241":0,"242":0,"243":13,"244":46,"245":74,"246":37,"247":17,"248":61,"249":9,"250":48,"251":0,"252":0,"253":0,"254":0,"255":12,"256":0,"257":25,"258":0,"259":0,"260":32,"261":0,"262":41,"263":13,"264":0,"265":6,"266":0,"267":50,"268":0,"269":86,"270":0,"271":34,"272":0,"273":29,"274":9,"276":36,"277":19,"278":0}}},"docs":{"docs":{"1":{"title":"API reference","hash":"api-reference","url":"/api","content":"/>\n\nThroughout the reference, the type `T` represents the type of the validation schema, extending `Record<string, unknown>`. For example, in a form with name and email, name being optional:\n\n\n\nThe `Nested<T, R>` type replaces all primitive values of `T` with `R`, and removes any optional modifier. In the above example:\n\n\n\nThe type `M` represents the status message type, default `any`.\n\n\n\nA `ValidationAdapter<T, In>` and `ClientValidationAdapter<T, In>` are the adapters used to wrap the schema, based on the selected validation library. `In` is the input type of the schema, as transformations and pipes can make it differ from `T`, but usually they are the same. Example:","code":"type T = {\n  name?: string | undefined,\n  email: string\n};\ntype Nested<T, string[]> = {\n  name: string[],\n  email: string[]\n};\ntype M = any;\nimport type { Infer, InferIn } from 'sveltekit-superforms';\nimport { zod, zodClient } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().min(3)\n})\n\n// Type is now ValidationAdapter<Infer<typeof schema>, InferIn<typeof schema>>\n// Which is the same as ValidationAdapter<{name: string}, {name: string}>\nconst adapter = zod(schema);\n"},"2":{"title":"superValidate(adapter | data, adapter? | options?, options?)","hash":"supervalidateadapter--data-adapter--options-options","url":"/api","content":"If you want the form to be initially empty, you can pass the adapter as the first parameter:\n\n\n\nIf you want to populate the form, for example, from a database, `URL` parameters in the load function, or `FormData` in the form actions, send the data as the first parameter and the adapter second:","code":"superValidate<T, M = any, In = T>(\n  adapter: ValidationAdapter<T, In>,\n  options?: SuperValidateOptions\n): Promise<SuperValidated<T, M, In>>\nsuperValidate<T, M = any, In = T>(\n  data:\n    | RequestEvent\n    | Request\n    | FormData\n    | URL\n    | URLSearchParams\n    | Partial<In>\n    | null\n    | undefined,\n  adapter: ValidationAdapter<T, In>,\n  options?: SuperValidateOptions\n): Promise<SuperValidated<T, M, In>>\n"},"3":{"title":"superValidate options","hash":"supervalidate-options","url":"/api","content":"See the page about multiple forms for information about when to use `id`.","code":"SuperValidateOptions = {\n  errors?: boolean;           // Add or remove errors from output (valid status is always preserved)\n  id?: string;                // Form id, for multiple forms support. Set automatically by default\n  preprocessed?: (keyof T)[]; // Bypass superValidate data coercion for posted fields in this array\n  defaults?: T;               // Override default values from the schema\n  jsonSchema?: JSONSchema;    // Override JSON schema from the adapter\n  strict?: boolean;           // If true, validate exactly the posted data, no defaults added\n  allowFiles?: boolean;       // If false, set all posted File objects to undefined\n}\n"},"4":{"title":"superValidate return type","hash":"supervalidate-return-type","url":"/api","content":"If data is empty, a `SuperValidated` object with default values for the schema is returned:\n\n\n\nSee this page for a list of default schema values.","code":"SuperValidated<T, M = any, In = T> = {\n  id: string;\n  valid: boolean;\n  posted: boolean;\n  data: T;\n  errors: Nested<T, string[] | undefined>;\n  constraints?: Nested<T, InputConstraints | undefined>;\n  message?: M;\n};\n{\n  id: string;\n  valid: false;\n  posted: false;\n  errors: options.errors ? Nested<T, string[] | undefined> : {};\n  data: T;\n  constraints: Nested<T, InputConstraints>;\n}\n"},"5":{"title":"setError(form, field, error, options?)","hash":"seterrorform-field-error-options","url":"/api","content":"For setting errors on the form after validation. It returns a `fail(status, { form })` so it can be returned immediately, or more errors can be added by calling it multiple times before returning. `form.valid` will also be set to `false`.\n\nUse the `overwrite` option to remove all previously set errors for the field, and `status` to set a different status than the default `400` (which must be in the range 400-599).\n\nTo set a form-level error, the `field` argument can be skipped, or set to an empty string.To set a form-level error, the `field` argument can be skipped, or set to an empty string.To set an array-level error, append `._errors` to the field parameter, like `\"tags._errors\"`.To set an array-level error, append `._errors` to the field parameter, like `\"tags._errors\"`.","code":"setError(\n  form: SuperValidated<T, M, In>,\n  field: '' | FormPathLeaves<T>,\n  error: string | string[],\n  options?: { overwrite = false, status : ErrorStatus = 400 }\n) : ActionFailure<{form: SuperValidated<T, M, In>}>\n"},"6":{"title":"message(form, message, options?)","hash":"messageform-message-options","url":"/api","content":"`message` is a convenience method for setting `form.message`, best explained by an example:\n\n\n\nNote that the `status` option must be in the range `400-599`.","code":"message(\n  form: SuperValidated<T, M, In>,\n  message: M,\n  options?: { status? : NumericRange<400, 599> }\n) : { form: SuperValidated<T, M, In> } | ActionFailure<{form: SuperValidated<T, M, In>}>\nimport { message, superValidate } from 'sveltekit-superforms/server';\n\nexport const actions = {\n  default: async (event) => {\n    const form = await superValidate<typeof schema, string>(event, schema);\n\n    if (!form.valid) {\n      // Will return fail(400, { form }) since form isn't valid\n      return message(form, 'Invalid form');\n    }\n\n    if (form.data.email.includes('spam')) {\n      // Will return fail and set form.valid = false, since status is >= 400\n      return message(form, 'No spam please', {\n        status: 403\n      });\n    }\n\n    // Returns { form }\n    return message(form, 'Valid form!');\n  }\n};\n"},"7":{"title":"defaultValues(schema)","hash":"defaultvaluesschema","url":"/api","content":"Returns the default values for a schema, either the Superforms defaults or the ones you set on the schema yourself.\n\n\n\nThis corresponds to the `form.data` returned from `const form = await superValidate(zod(schema))`.","code":"import { defaultValues } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().min(2),\n  tags: z.string().min(1).array().default(['a', 'b'])\n});\n\n// Returns { name: '', tags: ['a', 'b'] }\nconst defaults = defaultValues(zod(schema));\n"},"8":{"title":"actionResult(type, data?, options? | status?)","hash":"actionresulttype-data-options--status","url":"/api","content":"When using an endpoint (a `+server.ts` file) instead of form actions, you must return an `ActionResult` to a form that has `use:enhance` applied. Anything else won't work, not even throwing a redirect, since superForm expects an ActionResult.\n\nThe `actionResult` function helps you construct one in a `Response` object, so you can return a validation object from your API/endpoints.\n\n\n\nThe default status codes for each result type are shown, so you don't need to include them if they're the same.\n\nAdditionally, the `redirect` version can send a flash message as a third parameter, in case you're using flash messages. It can also set options for the flash cookie that's being set.","code":"import { actionResult } from 'sveltekit-superforms';\n\nactionResult('success', { form }, 200);\nactionResult('failure', { form }, 400);\nactionResult('redirect', '/', 303);\nactionResult('error', 'Error message', 500);\nactionResult('redirect', '/', {\n  message: { type: 'success', text: 'Posted successfully!' },\n  cookieOptions: { sameSite: 'lax' }\n});\n"},"9":{"title":"Login request example","hash":"login-request-example","url":"/api","content":"src/routes/login/+server.ts","code":"import { actionResult, superValidate } from '$lib/server';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(5)\n});\n\nexport const POST = async ({ request }) => {\n  const form = await superValidate(request, zod(loginSchema));\n  if (!form.valid) return actionResult('failure', { form });\n\n  // Verify login here //\n\n  return actionResult('success', { form });\n};\n"},"10":{"title":"superForm options","hash":"superform-options","url":"/api","content":"See [SubmitFunction](https://kit.svelte.dev/docs/types#public-types-submitfunction) for details about the `onSubmit` arguments, and [ActionResult](https://kit.svelte.dev/docs/types#public-types-actionresult) for `onResult`.See SubmitFunction for details about the `onSubmit` arguments, and ActionResult for `onResult`.See [SPA action form](/concepts/spa#spa-action-form) for details about the `string` value for the `SPA` option.See SPA action form for details about the `string` value for the `SPA` option.","code":"type FormOptions<T, M, In> = Partial<{\n  // Basics\n  id: string;\n  applyAction: boolean;\n  invalidateAll: boolean | 'force';\n  resetForm: boolean | (() => boolean);\n  taintedMessage: boolean | string | (() => Promise<boolean>);\n  dataType: 'form' | 'json';\n  multipleSubmits: 'prevent' | 'allow' | 'abort';\n  SPA: true | { failStatus?: number } | string;\n\n  // Error handling\n  scrollToError: 'auto' | 'smooth' | 'off' | boolean | ScrollIntoViewOptions;\n  autoFocusOnError: 'detect' | boolean;\n  errorSelector: string;\n  selectErrorText: boolean;\n  stickyNavbar: string;\n\n  // Events\n  onSubmit: (\n    submit: Parameters<SubmitFunction> & { \n      jsonData: (data: Record<string, unknown>) => void,\n      validators: (validators: ValidationAdapter<Partial<T>, Record<string, unknown>> | false) => void\n    }\n  ) => MaybePromise<unknown | void>;\n  onResult: (event: {\n    result: ActionResult;\n    formEl: HTMLFormElement;\n    cancel: () => void;\n  }) => MaybePromise<unknown | void>;\n  onUpdate: (event: {\n    form: SuperValidated<T, M, In>;\n    formEl: HTMLFormElement;\n    cancel: () => void;\n    result: Extract<ActionResult, { type: 'success' | 'failure' }>;\n  }) => MaybePromise<unknown | void>;\n  onUpdated: (event: {\n    form: Readonly<SuperValidated<T, M, In>>;\n  }) => MaybePromise<unknown | void>;\n  onChange: (event: ChangeEvent) => void;\n  onError:\n    | 'apply'\n    | ((event: {\n        result: {\n          type: 'error';\n          status?: number;\n          error: App.Error | Error | { message: string };\n        };\n        message: Writable<SuperValidated<T, M, In>['message']>;\n      }) => MaybePromise<unknown | void>);\n\n  // Client-side validation\n  validators:\n    | ClientValidationAdapter<Partial<T>, Record<string, unknown>>\n    | ValidationAdapter<Partial<T>, Record<string, unknown>>\n    | false\n    | 'clear';\n  validationMethod: 'auto' | 'oninput' | 'onblur' | 'onsubmit';\n  clearOnSubmit: 'errors-and-message' | 'message' | 'errors' | 'none';\n  delayMs: number;\n  timeoutMs: number;\n\n  // Special flash message integration (not usually required)\n  syncFlashMessage?: boolean;\n  flashMessage: {\n    module: import * as flashModule from 'sveltekit-flash-message/client';\n    onError?: (event: {\n      result: {\n        type: 'error';\n        status?: number;\n        error: App.Error;\n      };\n      message: Writable<App.PageData['flash']>;\n    }) => MaybePromise<unknown | void>;\n    cookiePath?: string;\n    cookieName?: string;\n  };\n\n  // Disable warnings\n  warnings: {\n    duplicateId?: boolean;\n  };\n}>;\n\ntype ChangeEvent<T> =\n{\n  path: FormPath<T>;\n  paths: FormPath<T>[];\n  formElement: HTMLFormElement;\n  target: Element;\n  set: <Path extends FormPath<T>>(\n    path: Path,\n    value: FormPathType<T, Path>,\n    options?: { taint?: boolean | 'untaint' | 'untaint-form' }\n  ) => void;\n  get: <Path extends FormPath<T>>(path: Path) => FormPathType<T, Path>;\n} | {\n  target: undefined;\n  paths: FormPath<T>[];\n  set: <Path extends FormPath<T>>(\n    path: Path,\n    value: FormPathType<T, Path>,\n    options?: { taint?: boolean | 'untaint' | 'untaint-form' }\n  ) => void;\n  get: <Path extends FormPath<T>>(path: Path) => FormPathType<T, Path>;\n};\n"},"11":{"title":"defaults","hash":"defaults","url":"/api","content":"The `defaults` function can be useful on the client in Svelte components and SPA mode, since components cannot have top-level `await`.","code":"defaults<T, M = any>(\n  data:\n    | Partial<T>\n    | null\n    | undefined,\n  schema: ClientValidationAdapter<T>,\n  options?: SuperValidateOptions\n): SuperValidated<T, M, In>\n"},"12":{"title":"Proxy objects","hash":"proxy-objects","url":"/api","content":"A proxy handles bi-directional updates and data transformation of a corresponding form field. Updates in either the proxy or data it points to, will reflect in the other.","code":"import {\n  // The primitives return a Writable<string>:\n  booleanProxy,\n  dateProxy,\n  intProxy,\n  numberProxy,\n  stringProxy,\n  // File proxies\n  fileProxy,\n  fileFieldProxy, // formFieldProxy\n  // File[] proxies\n  filesProxy,\n  filesFieldProxy, // arrayProxy\n  // The type of the others depends on the field:\n  formFieldProxy,\n  arrayProxy,\n  fieldProxy      \n} from 'sveltekit-superforms';\n"},"13":{"title":"intProxy(form, fieldName, options?)","hash":"intproxyform-fieldname-options","url":"/api","content":"Creates a string store for an integer field in the schema. It's rarely needed as Svelte handles this automatically with `bind:value`. \n\n\n\nOptions:\n\n\n\nUse the `empty` option to set the field to some of the defined values. Use `initiallyEmptyIfZero` to set the field to empty if the initial value is zero, to show the placeholder text, usually in combination with the `empty` option being set to `'zero'`.","code":"import { superForm, intProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = intProxy(form, 'field', { options });\n{ \n  empty?: 'null' | 'undefined' | 'zero';\n  initiallyEmptyIfZero?: boolean;\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"},"14":{"title":"numberProxy(form, fieldName, options?)","hash":"numberproxyform-fieldname-options","url":"/api","content":"Creates a string store for a number field in the schema. It's rarely needed as Svelte handles this automatically with `bind:value`. \n\n\n\nOptions:\n\n\n\nUse the `empty` option to set the field to some of the defined values. Use `initiallyEmptyIfZero` to set the field to empty if the initial value is zero, to show the placeholder text, usually in combination with the `empty` option being set to `'zero'`.","code":"import { superForm, numberProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = numberProxy(form, 'field', { options });\n{ \n  empty?: 'null' | 'undefined' | 'zero';\n  initiallyEmptyIfZero?: boolean;\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"},"15":{"title":"booleanProxy(form, fieldName, options?)","hash":"booleanproxyform-fieldname-options","url":"/api","content":"Creates a string store for a boolean schema field. The option can be used to change what string value should represent `true`. An empty string always represents `false`.\n\n\n\nOptions:","code":"import { superForm, booleanProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = booleanProxy(form, 'field', { options });\n{\n  trueStringValue = 'true';\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"},"16":{"title":"dateProxy(form, fieldName, options?)","hash":"dateproxyform-fieldname-options","url":"/api","content":"Creates a string store for a Date schema field. The option can be used to change the proxied string format of the date.\n\n\n\nOptions:","code":"import { superForm, dateProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = dateProxy(form, 'field', { options });\n{\n  format:\n    // Extract the part of the date as a substring:\n    | 'date' | 'datetime' | 'time'\n    // Convert the date to UTC:\n    | 'date-utc' | 'datetime-utc' | 'time-utc'\n    // Convert the date to local time:\n    | 'date-local' | 'datetime-local' | 'time-local'\n    // The default ISODateString:\n    | 'iso' = 'iso';\n  empty?: 'null' | 'undefined';\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"},"17":{"title":"stringProxy(form, fieldName, options)","hash":"stringproxyform-fieldname-options","url":"/api","content":"Creates a string store for a string schema field. It may look redundant, but the option can be useful if you need to convert an empty string to `null` or `undefined`.\n\n\n\nOptions:","code":"import { superForm, stringProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = stringProxy(form, 'field', { options });\n{\n  empty: 'null' | 'undefined';\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"},"18":{"title":"formFieldProxy(superForm, fieldName, options)","hash":"formfieldproxysuperform-fieldname-options","url":"/api","content":"Proxies a form field, returning stores similar to `superForm` but for a single field. For arrays in the schema, see below for how to create an `arrayProxy`.\n\nThe whole object returned from `superForm` is required here, not just the `$form` store.\n\nOptions:\n\n\n\nThe option can be used to prevent tainting the form when modifying the proxy.\n\nFor more details about formFieldProxy, see the components page.","code":"<script lang=\"ts\">\n  import { superForm, formFieldProxy } from 'sveltekit-superforms';\n\n  export let data;\n\n  const superform = superForm(data.form); // The whole superForm object is required\n  const { form } = superform; // Deconstruct as usual here\n\n  const { path, value, errors, constraints, tainted } = formFieldProxy(superform, 'name');\n</script>\n{\n  taint?: boolean | 'untaint' | 'untaint-all';\n}\n"},"19":{"title":"arrayProxy(superForm, fieldName, options)","hash":"arrayproxysuperform-fieldname-options","url":"/api","content":"Proxies an array in a form, returning stores similar to `superForm` but for the array.\n\nThe whole object returned from `superForm` is required here, not just the `$form` store.\n\n`errors` displays errors for the *array itself*, for example if the number of items are too few.`errors` displays errors for the array itself, for example if the number of items are too few.`valueErrors` is an array that lists errors for the *content* of the array.`valueErrors` is an array that lists errors for the content of the array.\n\nOptions:\n\n\n\nThe option can be used to prevent tainting the form when modifying the proxy.\n\nAn example of how to use `arrayProxy` in a component is available on Stackblitz.","code":"<script lang=\"ts\">\n  import { superForm, arrayProxy } from 'sveltekit-superforms';\n\n  export let data;\n\n  const superform = superForm(data.form); // The whole superForm object is required\n  const { form } = superform; // Deconstruct as usual here\n\n  const { path, values, errors, valueErrors } = arrayProxy(superform, 'tags');\n</script>\n{\n  taint?: boolean | 'untaint' | 'untaint-all';\n}\n"},"20":{"title":"fieldProxy(object, fieldName)","hash":"fieldproxyobject-fieldname","url":"/api","content":"Proxies field access in any object, usually in `$form`, but in that case `formFieldProxy` and `arrayProxy` are more convenient.\n\n\n\nOptions:","code":"<script lang=\"ts\">\n  import { superForm, fieldProxy } from 'sveltekit-superforms';\n  export let data;\n\n  const { form } = superForm(data.form);\n\n  // Proxy any field in an object\n  const nameProxy = fieldProxy(form, 'name');\n</script>\n{\n  taint?: boolean | 'untaint' | 'untaint-all';\n}\n"},"21":{"title":"Proxy example","hash":"proxy-example","url":"/api","content":"Given the following schema:\n\n\n\nA proxy for a HTML date field can be used like this:","code":"const schema = z.object({\n  date: z.date().optional()\n});\n<script lang=\"ts\">\n  import { superForm, dateProxy } from 'sveltekit-superforms';\n  import type { PageData } from './$types.js';\n\n  export let data: PageData;\n\n  const { form, enhance } = superForm(data.form);\n  const date = dateProxy(form, 'date', { format: 'date', empty: 'undefined' });\n</script>\n\n<input name=\"date\" type=\"date\" bind:value={$date} />\n"},"22":{"title":"SuperDebug","hash":"superdebug","url":"/api","content":"`SuperDebug` is a must-have debugging component that gives you colorized and nicely formatted output for any data structure, usually `$form`. \n\nMore information and usage examples can be found on the SuperDebug page.","code":""},"23":{"title":"Forms and fields in components","hash":"forms-and-fields-in-components","url":"/components","content":"/>","code":""},"24":{"title":"Forms and fields in components","hash":"forms-and-fields-in-components","url":"/components","content":"By looking at the rather simple get started tutorial, it's obvious that quite a bit of boilerplate code adds up for a Superform:\n\n\n\nAnd it also gets bad in the script part when you have more than a couple of forms on the page:\n\n\n\nThis leads to the question of whether a form and its fields can be factored out into components?","code":"<!-- For each form field -->\n<label for=\"name\">Name</label>\n<input\n  type=\"text\"\n  name=\"name\"\n  aria-invalid={$errors.name ? 'true' : undefined}\n  bind:value={$form.name}\n  {...$constraints.name} \n/>\n{#if $errors.name}\n  <span class=\"invalid\">{$errors.name}</span>\n{/if}\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms'\n\n  export let data;\n\n  const {\n    form: loginForm,\n    errors: loginErrors,\n    enhance: loginEnhance,\n    //...\n  } = superForm(data.loginForm);\n\n  const {\n    form: registerForm,\n    errors: registerErrors,\n    enhance: registerEnhance,\n    // ...\n  } = superForm(data.registerForm);\n</script>\n"},"25":{"title":"Factoring out a form","hash":"factoring-out-a-form","url":"/components","content":"To do this, you need the type of the schema, which can be defined as follows:\n\nsrc/lib/schemas.ts\n\n\n\nNow you can import and use this type in a separate component:\n\nsrc/routes/LoginForm.svelte\n\n\n\nUse it by passing the form data from `+page.svelte` to the component, making it much less cluttered:\n\n+page.svelte\n\n\n\nIf your schema input and output types differ, or you have a strongly typed status message, you can add two additional type parameters:","code":"export const loginSchema = z.object({\n  email: z.string().email(),\n  password: // ...\n});\n\nexport type LoginSchema = typeof loginSchema;\n<script lang=\"ts\">\n  import type { SuperValidated, Infer } from 'sveltekit-superforms';\n  import { superForm } from 'sveltekit-superforms'\n  import type { LoginSchema } from '$lib/schemas';\n\n  export let data: SuperValidated<Infer<LoginSchema>>;\n\n  const { form, errors, enhance } = superForm(data);\n</script>\n\n<form method=\"POST\" use:enhance>\n  <!-- Business as usual -->\n</form>\n<script lang=\"ts\">\n  export let data;\n</script>\n\n<LoginForm data={data.loginForm} />\n<RegisterForm data={data.registerForm} />\n<script lang=\"ts\">\n  import type { SuperValidated, Infer, InferIn } from 'sveltekit-superforms';\n  import { superForm } from 'sveltekit-superforms'\n  import type { LoginSchema } from '$lib/schemas';\n\n  export let data: SuperValidated<Infer<LoginSchema>, { status: number, text: string }, InferIn<LoginSchema>>;\n\n  const { form, errors, enhance, message } = superForm(data);\n</script>\n\n{#if $message.text}\n  ...\n{/if}\n\n<form method=\"POST\" use:enhance>\n  <!-- Business as usual -->\n</form>\n"},"26":{"title":"Factoring out form fields","hash":"factoring-out-form-fields","url":"/components","content":"Since `bind` is available on Svelte components, we can make a `TextInput` component quite easily:\n\nTextInput.svelte\n\n\n\nThe `type` attribute on input elements must be hard-coded in Svelte 4, explained here. Especially important for `type=\"number\"`.+page.svelte\n\n\n\n(Note that you must bind directly to `$form.tags` with the index, you cannot use the each loop variable, hence the underscore.)\n\nThis is a bit better and will certainly help when the components require some styling, but there are still plenty of attributes. Can we do even better?\n\nThings will get a bit advanced from here, so an alternative is to use the Formsnap library, which simplifies componentization a lot.","code":"<script lang=\"ts\">\n  import type { InputConstraint } from 'sveltekit-superforms';\n\n  export let value: string;\n  export let label: string | undefined = undefined;\n  export let errors: string[] | undefined = undefined;\n  export let constraints: InputConstraint | undefined = undefined;\n</script>\n\n<label>\n  {#if label}<span>{label}</span><br />{/if}\n  <input\n    type=\"text\"\n    bind:value\n    aria-invalid={errors ? 'true' : undefined}\n    {...constraints}\n    {...$$restProps} \n  />\n</label>\n{#if errors}<span class=\"invalid\">{errors}</span>{/if}\n<form method=\"POST\" use:enhance>\n  <TextInput\n    name=\"name\"\n    label=\"name\"\n    bind:value={$form.name}\n    errors={$errors.name}\n    constraints={$constraints.name} \n  />\n\n  <h4>Tags</h4>\n\n  {#each $form.tags as _, i}\n    <TextInput\n      name=\"tags\"\n      label=\"Name\"\n      bind:value={$form.tags[i].name}\n      errors={$errors.tags?.[i]?.name}\n      constraints={$constraints.tags?.name} \n    />\n  {/each}\n</form>\n"},"27":{"title":"Using a fieldProxy","hash":"using-a-fieldproxy","url":"/components","content":"You may have seen proxy objects being used for converting an input field string like `\"2023-04-12\"` into a `Date`, but that's a special usage of proxies. They can actually be used for any part of the form data, to have a store that can modify a part of the `$form` store. If you want to update just `$form.name`, for example:\n\n\n\nAny updates to `$name` will reflect in `$form.name`, and vice versa. Note that this will also taint that field, so if this is not intended, you can use the whole superForm object and add an option:\n\n\n\nA `fieldProxy` isn't enough here, however. We'd still have to make proxies for `form`, `errors`, and `constraints`, resulting in the same problem again.","code":"<script lang=\"ts\">\n  import { superForm, fieldProxy } from 'sveltekit-superforms/client';\n\n  export let data;\n\n  const { form } = superForm(data.form);\n  const name = fieldProxy(form, 'name');\n</script>\n\n<div>Name: {$name}</div>\n<button on:click={() => ($name = '')}>Clear name</button>\nconst superform = superForm(data.form);\nconst { form } = superform;\n\nconst name = fieldProxy(superform, 'name', { taint: false });\n"},"28":{"title":"Using a formFieldProxy","hash":"using-a-formfieldproxy","url":"/components","content":"The solution is to use a `formFieldProxy`, which is a helper function for producing the above proxies from a form. To do this, we cannot immediately deconstruct what we need from `superForm`, since `formFieldProxy` takes the form itself as an argument:\n\n\n\nBut we didn't want to pass all those proxies, so let's imagine a component that will handle even the above proxy creation for us.\n\n\n\nHow nice would this be? This can actually be pulled off in a typesafe way with a bit of Svelte magic:\n\n\n\nThe Svelte syntax requires `Record<string, unknown>` to be defined before its used in the `generics` attribute, so we have to import it in a module context. Now when `T` is defined (the schema object type), we can use it in the `form` prop to ensure that only a `SuperForm` matching the `field` prop is used.\n\nThe `FormPathLeaves` type prevents using a field that isn't at the end of the schema (the \"leaves\" of the schema tree). This means that arrays and objects cannot be used in `formFieldProxy`. Array-level errors are handled like this.","code":"<script lang=\"ts\">\n  import type { PageData } from './$types.js';\n  import { superForm, formFieldProxy } from 'sveltekit-superforms/client';\n\n  export let data: PageData;\n\n  const superform = superForm(data.form);\n\n  const { path, value, errors, constraints } = formFieldProxy(superform, 'name');\n</script>\n<TextField {superform} field=\"name\" />\n<script lang=\"ts\" context=\"module\">\n  type T = Record<string, unknown>;\n</script>\n\n<script lang=\"ts\" generics=\"T extends Record<string, unknown>\">\n  import { formFieldProxy, type SuperForm, type FormPathLeaves  } from 'sveltekit-superforms';\n\n  export let superform: SuperForm<T>;\n  export let field: FormPathLeaves<T>;\n\n  const { value, errors, constraints } = formFieldProxy(superform, field);\n</script>\n\n<label>\n  {field}<br />\n  <input\n    name={field}\n    type=\"text\"\n    aria-invalid={$errors ? 'true' : undefined}\n    bind:value={$value}\n    {...$constraints}\n    {...$$restProps} />\n</label>\n{#if $errors}<span class=\"invalid\">{$errors}</span>{/if}\n"},"29":{"title":"Type narrowing for paths","hash":"type-narrowing-for-paths","url":"/components","content":"Checkboxes don't bind with `bind:value` but with `bind:checked`, which requires a `boolean`.\n\nBecause our component is generic, `value` returned from `formFieldProxy` is unknown, but we need a `boolean` here. Then we can add a type parameter to `FormPathLeaves` to narrow it down to a specific type, and use the satisfies operator to specify the type:\n\n\n\nThis will also narrow the `field` prop, so only `boolean` fields in the schema can be selected when using the component.\n\nCheckboxes, especially grouped ones, can be tricky to handle. Read the Svelte tutorial about bind:group, and see the Ice cream example on Stackblitz if you're having trouble with it.","code":"<script lang=\"ts\" context=\"module\">\n  type T = Record<string, unknown>;\n</script>\n\n<script lang=\"ts\" generics=\"T extends Record<string, unknown>\">\n  import { \n    formFieldProxy, type FormFieldProxy,\n    type SuperForm, type FormPathLeaves\n  } from 'sveltekit-superforms';\n\n  export let superform: SuperForm<T>;\n  export let field: FormPathLeaves<T, boolean>;\n\n  const { value, errors, constraints } = formFieldProxy(superform, field) satisfies FormFieldProxy<boolean>;\n</script>\n\n<input\n  name={field}\n  type=\"checkbox\"\n  class=\"checkbox\"\n  bind:checked={$value}\n  {...$constraints}\n  {...$$restProps} \n/>\n"},"30":{"title":"Using the componentized field in awesome ways","hash":"using-the-componentized-field-in-awesome-ways","url":"/components","content":"Using this component is now as simple as:\n\n\n\nBut to show off some super proxy power, let's recreate the tags example above with the `TextField` component:\n\n\n\nWe can now produce a type-safe text field for any object inside our data, which will update the `$form` store.\n\nIn general, nested data requires the `dataType` option to be set to `'json'`, but this example works without it, and even without `use:enhance`, since arrays of primitive values are coerced automatically.\n\nI hope you now feel under your fingers the superpowers that Superforms bring! 💥","code":"<TextField {superform} field=\"name\" />\n<form method=\"POST\" use:enhance>\n  <TextField name=\"name\" {superform} field=\"name\" />\n\n  <h4>Tags</h4>\n\n  {#each $form.tags as _, i}\n    <TextField name=\"tags\" {superform} field=\"tags[{i}].name\" />\n  {/each}\n</form>\n"},"31":{"title":"Contributing, donating and sponsoring","hash":"contributing-donating-and-sponsoring","url":"/contributing","content":"/>","code":""},"32":{"title":"Contributing","hash":"contributing","url":"/contributing","content":"Contributions to Superforms are very welcome! The issues and discussion pages on Github are always open for comments, and if you want to contribute some code, it's quite easy. Just fork either the Superforms repository or its website, and then you just need to execute the following to be up and running:\n\n\n\n\n\nIf you find a typo on the website, you can make a quick PR directly in its Github repository.","code":"npm install\nnpm run dev\npnpm install\npnpm dev\n"},"33":{"title":"Donations","hash":"donations","url":"/contributing","content":"If you want to contribute to the future development of Superforms, you can make a donation:\n\nIf you have appreciated my support on Discord and Github, or want to ensure that things keep rolling, please support open source software in this way.","code":""},"34":{"title":"Designing a CRUD interface","hash":"designing-a-crud-interface","url":"/crud","content":"/>\n\nAn excellent use case for Superforms is a backend interface, commonly used as in the acronym CRUD (Create, Read, Update, Delete):\n\nDisplay an empty formDisplay an empty formPOST the form, validate the dataPOST the form, validate the dataCreate a new entity with the data **(Create)**Create a new entity with the data (Create)Fetch the entity **(Read)**Fetch the entity (Read)Display it in a formDisplay it in a formPOST the form, validate the dataPOST the form, validate the dataUpdate the entity with the data **(Update)**Update the entity with the data (Update)Delete the entity **(Delete)**Delete the entity (Delete)??????Profit!Profit!\n\nBecause you can send the data model to the `superValidate` function and have the form directly populated, it becomes quite easy to implement the above steps.","code":""},"35":{"title":"Getting started","hash":"getting-started","url":"/crud","content":"To follow along, there are three ways:","code":""},"36":{"title":"Video tutorial","hash":"video-tutorial","url":"/crud","content":"Instead of the text version below, here's the video version. It's using version 1 of Superforms, but the differences are small; use an adapter and add `resetForm: false` to the options.","code":""},"37":{"title":"Stackblitz","hash":"stackblitz","url":"/crud","content":"The code is available on Stackblitz. Just click the link, and you're up and running in the browser in less than 30 seconds!","code":""},"38":{"title":"New SvelteKit project","hash":"new-sveltekit-project","url":"/crud","content":"Start from scratch in a new SvelteKit project by executing one of the following commands in your project directory:\n\n\n\n\n\nSelect Skeleton project and Typescript syntax at the prompts, the rest is up to you. Then add this to `<head>` in src/app.html for a much nicer visual experience:","code":"npm create svelte@latest\npnpm create svelte@latest\n<link rel=\"stylesheet\" href=\"https://unpkg.com/normalize.css@8.0.1/normalize.css\" />\n<link rel=\"stylesheet\" href=\"https://unpkg.com/sakura.css/css/sakura.css\" />\n"},"39":{"title":"Start - Creating a test database","hash":"start---creating-a-test-database","url":"/crud","content":"When you have the code up and running, we need a user schema, and a mock database for testing. We will use Zod as a validation library, but its schema can easily be converted to others.\n\nsrc/lib/users.ts","code":"import { z } from 'zod';\n\n// See https://zod.dev/?id=primitives for schema syntax\nexport const userSchema = z.object({\n  id: z.string().regex(/^\\\\d+$/),\n  name: z.string().min(2),\n  email: z.string().email()\n});\n\ntype UserDB = z.infer<typeof userSchema>[];\n\n// Let's worry about id collisions later\nexport const userId = () => String(Math.random()).slice(2);\n\n// A simple user \"database\"\nexport const users: UserDB = [\n  {\n    id: userId(),\n    name: 'Important Customer',\n    email: 'important@example.com'\n  },\n  {\n    id: userId(),\n    name: 'Super Customer',\n    email: 'super@example.com'\n  }\n];\n"},"40":{"title":"Form vs. database schemas","hash":"form-vs-database-schemas","url":"/crud","content":"When starting on the server page, we'll encounter a thing about validation schemas. Our `userSchema` is for database integrity, so an `id` must exist there. But we want to create an entity, and must therefore allow `id` not to exist when creating users.\n\nFortunately, Zod makes it quite easy to append a modifier to a field without duplicating the whole schema by extending it:\n\nsrc/routes/users/[[id]]/+page.server.ts\n\n\n\n(Of course, the original `userSchema` is kept intact.)\n\nWith this, Create and Update can now use the same schema, which means that they can share the same user interface. This is a fundamental idea in Superforms: you can pass either empty data or an entity partially matching the schema to `superValidate`, and it will generate default values for any non-specified fields, ensuring type safety.","code":"import { userSchema } from '$lib/users';\n\nconst crudSchema = userSchema.extend({\n  id: userSchema.shape.id.optional()\n});\n"},"41":{"title":"Reading a user from the database","hash":"reading-a-user-from-the-database","url":"/crud","content":"Let's add a load function to the page, using the SvelteKit route parameters to look up the requested user:\n\nsrc/routes/users/[[id]]/+page.server.ts\n\n\n\nSome simple logic is used to find the user, and then detect if a 404 should be displayed. At the end, we're returning `form` as usual, but also `users`, so they can be displayed as a list.\n\n(Sometimes, CRUDL is used as an acronym, since listing is also fundamental to data management.)\n\nNow that we have loaded the data, let's display it in a page component:\n\nsrc/routes/users/[[id]]/+page.svelte\n\n\n\nThere are plenty of variables extracted from `superForm`; refer to the API reference for a complete list. We've also setting the `resetForm` to `false`, since the data should be kept after editing.\n\nWe've also prepared a status message, using `$page.status` to test for success or failure, and we're using `$form.id` to display a \"Create user\" or \"Update user\" title. Now let's add the form itself:\n\nsrc/routes/users/[[id]]/+page.svelte (continued)\n\n\n\nRemember to use SuperDebug if you want to see your form data live!","code":"import { superValidate, message } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { error, fail, redirect } from '@sveltejs/kit';\nimport { users, userId } from '$lib/users';\n\nexport const load = async ({ url, params }) => {\n  // READ user\n  const user = users.find((u) => u.id == params.id);\n\n  if (params.id && !user) throw error(404, 'User not found.');\n\n  // If user is null, default values for the schema will be returned.\n  const form = await superValidate(user, zod(crudSchema));\n  return { form, users };\n};\n<script lang=\"ts\">\n  import type { PageData } from './$types.js';\n  import { page } from '$app/stores';\n  import { superForm } from 'sveltekit-superforms';\n\n  export let data: PageData;\n\n  const { form, errors, constraints, enhance, delayed, message } = superForm(\n    data.form, {\n      resetForm: false\n    }\n  );\n</script>\n\n{#if $message}\n  <h3 class:invalid={$page.status >= 400}>{$message}</h3>\n{/if}\n\n<h2>{!$form.id ? 'Create' : 'Update'} user</h2>\n<form method=\"POST\" use:enhance>\n  <input type=\"hidden\" name=\"id\" bind:value={$form.id} />\n\n  <label>\n    Name<br />\n    <input\n      name=\"name\"\n      aria-invalid={$errors.name ? 'true' : undefined}\n      bind:value={$form.name}\n      {...$constraints.name} />\n    {#if $errors.name}<span class=\"invalid\">{$errors.name}</span>{/if}\n  </label>\n\n  <label>\n    E-mail<br />\n    <input\n      name=\"email\"\n      type=\"email\"\n      aria-invalid={$errors.email ? 'true' : undefined}\n      bind:value={$form.email}\n      {...$constraints.email} />\n    {#if $errors.email}<span class=\"invalid\">{$errors.email}</span>{/if}\n  </label>\n\n  <button>Submit</button> {#if $delayed}Working...{/if}\n</form>\n\n<style>\n  .invalid {\n    color: red;\n  }\n</style>\n<script>\n  import SuperDebug from 'sveltekit-superforms';\n</script>\n\n<SuperDebug data={$form} />\n"},"42":{"title":"Creating and Updating a user","hash":"creating-and-updating-a-user","url":"/crud","content":"With this, the form should be ready for creating a user. Let's add the form action for that:\n\nsrc/routes/users/[[id]]/+page.server.ts\n\n\n\nThis is where you should access your database API. In our case, we're only doing some array manipulations.\n\nWith this, we have 3 out of 4 letters of CRUD in about 150 lines of code, half of it HTML!","code":"export const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(crudSchema));\n    if (!form.valid) return fail(400, { form });\n\n    if (!form.data.id) {\n      // CREATE user\n      const user = { ...form.data, id: userId() };\n      users.push(user);\n\n      return message(form, 'User created!');\n    } else {\n      // UPDATE user\n      const index = users.findIndex((u) => u.id == form.data.id);\n      if (index == -1) throw error(404, 'User not found.');\n\n      users[index] = { ...form.data, id: form.data.id };\n      return message(form, 'User updated!');\n    }\n\n    return { form };\n  }\n};\n"},"43":{"title":"Deleting a user","hash":"deleting-a-user","url":"/crud","content":"To delete a user, we can make use of the HTML `button` element, which can have a name and a value that will be passed only if that specific button was used to post the form. Add this at the end of the form:\n\nsrc/routes/users/[[id]]/+page.svelte\n\n\n\nIn the form action, we now use the `FormData` from the request to check if the delete button was pressed.\n\nWe can also add a delayed button in the form to mimick the behavior of a slow network call:\n\n\n\nWe shouldn't use the schema since `delete` and `delayed` are not a part of the user, but it's not a big change:\n\nsrc/routes/users/[[id]]/+page.server.ts\n\n\n\nNow all four CRUD operations are complete! An issue, however, is that we have to redirect after deleting to avoid a 404, so we cannot use `form.message` to show \"User deleted\", since the validation data won't exist after redirecting.\n\nRedirecting with a message is a general problem; for example, maybe we'd like to redirect to the newly created user after it's been created. Fortunately, there is a solution; the sister library to Superforms handles this. Read more about it here.","code":"{#if $form.id}\n  <button\n    name=\"delete\"\n    on:click={(e) => !confirm('Are you sure?') && e.preventDefault()}\n    class=\"danger\">Delete user</button>\n{/if}\n<button name=\"delay\" class=\"delay\">Submit delayed</button>\nexport const actions: Actions = {\n  default: async ({ request }) => {\n    const formData = await request.formData();\n    const form = await superValidate(formData, zod(crudSchema));\n\n    if (formData.has('delay')) {\n      await new Promise((r) => setTimeout(r, 2000));\n    }\n\n    if (!form.valid) return fail(400, { form });\n\n    if (!form.data.id) {\n      // CREATE user\n      const user = { ...form.data, id: userId() };\n      users.push(user);\n\n      return message(form, 'User created!');\n    } else {\n      const index = users.findIndex((u) => u.id == form.data.id);\n      if (index == -1) throw error(404, 'User not found.');\n\n      if (formData.has('delete')) {\n        // DELETE user\n        users.splice(index, 1);\n        throw redirect(303, '/users');\n      } else {\n        // UPDATE user\n        users[index] = { ...form.data, id: form.data.id };\n        return message(form, 'User updated!');\n      }\n    }\n  }\n};\n"},"44":{"title":"Listing the users","hash":"listing-the-users","url":"/crud","content":"The last loose thread is to display a list of the users. It'll be quite trivial; add this to the top of `+page.svelte`:\n\nsrc/routes/+page.svelte\n\n\n\nAnd some styling for everything at the end:\n\n\n\nThat's it! Thank you for following along, the code is available here on Stackblitz.\n\nIf you have any questions, see the help & support page.","code":"<h3>Users</h3>\n<div class=\"users\">\n  {#each data.users as user}\n    <a href=\"/users/{user.id}\">{user.name}</a>\n  {/each}\n</div>\n<style>\n  .invalid {\n    color: red;\n  }\n\n  .danger {\n    background-color: brown;\n  }\n\n  .delay {\n    background-color: lightblue;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 1em;\n    align-items: flex-start;\n    margin-bottom: 2em;\n  }\n\n  hr {\n    width: 100%;\n    margin-block: 2em;\n  }\n\n  .users {\n    columns: 3 150px;\n  }\n\n  .users > * {\n    display: block;\n    white-space: nowrap;\n    overflow-x: hidden;\n  }\n</style>\n"},"45":{"title":"Playground","hash":"playground","url":"/examples","content":"/>\n\nFor testing Superforms, bug reporting, support questions, or as a start for your project, click on your chosen library to open a SvelteKit project with a basic form in SvelteLab:","code":""},"46":{"title":"Default values","hash":"default-values","url":"/default-values","content":"/>\n\nWhen `superValidate` encounters a schema field that isn't optional, and when its supplied data is empty, a default value is returned to the form, to ensure that the type is correct:\n\ntypevaluestring`\"\"`number`0`boolean`false`Array`[]`object`{}`bigint`BigInt(0)`symbol`Symbol()`","code":""},"47":{"title":"Changing a default value","hash":"changing-a-default-value","url":"/default-values","content":"You can, of course, set your own default values in the schema, using the `default` method in Zod, for example. You can even abuse the typing system a bit to handle the classic \"agree to terms\" checkbox:\n\n\n\nThis looks a bit strange, but will ensure that the age isn't set to 0 as default (which will hide placeholder text in the input field), and also ensure that the agree checkbox is unchecked as default while also only accepting `true` (checked) as a value.\n\nSince the default value will not correspond to the type, this will not work when using Zod's refine on the whole schema. Validation itself is no problem though, `form.valid` will be `false` if these values are posted, which should be the main determinant of whether the data is trustworthy.","code":"const schema = z.object({\n  age: z.number().positive().default('' as unknown as number),\n  agree: z.literal(true).default(false as true)\n});\n"},"48":{"title":"optional vs. nullable","hash":"optional-vs-nullable","url":"/default-values","content":"Fields set to `null` will take precedence over `undefined`, so a field that is both `nullable` and `optional` will have `null` as its default value. Otherwise, it's `undefined`.","code":""},"49":{"title":"Explicit defaults","hash":"explicit-defaults","url":"/default-values","content":"Multi-type unions must have an explicit default value, or exactly one of the union types must have one. Enums doesn't, otherwise it wouldn't be possible to have a required enum field. If no explicit default, the first enum value will be used.\n\n\n\nIf the field is nullable or optional, there's no need for a default value (but it can still be set).","code":"const schema = z.object({\n  either: z.union([z.number(), z.string()]).default(123),\n  fish: z.enum(['Salmon', 'Tuna', 'Trout']) // Default will be 'Salmon'\n});\nconst schema2 = z.object({\n  fish: z.enum(['Salmon', 'Tuna', 'Trout']).nullable()\n});\n"},"50":{"title":"Enums and group inputs","hash":"enums-and-group-inputs","url":"/default-values","content":"If you're using the enum for radio buttons or a select menu, you may not want any option to be initally selected. This can be achieved in a similar way to the misuse of the default value above, by setting it to an empty string and casting it:","code":"const schema2 = z.object({\n  fish: z.enum(['Salmon', 'Tuna', 'Trout']).default('' as 'Salmon')\n});\n"},"51":{"title":"FAQ","hash":"faq","url":"/faq","content":"/>","code":""},"52":{"title":"I see the data in $form, but it's not posted to the server?","hash":"i-see-the-data-in-form-but-its-not-posted-to-the-server","url":"/faq","content":"The most common mistake is to forget the `name` attribute on the input field. If you're not using `dataType: 'json'` (see nested data), the form is treated as a normal HTML form, which requires a name attribute for posting the form data.","code":""},"53":{"title":"How can I prevent the form from being reset after it's submitted?","hash":"how-can-i-prevent-the-form-from-being-reset-after-its-submitted","url":"/faq","content":"Use the `resetForm: false` option for `superForm`, as described on the use:enhance page.","code":""},"54":{"title":"How to handle file uploads?","hash":"how-to-handle-file-uploads","url":"/faq","content":"From version 2, file uploads are handled by Superforms. Read all about it on the file uploads page.","code":""},"55":{"title":"Can I use endpoints instead of form actions?","hash":"can-i-use-endpoints-instead-of-form-actions","url":"/faq","content":"Yes, there is a helper function for constructing an `ActionResult` that can be returned from SvelteKit endpoints. See the API reference for more information.","code":""},"56":{"title":"Can I post to an external API?","hash":"can-i-post-to-an-external-api","url":"/faq","content":"If the API doesn't return an ActionResult with the form data, you cannot post to it directly. Instead you can use the SPA mode of Superforms and call the API with fetch or similar in the `onUpdate` event.","code":""},"57":{"title":"How to submit the form programmatically?","hash":"how-to-submit-the-form-programmatically","url":"/faq","content":"Use the `submit` method on the `superForm` object.","code":""},"58":{"title":"Can a form be factored out into a separate component?","hash":"can-a-form-be-factored-out-into-a-separate-component","url":"/faq","content":"Yes - the answer has its own article page here.","code":""},"59":{"title":"How can I return additional data together with the form?","hash":"how-can-i-return-additional-data-together-with-the-form","url":"/faq","content":"You're not limited to just `return { form }` in load functions and form actions; you can return anything else together with the form variables (which can also be called anything you'd like).","code":""},"60":{"title":"From a load function","hash":"from-a-load-function","url":"/faq","content":"It can then be accessed in `PageData` in `+page.svelte`:","code":"export const load = (async ({ locals }) => {\n  const loginForm = await superValidate(zod(loginSchema));\n  const userName = locals.currentUser.name;\n  \n  return { loginForm, userName };\n})\n\n<script lang=\"ts\">\n  import type { PageData } from './$types.js';\n  export let data: PageData;\n\n  const { form, errors, enhance } = superForm(data.loginForm);\n</script>\n\n<p>Currently logged in as {data.userName}</p>\n"},"61":{"title":"From a form action","hash":"from-a-form-action","url":"/faq","content":"Returning extra data from a form action is convenient with a status message if the data is simple, but for larger data structures you can also return it directly, in which case it can be accessed in the onUpdate event, or in `ActionData`:\n\n\n\nUsing onUpdate\n\n\n\nUsing ActionData","code":"export const actions = {\n  default: async ({ request, locals }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) return fail(400, { form });\n\n    // Return the username as extra data:\n    const userName = locals.currentUser.name;\n    return { form, userName };\n  }\n};\n<script lang=\"ts\">\n  import { superForm, type FormResult } from 'sveltekit-superforms';\n  import type { ActionData } from './$types.js';\n\n  export let data;\n\n  const { form, errors, message, enhance } = superForm(data.form, {\n    onUpdate({ form, result }) {\n      const action = result.data as FormResult<ActionData>;\n      if (form.valid && action.userName) {\n        // Do something with the extra data\n      }\n    }\n  });\n</script>\n<script lang=\"ts\">\n  import type { PageData, ActionData } from './$types.js';\n  import { superForm } from 'sveltekit-superforms/client'\n\n  export let data: PageData;\n  export let form: ActionData;\n\n  // Need to rename form here, since it's used by ActionData.\n  const { form: formData, errors, enhance } = superForm(data.form);\n</script>\n\n{#if form?.userName}\n  <p>Currently logged in as {form.userName}</p>\n{/if}\n"},"62":{"title":"What about the other way around, posting additional data to the server?","hash":"what-about-the-other-way-around-posting-additional-data-to-the-server","url":"/faq","content":"You can add additional input fields to the form that aren't part of the schema, including files (see the next question), to send extra data to the server. They can then be accessed with `request.formData()` in the form action:\n\n\n\nYou can also add form data programmatically in the onSubmit event:\n\n\n\nThe onSubmit event is also a good place to modify `$form`, in case you're using nested data with `dataType: 'json'`.","code":"export const actions = {\n  default: async ({ request }) => {\n    const formData = await request.formData();\n    const form = await superValidate(formData, zod(schema));\n\n    if (!form.valid) return fail(400, { form });\n\n    if (formData.has('extra')) {\n      // Do something with the extra data\n    }\n\n    return { form };\n  }\n};\nconst { form, errors, enhance } = superForm(data.loginForm, {\n  onSubmit({ formData }) {\n    formData.set('extra', 'value')\n  }\n})\n"},"63":{"title":"I'm getting JSON.parse errors as response when submitting a form, why?","hash":"im-getting-jsonparse-errors-as-response-when-submitting-a-form-why","url":"/faq","content":"This is related to the previous question. You must always return an `ActionResult` as a response to a form submission, either through a form action, where it's done automatically, or by constructing one with the actionResult helper. \n\nIf for some reason a html page or plain text is returned, for example when a proxy server fails to handle the request and returns its own error page, the parsing of the result will fail with the slightly cryptic JSON error message.","code":""},"64":{"title":"Why am I'm getting TypeError: The body has already been consumed?","hash":"why-am-im-getting-typeerror-the-body-has-already-been-consumed","url":"/faq","content":"This happens if you access the form data of the request several times, which could happen when calling `superValidate` multiple times during the same request.\n\nTo fix that problem, extract the formData before calling superValidate, and use that as an argument instead of `request` or `event`:","code":"export const actions = {\n  default: async ({ request }) => {\n    const formData = await request.formData();\n\n    const form = await superValidate(formData, zod(schema));\n    const form2 = await superValidate(formData, zod(anotherSchema));\n\n    // Business as usual\n  }\n};\n"},"65":{"title":"Why does the form get tainted without any changes, when I use a select element?","hash":"why-does-the-form-get-tainted-without-any-changes-when-i-use-a-select-element","url":"/faq","content":"If the schema field for the select menu doesn't have an empty string as default value, for example when it's optional, and you have an empty first option, like a \"Please select item\" text, the field will be set to that empty string, tainting the form.\n\nIt can be fixed by setting the option and the default schema value to an empty string, even if it's not its proper type. See this section for an example.","code":""},"66":{"title":"How to customize error messages directly in the validation schema?","hash":"how-to-customize-error-messages-directly-in-the-validation-schema","url":"/faq","content":"You can add them as parameters to most schema methods. Here's an example.","code":""},"67":{"title":"Can you use Superforms without any data, for example with a delete button on each row in a table?","hash":"can-you-use-superforms-without-any-data-for-example-with-a-delete-button-on-each-row-in-a-table","url":"/faq","content":"That's possible with an empty schema, or using the `$formId` store with the button to set the form id dynamically. See this SvelteLab project for an example.","code":""},"68":{"title":"I want to reuse common options, how to do that easily?","hash":"i-want-to-reuse-common-options-how-to-do-that-easily","url":"/faq","content":"When you start to configure the library to suit your stack, you can create an object with default options that you will refer to instead of `superForm`:","code":"import { superForm } from 'sveltekit-superforms';\n\nexport type Message = {\n  status: 'success' | 'error' | 'warning';\n  text: string;\n};\n\n// If no strongly type message is needed, leave out the M type parameter\nexport function mySuperForm<T extends Record<string, unknown>, M = Message>(\n  ...params: Parameters<typeof superForm<T, M>>\n) {\n  return superForm<T, M>(params[0], {\n    // Your defaults here\n    errorSelector: '.has-error',\n    delayMs: 300,\n    ...params[1]\n  });\n}\n"},"69":{"title":"Flash messages","hash":"flash-messages","url":"/flash-messages","content":"/>\n\nStatus messages are useful, but redirects will cause them to be lost, because they need to be returned in `{ form }`, usually as a response from a POST request.\n\nSince it's common to redirect after a successful post, especially in backend interfaces, the `form.message` property isn't a general solution for displaying status messages.\n\nThe sister library to Superforms is called sveltekit-flash-message, a useful addon that handles temporary messages sent with redirects. Note that at least version 1.0 is required!","code":""},"70":{"title":"Usage","hash":"usage","url":"/flash-messages","content":"The library works together with Superforms without any extra configuration, usually you can replace the Superforms status messages with the flash message, and that will work very well.\n\nBut if you have some special use case where you need to integrate the flash message more closely with a form, you can do that by importing its module when calling `superForm`:\n\n\n\nThen the following options are available:","code":"import * as flashModule from 'sveltekit-flash-message/client';\n\nconst { form, errors, enhance } = superForm(data.form, {\n  flashMessage: {\n    module: flashModule,\n    onError?: ({ result, flashMessage }) => {\n      // Error handling for the flash message:\n      // - result is the ActionResult\n      // - flashMessage is the flash store (not the status message store)\n      const errorMessage = result.error.message\n      flashMessage.set(/* Your flash message type */);\n    }\n  },\n  syncFlashMessage: false\n}\n"},"71":{"title":"syncFlashMessage","hash":"syncflashmessage","url":"/flash-messages","content":"If set to `true`, when `form.message` is updated, the flash message will be synchronized with it, including honoring the clearOnSubmit option. \n\nIt's important that the flash and form message types are matching, in this case. See this section on how to make the form message strongly typed.","code":""},"72":{"title":"flashMessage.onError","hash":"flashmessageonerror","url":"/flash-messages","content":"If a form error occurs, which happens when `error(...)` is called in a form action (and `use:enhance` is added to the form), the `flashMessage.onError` callback can be used to transform it into your flash message type, so you can display the error at the flash message instead of in `form.message`.","code":""},"73":{"title":"Integrate Superforms with Formsnap","hash":"integrate-superforms-with-formsnap","url":"/formsnap","content":"/>\n\nAs you may have seen on the componentization page, quite a bit of boilerplate can add up for a form, and then we haven't even touched on the subject of accessibility.\n\nFortunately, the UI-component guru Hunter Johnston, aka @huntabyte, has done the community a great service with his library Formsnap! It not only simplifies how to put your forms into components, but also adds top-class accessibility with no effort.\n\nThis is the style you can expect when using Formsnap, compared to manually putting attributes on individual form fields:\n\n\n\nIf it suits you, please check out the Formsnap library, it is really nice! 💥","code":"<form method=\"POST\" use:enhance>\n  <Field {form} name=\"name\">\n    <Control let:attrs>\n      <Label>Name</Label>\n      <input {...attrs} bind:value={$formData.name} />\n    </Control>\n    <Description>Be sure to use your real name.</Description>\n    <FieldErrors />\n  </Field>\n  <Field {form} name=\"email\">\n    <Control let:attrs>\n      <Label>Email</Label>\n      <input {...attrs} type=\"email\" bind:value={$formData.email} />\n    </Control>\n    <Description>It's preferred that you use your company email.</Description>\n    <FieldErrors />\n  </Field>\n  <Field {form} name=\"password\">\n    <Control let:attrs>\n      <Label>Password</Label>\n      <input {...attrs} type=\"password\" bind:value={$formData.password} />\n    </Control>\n    <Description>Ensure the password is at least 10 characters.</Description>\n    <FieldErrors />\n  </Field>\n</form>\n"},"74":{"title":"Version 0.x and how to migrate","hash":"version-0x-and-how-to-migrate","url":"/legacy","content":"/>","code":""},"75":{"title":"Legacy version","hash":"legacy-version","url":"/legacy","content":"Superforms 1.x is available, so if you're still on version 0.x, please upgrade! No support can be given for the 0.x version.\n\n[Migration guide 0.x -> 1.0](/migration)Migration guide 0.x -> 1.0[What's new in 1.0?](/whats-new-v1)What's new in 1.0?[0.x documentation](https://superforms-legacy.vercel.app/)0.x documentation","code":""},"76":{"title":"Migration guide","hash":"migration-guide","url":"/migration","content":"/>\n\nLists the breaking changes that you need to address to upgrade from v0.x to v1.0.","code":""},"77":{"title":"Updating","hash":"updating","url":"/migration","content":"To update, change your `package.json` entry for `sveltekit-superforms` to `^1.0.0`:\n\n\n\n(If you're using Svelte 4, you'll need at least version `^1.1.2` of Superforms.)\n\nThe guide is written with the affected methods in the headlines, so you can scan through this page and apply the changes if you're using them in your code.","code":"{\n  \"devDependencies\": {\n    \"sveltekit-superforms\": \"^1.0.0\"\n  }\n}\n"},"78":{"title":"superForm","hash":"superform","url":"/migration","content":"For type safety reasons, you cannot pass `null`, `undefined`, or arbitrary data to `superForm` anymore. Instead, you should be using `superValidate` to get the initial form object, by returning `{ form }` from a load function and passing it to `superForm`.\n\nNot doing this will result in the following warning:\n\n\n\nWhen this happens, you need to check the call to `superForm` and apply the above fix.\n\nIn client-only scenarios, especially in SPA's, you must use `superValidate` or `superValidateSync` before calling `superForm`. Read more on the SPA page about this.","code":"No form data sent to superForm, schema type safety cannot be guaranteed. Also, no constraints will exist for the form.\nSet the warnings.noValidationAndConstraints option to false to disable this warning.\n"},"79":{"title":"valid, empty, firstError","hash":"valid-empty-firsterror","url":"/migration","content":"The `$valid`, `$empty`, and `$firstError` stores are removed from the client; they weren't that useful. `$allErrors` can be used instead, together with the new `$posted` store (which shows if the form has been previously posted or not).\n\n`empty` is removed from the object returned from `superValidate`, which type was previously called `Validation` but is now called `SuperValidated`.","code":""},"80":{"title":"setError","hash":"seterror","url":"/migration","content":"The `setError` function works as before, except that you must use an empty string instead of `null` for form-level errors.\n\nNote, however, that `setError` conflicts with client-side validation, the errors will be removed when a Zod schema is used for validation. Therefore, rely on the schema for most validation, if you're using it client-side.\n\n\n\nThe above error set in `refine` will be available on the client as `$errors._errors` as before, and will be automatically removed (or added) during client-side validation.\n\nIf you'd like a form-level message to persist, using `message` instead of `setError` will persist it until the next form submission:\n\n\n\nFinally, the status option for `setError` (and `message`) must be in the `400-599` range.","code":"const schema = z\n  .object({\n    password: z.string().min(8),\n    confirmPassword: z.string()\n  })\n  .refine((data) => password == confirmPassword, `Passwords doesn't match.`);\nconst form = await superValidate(request, zod(schema));\n\nif (!form.valid) return fail(400, { form });\n\nif (form.data.password != form.data.confirmPassword) {\n  // Stays until form is posted again, regardless of client-side validation\n  return message(form, `Passwords doesn't match`, { status: 400 });\n}\n"},"81":{"title":"setError (again), validate, proxy functions","hash":"seterror-again-validate-proxy-functions","url":"/migration","content":"`FieldPath` is gone - the above methods are now using a string accessor like `tags[2].id` instead of the previous array syntax `['tags', 2, 'id']`.\n\n\n\nThis also applies to generic components. The types have been simplified, so you should change them to this, also described on the componentization page:\n\n\n\nThe `FormPathLeaves` type is there to prevent using a schema field that isn't at the end of the schema (the \"leaves\" of the schema tree)Also note that arrays and objects cannot be used in `formFieldProxy`. So if your schema is defined as:\n\n\n\nThis only applies to `formFieldProxy`, since it maps to errors and constraints as well as the form. If you want to proxy just a form value, `fieldProxy` will work with any part of the schema.","code":"const { form, enhance, validate } = superForm(data.form)\n\n- validate(['tags', i, 'name'], { update: false });\n+ validate(`tags[${i}].name`, { update: false });\n<script lang=\"ts\">\n  import type { z, AnyZodObject } from 'zod';\n  import type { ZodValidation, FormPathLeaves } from 'sveltekit-superforms';\n  import { formFieldProxy, type SuperForm } from 'sveltekit-superforms/client';\n\n  type T = $$Generic<AnyZodObject>;\n\n  export let form: SuperForm<ZodValidation<T>, unknown>;\n  export let field: FormPathLeaves<z.infer<T>>;\n\n  const { value, errors, constraints } = formFieldProxy(form, field);\n</script>\nimport { formFieldProxy } from 'sveltekit-superforms/client';\n\nconst schema = z.object({\n  tags: z\n    .object({\n      id: z.number(),\n      name: z.string().min(1)\n    })\n    .array()\n});\n\nconst formData = superForm(data.form);\n\n// This won't work\nconst tags = formFieldProxy(formData, 'tags');\n\n// Not this either\nconst tag = formFieldProxy(formData, 'tags[0]');\n\n// But this will work since it's a field at the \"end\" of the schema\nconst tagName = formFieldProxy(formData, 'tags[0].name');\nimport { fieldProxy } from 'sveltekit-superforms/client';\n\nconst { form } = superForm(data.form);\nconst tags = fieldProxy(form, 'tags');\n"},"82":{"title":"allErrors","hash":"allerrors","url":"/migration","content":"The signature for `allErrors` has changed, to make it easier to group related messages:\n\n\n\nThe path follows the same format as the above-described string accessor path. If you want to display all messages grouped:\n\n\n\nOr as before, separate for each error:","code":"- { path: string[]; message: string[] }\n+ { path: string; messages: string[] }\n{#if $allErrors.length}\n  <ul>\n    {#each $allErrors as error}\n      <li>\n        <b>{error.path}:</b>\n        {error.messages.join('. ')}.\n      </li>\n    {/each}\n  </ul>\n{/if}\n{#if $allErrors.length}\n  <ul>\n    {#each $allErrors as error}\n      {#each error.messages as message}\n        <li>\n          <b>{error.path}:</b>\n          {message}.\n        </li>\n      {/each}\n    {/each}\n  </ul>\n{/if}\n"},"83":{"title":"defaultData","hash":"defaultdata","url":"/migration","content":"The undocumented `defaultData` function is now called `defaultValues`. You can use this to get the default values for a schema.\n\n\n\nSee the API for documentation.","code":"- import { defaultData } from 'sveltekit-superforms/server`\n+ import { defaultValues } from 'sveltekit-superforms/server`\n"},"84":{"title":"message, setMessage","hash":"message-setmessage","url":"/migration","content":"The `valid` option is removed from `message/setMessage`; any status >= 400 will return a fail. As with `setError`, the status code must be in the `400-599` range.","code":""},"85":{"title":"meta","hash":"meta","url":"/migration","content":"The virtually unused `meta` store, which containted some basic metadata about the schema, has been removed. Use the Zod schema directly instead for reflection.","code":""},"86":{"title":"Client options","hash":"client-options","url":"/migration","content":"The following `superForm` options have changed:","code":""},"87":{"title":"resetForm","hash":"resetform","url":"/migration","content":"Resetting the form now works without `use:enhance` and without JavaScript! Just set the `resetForm` option to `true`.\n\nIf you have used the function version of `resetForm`, `() => boolean`, it is now synchronous.","code":""},"88":{"title":"errorSelector","hash":"errorselector","url":"/migration","content":"The default `errorSelector` is now `[aria-invalid=\"true\"],[data-invalid]`, so if you want to be more accessibility-friendly:","code":" <input\n   name=\"name\"\n   bind:value={$form.name}\n-  data-invalid={$errors.name}\n+  aria-invalid={$errors.name ? 'true' : undefined}\n />\n"},"89":{"title":"Server options","hash":"server-options","url":"/migration","content":"The following `superValidate` options have changed:","code":""},"90":{"title":"noErrors","hash":"noerrors","url":"/migration","content":"`noErrors` is removed from the options. Use `errors` instead to determine if errors should be added or not to the validation.\n\n\n\nThe 1.0 release notes have a full list of changes, and as usual, let me know on Github or Discord if something is unclear or not working.","code":"// Add errors to an empty form\nconst form = await superValidate(zod(schema), { errors: true });\n"},"91":{"title":"Superforms v2 - Migration guide","hash":"superforms-v2---migration-guide","url":"/migration-v2","content":"/>\n\nVersion 2 is a big upgrade, because it now has the potential to support virtually every validation library out there. Of course, Zod is still perfectly usable with just a small modification to the code.","code":""},"92":{"title":"Changes","hash":"changes","url":"/migration-v2","content":"Here's a brief list of the changes, keep reading further down for details.","code":""},"93":{"title":"The biggest change (IMPORTANT)","hash":"the-biggest-change-important","url":"/migration-v2","content":"The biggest breaking change is that two options now follow the SvelteKit defaults more closely:\n\nresetForm is now `true` as defaultresetForm is now `true` as defaulttaintedMessage is now `false` as defaulttaintedMessage is now `false` as default\n\nBut don't worry, there's no need to change these options on every form to migrate. Instead, add the following define in `vite.config.ts` to keep the original behavior:\n\n\n\nYou can do the same on a form-by-form basis by setting the `legacy` option on `superForm` to `true` as well.\n\nWhen legacy mode is set and you want to use the new file uploads feature, you need to add `{ allowFiles: true }` as an option to `superValidate` in form actions.","code":"export default defineConfig({\n   plugins: [sveltekit()],\n   test: {\n     include: ['src/**/*.{test,spec}.{js,ts}']\n   },\n+  define: {\n+    SUPERFORMS_LEGACY: true\n+  }\n});\n"},"94":{"title":"superValidate","hash":"supervalidate","url":"/migration-v2","content":"Instead of a Zod schema, you now use an adapter for your favorite validation library. The following are currently supported:\n\nLibraryAdapterRequires defaultsArktype`import { arktype } from 'sveltekit-superforms/adapters'`YesJoi`import { joi } from 'sveltekit-superforms/adapters'`NoTypeBox`import { typebox } from 'sveltekit-superforms/adapters'`NoValibot`import { valibot } from 'sveltekit-superforms/adapters'`NoVineJS`import { vine } from 'sveltekit-superforms/adapters'`YesYup`import { yup } from 'sveltekit-superforms/adapters'`NoZod`import { zod } from 'sveltekit-superforms/adapters'`NoWith the library installed and the adapter imported, all you need to do is wrap the schema with it:\n\n\n\nThe libraries in the list that requires defaults don't have full introspection capabilities (yet), in which case you need to supply the default values for the form data as an option:","code":"import { superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\nconst form = await superValidate(zod(schema));\nimport { type } from 'arktype';\n\n// Arktype schema, powerful stuff\nconst schema = type({\n  name: 'string',\n  email: 'email',\n  tags: '(string>=2)[]>=3',\n  score: 'integer>=0'\n});\n\nconst defaults = { name: '', email: '', tags: [], score: 0 };\n\nexport const load = async () => {\n  const form = await superValidate(arktype(schema, { defaults }));\n  return { form };\n};\n"},"95":{"title":"Schema caching","hash":"schema-caching","url":"/migration-v2","content":"In the example above, both the schema and the defaults are defined outside the load function, on the top level of the module. This is very important to make caching work. The adapter is memoized (cached) with its arguments, so they must be kept in memory. Therefore, define the schema, options and eventual default values for the adapter on the top level of a module, so they always refer to the same object.","code":""},"96":{"title":"Optimized client-side validation","hash":"optimized-client-side-validation","url":"/migration-v2","content":"The client-side validation is using the smallest possible part of the adapter, to minimize the bundle size for the client. To use it, append `Client` to the adapter import, for example:\n\n\n\nThis works with the same schema as the one used on the server. If you need to switch schemas on the client (with `options.validators`), you need the full adapter.The built-in Superforms validator is now deprecated, since it requires you to do much of the type checking yourself. To keep using it, import `superformClient` and use the new `Infer` type to type it correctly with the schema, as in the following example. The input parameter can now be `undefined` as well, be sure to check for that case.\n\n\n\nAs said, this adapter requires you to do much of the error-prone type checking manually, so in general it is not a replacement for the other validation libraries. Use it only for a very good reason!","code":"import { valibotClient } from 'sveltekit-superforms/adapters';\nimport { schema } from './schema.js';\n\nconst { form, errors, enhance, options } = superForm(data.form, {\n  validators: valibotClient(schema)\n});\nimport type { Infer } from 'sveltekit-superforms';\nimport type { schema } from './schema.js';\nimport { superformClient } from 'sveltekit-superforms/adapters';\n\nconst { form, errors, enhance } = superForm(data.form, {\n  validators: superformClient<Infer<typeof schema>>({\n    name: (name?) => { \n      if(!name || name.length < 2) return 'Name must be at least two characters' \n    }\n  })\n});\n"},"97":{"title":"SuperValidated type parameters have changed","hash":"supervalidated-type-parameters-have-changed","url":"/migration-v2","content":"If you have used type parameters for a call to `superValidate` before, or have been using the `SuperValidated` type, you now need to wrap the schema parameter with `Infer`:\n\n\n\n\n\nIf your schema uses transformations or pipes, so the input and output types are different, there's an `InferIn` type and a third type parameter that can be used.\n\n\n\nAlso, `constraints` are now optional in the `SuperValidated` type, since they won't be returned when posting data anymore, only when loading data, to save some bandwidth. This is only relevant if you're changing the constraints before calling `superForm`.","code":"import type { Infer } from 'sveltekit-superforms'\nimport { zod } from 'sveltekit-superforms/adapters'\nimport { schema } from './schema.js'\n\ntype Message = { status: 'success' | 'failure', text: string }\n\nconst form = await superValidate<Infer<typeof schema>, Message>(zod(schema));\nimport type { LoginSchema } from '$lib/schemas';\nimport type { Infer } from 'sveltekit-superforms'\n\nexport let data: SuperValidated<Infer<LoginSchema>>;\nimport type { Infer, InferIn } from 'sveltekit-superforms'\nimport { zod } from 'sveltekit-superforms/adapters'\nimport { schema } from './schema.js'\n\ntype Message = { status: 'success' | 'failure', text: string }\ntype Validated = SuperValidated<Infer<typeof schema>, Message, InferIn<typeof schema>>;\n\nconst form : Validated = await superValidate(zod(schema));\n"},"98":{"title":"superValidateSync is renamed to defaults","hash":"supervalidatesync-is-renamed-to-defaults","url":"/migration-v2","content":"The quite popular `superValidateSync` function has changed, since it's not possible to make a synchronous validation anymore (not all validation libaries are synchronous). So if you've validated data with `superValidateSync` (in its first parameter), be aware that superValidateSync cannot do validation anymore. You need to use a `+page.ts` to do proper validation, as described on the SPA page.\n\nSince this is a bit of a security issue, `superValidateSync` has been renamed to `defaults`.\n\nFortunately though, a quick Github search reveals that most of its usages are with the schema only, which requires no validation and no `+page.ts`. In that case, just call `defaults` with your adapter and eventual initial data, and you're good to go:\n\n\n\n\n\nNote that `superValidate` can be used anywhere but on the top-level of Svelte components, so it's not completely removed from the client and SPA usage. But client-side validation is more of a convenience than ensuring data integrity. Always let an external API or a server request do a proper validation of the data before it's stored or used somewhere.","code":"import { defaults } from 'sveltekit-superforms'\n\n// Getting the default values from the schema:\nconst { form, errors, enhance } = superForm(defaults(zod(schema)), {\n  SPA: true,\n  validators: zod(schema),\n  // ...\n})\nimport { defaults } from 'sveltekit-superforms'\n\n// Supplying initial data (can be partial, won't be validated)\nconst initialData = { name: 'New user' }\nconst { form, errors, enhance } = superForm(defaults(initialData, zod(schema)), {\n  SPA: true,\n  validators: zod(schema),\n  // ...\n})\n"},"99":{"title":"validate method with no arguments is renamed to validateForm","hash":"validate-method-with-no-arguments-is-renamed-to-validateform","url":"/migration-v2","content":"Previously, you could do `const result = await validate()` to get a validation result for the whole form. This overload caused a lot of typing issues, so it has now been split into `validate` for fields, and `validateForm` for the whole form. Just replace the calls to `validate()` with `validateForm()` to fix this.","code":""},"100":{"title":"id option must be a string","hash":"id-option-must-be-a-string","url":"/migration-v2","content":"It's not possible to set the `id` option to `undefined` anymore, which is very rare anyway. By default, the id is automatically set to a string hash of the schema. It's only for multiple forms on the same page, or dynamically generated schemas, that you may want to change it.","code":""},"101":{"title":"arrayProxy","hash":"arrayproxy","url":"/migration-v2","content":"A simple change: `fieldErrors` is renamed to `valueErrors`.","code":""},"102":{"title":"intProxy and numberProxy","hash":"intproxy-and-numberproxy","url":"/migration-v2","content":"The `emptyIfZero` setting is removed from `numberProxy` and `intProxy`.","code":""},"103":{"title":"The defaultValidators option has moved","hash":"the-defaultvalidators-option-has-moved","url":"/migration-v2","content":"Another simple change: If you've been using `defaultValidators`, set the value `'clear'` on the `validators` option instead.","code":""},"104":{"title":"Enums in schemas","hash":"enums-in-schemas","url":"/migration-v2","content":"Previously, it was possible to post the name of the enum as a string, even if it was a numeric enum. That's not possible anymore:\n\n\n\nFor string enums, it works to post strings, of course.","code":"// Cannot post the string \"Delayed\" and expect it to be parsed as 2 anymore.\nenum FetchStatus {\n  Idle = 0,\n  Submitting = 1,\n  Delayed = 2,\n  Timeout = 3\n}\n"},"105":{"title":"Enums must have an explicit default value","hash":"enums-must-have-an-explicit-default-value","url":"/migration-v2","content":"Enums don't have a default \"empty\" value unlike other types, so it's not certain what the default value should be. To be able to set an enum as required, the first enum value will be used, unless there is an explicit default.","code":"export enum Foo {\n  A = 2,\n  B = 3\n}\n\nconst schema = z.object({\n  foo: z.nativeEnum(Foo), // Default is Foo.A, field is required\n  zodEnum: z.enum(['a', 'b', 'c']).default('b') // Explicit default 'b', field is optional\n})\n"},"106":{"title":"Use isTainted to check tainted status","hash":"use-istainted-to-check-tainted-status","url":"/migration-v2","content":"A new `superForm.isTainted` method is available, to check whether any part of the form is tainted. Use it instead of checking the `$tainted` store, which may give unexpected results.\n\n\n\nSpeaking of tainted, it now keeps track of the original data, so if you go back to a previous value, it's not considered tainted anymore.","code":"const { form, enhance, isTainted } = superForm(form.data);\n\n// Check the whole form\nif(isTainted())\n\n// Check a part of the form\nif(isTainted('name'))\n"},"107":{"title":"Schema/validation changes","hash":"schemavalidation-changes","url":"/migration-v2","content":"The underlying data model for Superforms is now JSON Schema, which is what makes it possible to support all the validation libraries. Some changes had to be made for this to work:","code":""},"108":{"title":"No side-effects for default values.","hash":"no-side-effects-for-default-values","url":"/migration-v2","content":"If no data is sent to `superValidate`, and no errors should be displayed, as is default in the load function:\n\n\n\nThen the default values won't be parsed with the schema. In other words, no side-effects like `z.refine` will be executed. If you need initial validation of even the default data, set the `errors` option to `true`, and optionally clear the errors after validation:","code":"const form = await superValidate(zod(schema));\nconst form = await superValidate(zod(schema), { errors: true });\nform.errors = {}\n"},"109":{"title":"Fields with default values aren't required anymore","hash":"fields-with-default-values-arent-required-anymore","url":"/migration-v2","content":"In hindsight, this should have been the default, given the forgiving nature of the data coercion and parsing. When a default value exists, the field is not required anymore. If that field isn't posted, its default value will be added to `form.data`.","code":""},"110":{"title":"Components","hash":"components","url":"/migration-v2","content":"Generic components were previously using Zod types for type safety. It is simpler now:\n\nTextInput.svelte\n\n\n\n+page.svelte","code":"<script lang=\"ts\" context=\"module\">\n  type T = Record<string, unknown>;\n</script>\n\n<script lang=\"ts\" generics=\"T extends Record<string, unknown>\">\n  import { formFieldProxy, type SuperForm, type FormPathLeaves } from 'sveltekit-superforms';\n\n  export let superform: SuperForm<T>;\n  export let field: FormPathLeaves<T>;\n  export let label = '';\n\n  const { value, errors, constraints } = formFieldProxy(superform, field);\n</script>\n\n<label>\n  {#if label}{label}<br />{/if}\n  <input\n    name={field}\n    type=\"text\"\n    aria-invalid={$errors ? 'true' : undefined}\n    bind:value={$value}\n    {...$constraints}\n    {...$$restProps}\n  />\n  {#if $errors}<span class=\"invalid\">{$errors}</span>{/if}\n</label>\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms';\n  import TextInput from './TextInput.svelte';\n\n  export let data;\n\n  const superform = superForm(data.form);\n  const { enhance } = superform;\n</script>\n\n<form method=\"POST\" use:enhance>\n  <TextInput {superform} field=\"name\" />\n  <button>Submit</button>\n</form>\n"},"111":{"title":"Update your imports, in case of problems","hash":"update-your-imports-in-case-of-problems","url":"/migration-v2","content":"The `/client` and `/server` paths for imports aren't needed anymore, but are kept for backwards compatibility. If you're having problems with loading pages, import everything except adapters from `sveltekit-superforms`. The same goes for `SuperDebug`, which is now the default export of the library.","code":"import { superForm, superValidate, dateProxy } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport SuperDebug from 'sveltekit-superforms';\n"},"112":{"title":"superForm.fields is removed","hash":"superformfields-is-removed","url":"/migration-v2","content":"The `fields` object returned from `superForm` was an inferior version of formFieldProxy, and has now been removed. Use `formFieldProxy` to create your own instead.","code":""},"113":{"title":"superForm does not support untainting specific fields anymore","hash":"superform-does-not-support-untainting-specific-fields-anymore","url":"/migration-v2","content":"You could previously choose what specific fields to untaint with a `fields` option, when updating `$form`. It was a rarely used feature that has now been removed.","code":""},"114":{"title":"onError \"message\" parameter is removed","hash":"onerror-message-parameter-is-removed","url":"/migration-v2","content":"Previously, there was a `message` parameter in the onError event. It's gone now, since it was pointing to the message store, and you might as well just assign it directly:","code":"const { form, message, enhance } = superForm(data.form, {\n  onError({ result }) {\n    $message = result.error.message\n  }\n})\n"},"115":{"title":"flashMessage.onError \"message\" parameter renamed to \"flashMessage\"","hash":"flashmessageonerror-message-parameter-renamed-to-flashmessage","url":"/migration-v2","content":"To be more consistent with the message parameter, the rarely used `flashMessage` option in `superForm` has an `onError` event with a `message` parameter, but it is now renamed to `flashMessage` to signify which message can actually be updated.","code":""},"116":{"title":"New features","hash":"new-features","url":"/migration-v2","content":"Of course, there are also new features, so the migration will be worthwhile. Check the what's new page for more information.","code":""},"117":{"title":"Rate limiting","hash":"rate-limiting","url":"/rate-limiting","content":"/>\n\nSuperforms has a basic client-side prevention of multiple form submissions. But you may want to limit the rate of form submissions on the server as well, to prevent misuse and spamming. \n\nA useful library for this is sveltekit-rate-limiter, which makes it easy to rate limit password resets, account registration, etc. It not only works with forms but all requests, so API limiting is another use for it. With this library, basic rate limiting isn't much harder than:\n\n\n\nIt can be easily expanded with custom limiter plugins and different stores than the built-in ones.\n\nInstallation and usage instructions are available at its Github repo: https://github.com/ciscoheat/sveltekit-rate-limiter","code":"import { error } from '@sveltejs/kit';\nimport { RateLimiter } from 'sveltekit-rate-limiter/server';\n\nconst limiter = new RateLimiter({\n  IP: [10, 'h'], // IP address limiter\n  IPUA: [5, 'm'], // IP + User Agent limiter\n});\n\nexport const actions = {\n  default: async (event) => {\n    // Every call to isLimited counts as a hit towards the rate limit for the event.\n    if (await limiter.isLimited(event)) error(429);\n  }\n};\n"},"118":{"title":"Super Sponsors","hash":"super-sponsors","url":"/sponsors","content":"/>","code":""},"119":{"title":"Super Sponsors","hash":"super-sponsors","url":"/sponsors","content":"Here are the kind individuals and organizations that are donating $10 or more monthly to the future development and support of Superforms!\n\nTo them and all of you that have donated a one-time amount - Thank you, it's so appreciated. ❤️ Whenever I have time, I will reach out and say thank you personally.","code":""},"120":{"title":"Donate to be a sponsor","hash":"donate-to-be-a-sponsor","url":"/sponsors","content":"Any $10 or more monthly donation will be listed on this page with a picture and link.","code":""},"121":{"title":"SuperDebug - the Super debugging component","hash":"superdebug---the-super-debugging-component","url":"/super-debug","content":"/>","code":""},"122":{"title":"SuperDebug","hash":"superdebug","url":"/super-debug","content":"`SuperDebug` is a debugging component that gives you colorized and nicely formatted output for any data structure, usually `$form` returned from `superForm`. It also shows the current page status in the top right corner.\n\nIt's not limited to the Superforms data, other use cases includes debugging plain objects, promises, stores and more.","code":""},"123":{"title":"Props reference","hash":"props-reference","url":"/super-debug","content":"PropTypeDefault valueDescriptiondataanyData to be displayed by SuperDebug. The only required prop.displayboolean`true`Whether to show or hide SuperDebug.statusboolean`true`Whether to show or hide the HTTP status code of the current page.labelstring`\"\"`Add a label to SuperDebug, useful when using multiple instances on a page.collapsibleboolean`false`Makes the component collapsible on a per-route basis.collapsedboolean`false`If the component is `collapsible`, sets it to initially collapsed.stringTruncatenumber`120`Truncate long string field valuns of the data prop. Set to `0` to disable truncating.rawboolean`false`Skip promise and store detection when `true`.functionsboolean`false`Enables the display of fields of the data prop that are functions.theme\"default\", \"vscode\"`\"default\"`Display theme, which can also be customized with CSS variables.refHTMLPreElementReference to the pre element that contains the data.","code":"<SuperDebug\n  data={any}\n  display={true}\n  status={true}\n  label=''\n  collapsible={false}\n  collapsed={false}\n  stringTruncate={120}\n  raw={false}\n  functions={false}\n  theme='default'\n  ref={HTMLPreElement} \n/>\n"},"124":{"title":"Examples","hash":"examples","url":"/super-debug","content":"<Input {form} />","code":""},"125":{"title":"With a label","hash":"with-a-label","url":"/super-debug","content":"A label is useful when using multiple instance of SuperDebug.","code":"<SuperDebug label=\"Useful label\" data={$form} />\n"},"126":{"title":"Promise support","hash":"promise-support","url":"/super-debug","content":"To see this in action, scroll to the product data below and hit refresh.","code":"// +page.ts\nexport const load = (async ({ fetch }) => {\n  const promiseProduct = fetch('https://dummyjson.com/products/1')\n    .then(response => response.json())\n\n  return { promiseProduct }\n})\n<SuperDebug label=\"Dummyjson product\" data={data.promiseProduct} />\n"},"127":{"title":"Composing debug data","hash":"composing-debug-data","url":"/super-debug","content":"If you want to debug multiple stores/objects in the same instance.\n\n\n\n<SuperDebug data={{$form, $errors}} />","code":"<SuperDebug data={{$form, $errors}} />\n"},"128":{"title":"Displaying files","hash":"displaying-files","url":"/super-debug","content":"SuperDebug displays `File` and `FileList` objects as well:","code":"<SuperDebug data={$form} />\n"},"129":{"title":"SuperDebug loves stores","hash":"superdebug-loves-stores","url":"/super-debug","content":"You can pass a store directly to SuperDebug:","code":"<SuperDebug data={form} />\n"},"130":{"title":"Custom styling","hash":"custom-styling","url":"/super-debug","content":"<SuperDebug \n  data={$form} \n  theme=\"vscode\" \n  --sd-code-date=\"lightgreen\"\n/>","code":"<SuperDebug \n  data={$form} \n  theme=\"vscode\" \n  --sd-code-date=\"lightgreen\" \n/>\n"},"131":{"title":"CSS variables available for customization","hash":"css-variables-available-for-customization","url":"/super-debug","content":"Note that styling the component produces the side-effect described in the Svelte docs.","code":""},"132":{"title":"Page data","hash":"page-data","url":"/super-debug","content":"Debugging Svelte's `$page` data, when the going gets tough. Since it can contain a lot of data, using the `collapsible` prop is convenient.","code":"<script lang=\"ts\">\n  import { page } from '$app/stores';\n</script>\n\n<SuperDebug label=\"$page data\" data={$page} collapsible />\n"},"133":{"title":"Help and support for Superforms","hash":"help-and-support-for-superforms","url":"/support","content":"/>","code":""},"134":{"title":"Help & Support","hash":"help--support","url":"/support","content":"There are two ways of getting support with using Superforms:","code":""},"135":{"title":"Free support","hash":"free-support","url":"/support","content":"If you're using Superforms in a personal or non-profit project, support is completely free; a star on Github is more than enough if you want to show your appreciation. Join #free-support on Discord and ask away!","code":""},"136":{"title":"Commercial support","hash":"commercial-support","url":"/support","content":"If you're making or aiming to make money on your project, a donation proportional to the current profit of the project or the company you work for, will give you a month of commercial support. Donate with one of the options below, then ask in the #commercial-support channel on Discord, or on Github.\n\nFor a longer period, you can make a monthly donation. Any $10 or higher monthly donation will be listed on the Sponsors page with a picture and link, and on Discord as a Sponsor. Many thanks if you want to support Open Source Software in this way!","code":""},"137":{"title":"Bug reporting","hash":"bug-reporting","url":"/support","content":"Please report bugs as an issue on Github.\n\nFixing bugs and working on new features will be handled in due time, but if you want to speed up the process, a donation is welcome, or you can submit a pull request, since with open source, we can also pay with our time.","code":""},"138":{"title":"v1.0 - What's new?","hash":"v10---whats-new","url":"/whats-new-v1","content":"/>\n\nAfter a lot of work, Superforms 1.0 has been released! Here are the most important new features and improvements.","code":""},"139":{"title":"Automatic form id","hash":"automatic-form-id","url":"/whats-new-v1","content":"Setting a form `id` for multiple forms on the same page is not required anymore when using `use:enhance`.\n\n\n\nThe one exception is if the forms are using the same schema (identical content), then you'll need an id:\n\n\n\nMultiple forms without `use:enhance` work as well, but an id must be manually specified, either as an option, or in a hidden form field called `__superform_id`.\n\nFor extra safety, a warning will be emitted if identical id's are detected.","code":"const loginForm = await superValidate(loginSchema, {\n-  id: 'loginForm'\n});\n\nconst registerForm = await superValidate(registerSchema, {\n-  id: 'registerForm'\n});\n\nreturn { loginForm, registerForm }\nconst form1 = await superValidate(schema, { id: 'form1' });\nconst form2 = await superValidate(schema, { id: 'form2' });\n\nreturn { form1, form2 };\n"},"140":{"title":"defaultValues","hash":"defaultvalues","url":"/whats-new-v1","content":"This method will provide you with the default values for a schema.\n\n\n\nThis was previously an undocumented function called `defaultData`. If you've used it, rename it to `defaultValues`.","code":"import { defaultValues } from 'sveltekit-superforms/server';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().min(2),\n  tags: z.string().min(1).array().default(['a', 'b'])\n});\n\n// Returns { name: '', tags: ['a', 'b'] }\nconst defaults = defaultValues(schema);\n\n// Which is the same as form.data in superValidate\n// when called with only the schema:\nconst form = await superValidate(schema);\n"},"141":{"title":"superValidateSync","hash":"supervalidatesync","url":"/whats-new-v1","content":"When using `superValidate` on the client, you previously had to use a `+page.ts` file to call `superValidate`, since it is asynchronous. Now you can import `superValidateSync` and use it in components directly (which assumes that there is no async validation in the schema). It can be very convenient in SPA's, just be aware that the client bundle size will increase a bit compared to using `superValidate` only on the server.","code":"<script lang=\"ts\">\n  import { schema } from '$lib/schemas';\n  import { superValidateSync, superForm } from 'sveltekit-superforms/client';\n\n  // Same as returning { form } in a load function\n  const form = superForm(superValidateSync(schema));\n</script>\n"},"142":{"title":"String path accessors","hash":"string-path-accessors","url":"/whats-new-v1","content":"For errors and proxies with nested data, the array syntax was a bit clunky. It has now been replaced with a typesafe string path, so you can write it just as you would access an object property in normal JS:","code":"import { setError } from 'sveltekit-superforms/server'\n\nconst i = 1;\n\n- setError(form, ['tags', i, 'name'], 'Incorrect name');\n+ setError(form, `tags[${i}].name`, 'Incorrect name');\nimport { intProxy } from 'sveltekit-superforms/client'\n\nconst { form } = superForm(data.form);\n\n- const idProxy = intProxy(form, ['user', 'profile', 'id']);\n+ const idProxy = intProxy(form, 'user.profile.id');\n"},"143":{"title":"New 'posted' store","hash":"new-posted-store","url":"/whats-new-v1","content":"You can now test if the form has been previously posted by deconstructing the boolean `$posted` store from `superForm`.","code":""},"144":{"title":"Extra options for reset","hash":"extra-options-for-reset","url":"/whats-new-v1","content":"You can now use the `data` and `id` options when calling reset, to reset the form to different data and id than the initial one. `data` can be partial.","code":""},"145":{"title":"Better empty value support for proxies","hash":"better-empty-value-support-for-proxies","url":"/whats-new-v1","content":"`intProxy`, `numberProxy`, `dateProxy`, and `stringProxy` now have an `empty` option, so empty values can be automatically set to `null` or `undefined`.","code":""},"146":{"title":"Validate the whole form on the client","hash":"validate-the-whole-form-on-the-client","url":"/whats-new-v1","content":"The `validate` function can be used to validate a specific field in the form, but now you can also call validate with no arguments, and get a validation result back for the whole form.","code":""},"147":{"title":"Errors for arrays and objects","hash":"errors-for-arrays-and-objects","url":"/whats-new-v1","content":"Previously, it wasn't possible to handle errors for arrays in the schema, like a minimum or maximum number of items. Now it's possible:\n\n\n\n\n\nThe 1.0 release notes have a full list of changes for 1.0, and as usual, let me know on Github or Discord if something is unclear or not working.","code":"const schema = z.object({\n  tags: z.string().array().max(3)\n});\n\nconst { form, errors } = superForm(data.form);\n{#if $errors.tags._errors}\n  {$errors.tags._errors}\n{/if}\n"},"148":{"title":"Version 2 - What's new?","hash":"version-2---whats-new","url":"/whats-new-v2","content":"/>\n\nSuperforms 2 has finally been released! Here's a presentation of the new features and improvements:","code":""},"149":{"title":"File upload support!","hash":"file-upload-support","url":"/whats-new-v2","content":"Finally, it's possible to handle files with Superforms, even with validation on the client. See the dedicated file uploads section for more information.","code":""},"150":{"title":"SuperDebug","hash":"superdebug","url":"/whats-new-v2","content":"Now that file uploads is a feature, SuperDebug displays file objects properly:","code":""},"151":{"title":"Union support","hash":"union-support","url":"/whats-new-v2","content":"An oft-requested feature has been support for unions, which has always been a bit difficult to handle with `FormData` parsing and default values. But unions can now be used in schemas, with a few compromises:","code":""},"152":{"title":"Unions must have an explicit default value","hash":"unions-must-have-an-explicit-default-value","url":"/whats-new-v2","content":"If a schema field can be more than one type, it's not possible to know what default value should be set for it. Therefore, you must specify a default value for unions explicitly:","code":"const schema = z.object({\n  undecided: z.union([z.string(), z.number()]).default(0)\n})\n"},"153":{"title":"Multi-type unions can only be used when dataType is 'json'","hash":"multi-type-unions-can-only-be-used-when-datatype-is-json","url":"/whats-new-v2","content":"Unions are also quite difficult to make assumptions about in `FormData`. If `\"123\"` was posted (as all posted values are strings), should it be parsed as a string or a number in the above case?\n\nThere is no obvious answer, so unions with more than one type can only be used when the `dataType` option is set to `'json'` (which will bypass the whole `FormData` parsing by serializing the form data).","code":""},"154":{"title":"Form is reset by default","hash":"form-is-reset-by-default","url":"/whats-new-v2","content":"To better follow the SvelteKit defaults, the `resetForm` option for `superForm` is now `true` as default.","code":""},"155":{"title":"Tainted updates","hash":"tainted-updates","url":"/whats-new-v2","content":"The default for `taintedMessage` changed too, it is now `false`, so no message will be displayed if the form is modified, unless you set it to either `true`, a string message, or a function that returns a promise resolved to `true` if navigation should proceed (so you can now use a custom dialog for displaying the message).\n\nThe tainted store is also smarter, keeping track of the original data, so if you go back to a previous value, it's not considered tainted anymore.","code":""},"156":{"title":"New isTainted method","hash":"new-istainted-method","url":"/whats-new-v2","content":"A new `isTainted` method is available on `superForm`, to check whether any part of the form is tainted. Use it instead of testing against the `$tainted` store, which may give unexpected results.","code":"<script lang=\"ts\">\n  const { form, enhance, tainted, isTainted } = superForm(form.data);\n\n  // Check the whole form\n  if(isTainted()) {\n    console.log('The form is tainted')\n  }\n\n  // Check a part of the form\n  if(isTainted('name')) {\n    console.log('The name field is tainted')\n  }\n</script>\n\n<!-- Make the function reactive by passing the $tainted store -->\n<button disabled={!isTainted($tainted)}>Submit</button>\n\n<!-- It even works with individual fields -->\n<button disabled={!isTainted($tainted.name)}>Submit name</button>\n"},"157":{"title":"onChange event","hash":"onchange-event","url":"/whats-new-v2","content":"An `onChange` event is added to the `superForm` options, so you can track specific fields for changes. Check the events page for the details.","code":""},"158":{"title":"New validateForm method","hash":"new-validateform-method","url":"/whats-new-v2","content":"Previously you could call `validate()` for retrieving a validation result for the whole form, but you must now use `validateForm()`. There are two options, `{ update?: true, schema?: ValidationAdapter<Partial<T>> }` which can be used to trigger a full client-side validation, and validate the schema partially, which is useful for multi-step forms.","code":""},"159":{"title":"empty: 'zero' option for intProxy and numberProxy","hash":"empty-zero-option-for-intproxy-and-numberproxy","url":"/whats-new-v2","content":"For number fields, a UX problem has been that the default value for numbers, `0`, hides the placeholder text, and it's not always wanted to have a number there initially. But it's now possible to make this work, with two new options in `intProxy` and `numberProxy`:\n\n\n\nThe `empty` option, if set to `'zero'`, will set the field to 0 if it's empty, and the unfortunately long `initiallyEmptyIfZero` will ensure the field is empty at first.","code":"const schema = z.object({\n  num: z.number()\n})\n\nconst proxy = intProxy(form, 'num', { empty: 'zero', initiallyEmptyIfZero: true })\n"},"160":{"title":"Simplified imports","hash":"simplified-imports","url":"/whats-new-v2","content":"You may have noticed in the examples that `/client` and `/server` isn't needed anymore. Simply import everything except adapters from `sveltekit-superforms`. The same goes for `SuperDebug`, which is now the default export of the library:","code":"import { superForm, superValidate, dateProxy } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport SuperDebug from 'sveltekit-superforms';\n"},"161":{"title":"Migrate now!","hash":"migrate-now","url":"/whats-new-v2","content":"Read the detailed migration guide to convert your projects to Superforms version 2. Ask any migration questions in the #v2-migration Discord channel, or open an issue on Github","code":""},"162":{"title":"Release notes","hash":"release-notes","url":"/whats-new-v2","content":"The 2.0 release notes have a full list of changes.","code":""},"163":{"title":"Client-side validation","hash":"client-side-validation","url":"/concepts/client-validation","content":"/>\n\nThere are two client-side validation options with Superforms: \n\nThe built-in browser validation, which doesn't require JavaScript to be enabled in the browser.The built-in browser validation, which doesn't require JavaScript to be enabled in the browser.Using a validation schema, usually the same one as on the server. Requires JavaScript and [use:enhance](/concepts/enhance).Using a validation schema, usually the same one as on the server. Requires JavaScript and use:enhance.","code":""},"164":{"title":"Built-in browser validation","hash":"built-in-browser-validation","url":"/concepts/client-validation","content":"There is a web standard for form input, which doesn't require JavaScript and is virtually effortless to use with Superforms:","code":""},"165":{"title":"constraints","hash":"constraints","url":"/concepts/client-validation","content":"To use the built-in browser validation, just spread the `$constraints` store for a schema field on its input field:\n\n\n\nThe constraints is an object with validation properties mapped from the schema:","code":"<script lang=\"ts\">\n  export let data;\n  const { form, constraints } = superForm(data.form);\n</script>\n\n<input\n  name=\"email\"\n  type=\"email\"\n  bind:value={$form.email}\n  {...$constraints.email} />\n{\n  pattern?: string;      // The *first* string validator with a RegExp pattern\n  step?: number | 'any'; // number with a step validator\n  minlength?: number;    // string with a minimum length\n  maxlength?: number;    // string with a maximum length\n  min?: number | string; // number if number validator, ISO date string if date validator\n  max?: number | string; // number if number validator, ISO date string if date validator\n  required?: true;       // true if not nullable, nullish or optional\n}\n"},"166":{"title":"Special input formats","hash":"special-input-formats","url":"/concepts/client-validation","content":"For some input types, a certain format is required. For example with `date` fields, both the underlying data and the constraint needs to be in `yyyy-mm-dd` format, which can be handled by using a proxy and adding attributes after the constraints spread, in which case they will take precedence:\n\n\n\nCheck the validation attributes and their valid values at MDN.","code":"<input\n  name=\"date\"\n  type=\"date\"\n  aria-invalid={$errors.date ? 'true' : undefined}\n  bind:value={$proxyDate}\n  {...$constraints.date}\n  min={$constraints.date?.min?.toString().slice(0, 10)} \n/>\n"},"167":{"title":"Using a validation schema","hash":"using-a-validation-schema","url":"/concepts/client-validation","content":"The built-in browser validation can be a bit constrained; for example, you can't easily control the position and appearance of the error messages. Instead (or supplementary), you can use a validation schema and customize the validation with a number of options, so the form errors will be displayed in real-time.\n\nAs with most client-side functionality, use:enhance is required for real-time validation.","code":"const { form, enhance, constraints, validate, validateForm } = superForm(data.form, {\n  validators: ClientValidationAdapter<S> | 'clear' | false,\n  validationMethod: 'auto' | 'oninput' | 'onblur' | 'submit-only' = 'auto',\n  customValidity: boolean = false\n})\n"},"168":{"title":"validators","hash":"validators","url":"/concepts/client-validation","content":"Setting the `validators` option to an adapter with the same schema as on the server, is the most convenient and recommended way. Just put the schema in a shared directory, `$lib/schemas` for example, and import it on the client as well as on the server.\n\nAdding a adapter on the client will increase the client bundle size a bit, since the validation library now has to be imported there too. But the client-side adapter is optimized to be as small as possible, so it shouldn't be too much of an issue. To use it, append `Client` to the adapter import, for example:\n\n\n\nThis works only with the same schema as the one used on the server. If you need to switch schemas on the client, you need the full adapter (for example `zod` instead of `zodClient`).As a super-simple alternative to an adapter, you can also set the option to `'clear'`, to remove errors for a field as soon as it's modified.","code":"validators: ClientValidationAdapter<S> | 'clear' | false\nimport { valibotClient } from 'sveltekit-superforms/adapters';\nimport { schema } from './schema.js';\n\nconst { form, errors, enhance } = superForm(data.form, {\n  validators: valibotClient(schema)\n});\n"},"169":{"title":"Switching schemas","hash":"switching-schemas","url":"/concepts/client-validation","content":"You can even switch schemas dynamically, with the `options` object. `options.validators` accepts a partial validator, which can be very useful for multi-step forms:\n\n\n\nAs mentioned, you need the full adapter to switch schemas dynamically. An exception will be thrown if a client adapter is detected different from the initial `validators` option.","code":"import { valibot } from 'sveltekit-superforms/adapters';\nimport { schema, partialSchema } from './schema.js';\n\nconst { form, errors, enhance, options } = superForm(data.form, {\n  // Validate the first step of the form\n  validators: valibot(partialSchema)\n});\n\n// When moving to the last step of the form\noptions.validators = valibot(schema)\n"},"170":{"title":"validationMethod","hash":"validationmethod","url":"/concepts/client-validation","content":"The validation is triggered when a value is changed, not just when focusing on, or tabbing through a field. The default validation method is based on the \"reward early, validate late\" pattern, a researched way of validating input data that makes for a high user satisfaction:\n\nIf entering data in a field that has or previously had errors, validate on `input`If entering data in a field that has or previously had errors, validate on `input`Otherwise, validate on `blur`.Otherwise, validate on `blur`.\n\nBut you can instead use the `oninput` or `onblur` settings to always validate on one of these respective events, or `onsubmit` to validate only on submit.\n\nBe aware that the whole schema will be validated, not just the modified field, because errors can be added to any field in the schema during validation with Zod's refine or similar, so the whole schema must be validated to know the final result.","code":"validationMethod: 'auto' | 'oninput' | 'onblur' | 'onsubmit',\n"},"171":{"title":"customValidity","hash":"customvalidity","url":"/concepts/client-validation","content":"This option uses the browser built-in tooltip to display validation errors, so neither `$errors` nor `$constraints` are required on the form. See the error handling page for details and an example.","code":""},"172":{"title":"validate","hash":"validate","url":"/concepts/client-validation","content":"The `validate` function, deconstructed from `superForm`, gives you complete control over the validation process for specific fields. Examples of how to use it:","code":"const { form, enhance, validate } = superForm(data.form, {\n  validators: zod(schema) // Required option for validate to work\n});\n\n// Simplest case, validate what's in the field right now\nvalidate('name');\n\n// Validate without updating, for error checking\nconst nameErrors = await validate('name', { update: false });\n\n// Validate and update field with a custom value\nvalidate('name', { value: 'Test' });\n\n// Validate a custom value, update errors only\nvalidate('name', { value: 'Test', update: 'errors' });\n\n// Validate and update nested data, and also taint the field\nvalidate('tags[1].name', { value: 'Test', taint: true });\n"},"173":{"title":"validateForm","hash":"validateform","url":"/concepts/client-validation","content":"Similar to `validate`, `validateForm` lets you validate the whole form and return a `SuperValidated` result:","code":"const { form, enhance, validateForm } = superForm(data.form, {\n  validators: zod(schema) // Required option for validate to work\n});\n\nconst result = await validateForm();\n\nif (result.valid) {\n  // ...\n}\n\n// You can use the update option to trigger a client-side validation\nawait validateForm({ update: true });\n\n// Or the schema option to validate the form partially\nconst result2 = await validateForm({ schema: zod(partialSchema) });\n"},"174":{"title":"Asynchronous validation and debouncing","hash":"asynchronous-validation-and-debouncing","url":"/concepts/client-validation","content":"The validation is asynchronous, but a slow validator will delay the final result, so for a server round-trip validation, like checking if a username is available, you might want to consider a SPA action form, or handle it with `on:input` and a package like throttle-debounce. Errors can be set manually by updating the `$errors` store:","code":"// Needs to be a string[]\n$errors.username = ['Username is already taken.'];\n"},"175":{"title":"Test it out","hash":"test-it-out","url":"/concepts/client-validation","content":"This example demonstrates how validators are used to check if tags are of the correct length.\n\nSet a tag name to blank and see that no errors show up until you move focus outside the field (blur). When you go back and correct the mistake, the error is removed as soon as you enter more than one character (input).","code":""},"176":{"title":"Progressive enhancement","hash":"progressive-enhancement","url":"/concepts/enhance","content":"/>\n\nBy using `enhance` returned from `superForm`, we'll get the client-side enhancement expected from a modern website:\n\n\n\nThe `use:enhance` action takes no arguments; instead, events are used to hook into the default SvelteKit use:enhance parameters and more. Check out the events page for details.\n\nWithout `use:enhance` (and JavaScript enabled in the browser), the form will be static. No events, loading timers, auto-focus, etc. The only things that will work are constraints. Also note that SvelteKit's own `use:enhance` cannot be used; you must use the one returned from `superForm`, and it should only be used on a single form element - you cannot share it between forms.","code":"<script lang=\"ts\">\n  const { form, enhance } = superForm(data.form);\n  //            ^^^^^^^\n</script>\n\n<form method=\"POST\" use:enhance>\n"},"177":{"title":"Modifying the use:enhance behavior","hash":"modifying-the-useenhance-behavior","url":"/concepts/enhance","content":"The default `use:enhance` behavior can be modified, there are three options available, here shown with the default values; you don't need to add them unless you want to change a value.","code":"const { form, enhance, reset } = superForm(data.form, {\n  applyAction: true,\n  invalidateAll: true | 'force',\n  resetForm: true\n});\n"},"178":{"title":"applyAction","hash":"applyaction","url":"/concepts/enhance","content":"When `applyAction` is `true`, the form will have the default SvelteKit behavior of both updating and reacting on `$page.form` and `$page.status`, and also redirecting automatically.\n\nTurning this behavior off can be useful when you want to isolate the form from other sources updating the page, for example Supabase events, a known source of confusing form behavior. Read more about `applyAction` in the SvelteKit docs.","code":""},"179":{"title":"invalidateAll","hash":"invalidateall","url":"/concepts/enhance","content":"When `invalidateAll` is `true` (the default) and a successful validation result is returned from the server, the page will be invalidated and the load functions will run again. A login form takes advantage of this to update user information on the page, but the default setting may cause problems with multiple forms on the same page, since the load function will reload the data for all forms defined there.","code":""},"180":{"title":"Optimistic updates","hash":"optimistic-updates","url":"/concepts/enhance","content":"There can be a conflict between the data returned in the form action and the new data from the load function. The form action data is \"optimistic\", meaning that what's returned will be displayed, assuming that all data was supposed to be updated. But if you update the form partially, the form data will be out of sync with the load function data, in which case you may want to wait for the load function data. This can be achieved with by setting `invalidateAll: 'force'`. Now the load function data will be prioritized, and the `reset` function will also use the latest load function data when called.","code":""},"181":{"title":"resetForm","hash":"resetform","url":"/concepts/enhance","content":"When `true`, reset the form upon a successful validation result.\n\nNote however, that since we're using `bind:value` on the input fields, a HTML form reset (clearing all fields in the DOM) won't have any effect. So in Superforms, resetting means going back to the initial state of the form data, basically setting `$form` to what was initially sent to `superForm`.\n\nFor a custom reset, you can instead modify the `data` field returned from `superValidate` on the server, or use the events together with the reset function on the client.","code":""},"182":{"title":"When to change the defaults?","hash":"when-to-change-the-defaults","url":"/concepts/enhance","content":"Quite rarely! If you have a single form on the page and nothing else is causing the page to invalidate, you'll probably be fine as it is. For multiple forms on the same page, you have to experiment with these three options. Read more on the multiple forms page.","code":""},"183":{"title":"Making the form behave like the SvelteKit default","hash":"making-the-form-behave-like-the-sveltekit-default","url":"/concepts/enhance","content":"Any ActionResult with status `error` is transformed into `failure` by Superforms to avoid form data loss. The SvelteKit default is to render the nearest `+error.svelte` page, which will wipe out the form and all data that was just entered. Returning `fail` with a status message or using the onError event is a more user-friendly way of handling server errors.\n\nYou can prevent this by setting the following option. Use with care, since the purpose of the change is to protect the user from data loss.","code":"const { form, enhance } = superForm(data.form, {\n  // On ActionResult error, render the nearest +error.svelte page\n  onError: 'apply',\n});\n"},"184":{"title":"Error handling","hash":"error-handling","url":"/concepts/error-handling","content":"/>\n\nBy deconstructing `errors` from `superForm`, you'll get an object with form errors that you can display where it's appropriate:\n\n\n\nThe `aria-invalid` attribute is used to automatically focus on the first error field; see the errorSelector option further below.","code":"<script lang=\"ts\">\n  const { form, errors } = superForm(data.form);\n</script>\n\n<form method=\"POST\">\n  <label for=\"name\">Name</label>\n  <input\n    name=\"name\"\n    aria-invalid={$errors.name ? 'true' : undefined}\n    bind:value={$form.name}\n  />\n  {#if $errors.name}<span class=\"invalid\">{$errors.name}</span>{/if}\n\n  <div><button>Submit</button></div>\n</form>\n"},"185":{"title":"setError","hash":"seterror","url":"/concepts/error-handling","content":"Most errors will be set automatically when the data is validated, but you may want to add errors after determining that the data is valid. This is easily done with the `setError` helper function.\n\n\n\n`setError` returns a `fail(400, { form })` so it can be returned immediately, or more errors can be added by calling it multiple times before returning. Check the API for additional options.\n\nIf you're using nested data, a string path is used to specify where in the data structure the error is:\n\n\n\nErrors added with `setError` will be removed when a schema is used in client-side validation and the first validation occurs (such as modifying a field).","code":"import { setError, superValidate, fail } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\nexport const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) {\n      return fail(400, { form });\n    }\n\n    if (db.users.find({ where: { email: form.data.email } })) {\n      return setError(form, 'email', 'E-mail already exists.');\n    }\n\n    return { form };\n  }\n};\nsetError(form, `post.tags[${i}].name`, 'Invalid tag name.');\n"},"186":{"title":"Server errors","hash":"server-errors","url":"/concepts/error-handling","content":"In the case of a server error, Superforms will normalize the different kind of server errors that can occur:\n\nError typeExampleExpected error`error(404, { code: 'user_not_found', message: 'Not found' })`Exception`throw new Error(\"Database connection error\")`JSON response`return json({ code: 'rate_limited', status: 429 }, { status: 429 })`Other response`<!doctype html><html lang=\"en\"><head><meta charset=...`These can be handled with the onError event, assuming the Superforms use:enhance action is applied to the form. If it isn't, the nearest `+error.svelte` page will be rendered.\n\nIn general, returning a status message is recommended instead of calling `error` or throwing exceptions, as this will make even the non-JS users keep their form data.","code":""},"187":{"title":"Initial form errors","hash":"initial-form-errors","url":"/concepts/error-handling","content":"The default data in an empty form is usually invalid, but displaying lots of errors upon page load doesn't look good. Superforms handles it like this:\n\nIf no data was posted or sent to `superValidate`, no errors will be returned unless the `errors` option in `superValidate` is `true`. This is what happens in load functions when the only the schema is sent to `superValidate`:\n\n\n\nIf data was sent to `superValidate`, either posted or populated with data, errors will be returned unless the `errors` option is `false`.\n\n\n\nThe `errors` option does not affect the `valid` property of the `SuperValidated` object, which always indicates whether validation succeeded or not.","code":"export const load = async () => {\n  // No errors set, since no data is sent to superValidate\n  const form = await superValidate(zod(schema));\n\n  // No data, but errors can still be added with an option\n  const form2 = await superValidate(zod(schema), { errors: true });\n};\nexport const load = async () => {\n  const initialData = { test: 123 };\n\n  // Form is populated, so errors will be set if validation fails\n  const form = await superValidate(initialData, zod(schema));\n\n  // No errors will be set, even if validation fails\n  const form2 = await superValidate(initialData, zod(schema), { errors: false });\n};\n\nexport const actions = {\n  default: async ({ request }) => {\n    // Data is posted, so form.errors will be populated\n    const form = await superValidate(request, zod(schema));\n\n    // Unless we turn them off (which is rare in form actions)\n    const form2 = await superValidate(request, zod(schema), { errors: false });\n  }\n};\n"},"188":{"title":"Usage (client)","hash":"usage-client","url":"/concepts/error-handling","content":"As said, errors are available in the `$errors` store. It gives you high flexibility, since you can place error messages anywhere on the page.\n\nIn larger forms, the submit button may be far away from the error, so it's nice to show the user where the first error is. There are a couple of options for that:","code":"const { form, enhance, errors, allErrors } = superForm(data.form, {\n  errorSelector: string | undefined = '[aria-invalid=\"true\"],[data-invalid]',\n  scrollToError: 'auto' | 'smooth' | 'off' | boolean | ScrollIntoViewOptions = 'smooth',\n  autoFocusOnError: boolean | 'detect' = 'detect',\n  stickyNavbar: string | undefined = undefined,\n  customValidity: boolean = false\n})\n"},"189":{"title":"errorSelector","hash":"errorselector","url":"/concepts/error-handling","content":"This is the CSS selector used to locate the invalid input fields after form submission. The default is `[aria-invalid=\"true\"],[data-invalid]`, and the first one found in the form will be scrolled to and focused on, depending on the other settings. You usually set it on the input fields as such:","code":"<input\n  type=\"email\"\n  name=\"email\"\n  bind:value={$form.email}\n  aria-invalid={$errors.email ? 'true' : undefined} />\n"},"190":{"title":"scrollToError","hash":"scrolltoerror","url":"/concepts/error-handling","content":"The `scrollToError` option determines how to scroll to the first error message in the form. `smooth` and `auto` are values from Window.scroll. If the non-string options are used, Element.scrollIntoView will be called with the option. This is mostly used with nested scrollbars, in which case Window.scroll won't work.","code":""},"191":{"title":"autoFocusOnError","hash":"autofocusonerror","url":"/concepts/error-handling","content":"When `autoFocusOnError` is set to its default value `detect`, it checks if the user is on a mobile device; if not, it will automatically focus on the first error input field. It's prevented on mobile devices since focusing will open the on-screen keyboard, causing the viewport to shift, which could hide the validation error.","code":""},"192":{"title":"stickyNavbar","hash":"stickynavbar","url":"/concepts/error-handling","content":"If you have a sticky navbar, set its CSS selector here and it won't hide any errors due to its height and z-index.","code":""},"193":{"title":"customValidity","hash":"customvalidity","url":"/concepts/error-handling","content":"This option uses the Constraint Validation API to display validation errors. By enabling this, with use:enhance added to the form, instead of the standard messages, the Zod validation errors will now be displayed in the browser validation tooltip. Submit the following form without entering any data to see it in action:\n\n<CustomValidity {data} />\n\nSince validation is handled by Superforms, there is no need for spreading `$constraints` on the field. But the biggest win is that there is no need to display `$errors`, making for a minimal html:\n\n\n\nThe `name` attribute is required on the input fields. If you want to exclude a field from displaying the tooltip, add a `data-no-custom-validity` attribute to it.\n\nJust be aware that since `use:enhance` is needed, `customValidity` requires JavaScript to be enabled, unlike browser constraints.","code":"const { form, enhance } = superForm(data.form, {\n  customValidity: true,\n  // Not required, but will use client-side validation for real-time error display:\n  validators: schema\n});\n<input type=\"text\" name=\"name\" bind:value={$form.name} />\n"},"194":{"title":"Form-level and array errors","hash":"form-level-and-array-errors","url":"/concepts/error-handling","content":"It's possible to set form-level errors by refining the schema, which works better together with client-side validation, as errors added with setError won't persist longer than the first validation of the schema on the client.\n\n\n\nThese can be accessed on the client through `$errors?._errors`. The same goes for array errors, which in the above case can be accessed through `$errors.tags?._errors` (alternatively, use an arrayProxy).","code":"const refined = z.object({\n  tags: z.string().array().max(3)\n  password: z.string().min(8),\n  confirm: z.string().min(8)\n})\n.refine((data) => data.password == data.confirm, \"Passwords didn't match.\");\n"},"195":{"title":"Setting field errors with refine","hash":"setting-field-errors-with-refine","url":"/concepts/error-handling","content":"You may want to set the error on the password or the confirm field instead of a form-level error. In that case you can add a path to the Zod refine option:\n\n\n\nFor nested data, use multiple elements like `[\"user\", \"email\"]`, which corresponds to `user.email` in the schema.\n\nAs said, setting errors on the schema like this is preferred, but it may not always be possible. When you need to set errors after validation, use the setError function.\n\nIf you would like a message to persist until the next form submission regardless of validation, use a status message instead.","code":"const refined = z.object({\n  tags: z.string().array().max(3)\n  password: z.string().min(8),\n  confirm: z.string().min(8)\n})\n.refine((data) => data.password == data.confirm, {\n  message: \"Passwords didn't match\",\n  path: [\"confirm\"]\n});\n"},"196":{"title":"Listing errors","hash":"listing-errors","url":"/concepts/error-handling","content":"You may also want to list the errors above the form. The `$allErrors` store can be used for this. It's an array that contains all errors and their field names:\n\n\n\n`$allErrors.length` can also be useful to disable the submit button if there are any errors.","code":"{#if $allErrors.length}\n  <ul>\n    {#each $allErrors as error}\n      <li>\n        <b>{error.path}:</b>\n        {error.messages.join('. ')}\n      </li>\n    {/each}\n  </ul>\n{/if}\n"},"197":{"title":"Customizing error messages in the schema","hash":"customizing-error-messages-in-the-schema","url":"/concepts/error-handling","content":"Most methods in the validation schema has a parameter for a custom error message, so you can just add them there. For example with Zod:\n\n\n\nThis is also a good place for translation strings.","code":"const schema = z.object({\n  name: z.string().min(2, \"Name is too short.\"),\n  email: z.string().email(\"That's a strange email.\")\n});\n"},"198":{"title":"Test it out","hash":"test-it-out","url":"/concepts/error-handling","content":"This form has `aria-invalid` set on erroneous fields, and lists all errors on top of the form using `$allErrors`. Try to submit and see that the first error field gets focus automatically (unless on mobile).","code":""},"199":{"title":"Events","hash":"events","url":"/concepts/events","content":"/>\n\nA number of events give you full control over the submit process. They are triggered every time the form is submitted.\n\nEvents are only available when JavaScript is enabled in the browser and the custom use:enhance is added to the form.","code":""},"200":{"title":"Event flowchart","hash":"event-flowchart","url":"/concepts/events","content":"In a single-page application, or if client-side validation fails, the validation happens entirely on the client, instead of being returned from the server between `onSubmit` and `onResult`.","code":""},"201":{"title":"onSubmit","hash":"onsubmit","url":"/concepts/events","content":"The `onSubmit` event is the first one triggered, being essentially the same as SvelteKit's own `use:enhance` function. It gives you a chance to cancel the submission altogether. See the SvelteKit docs for most of the SubmitFunction signature. There are two extra properties in the Superforms `onSubmit` event:","code":"onSubmit: ({\n  action, formData, formElement, controller, submitter, cancel,\n  jsonData, validators\n}) => void;\n"},"202":{"title":"jsonData","hash":"jsondata","url":"/concepts/events","content":"If you're using nested data, the `formData` property cannot be used to modify the posted data, since `$form` is serialized and posted instead. If you want to post something else than `$form`, you can do it with the `jsonData` function:\n\n\n\nNote that if client-side validation is enabled, it's always `$form` that will be validated. Only if it passes validation, the data sent with `jsonData` will be used. It does not work in SPA mode either, as data transformation can be handled in `onUpdate` in that case.","code":"import { superForm, type FormPath } from 'sveltekit-superforms'\n\nconst { form, enhance, isTainted } = superForm(data.form, {\n  dataType: 'json',\n  onSubmit({ jsonData }) {\n    // Only post tainted (top-level) fields\n    const taintedData = Object.fromEntries(\n      Object.entries($form).filter(([key]) => {\n        return isTainted(key as FormPath<typeof $form>)\n      })\n    )\n    // Set data to be posted\n    jsonData(taintedData);\n  }\n});\n"},"203":{"title":"validators","hash":"validators","url":"/concepts/events","content":"For advanced validation, you can change client-side validators for the current form submission with this function.","code":"import { superForm } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { customSchema } from './schemas.js';\n\nlet step = 1;\nconst lastStep = 5;\n\nconst { form, enhance } = superForm(data.form, {\n  onSubmit({ validators }) {\n    if(step == 1) validators(zod(customSchema));\n    else if(step == lastStep) validators(false);\n  }\n});\n"},"204":{"title":"onResult","hash":"onresult","url":"/concepts/events","content":"If the submission isn't cancelled and client-side validation succeeds, the form is posted to the server. It then responds with a SvelteKit ActionResult, triggering the `onResult` event.\n\n`result` contains the ActionResult. You can modify it; changes will be applied further down the event chain. `formElement` is the `HTMLFormElement` of the form. `cancel()` is a function which will cancel the rest of the event chain and any form updates.\n\nIn most cases, you don't have to care about the `ActionResult`. To check if the form validation succeeded, use onUpdated, or onUpdate if you want to modify or cancel the result before it's displayed.","code":"onResult: ({ result, formElement, cancel }) => void\n"},"205":{"title":"Common usage","hash":"common-usage","url":"/concepts/events","content":"`onResult` is useful when you have set `applyAction = false` and still want to redirect, since the form doesn't do that automatically in that case. Then you can do:\n\n\n\nAlso, if `applyAction` is `false`, which means that `$page.status` won't update, you'll find the status code for the request in `result.status`.","code":"const { form, enhance } = superForm(data.form, {\n  applyAction: false,\n  onResult({ result }) {\n    if (result.type === 'redirect') {\n      goto(result.location);\n    }\n  }\n});\n"},"206":{"title":"onUpdate","hash":"onupdate","url":"/concepts/events","content":"The `onUpdate` event is triggered right before the form update is being applied, giving you the option to modify the validation result in `form`, or use `cancel()` to negate the update altogether. You also have access to the form's `HTMLFormElement` with `formElement`. \n\nIf your app is a single-page application, `onUpdate` is the most convenient to process the form data. See the SPA page for more details.\n\nThe `form` parameter is deliberately named \"form\", to avoid using the `$form` store, as changes to the form parameter are applied to `$form` and the other stores, when the event is completed.You can also access the `ActionResult` in `result`, which is narrowed to type `'success'` or `'failure'` here. You can use it together with the `FormResult` helper type to more conventiently access any additional form action data:","code":"onUpdate: ({ form, formElement, cancel, result }) => void\nimport { superForm, type FormResult } from 'sveltekit-superforms';\nimport type { ActionData, PageData } from './$types.js';\n\nexport let data: PageData;\n\nconst { form, errors, message, enhance } = superForm(data.form, {\n  onUpdate({ form, result }) {\n    const action = result.data as FormResult<ActionData>;\n    // If you've returned from the form action:\n    // return { form, extra: 123 }\n    if (form.valid && action.extra) {\n      // Do something with the extra data\n    }\n  }\n});\n"},"207":{"title":"onUpdated","hash":"onupdated","url":"/concepts/events","content":"If you just want to ensure that the form is validated and do something extra afterwards, like showing a toast notification, `onUpdated` is the easiest way.\n\nThe `form` parameter contains the validation result, and should be considered read-only here, since the stores have updated at this point.\n\nExample","code":"onUpdated: ({ form }) => void\nconst { form, enhance } = superForm(data.form, {\n  onUpdated({ form }) {\n    if (form.valid) {\n      // Successful post! Do some more client-side stuff,\n      // like showing a toast notification.\n      toast(form.message, { icon: '✅' });\n    }\n  }\n});\n"},"208":{"title":"onError","hash":"onerror","url":"/concepts/events","content":"When the SvelteKit error function is called on the server, you can use the `onError` event to catch it. `result` is the error ActionResult, with its `error` property:\n\n\n\nDepending on what kind of error occurs, it will have a different shape.\n\nError typeShapeExpected error`App.Error`Server exception`{ message: string }`JSON responseUnexpected JSON responses, such as from a proxy server, should be included in `App.Error` to be type-safe.Other responseIf a fetch fails, or HTML is returned for example, result.error will be of type `Error` (MDN), usually with a JSON parse error. It has a `message` property.In this simple example, the message store is set to the error message or a fallback:\n\n\n\nIf JSON is returned, the HTTP status code will be taken from its `status` property, instead of the default status `500` for unexpected errors.\n\nYou can also set `onError` to the string value `'apply'`, in which case the default SvelteKit error behaviour will be used, which is to render the nearest +error page, also wiping out the form. To avoid data loss even for non-JavaScript users, returning a status message instead of throwing an error is recommended.","code":"onError: (({ result }) => void) | 'apply'\nApp.Error | Error | { message: string }\nconst { form, enhance, message } = superForm(data.form, {\n  onError({ result }) {\n    $message = result.error.message || \"Unknown error\";\n  }\n});\n"},"209":{"title":"onChange","hash":"onchange","url":"/concepts/events","content":"The `onChange` event is not triggered when submitting, but every time `$form` is modified, both as a html event (when modified with `bind:value`) and programmatically (direct assignment to `$form`). \n\nThe event is a discriminated union that you can distinguish between using the `target` property:\n\n\n\nIf you want to handle all change events, you can access `event.paths` without distinguishing.","code":"const { form, errors, enhance } = superForm(data.form, {\n  onChange(event) {\n    if(event.target) {\n      // Form input event\n      console.log(\n        event.path, 'was changed with', event.target, \n        'in form', event.formElement\n      );\n    } else {\n      // Programmatic event\n      console.log('Fields updated:', event.paths)\n    }\n  }\n})\n"},"210":{"title":"File uploads","hash":"file-uploads","url":"/concepts/files","content":"/>\n\nFrom version 2, Superforms has full support for file uploads. For that, you need a schema that can validate files. Zod has this possibility:","code":"// NOTE: Import fail from Superforms, not from @sveltejs/kit!\nimport { superValidate, fail, message } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  image: z\n    .instanceof(File, { message: 'Please upload a file.'})\n    .refine((f) => f.size < 100_000, 'Max 100 kB upload size.')\n});\n\nexport const load = async () => {\n  return { \n    form: await superValidate(zod(schema))\n  }\n};\n\nexport const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) {\n      return fail(400, { form });\n    }\n\n    // TODO: Do something with the image\n    console.log(form.data.image);\n\n    return message(form, 'You have uploaded a valid file!');\n  }\n};\n"},"211":{"title":"Returning files in form actions","hash":"returning-files-in-form-actions","url":"/concepts/files","content":"Important: Because file objects cannot be serialized, you must return the form using `fail`, `message` or `setError` imported from Superforms:\n\n\n\nOtherwise, a `withFiles` helper function is required:\n\n\n\nThis will remove the file objects from the form data, so SvelteKit can serialize it properly.","code":"import { message, setError, fail } from 'sveltekit-superforms';\n\n// message, setError and the custom fail handles this automatically:\nif (!form.valid) return fail(400, { form });\nreturn message(form, 'Posted OK!');\nreturn setError(form, 'image', 'Could not process file.');\n// Importing the default fail\nimport { fail } from '@sveltejs/kit';\nimport { withFiles } from 'sveltekit-superforms';\n\n// With the @sveltejs/kit fail:\nif (!form.valid) {\n  return fail(400, withFiles({ form }));\n}\n\n// When returning just the form:\nreturn withFiles({ form })\n"},"212":{"title":"Examples","hash":"examples","url":"/concepts/files","content":"The recommended way to bind the file input to the form data is through a `fileProxy` or `filesProxy`, but you can also do it with an `on:input` handler. Here are examples for both, which also shows how to add client-side validation for files, which can save plenty of bandwidth!","code":""},"213":{"title":"Single file input","hash":"single-file-input","url":"/concepts/files","content":"The `as File` casting is needed since `null` is the value for \"no file\", so be aware that `$form.image` may be `null` even though the schema type says otherwise. If you want the upload to be optional, set the field to `nullable` and it will be type-safe.","code":"export const schema = z.object({\n  image: z\n    .instanceof(File, { message: 'Please upload a file.'})\n    .refine((f) => f.size < 100_000, 'Max 100 kB upload size.')\n});\n<script lang=\"ts\">\n  import { superForm, fileProxy } from 'sveltekit-superforms'\n  import { zodClient } from 'sveltekit-superforms/adapters'\n  import { schema } from './schema.js'\n\n  export let data;\n\n  const { form, enhance, errors } = superForm(data.form, {\n    validators: zodClient(schema)\n  })\n\n  const file = fileProxy(form, 'image')\n</script>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" use:enhance>\n  <input\n    type=\"file\"\n    name=\"image\"\n    accept=\"image/png, image/jpeg\"\n    bind:files={$file}\n  />\n  {#if $errors.image}<span>{$errors.image}</span>{/if}\n  <button>Submit</button>\n</form>\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms'\n  import { zodClient } from 'sveltekit-superforms/adapters'\n  import { schema } from './schema.js'\n\n  export let data;\n\n  const { form, enhance, errors } = superForm(data.form, {\n    validators: zodClient(schema)\n  })\n</script>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" use:enhance>\n  <input\n    type=\"file\"\n    name=\"image\"\n    accept=\"image/png, image/jpeg\"\n    on:input={(e) => ($form.image = e.currentTarget.files?.item(0) as File)}\n  />\n  {#if $errors.image}<span>{$errors.image}</span>{/if}\n  <button>Submit</button>\n</form>\n"},"214":{"title":"Multiple files","hash":"multiple-files","url":"/concepts/files","content":"We need an array to validate multiple files:\n\n\n\n\n\n\n\nAs there is no `bind:files` attribute on the input field, note that it cannot be hidden with an `{#if}` block. Use css instead to hide it.To use the file proxies in a component, `fileFieldProxy` and `filesFieldProxy` are available as a complement to `formFieldProxy`.","code":"const schema = z.object({\n  images: z\n    .instanceof(File, { message: 'Please upload a file.'})\n    .refine((f) => f.size < 100_000, 'Max 100 kB upload size.')\n    .array()\n});\n<script lang=\"ts\">\n  import { superForm, filesProxy } from 'sveltekit-superforms'\n  import { zodClient } from 'sveltekit-superforms/adapters'\n  import { schema } from './schema.js'\n\n  export let data;\n\n  const { form, enhance, errors } = superForm(data.form, {\n    validators: zodClient(schema)\n  })\n\n  const files = filesProxy(form, 'images');\n</script>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" use:enhance>\n  <input\n    type=\"file\"\n    multiple\n    name=\"images\"\n    accept=\"image/png, image/jpeg\"\n    bind:files={$files}\n  />\n  {#if $errors.images}<span>{$errors.images}</span>{/if}\n  <button>Submit</button>\n</form>\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms'\n  import { zodClient } from 'sveltekit-superforms/adapters'\n  import { schema } from './schema.js'\n\n  export let data;\n\n  const { form, enhance, errors } = superForm(data.form, {\n    validators: zodClient(schema)\n  })\n</script>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" use:enhance>\n  <input\n    type=\"file\"\n    multiple\n    name=\"images\"\n    accept=\"image/png, image/jpeg\"\n    on:input={(e) => ($form.images = Array.from(e.currentTarget.files ?? []))}\n  />\n  {#if $errors.images}<span>{$errors.images}</span>{/if}\n  <button>Submit</button>\n</form>\n"},"215":{"title":"Validating files manually","hash":"validating-files-manually","url":"/concepts/files","content":"If your validation library cannot validate files, you can obtain `FormData` from the request and extract the files from there, after validation:\n\n\n\nIf the file field isn't a part of the schema, but you still want errors for it, you can add an optional field to the schema with the same name, and use setError to set and display an error message.","code":"export const actions = {\n  default: async ({ request }) => {\n    const formData = await request.formData();\n    const form = await superValidate(formData, zod(schema));\n\n    if (!form.valid) return fail(400, withFiles({ form }));\n\n    const image = formData.get('image');\n    if (image instanceof File) {\n      // Validate and process the image.\n    }\n\n    return withFiles({ form });\n  }\n};\n"},"216":{"title":"Preventing file uploads","hash":"preventing-file-uploads","url":"/concepts/files","content":"To prevent file uploads, set the `{ allowFiles: false }` option in `superValidate`. This will set all files to `undefined`, so you don't have to use `withFiles`. \n\nThis will also happen if you have migrated from version 1 and defined SUPERFORMS_LEGACY. In that case, set `{ allowFiles: true }` to allow files.","code":""},"217":{"title":"Status messages","hash":"status-messages","url":"/concepts/messages","content":"/>\n\nA status message like \"Form posted\" can be displayed after submitting a form. The validation object contains a `message` store used for this:","code":""},"218":{"title":"Usage","hash":"usage","url":"/concepts/messages","content":"It is used to display the message on the client, like any other store:\n\n\n\nHowever, we need to send it from the server first. Using the `message` function makes this rather simple.","code":"const { form, message } = superForm(data.form);\n{#if $message}\n  <div class=\"message\">{$message}</div>\n{/if}\n"},"219":{"title":"The message helper","hash":"the-message-helper","url":"/concepts/messages","content":"You can return any type with the message, like an object, if you want to send more information than a string:\n\n\n\nSee right below for how to make this data strongly typed.\n\nA successful form action in SvelteKit can only return status code `200`, so the status option for `message` must be in the range `400-599`, otherwise `{ form }` will be returned with a status of `200`, no matter what the status option is set to.","code":"import { message, superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\nexport const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) {\n      // Will return fail(400, { form }) since form isn't valid\n      return message(form, 'Invalid form');\n    }\n\n    if (form.data.email.includes('spam')) {\n      // Will also return fail, since status is >= 400\n      // form.valid will also be set to false.\n      return message(form, 'No spam please', {\n        status: 403\n      });\n    }\n\n    // Just returns { form } with the message (and status code 200).\n    return message(form, 'Valid form!');\n  }\n};\nreturn message(form, { text: 'User created', id: newId })\n"},"220":{"title":"Strongly typed message","hash":"strongly-typed-message","url":"/concepts/messages","content":"The message is of type `any` by default, but you can type it using the `superValidate` type parameters:\n\n\n\nA string can be a bit limiting though; more realistically, there will be some kind of status for the form submission, so making a `Message` type can be useful for consistency.\n\n\n\nTo simplify this even further, if you have the same type for all status messages across the project, you can add a `Message` type to the `App.Superforms` namespace in src/app.d.ts, and it will be automatically set, no need for generic type parameters:\n\nsrc/app.d.ts\n\n\n\nsrc/routes/+page.svelte\n\n\n\nThough if you want to keep it simple with a string or the default `any`, you can use `$page.status` to style the message appropriately:","code":"import { type Infer, superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\n// Inferred schema type as first parameter, message type second\nconst form = await superValidate<Infer<typeof schema>, string>(event, zod(schema));\nimport { type Infer, superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\ntype Message = { status: 'error' | 'success' | 'warning'; text: string };\n\nconst form = await superValidate<Infer<typeof schema>, Message>(event, zod(schema));\ndeclare global {\n  namespace App {\n    // interface Error {}\n    // interface Locals {}\n    // interface PageData {}\n    // interface Platform {}\n    namespace Superforms {\n      type Message = {\n        type: 'error' | 'success', text: string\n      }\n    }\n  }\n}\n<script lang=\"ts\">\n  import type { PageData } from './$types.js';\n  export let data: PageData;\n\n  const { form, message } = superForm(data.form);\n</script>\n\n{#if $message}\n  <div \n    class:success={$message.status == 'success'} \n    class:error={$message.status == 'error'}\n  >\n    {$message.text}\n  </div>\n{/if}\n<script lang=\"ts\">\n  import { page } from '$app/stores';\n  import type { PageData } from './$types.js';\n\n  export let data: PageData;\n\n  const { form, message } = superForm(data.form);\n</script>\n\n{#if $message}\n  <div \n    class:success={$page.status == 200} \n    class:error={$page.status >= 400}\n  >\n    {$message}\n  </div>\n{/if}\n"},"221":{"title":"Using the message data programmatically","hash":"using-the-message-data-programmatically","url":"/concepts/messages","content":"If you return data that you want to use programmatically instead of just displaying it, like in a toast message, you can do that in the onUpdate or onUpdated event:\n\n\n\n\n\nThe difference between the two events is that you can modify and cancel the update in `onUpdate`, compared to `onUpdated`, where the form data, errors, etc have already updated, making it best for non-store-related things like displaying a toast.","code":"return message(form, { status: 'success', text: 'All went well' });\nconst { form, enhance } = superForm(data.form, {\n  onUpdated({ form }) {\n    if (form.message) {\n      // Display the message using a toast library\n      toast(form.message.text, {\n        icon: form.message.status == 'success' ? '✅' : '❌'\n      });\n    }\n  }\n});\n"},"222":{"title":"Limitations","hash":"limitations","url":"/concepts/messages","content":"Since there is no form data returned when redirecting, in that case the message will be lost. It's quite common to redirect after a successful post, so the `message` property isn't a general solution for displaying status messages.\n\nThe library sveltekit-flash-message is a complete solution that works with redirects, however. It can be directly integrated into Superforms, documented here.","code":""},"223":{"title":"Multiple forms on the same page","hash":"multiple-forms-on-the-same-page","url":"/concepts/multiple-forms","content":"/>\n\nSince there is only one `$page` store per route, multiple forms on the same page, like a register and login form, can cause problems since both form actions will update `$page.form`, possibly affecting the other form.\n\nWith Superforms, multiple forms on the same page are handled automatically if you are using `use:enhance`, and the forms have different schema types. When using the same schema for multiple forms, you need to set the `id` option:\n\n\n\nBy setting an id on the server, you'll ensure that only forms with the matching id on the client will react to the updates.\n\n\"Different schema types\" means \"different fields and types\", so just copying a schema and giving it a different variable name will still count as the same schema. The contents of the schemas have to differ.Here's an example of how to handle a login and registration form on the same page:\n\n+page.server.ts\n\n\n\nThe code above uses named form actions to determine which form was posted. On the client, you'll post to these different form actions for the respective form:\n\n+page.svelte\n\n\n\nNote that there is a separate `use:enhance` for each form - you cannot share the enhance action between forms.The above works well with forms that posts to a dedicated form action. But for more dynamic scenarios, let's say a database table where rows can be edited, the form id should correspond to the row id, and you'd want to communicate to the server which id was sent. This can be done by modifying the `$formId` store, to let the server know what `id` was posted, and what it should respond with.","code":"const form = await superValidate(zod(schema), {\n  id: string | undefined\n});\nimport { z } from 'zod';\nimport { fail } from '@sveltejs/kit';\nimport { message, superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\nconst loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8)\n});\n\nconst registerSchema = z.object({\n  email: z.string().email(),\n  password: z.string.min(8),\n  confirmPassword: z.string.min(8)\n});\n\nexport const load = async () => {\n  // Different schemas, no id required.\n  const loginForm = await superValidate(zod(loginSchema));\n  const registerForm = await superValidate(zod(registerSchema));\n\n  // Return them both\n  return { loginForm, registerForm };\n};\n\nexport const actions = {\n  login: async ({ request }) => {\n    const loginForm = await superValidate(request, zod(loginSchema));\n\n    if (!loginForm.valid) return fail(400, { loginForm });\n\n    // TODO: Login user\n    return message(loginForm, 'Login form submitted');\n  },\n\n  register: async ({ request }) => {\n    const registerForm = await superValidate(request, zod(registerSchema));\n\n    if (!registerForm.valid) return fail(400, { registerForm });\n\n    // TODO: Register user\n    return message(registerForm, 'Register form submitted');\n  }\n};\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms/client';\n  import type { PageData } from './$types.js';\n\n  export let data: PageData;\n\n  const { form, errors, enhance, message } = superForm(data.loginForm, {\n    resetForm: true\n  });\n\n  const {\n    form: registerForm,\n    errors: registerErrors,\n    enhance: registerEnhance,\n    message: registerMessage\n  } = superForm(data.registerForm, {\n    resetForm: true\n  });\n</script>\n\n{#if $message}<h3>{$message}</h3>{/if}\n\n<form method=\"POST\" action=\"?/login\" use:enhance>\n  E-mail: <input name=\"email\" type=\"email\" bind:value={$form.email} />\n  Password:\n  <input name=\"password\" type=\"password\" bind:value={$form.password} />\n  <button>Submit</button>\n</form>\n\n<hr />\n\n{#if $registerMessage}<h3>{$registerMessage}</h3>{/if}\n\n<form method=\"POST\" action=\"?/register\" use:registerEnhance>\n  E-mail: <input name=\"email\" type=\"email\" bind:value={$registerForm.email} />\n  Password:\n  <input name=\"password\" type=\"password\" bind:value={$registerForm.password} />\n  Confirm password:\n  <input\n    name=\"confirmPassword\"\n    type=\"password\"\n    bind:value={$registerForm.confirmPassword} />\n  <button>Submit</button>\n</form>\n"},"224":{"title":"Setting id on the client","hash":"setting-id-on-the-client","url":"/concepts/multiple-forms","content":"On the client, the id is picked up automatically when you pass `data.form` to `superForm`, so in general, you don't have to add it on the client.\n\n\n\nYou can also change the id dynamically with the `$formId` store, or set it directly in the form with the following method:","code":"// Default behavior: The id is sent along with the form data\n// sent from the load function.\nconst { form, enhance, formId } = superForm(data.loginForm);\n\n// In advanced cases, you can set the id as an option\n// and it will take precedence.\nconst { form, enhance, formId } = superForm(data.form, {\n  id: 'custom-id'\n});\n"},"225":{"title":"Without use:enhance","hash":"without-useenhance","url":"/concepts/multiple-forms","content":"Multiple forms also work without `use:enhance`, though in this case you must add a hidden form field called `__superform_id` with the `$formId` value:\n\n\n\nThis is also required if you're changing schemas in a form action, as can happen in multi-step forms.","code":"<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms/client';\n  import type { PageData } from './$types.js';\n\n  export let data: PageData;\n\n  const { form, errors, formId } = superForm(data.form);\n</script>\n\n<form method=\"POST\" action=\"?/login\">\n  <input type=\"hidden\" name=\"__superform_id\" bind:value={$formId} />\n</form>\n"},"226":{"title":"Configuration and troubleshooting","hash":"configuration-and-troubleshooting","url":"/concepts/multiple-forms","content":"Due to the many different use cases, it's hard to set sensible default options for multiple forms. A common issue is that when one form is submitted, the other forms' data are lost. This is due to the page being invalidated by default on a successful response.\n\nIf you want to preserve their data, you'd almost certainly want to set `invalidateAll: false` or `applyAction: false` on them, as in the example above. The use:enhance option explains the differences between them.\n\nAlso check out the componentization page for ideas on how to place the forms into separate components, to make `+page.svelte` less cluttered.","code":""},"227":{"title":"Test it out","hash":"test-it-out","url":"/concepts/multiple-forms","content":"Here we have two forms, with separate id's and their `invalidateAll` option set to `false`, to prevent page invalidation, which would otherwise clear the other form when the load function executes again.","code":""},"228":{"title":"Nested data","hash":"nested-data","url":"/concepts/nested-data","content":"/>\n\nHTML forms can only handle string values, and the `<form>` element cannot nest other forms, so there is no standardized way to represent a nested data structure or more complex values like dates. Fortunately, Superforms has a solution for this!","code":""},"229":{"title":"dataType","hash":"datatype","url":"/concepts/nested-data","content":"By simply setting `dataType` to `'json'`, you can store any data structure allowed by devalue in the `$form` store, and you don't have to worry about failed coercion, converting strings to objects and arrays, etc.\n\nYou don't even have to set a name on the form fields anymore, since the actual data in `$form` is now posted, not the input fields in the HTML. They are now simply UI components for modifying a data model (as they should be).\n\nWhen `dataType` is set to `'json'`, the `onSubmit` event will contain `FormData`, but it cannot be used to modify the posted data. You need to set or update `$form`, or in special cases, use jsonData in onSubmit.This also means that the `disabled` attribute, which normally prevents input fields from being submitted, will not have that effect. Everything in `$form` will be posted when `dataType` is set to `'json'`.Modifying the `form` store programmatically is easy, you can either assign `$form.field = ...` directly, which will taint the affected fields. If you want to prevent the form from being tainted, you can use `form.update` with an extra option:\n\n\n\nThe `taint` options are:\n\n\n\nWhich can be used to not only prevent tainting, but also untaint the modified field(s), or the whole form.","code":"form.update(\n  ($form) => {\n    $form.name = \"New name\";\n    return $form;\n  },\n  { taint: false }\n);\n{ taint: boolean | 'untaint' | 'untaint-form' }\n"},"230":{"title":"Requirements","hash":"requirements","url":"/concepts/nested-data","content":"The requirements for nested data to work are as follows:\n\n**JavaScript is enabled in the browser.**JavaScript is enabled in the browser.**The form has the Superforms [use:enhance](/concepts/enhance) applied.**The form has the Superforms use:enhance applied.","code":""},"231":{"title":"Nested errors and constraints","hash":"nested-errors-and-constraints","url":"/concepts/nested-data","content":"When your schema contains arrays or objects, you can access them through `$form` as an ordinary object. But how does it work with errors and constraints?\n\n`$errors` and `$constraints` actually mirror the `$form` data, but with every field or \"leaf\" in the object replaced with `string[]` and `InputConstraints` respectively.","code":""},"232":{"title":"Example","hash":"example","url":"/concepts/nested-data","content":"Given the following schema, which describes an array of tag objects:\n\n\n\nYou can build a HTML form for these tags using an `{#each}` loop:\n\n\n\nTake extra care with the optional chaining operator `?.`, it's easy to miss a question mark, which will lead to confusing errors.Note that we're using the index of the loop, so the value can be bound directly to `$form`. You can't use the each loop variable, hence the underscore. This is what it looks like:","code":"const schema = z.object({\n  tags: z\n    .object({\n      id: z.number().int().min(1),\n      name: z.string().min(2)\n    })\n    .array()\n});\n\nconst tags = [{ id: 1, name: 'test' }];\n\nexport const load = async () => {\n  const form = await superValidate({ tags }, zod(schema));\n  return { form };\n};\n<script lang=\"ts\">\n  const { form, errors, enhance } = superForm(data.form, {\n    dataType: 'json'\n  });\n</script>\n\n<form method=\"POST\" use:enhance>\n  {#each $form.tags as _, i}\n    <div>\n      Id\n      <input\n        type=\"number\"\n        data-invalid={$errors.tags?.[i]?.id}\n        bind:value={$form.tags[i].id} />\n      Name\n      <input\n        data-invalid={$errors.tags?.[i]?.name}\n        bind:value={$form.tags[i].name} />\n      {#if $errors.tags?.[i]?.id}\n        <br />\n        <span class=\"invalid\">{$errors.tags[i].id}</span>\n      {/if}\n      {#if $errors.tags?.[i]?.name}\n        <br />\n        <span class=\"invalid\">{$errors.tags[i].name}</span>\n      {/if}\n    </div>\n  {/each}\n  <button>Submit</button>\n</form>\n"},"233":{"title":"Arrays with primitive values","hash":"arrays-with-primitive-values","url":"/concepts/nested-data","content":"It's possible to post multiple HTML elements with the same name, so you don't have to use `dataType: 'json'` for arrays of primitive values like numbers and strings. Just add the input fields, all with the same name as the schema field, which can only be at the top level of the schema. Superforms will handle the type coercion to array automatically, as long as the fields have the same name attribute:\n\n\n\n\n\nTo summarize, the index `i` of the `#each` loop is used to access `$form.tags`, where the current values are (you cannot use the loop variable), and then the `name` attribute is set to the schema field `tags`, so its array will be populated when posted.\n\nThis example, having a `max(3)` limitation of the number of tags, also shows how to display array-level errors with the `$errors.tags._errors` field.","code":"export const schema = z.object({\n  tags: z.string().min(2).array().max(3)\n});\n<script lang=\"ts\">\n  const { form, errors } = superForm(data.form);\n</script>\n\n<form method=\"POST\">\n  <div>Tags</div>\n  {#if $errors.tags?._errors}\n    <div class=\"invalid\">{$errors.tags._errors}</div>\n  {/if}\n\n  {#each $form.tags as _, i}\n    <div>\n      <input name=\"tags\" bind:value={$form.tags[i]} />\n      {#if $errors.tags?.[i]}\n        <span class=\"invalid\">{$errors.tags[i]}</span>\n      {/if}\n    </div>\n  {/each}\n\n  <button>Submit</button>\n</form>\n"},"234":{"title":"Validation schemas and nested paths","hash":"validation-schemas-and-nested-paths","url":"/concepts/nested-data","content":"Validation libraries like Zod can refine the validation, the classic example is to check if two password fields are identical when updating a password. Usually there's a `path` specifier for setting errors on those fields in the refine function:\n\n\n\n  This works fine for top-level properties, but for nested data you must usually specify that path as an array, each segment in its own element, not as a string path as you can do in the `FormPathLeaves` type!","code":"const confirmPassword = z\n  .object({\n    password: z.string(),\n    confirm: z.string(),\n  })\n  .refine((data) => data.password === data.confirm, {\n    message: \"Passwords don't match\",\n    path: [\"confirm\"], // path of error\n  });\n// OK:\npath: ['form', 'tags', 3]\n// Will not work with Zod refine and superRefine:\npath ['form.tags[3]']\n"},"235":{"title":"Proxy objects","hash":"proxy-objects","url":"/concepts/proxy-objects","content":"/>\n\nSometimes you get a `string` value from an input field or third-party library, and want it to be automatically converted and updated with a non-string value in your schema. This is what proxies are for.\n\n\n\nThe usage for all of them is practically the same. You can use the form store, or the whole superForm as input, which allows you to set a `tainted` option, in case you don't want to taint the form when it updates.\n\n\n\nNow if you bind to `$idProxy` instead of `$form.id`, the value will be converted to and from an integer, and `$form.id` will be updated automatically.\n\nNote that this kind of conversion will usually happen automatically with `bind:value`. `intProxy` and `numberProxy` are rarely needed, as Svelte handles this automatically. But proxies may still be useful if you want to set the value to `undefined` or `null` when the value is falsy, in which case you can use the `empty` option.\n\nSee the API for more details and options for each kind of proxy.","code":"import {\n  // The primitives return a Writable<string>:\n  booleanProxy,\n  dateProxy,\n  intProxy,\n  numberProxy,\n  stringProxy,\n  // The type of the other three depends on the field:\n  formFieldProxy,\n  arrayProxy,\n  fieldProxy      \n} from 'sveltekit-superforms';\nimport { superForm, intProxy } from 'sveltekit-superforms';\n\n// Assume the following schema:\n// { id: number }\n\nconst superform = superForm(data.form);\nconst { form, errors, enhance } = superform;\n\n// Returns a Writable<string>\nconst idProxy = intProxy(form, 'id');\n\n// Use the whole superForm object to prevent tainting\nconst idProxy2 = intProxy(superform, 'id', { taint: false });\n"},"236":{"title":"Nested proxies","hash":"nested-proxies","url":"/concepts/proxy-objects","content":"You can use a proxy for nested data, like `'user.profile.email'`, in which case parent objects will be created if they don't exist.","code":""},"237":{"title":"Date input issues","hash":"date-input-issues","url":"/concepts/proxy-objects","content":"The `date` input type is a bit special. Its underlying data is a string in `yyyy-mm-dd` format, but the `dateProxy` returns an ISO date string as default, so you need to use the `format` option to return the date part only:\n\n\n\n\n\nWe're also taking using the `min` and `max` constraints to limit the date picker selection. The following example limits the date from today and forward, and also uses the empty option of the proxy, to set an invalid date to `undefined`:","code":"const proxyDate = dateProxy(form, 'date', { format: 'date' });\n<input\n  name=\"date\"\n  type=\"date\"\n  bind:value={$proxyDate}\n  aria-invalid={$errors.date ? 'true' : undefined}\n  {...$constraints.date}\n  min={$constraints.date?.min?.toString().slice(0, 10)}\n  max={$constraints.date?.max?.toString().slice(0, 10)}\n/>\n"},"238":{"title":"Snapshots","hash":"snapshots","url":"/concepts/snapshots","content":"/>\n\nA nice SvelteKit feature is snapshots, which saves and restores data when the user navigates on the site. This is perfect for saving the form state, and with Superforms, you can take advantage of this in one line of code, as an alternative to a tainted form message. Note that it only works for browser history navigation though.","code":""},"239":{"title":"Usage","hash":"usage","url":"/concepts/snapshots","content":"The export has to be on a `+page.svelte` page to work, it cannot be in a component.\n\nThe `options` object contains functions and cannot be serialized for a snapshot. If you modify the options dynamically, make a custom version of the methods to handle the changes.","code":"const { form, capture, restore } = superForm(data.form);\n\nexport const snapshot = { capture, restore };\n"},"240":{"title":"Test it out","hash":"test-it-out","url":"/concepts/snapshots","content":"Modify the form below without submitting, then click the browser back button and then forward again. The form should be restored to its intermediate state.","code":""},"241":{"title":"Single-page application (SPA) mode","hash":"single-page-application-spa-mode","url":"/concepts/spa","content":"/>","code":""},"242":{"title":"Single-page applications (SPA)","hash":"single-page-applications-spa","url":"/concepts/spa","content":"It's possible to use the whole Superforms library on the client, for example in single page applications or when you want to call an external API instead of the SvelteKit form actions. A SPA is easy to create with SvelteKit, documented here.","code":""},"243":{"title":"Usage","hash":"usage","url":"/concepts/spa","content":"By setting the `SPA` option to `true`, the form won't be sent to the server when submitted. Instead, the client-side validators option will determine if the form is valid, and you can then use the onUpdate event as a submit handler, for example to call an external API with the form data.\n\nRemember that the Superforms use:enhance must be added to the form for SPA to work.","code":"const { form, enhance } = superForm(data, {\n  SPA: true | { failStatus: number }\n  validators: false | ClientValidationAdapter<S>\n})\n"},"244":{"title":"Using +page.ts instead of +page.server.ts","hash":"using-pagets-instead-of-pageserverts","url":"/concepts/spa","content":"Since SPA pages don't have a server representation, you can use +page.ts to load initial data. Combined with a route parameter, we can make a CRUD-like page in a straightforward manner:\n\nsrc/routes/user/[id]/+page.ts\n\n\n\nIf no data should be loaded from `+page.ts`, read further down about the `defaults` function.","code":"import { error } from '@sveltejs/kit';\nimport { superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nexport const _userSchema = z.object({\n  id: z.number().int().positive(),\n  name: z.string().min(2),\n  email: z.string().email()\n});\n\nexport const load = async ({ params, fetch }) => {\n  const id = parseInt(params.id);\n\n  const request = await fetch(\n    `https://jsonplaceholder.typicode.com/users/${id}`\n  );\n  if (request.status >= 400) throw error(request.status);\n\n  const userData = await request.json();\n  const form = await superValidate(userData, zod(_userSchema));\n\n  return { form };\n};\n"},"245":{"title":"Displaying the form","hash":"displaying-the-form","url":"/concepts/spa","content":"We display the form in `+page.svelte` like before, but with the `SPA` option added, and the `onUpdate` event now being used to validate the form data, instead of on the server:\n\nsrc/routes/user/[id]/+page.svelte\n\n\n\nThe validation in `onUpdate` is almost the same as validating in a form action on the server. Nothing needs to be returned at the end since all modifications to the `form` parameter in `onUpdate` will update the form.\n\nOf course, since this validation is done on the client, it's easy to tamper with. See it as a convenient way of collecting the form data before doing a proper server validation through an external API.","code":"<script lang=\"ts\">\n  import { superForm, setMessage, setError } from 'sveltekit-superforms';\n  import { _userSchema } from './+page.js';\n  import { zod } from 'sveltekit-superforms/adapters';\n\n  export let data;\n\n  const { form, errors, message, constraints, enhance } = superForm(\n    data.form,\n    {\n      SPA: true,\n      validators: zod(_userSchema),\n      onUpdate({ form }) {\n        // Form validation\n        if (form.data.email.includes('spam')) {\n          setError(form, 'email', 'Suspicious email address.');\n        } else if (form.valid) {\n          // TODO: Call an external API with form.data, await the result and update form\n          setMessage(form, 'Valid data!');\n        }\n      }\n    }\n  );\n</script>\n\n<h1>Edit user</h1>\n\n{#if $message}<h3>{$message}</h3>{/if}\n\n<form method=\"POST\" use:enhance>\n  <label>\n    Name<br />\n    <input\n      aria-invalid={$errors.name ? 'true' : undefined}\n      bind:value={$form.name}\n      {...$constraints.name} />\n  </label>\n  {#if $errors.name}<span class=\"invalid\">{$errors.name}</span>{/if}\n\n  <label>\n    E-mail<br />\n    <input\n      type=\"email\"\n      aria-invalid={$errors.email ? 'true' : undefined}\n      bind:value={$form.email}\n      {...$constraints.email} />\n  </label>\n  {#if $errors.email}<span class=\"invalid\">{$errors.email}</span>{/if}\n\n  <button>Submit</button>\n</form>\n"},"246":{"title":"Without a +page.ts file","hash":"without-a-pagets-file","url":"/concepts/spa","content":"Since you can't use top-level await in Svelte components, you can't use `superValidate` directly in `+page.svelte`, as it is async. But if you want the default values only for the schema, you can import `defaults` to avoid having a `+page.ts`.","code":"<script lang=\"ts\">\n  import { superForm, defaults } from 'sveltekit-superforms';\n  import { zod } from 'sveltekit-superforms/adapters';\n  import { loginSchema } from '$lib/schemas';\n\n  const { form, errors, enhance } = superForm(defaults(zod(loginSchema)), {\n    SPA: true,\n    validators: zod(loginSchema),\n    onUpdate({ form }) {\n      if (form.valid) {\n        // TODO: Call an external API with form.data, await the result and update form\n      }\n    }\n  });\n</script>\n"},"247":{"title":"With initial top-level data","hash":"with-initial-top-level-data","url":"/concepts/spa","content":"If you have initial data in the top level of the component, you can pass it as a first parameter to `defaults`, but remember that it won't be validated. There's a trick though; if you want to show errors for the initial data, you can call `validateForm` directly after `superForm`. The `validators` option must be set for this to work:","code":"const initialData = { name: 'New user' };\n\nconst { form, errors, enhance, validateForm } = superForm(\n  defaults(initialData, zod(loginSchema)), {\n    SPA: true,\n    validators: zod(loginSchema)\n    // ...\n  }\n);\n\nvalidateForm({ update: true });\n"},"248":{"title":"SPA action form","hash":"spa-action-form","url":"/concepts/spa","content":"Sometimes you want a fetch function for a form field or a list of items, for example checking if a username is valid while entering it, or deleting rows in a list of data. Instead of doing this manually with fetch, which cannot take advantage of Superforms' loading timers, events and other functionality, you can create a \"SPA action form\", a hidden form that does most of the work, with the convenience you get from `superForm`:\n\n\n\nA SPA action form takes a `SuperValidated` object as usual as the first parameter, or you can specify default values directly as in the example. Then you specify the form action URL in the `SPA` option, and you have a hidden form that you can populate in the `onSubmit` event, or its `enhance` method can be used on any number of forms on the page (one for each row in a list of data).\n\nAs you'd usually want no page updates for this, a SPA action form has invalidateAll and applyAction set to false as default, but it can be changed with the `superForm` options as usual.Create a form action for it:\n\n\n\nAnd finally, an `on:input` event on the input field:\n\n\n\nA full example of a username check is available on SvelteLab.","code":"const { submitting, submit } = superForm(\n  { username: '' },\n  {\n    SPA: '?/check',\n    onSubmit({ cancel, formData }) {\n      if (!$form.username) cancel();\n      formData.set('username', $form.username);\n    },\n    onUpdated({ form }) {\n      $errors.username = form.errors.username;\n    }\n  }\n);\n\nconst checkUsername = debounce(300, submit);\nconst usernameSchema = fullSchema.pick({ username: true });\n\nexport const actions: Actions = {\n  check: async ({ request }) => {\n    const form = await superValidate(request, zod(usernameSchema));\n\n    if (!form.valid) return fail(400, { form });\n    \n    if(!checkUsername(form.data.username)) {\n      setError(form, 'username', 'Username is already taken.');\n    }\n\n    return { form };\n  }\n};\n<input\n  name=\"username\"\n  aria-invalid={$errors.username ? 'true' : undefined}\n  bind:value={$form.username}\n  on:input={checkUsername}\n/>\n{#if $submitting}<img src={spinner} alt=\"Checking availability\" />\n{:else if $errors.username}<div class=\"invalid\">{$errors.username}</div>{/if}\n"},"249":{"title":"Strict mode","hash":"strict-mode","url":"/concepts/strict-mode","content":"/>\n\nSuperforms is quite forgiving with missing fields in the posted data. The assumption is that if you add a field to a schema, it will sooner or later be added to the form, so the default value is applied to all missing schema fields.\n\nBut you may want to be more strict and assert that the input data must exist, otherwise something is wrong. For that, you can use strict mode when calling `superValidate`:\n\n\n\nNow the following will be true:\n\nAny missing **required** field will be reported as an error.Any missing required field will be reported as an error.Errors will be displayed as default (can be changed with the `errors` option).Errors will be displayed as default (can be changed with the `errors` option).\n\nAs checkboxes aren't posted unless checked, they will fail validation in strict mode unless you add an empty hidden field for the checkbox, signifying `false`.","code":"const form = await superValidate(request, zod(schema), { strict: true });\n"},"250":{"title":"Catch-all schema","hash":"catch-all-schema","url":"/concepts/strict-mode","content":"Some validation libraries have a \"catch-all\" feature, allowing extra fields to be posted and validated. Here's an example of how to use it with Zod:","code":"import { superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().min(1)\n})\n.catchall(z.number().int()); // All unknown fields should be integers\n\nexport const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) {\n      return fail(400, { form });\n    }\n\n    // Typed as string, as expected\n    console.log(form.data.name);\n    // All other keys are typed as number\n    console.log(form.data.first, form.data.second);\n\n    return { form };\n  }\n};\n"},"251":{"title":"Submit behavior","hash":"submit-behavior","url":"/concepts/submit-behavior","content":"/>\n\nWhen a form is submitted, it's important for the UX to show that things are happening on the server. Superforms provides you with loading timers and the following options for handling this:","code":""},"252":{"title":"clearOnSubmit","hash":"clearonsubmit","url":"/concepts/submit-behavior","content":"The `clearOnSubmit` option decides what should happen to the form when submitting. It can clear the status message, all the errors, both, or none. The default is to clear the message.\n\nIf you don't want any jumping content, which could occur when errors and messages are removed from the DOM, setting it to `none` can be useful.","code":""},"253":{"title":"multipleSubmits","hash":"multiplesubmits","url":"/concepts/submit-behavior","content":"This one handles the occurence of multiple form submissions, before a result has been returned.\n\nWhen set to the default `prevent`, the form cannot be submitted again until a result is returned, or the `timeout` state is reached (see the section about [loading timers](/concepts/timers)).When set to the default `prevent`, the form cannot be submitted again until a result is returned, or the `timeout` state is reached (see the section about loading timers).`abort` is the next sensible approach, which will cancel the previous request before submitting again.`abort` is the next sensible approach, which will cancel the previous request before submitting again.Finally, `allow` will pass through any number of frenetic clicks on the submit button!Finally, `allow` will pass through any number of frenetic clicks on the submit button!","code":""},"254":{"title":"Loading timers","hash":"loading-timers","url":"/concepts/timers","content":"/>\n\nIt's important that users understand that things are happening when they submit a form. Loading timers can be used to provide feedback when there is a server response delay, for example by displaying a loading spinner icon.","code":""},"255":{"title":"Usage","hash":"usage","url":"/concepts/timers","content":"`delayMs` should be positive and always smaller than or equal to `timeoutMs`, otherwise the timer behavior will be undefined. And of course, the Superforms use:enhance must be added to the form element, since this is client-side behavior.","code":"const { form, enhance, submitting, delayed, timeout } = superForm(data.form, {\n  delayMs?: 500\n  timeoutMs?: 8000\n})\n"},"256":{"title":"Submit state","hash":"submit-state","url":"/concepts/timers","content":"After a certain time when the form is submitted, determined by `delayMs` and `timeoutMs`, the timers changes state. The states are:\n\nThese states affect the readable stores `submitting`, `delayed` and `timeout`, returned from `superForm`. They are not mutually exclusive, so `submitting` won't change to `false` when `delayed` becomes `true`.","code":""},"257":{"title":"Loading indicators","hash":"loading-indicators","url":"/concepts/timers","content":"A perfect use for these timers is to show a loading indicator while the form is submitting:\n\nsrc/routes/+page.svelte\n\n\n\nThe reason for using `delayed` instead of `submitting` is based on the article Response Times: The 3 Important Limits, which states that for short waiting periods, no feedback is required except to display the result. Therefore, `delayed` is used to show a loading indicator after a little while, not instantly.","code":"<script lang=\"ts\">\n  const { form, errors, enhance, delayed } = superForm(data.form);\n  import spinner from '$lib/assets/spinner.svg';\n</script>\n\n<form method=\"POST\" use:enhance>\n  <button>Submit</button>\n  {#if $delayed}<img src={spinner} />{/if}\n</form>\n"},"258":{"title":"Visualizing the timers","hash":"visualizing-the-timers","url":"/concepts/timers","content":"Submit the following form and play around with the different settings. Different loading spinners are set to display when `delayed` and `timeout` are true respectively. \n\nThe default multipleSubmits setting prevents the form from being submitted multiple times, until the `timeout` state is reached. Click multiple times to see the effect of that.\n\nBy experimenting with the timers and the delay between them, it's certainly possible to prevent the feeling of unresponsiveness.","code":""},"259":{"title":"Tainted fields","hash":"tainted-fields","url":"/concepts/tainted","content":"/>\n\nWhen the form data is modified, through modifying `$form`, the modified data (and in turn the form), is considered tainted, also known as \"dirty\" in other form libraries.\n\nA Superforms feature is to prevent the user from losing data when navigating away from a tainted form.","code":""},"260":{"title":"Usage","hash":"usage","url":"/concepts/tainted","content":"You can set the option to `true` to have a default message (in english) shown when navigating away from a tainted form, or set your own message with a `string` value. Note that this message will only be displayed when navigating to a page within the same site. When closing the tab or reloading the page, a browser default message will be shown instead.\n\nAlternatively, you can set `taintedMessage` to a `() => Promise<boolean>` function that should resolve to `true` if navigating away is ok. This enables you to provide your own dialog:\n\n\n\nThe code demonstrates the custom dialog with a Skeleton modal. Try it out below! Modify the form, then click the back button. A modal should pop up, preventing you from losing the changes:","code":"const { form, enhance } = superForm(data.form, {\n  taintedMessage: string | (() => Promise<boolean>) | boolean = false\n})\nconst { form, enhance } = superForm(data.form, {\n  taintedMessage: () => {\n    return new Promise((resolve) => {\n      modalStore.trigger({\n        type: 'confirm',\n        title: 'Do you want to leave?',\n        body: 'Changes you made may not be saved.',\n        response: resolve\n      });\n    });\n  }\n});\n"},"261":{"title":"Untainting the form","hash":"untainting-the-form","url":"/concepts/tainted","content":"When a successful validation result is returned for the form, with a `valid` status set to `true`, the form is automatically marked as untainted.\n\nTry that by posting the form with valid values. The tainted message should not appear when browsing away from the page.","code":""},"262":{"title":"Check if the form is tainted","hash":"check-if-the-form-is-tainted","url":"/concepts/tainted","content":"An `isTainted` method is available on `superForm`, to check whether any part of the form is tainted:","code":"<script lang=\"ts\">\n  const { form, enhance, tainted, isTainted } = superForm(form.data);\n\n  // Check the whole form\n  if(isTainted()) {\n    console.log('The form is tainted')\n  }\n\n  // Check a part of the form\n  if(isTainted('name')) {\n    console.log('The name field is tainted')\n  }\n</script>\n\n<!-- Make the function reactive by passing the $tainted store -->\n<button disabled={!isTainted($tainted)}>Submit</button>\n\n<!-- It even works with individual fields -->\n<button disabled={!isTainted($tainted.name)}>Submit name</button>\n"},"263":{"title":"Preventing tainting the form","hash":"preventing-tainting-the-form","url":"/concepts/tainted","content":"If you want to modify the `form` store without tainting any fields, you can update it with an extra option:\n\n\n\nThe `taint` options are:\n\n\n\nWhich can be used to not only prevent tainting, but also untaint the modified field(s), or untainting the whole form.\n\nFor login and registration forms, password managers could automatically taint the form when inserting saved usernames and passwords.","code":"const { form } = superForm(data.form);\n\nform.update(\n  ($form) => {\n    $form.name = \"New name\";\n    return $form;\n  },\n  { taint: false }\n);\n{ taint: boolean | 'untaint' | 'untaint-form' }\n"},"264":{"title":"Get started - Tutorial for Superforms","hash":"get-started---tutorial-for-superforms","url":"/get-started/[...lib]","content":"/>","code":""},"265":{"title":"Get started","hash":"get-started","url":"/get-started/[...lib]","content":"Select your environment above and run the install command in your project folder.\n\nIf you're starting from scratch, create a new SvelteKit project: \n\n{#if $settings.pm == 'npm i -D'}{:else if $settings.pm == 'pnpm i -D'}{:else if $settings.pm == 'yarn add --dev'}{/if}\n\n{#if ['', 'ajv', 'superstruct', 'n/a'].includes($settings.lib)}\n\nPlease select a validation library above before continuing, as the tutorial changes depending on that.{/if}","code":"npm create svelte@latest\npnpm create svelte@latest\nyarn create svelte@latest\n"},"266":{"title":"Creating a Superform","hash":"creating-a-superform","url":"/get-started/[...lib]","content":"This tutorial will create a Superform containing a name and an email address, ready to be expanded with more form data.","code":""},"267":{"title":"Creating a validation schema","hash":"creating-a-validation-schema","url":"/get-started/[...lib]","content":"The main thing required to create a Superform is a validation schema, representing the form data for a single form.\n\n{#if $settings.lib == 'arktype'}{:else if $settings.lib == 'joi'}{:else if $settings.lib == 'json-schema'}{:else if $settings.lib == '@sinclair/typebox'}{:else if $settings.lib == 'valibot'}{:else if $settings.lib == '@vinejs/vine'}{:else if $settings.lib == 'yup'}{:else if $settings.lib == 'zod'}{:else}\n\nSelect a validation library at the top of the page to see the example code.{/if}","code":"import { type } from 'arktype';\n\nconst schema = type({\n  name: 'string',\n  email: 'email'\n});\nimport Joi from 'joi';\n\nconst schema = Joi.object({\n  name: Joi.string().default('Hello world!'),\n  email: Joi.string().email().required()\n});\nimport type { JSONSchema } from 'sveltekit-superforms';\n\nexport const schema = {\n  type: 'object',\n  properties: {\n    name: { type: 'string', minLength: 2, default: 'Hello world!' },\n    email: { type: 'string', format: 'email' }\n  },\n  required: ['name', 'email'],\n  additionalProperties: false,\n  $schema: 'http://json-schema.org/draft-07/schema#'\n} as const satisfies JSONSchema; // Define as const to get type inference\nimport { Type } from '@sinclair/typebox';\n\nconst schema = Type.Object({\n  name: Type.String({ default: 'Hello world!' }),\n  email: Type.String({ format: 'email' }),\n});\nimport { object, string, email, optional } from 'valibot';\n\nconst schema = object({\n  name: optional(string(), 'Hello world!'),\n  email: string([email()]),\n});\nimport Vine from '@vinejs/vine';\n\nconst schema = Vine.object({\n  name: Vine.string(),\n  email: Vine.string().email()\n});\nimport { object, string } from 'yup';\n\nconst schema = object({\n  name: string().default('Hello world!'),\n  email: string().email().required(),\n});\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().default('Hello world!'),\n  email: z.string().email()\n});\n"},"268":{"title":"Schema caching","hash":"schema-caching","url":"/get-started/[...lib]","content":"The schema should be defined outside the load function, in this case on the top level of the module. This is very important to make caching work. The adapter is memoized (cached) with its arguments, so they must be kept in memory. Therefore, define the schema, its options and eventual defaults on the top level of a module, so they always refer to the same object.","code":""},"269":{"title":"Initializing the form in the load function","hash":"initializing-the-form-in-the-load-function","url":"/get-started/[...lib]","content":"To initialize the form, you import an adapter corresponding to your library of choice, together with the schema, and pass it in a load function to the `superValidate` function:\n\nsrc/routes/+page.server.ts\n\n{#if $settings.lib == 'arktype'}{:else if $settings.lib == 'joi'}{:else if $settings.lib == 'json-schema'}{:else if $settings.lib == '@sinclair/typebox'}{:else if $settings.lib == 'valibot'}{:else if $settings.lib == '@vinejs/vine'}{:else if $settings.lib == 'yup'}{:else if $settings.lib == 'zod'}{:else}\n\nSelect a validation library at the top of the page to see the example code.{/if}\n\nThe Superform server API is called `superValidate`. You can call it in two ways in the load function:","code":"import { superValidate } from 'sveltekit-superforms';\nimport { arktype } from 'sveltekit-superforms/adapters';\nimport { type } from 'arktype';\n\n// Define outside the load function so the adapter can be cached\nconst schema = type({\n  name: 'string',\n  email: 'email'\n});\n\n// Defaults should also be defined outside the load function\nconst defaults = { name: 'Hello world!', email: '' }\n\nexport const load = (async () => {\n  // Arktype requires explicit default values for now\n  const form = await superValidate(arktype(schema, { defaults }));\n\n  // Always return { form } in load functions\n  return { form };\n});\nimport { superValidate } from 'sveltekit-superforms';\nimport { joi } from 'sveltekit-superforms/adapters';\nimport Joi from 'joi';\n\n// Define outside the load function so the adapter can be cached\nconst schema = Joi.object({\n  name: Joi.string().default('Hello world!'),\n  email: Joi.string().email().required()\n});\n\nexport const load = (async () => {\n  const form = await superValidate(joi(schema));\n\n  // Always return { form } in load functions\n  return { form };\n});\nimport { superValidate, type JSONSchema } from 'sveltekit-superforms';\nimport { schemasafe } from 'sveltekit-superforms/adapters';\n\nexport const schema = {\n  type: 'object',\n  properties: {\n    name: { type: 'string', minLength: 2, default: 'Hello world!' },\n    email: { type: 'string', format: 'email' }\n  },\n  required: ['name', 'email'],\n  additionalProperties: false,\n  $schema: 'http://json-schema.org/draft-07/schema#'\n} as const satisfies JSONSchema;\n\nexport const load = (async () => {\n  // The adapter must be defined before superValidate for JSON Schema.\n  const adapter = schemasafe(schema);\n  const form = await superValidate(request, adapter);\n\n  // Always return { form } in load functions\n  return { form };\n});\nimport { superValidate } from 'sveltekit-superforms';\nimport { typebox } from 'sveltekit-superforms/adapters';\nimport { Type } from '@sinclair/typebox';\n\n// Define outside the load function so the adapter can be cached\nconst schema = Type.Object({\n  name: Type.String({ default: 'Hello world!' }),\n  email: Type.String({ format: 'email' }),\n});\n\nexport const load = (async () => {\n  const form = await superValidate(typebox(schema));\n\n  // Always return { form } in load functions\n  return { form };\n});\nimport { superValidate } from 'sveltekit-superforms';\nimport { valibot } from 'sveltekit-superforms/adapters';\nimport { object, string, email, optional } from 'valibot';\n\n// Define outside the load function so the adapter can be cached\nconst schema = object({\n  name: optional(string(), 'Hello world!'),\n  email: string([email()]),\n});\n\nexport const load = (async () => {\n  const form = await superValidate(valibot(schema));\n\n  // Always return { form } in load functions\n  return { form };\n});\nimport { superValidate } from 'sveltekit-superforms';\nimport { vine } from 'sveltekit-superforms/adapters';\nimport Vine from '@vinejs/vine';\n\nconst schema = Vine.object({\n  name: Vine.string(),\n  email: Vine.string().email()\n});\n\n// Defaults should also be defined outside the load function\nconst defaults = { name: 'Hello world!', email: '' }\n\nexport const load = (async () => {\n  const form = await superValidate(vine(schema, { defaults }));\n\n  // Always return { form } in load functions\n  return { form };\n});\nimport { superValidate } from 'sveltekit-superforms';\nimport { yup } from 'sveltekit-superforms/adapters';\nimport { object, string } from 'yup';\n\n// Define outside the load function so the adapter can be cached\nconst schema = object({\n  name: string().default('Hello world!'),\n  email: string().email().required(),\n});\n\nexport const load = (async () => {\n  const form = await superValidate(yup(schema));\n\n  // Always return { form } in load functions\n  return { form };\n});\nimport { superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\n// Define outside the load function so the adapter can be cached\nconst schema = z.object({\n  name: z.string().default('Hello world!'),\n  email: z.string().email()\n});\n\nexport const load = (async () => {\n  const form = await superValidate(zod(schema));\n\n  // Always return { form } in load functions\n  return { form };\n});\n"},"270":{"title":"Empty form","hash":"empty-form","url":"/get-started/[...lib]","content":"If you want the form to be initially empty, just pass the adapter as in the example above, and the form will be filled with default values based on the schema. For example, a `string` field results in an empty string, unless you have set a default.","code":""},"271":{"title":"Populate form from database","hash":"populate-form-from-database","url":"/get-started/[...lib]","content":"If you want to populate the form, you can send data to `superValidate` as the first parameter, adapter second, like this:\n\n\n\nAs long as the data partially matches the schema, you can pass it directly to `superValidate`. This is useful for backend interfaces, where the form should usually be populated based on a url like `/users/123`.\n\nErrors will be automatically displayed when the form is populated like this, but not when empty. You can modify this behavior with an option.","code":"import { error } from '@sveltejs/kit';\n\nexport const load = async ({ params }) => {\n  // Replace with your database\n  const user = db.users.findUnique({\n    where: { id: params.id }\n  });\n\n  if (!user) error(404, 'Not found');\n\n  const form = await superValidate(user, your_adapter(schema));\n\n  // Always return { form } in load functions\n  return { form };\n};\n"},"272":{"title":"Important note about return values","hash":"important-note-about-return-values","url":"/get-started/[...lib]","content":"Unless you call the SvelteKit `redirect` or `error` functions, you should always return the form object to the client, either directly or through a helper function. The name of the variable doesn't matter; you can call it `{ loginForm }` or anything else, but it needs to be returned like this in all code paths that returns, both in load functions and form actions.","code":""},"273":{"title":"Displaying the form","hash":"displaying-the-form","url":"/get-started/[...lib]","content":"The `superValidate` function returns the data required to instantiate a form on the client, now available in `+page.svelte` as `data.form` (as we did a `return { form }`). There, we'll use the client part of the API:\n\nsrc/routes/+page.svelte\n\n\n\nThe `superForm` function is used to create a form on the client, and `bind:value` is used to create a two-way binding between the form data and the input fields.\n\nTwo notes: There should be only one `superForm` instance per form - its methods cannot be used in multiple forms. And don't forget the `name` attribute on the input fields! Unless you are using nested data, they are required.This is what the form should look like now:","code":"<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms';\n\n  export let data;\n\n  // Client API:\n  const { form } = superForm(data.form);\n</script>\n\n<form method=\"POST\">\n  <label for=\"name\">Name</label>\n  <input type=\"text\" name=\"name\" bind:value={$form.name} />\n\n  <label for=\"email\">E-mail</label>\n  <input type=\"email\" name=\"email\" bind:value={$form.email} />\n\n  <div><button>Submit</button></div>\n</form>\n"},"274":{"title":"Debugging","hash":"debugging","url":"/get-started/[...lib]","content":"We can see that the form has been populated with the default values. But let's add the debugging component SuperDebug to look behind the scenes:\n\nsrc/routes/+page.svelte\n\n\n\nThis should be displayed:\n\nWhen editing the form fields (try in the form above), the data is automatically updated. The component also displays a copy button and the current page status in the right corner. There are many configuration options available.","code":"<script lang=\"ts\">\n  import SuperDebug from 'sveltekit-superforms';\n</script>\n\n<SuperDebug data={$form} />\n"},"275":{"title":"Posting data","hash":"posting-data","url":"/get-started/[...lib]","content":"In the form actions, defined in `+page.server.ts`, we'll use the `superValidate` function again, but now it should handle `FormData`. This can be done in several ways:\n\nUse the `request` parameter (which contains `FormData`)Use the `request` parameter (which contains `FormData`)Use the `event` object (which contains the request)Use the `event` object (which contains the request)Use `FormData` directly, if you need to access it before calling `superValidate`.Use `FormData` directly, if you need to access it before calling `superValidate`.\n\nThe most common is to use `request`:\n\nsrc/routes/+page.server.ts\n\n{#if $settings.lib == 'json-schema'}{:else}{/if}\n\nNow we can post the form back to the server. Submit the form, and see what's happening on the server:\n\n\n\nThis is the validation object returned from `superValidate`, containing the data needed to update the form:\n\nPropertyPurposeidId for the schema, to handle multiple forms on the same page.validTells you whether the validation succeeded or not. Used on the server and in events.postedTells you if the data was posted (in a form action) or not (in a load function).dataThe posted data, which should be returned to the client using `fail` if not valid.errorsAn object with all validation errors, in a structure reflecting the data.message(optional) Can be set as a status message.There are some other properties as well, only being sent in the load function:\n\nPropertyPurposeconstraintsAn object with HTML validation constraints, that can be spread on input fields.shapeUsed internally in error handling.You can modify any of these, and they will be updated on the client when you `return { form }`. There are a couple of helper functions for making this more convenient, like message and setError.","code":"import { message } from 'sveltekit-superforms';\nimport { fail } from '@sveltejs/kit';\n\nexport const actions = {\n  default: async ({ request }) => {\n    // The adapter must be defined before superValidate for JSON Schema.\n    const adapter = schemasafe(schema);\n    const form = await superValidate(request, adapter);\n\n    console.log(form);\n\n    if (!form.valid) {\n      // Again, return { form } and things will just work.\n      return fail(400, { form });\n    }\n\n    // TODO: Do something with the validated form.data\n\n    // Display a success status message\n    return message(form, 'Form posted successfully!');\n  }\n};\nimport { message } from 'sveltekit-superforms';\nimport { fail } from '@sveltejs/kit';\n\nexport const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, your_adapter(schema));\n    console.log(form);\n\n    if (!form.valid) {\n      // Again, return { form } and things will just work.\n      return fail(400, { form });\n    }\n\n    // TODO: Do something with the validated form.data\n\n    // Display a success status message\n    return message(form, 'Form posted successfully!');\n  }\n};\n{\n  id: 'a3g9kke',\n  valid: false,\n  posted: true,\n  data: { name: 'Hello world!', email: '' },\n  errors: { email: [ 'Invalid email' ] }\n}\n"},"276":{"title":"Displaying errors","hash":"displaying-errors","url":"/get-started/[...lib]","content":"Now we know that validation has failed and there are errors being sent to the client. We display these by adding properties to the destructuring assignment of `superForm`:\n\nsrc/routes/+page.svelte\n\n\n\nAs you see, by including `errors`, we can display errors where it's appropriate, and through `constraints` (provided by the load function), we get browser validation even without JavaScript enabled. The `aria-invalid` attribute is used to automatically focus on the first error field. And finally, we added a status message above the form to show if it was posted successfully.\n\nWe now have a fully working form, with convenient handling of data and validation both on the client and server!\n\nThere are no hidden DOM manipulations or other secrets; it's just HTML attributes and Svelte stores, so it works with server-side rendering. No JavaScript is required for the basics.","code":"<script lang=\"ts\">\n  const { form, errors, constraints, message } = superForm(data.form);\n  //            ^^^^^^  ^^^^^^^^^^^  ^^^^^^^\n</script>\n\n{#if $message}<h3>{$message}</h3>{/if}\n\n<form method=\"POST\">\n  <label for=\"name\">Name</label>\n  <input\n    type=\"text\"\n    name=\"name\"\n    aria-invalid={$errors.name ? 'true' : undefined}\n    bind:value={$form.name}\n    {...$constraints.name} \n  />\n  {#if $errors.name}<span class=\"invalid\">{$errors.name}</span>{/if}\n\n  <label for=\"email\">E-mail</label>\n  <input\n    type=\"email\"\n    name=\"email\"\n    aria-invalid={$errors.email ? 'true' : undefined}\n    bind:value={$form.email}\n    {...$constraints.email} \n  />\n  {#if $errors.email}<span class=\"invalid\">{$errors.email}</span>{/if}\n\n  <div><button>Submit</button></div>\n</form>\n\n<style>\n  .invalid {\n    color: red;\n  }\n</style>\n"},"277":{"title":"Adding progressive enhancement","hash":"adding-progressive-enhancement","url":"/get-started/[...lib]","content":"As a last step, let's add progressive enhancement, so users with JavaScript enabled will have a nicer experience. It's also required to enable client-side validation and events, and of course to avoid reloading the page when the form is posted.\n\nThis is simply done with `enhance`, returned from `superForm`:\n\n\n\nNow the page won't fully reload when submitting, and we unlock lots of client-side features like timers for loading spinners, auto error focus, tainted fields, etc, which you can read about under the Concepts section in the navigation.\n\nThe `use:enhance` action takes no arguments; instead, events are used to hook into the SvelteKit use:enhance parameters and more. Check out the events page for details.","code":"<script lang=\"ts\">\n  const { form, errors, constraints, message, enhance } = superForm(data.form);\n  //                                          ^^^^^^^\n</script>\n\n<!-- Add to the form element: -->\n<form method=\"POST\" use:enhance>\n"},"278":{"title":"Next steps","hash":"next-steps","url":"/get-started/[...lib]","content":"This concludes the tutorial! To learn the details, keep reading under the Concepts section in the navigation. Status messages are very common to add, for example. Also, if you plan to use nested data (objects and arrays within the schema), read the nested data page carefully. The same goes for having multiple forms on the same page.\n\nWhen you're ready for something more advanced, check out the CRUD tutorial, which shows how to make a fully working backend in about 150 lines of code.","code":""}},"count":278},"sorting":{"language":"english","sortableProperties":["title","hash","url","content","code"],"sortablePropertiesWithTypes":{"title":"string","hash":"string","url":"string","content":"string","code":"string"},"sorts":{"title":{"docs":{"1":2,"2":215,"3":213,"4":214,"5":180,"6":121,"7":49,"8":0,"9":118,"10":209,"11":47,"12":162,"13":109,"14":141,"15":11,"16":43,"17":196,"18":85,"19":5,"20":75,"21":161,"22":202,"23":86,"24":87,"25":72,"26":73,"27":245,"28":246,"29":230,"30":248,"31":32,"32":31,"33":55,"34":51,"35":93,"36":263,"37":190,"38":136,"39":191,"40":83,"41":165,"42":35,"43":50,"44":115,"45":154,"46":45,"47":20,"48":152,"49":70,"50":58,"51":74,"52":101,"53":96,"54":99,"55":16,"56":15,"57":100,"58":14,"59":97,"60":90,"61":89,"62":265,"63":103,"64":267,"65":268,"66":98,"67":17,"68":102,"69":79,"70":236,"71":220,"72":80,"73":107,"74":261,"75":112,"76":124,"77":235,"78":207,"79":251,"80":177,"81":179,"82":1,"83":46,"84":120,"85":122,"86":23,"87":168,"88":63,"89":176,"90":140,"91":211,"92":19,"93":227,"94":212,"95":171,"96":151,"97":216,"98":218,"99":253,"100":104,"101":4,"102":108,"103":228,"104":59,"105":60,"106":243,"107":173,"108":139,"109":76,"110":27,"111":234,"112":210,"113":208,"114":145,"115":81,"116":134,"117":164,"118":200,"119":201,"120":54,"121":205,"122":203,"123":160,"124":68,"125":269,"126":159,"127":28,"128":52,"129":206,"130":37,"131":36,"132":153,"133":95,"134":94,"135":88,"136":25,"137":12,"138":250,"139":9,"140":48,"141":217,"142":195,"143":133,"144":71,"145":10,"146":254,"147":62,"148":262,"149":77,"150":204,"151":231,"152":232,"153":126,"154":82,"155":222,"156":135,"157":143,"158":137,"159":57,"160":183,"161":123,"162":166,"163":24,"164":13,"165":30,"166":189,"167":247,"168":259,"169":219,"170":258,"171":39,"172":252,"173":255,"174":7,"175":223,"176":158,"177":125,"178":3,"179":110,"180":150,"181":169,"182":266,"183":119,"184":61,"185":178,"186":175,"187":106,"188":242,"189":64,"190":174,"191":8,"192":193,"193":40,"194":84,"195":181,"196":114,"197":38,"198":224,"199":66,"200":65,"201":147,"202":111,"203":260,"204":146,"205":26,"206":148,"207":149,"208":144,"209":142,"210":78,"211":170,"212":69,"213":184,"214":127,"215":256,"216":156,"217":192,"218":237,"219":229,"220":197,"221":249,"222":113,"223":128,"224":182,"225":272,"226":29,"227":225,"228":130,"229":41,"230":167,"231":131,"232":67,"233":6,"234":257,"235":163,"236":132,"237":42,"238":187,"239":238,"240":226,"241":185,"242":186,"243":239,"244":244,"245":53,"246":271,"247":270,"248":188,"249":194,"250":18,"251":198,"252":22,"253":129,"254":117,"255":240,"256":199,"257":116,"258":264,"259":221,"260":241,"261":233,"262":21,"263":157,"264":92,"265":91,"266":33,"267":34,"268":172,"270":56,"271":155,"272":105,"274":44,"278":138},"orderedDocs":[[8,"actionResult(type, data?, options? | status?)"],[82,"allErrors"],[1,"API reference"],[178,"applyAction"],[101,"arrayProxy"],[19,"arrayProxy(superForm, fieldName, options)"],[233,"Arrays with primitive values"],[174,"Asynchronous validation and debouncing"],[191,"autoFocusOnError"],[139,"Automatic form id"],[145,"Better empty value support for proxies"],[15,"booleanProxy(form, fieldName, options?)"],[137,"Bug reporting"],[164,"Built-in browser validation"],[58,"Can a form be factored out into a separate component?"],[56,"Can I post to an external API?"],[55,"Can I use endpoints instead of form actions?"],[67,"Can you use Superforms without any data, for example with a delete button on each row in a table?"],[250,"Catch-all schema"],[92,"Changes"],[47,"Changing a default value"],[262,"Check if the form is tainted"],[252,"clearOnSubmit"],[86,"Client options"],[163,"Client-side validation"],[136,"Commercial support"],[205,"Common usage"],[110,"Components"],[127,"Composing debug data"],[226,"Configuration and troubleshooting"],[165,"constraints"],[32,"Contributing"],[31,"Contributing, donating and sponsoring"],[266,"Creating a Superform"],[267,"Creating a validation schema"],[42,"Creating and Updating a user"],[131,"CSS variables available for customization"],[130,"Custom styling"],[197,"Customizing error messages in the schema"],[171,"customValidity"],[193,"customValidity"],[229,"dataType"],[237,"Date input issues"],[16,"dateProxy(form, fieldName, options?)"],[274,"Debugging"],[46,"Default values"],[83,"defaultData"],[11,"defaults"],[140,"defaultValues"],[7,"defaultValues(schema)"],[43,"Deleting a user"],[34,"Designing a CRUD interface"],[128,"Displaying files"],[245,"Displaying the form"],[120,"Donate to be a sponsor"],[33,"Donations"],[270,"Empty form"],[159,"empty: 'zero' option for intProxy and numberProxy"],[50,"Enums and group inputs"],[104,"Enums in schemas"],[105,"Enums must have an explicit default value"],[184,"Error handling"],[147,"Errors for arrays and objects"],[88,"errorSelector"],[189,"errorSelector"],[200,"Event flowchart"],[199,"Events"],[232,"Example"],[124,"Examples"],[212,"Examples"],[49,"Explicit defaults"],[144,"Extra options for reset"],[25,"Factoring out a form"],[26,"Factoring out form fields"],[51,"FAQ"],[20,"fieldProxy(object, fieldName)"],[109,"Fields with default values aren't required anymore"],[149,"File upload support!"],[210,"File uploads"],[69,"Flash messages"],[72,"flashMessage.onError"],[115,"flashMessage.onError \"message\" parameter renamed to \"flashMessage\""],[154,"Form is reset by default"],[40,"Form vs. database schemas"],[194,"Form-level and array errors"],[18,"formFieldProxy(superForm, fieldName, options)"],[23,"Forms and fields in components"],[24,"Forms and fields in components"],[135,"Free support"],[61,"From a form action"],[60,"From a load function"],[265,"Get started"],[264,"Get started - Tutorial for Superforms"],[35,"Getting started"],[134,"Help & Support"],[133,"Help and support for Superforms"],[53,"How can I prevent the form from being reset after it's submitted?"],[59,"How can I return additional data together with the form?"],[66,"How to customize error messages directly in the validation schema?"],[54,"How to handle file uploads?"],[57,"How to submit the form programmatically?"],[52,"I see the data in $form, but it's not posted to the server?"],[68,"I want to reuse common options, how to do that easily?"],[63,"I'm getting JSON.parse errors as response when submitting a form, why?"],[100,"id option must be a string"],[272,"Important note about return values"],[187,"Initial form errors"],[73,"Integrate Superforms with Formsnap"],[102,"intProxy and numberProxy"],[13,"intProxy(form, fieldName, options?)"],[179,"invalidateAll"],[202,"jsonData"],[75,"Legacy version"],[222,"Limitations"],[196,"Listing errors"],[44,"Listing the users"],[257,"Loading indicators"],[254,"Loading timers"],[9,"Login request example"],[183,"Making the form behave like the SvelteKit default"],[84,"message, setMessage"],[6,"message(form, message, options?)"],[85,"meta"],[161,"Migrate now!"],[76,"Migration guide"],[177,"Modifying the use:enhance behavior"],[153,"Multi-type unions can only be used when dataType is 'json'"],[214,"Multiple files"],[223,"Multiple forms on the same page"],[253,"multipleSubmits"],[228,"Nested data"],[231,"Nested errors and constraints"],[236,"Nested proxies"],[143,"New 'posted' store"],[116,"New features"],[156,"New isTainted method"],[38,"New SvelteKit project"],[158,"New validateForm method"],[278,"Next steps"],[108,"No side-effects for default values."],[90,"noErrors"],[14,"numberProxy(form, fieldName, options?)"],[209,"onChange"],[157,"onChange event"],[208,"onError"],[114,"onError \"message\" parameter is removed"],[204,"onResult"],[201,"onSubmit"],[206,"onUpdate"],[207,"onUpdated"],[180,"Optimistic updates"],[96,"Optimized client-side validation"],[48,"optional vs. nullable"],[132,"Page data"],[45,"Playground"],[271,"Populate form from database"],[216,"Preventing file uploads"],[263,"Preventing tainting the form"],[176,"Progressive enhancement"],[126,"Promise support"],[123,"Props reference"],[21,"Proxy example"],[12,"Proxy objects"],[235,"Proxy objects"],[117,"Rate limiting"],[41,"Reading a user from the database"],[162,"Release notes"],[230,"Requirements"],[87,"resetForm"],[181,"resetForm"],[211,"Returning files in form actions"],[95,"Schema caching"],[268,"Schema caching"],[107,"Schema/validation changes"],[190,"scrollToError"],[186,"Server errors"],[89,"Server options"],[80,"setError"],[185,"setError"],[81,"setError (again), validate, proxy functions"],[5,"setError(form, field, error, options?)"],[195,"Setting field errors with refine"],[224,"Setting id on the client"],[160,"Simplified imports"],[213,"Single file input"],[241,"Single-page application (SPA) mode"],[242,"Single-page applications (SPA)"],[238,"Snapshots"],[248,"SPA action form"],[166,"Special input formats"],[37,"Stackblitz"],[39,"Start - Creating a test database"],[217,"Status messages"],[192,"stickyNavbar"],[249,"Strict mode"],[142,"String path accessors"],[17,"stringProxy(form, fieldName, options)"],[220,"Strongly typed message"],[251,"Submit behavior"],[256,"Submit state"],[118,"Super Sponsors"],[119,"Super Sponsors"],[22,"SuperDebug"],[122,"SuperDebug"],[150,"SuperDebug"],[121,"SuperDebug - the Super debugging component"],[129,"SuperDebug loves stores"],[78,"superForm"],[113,"superForm does not support untainting specific fields anymore"],[10,"superForm options"],[112,"superForm.fields is removed"],[91,"Superforms v2 - Migration guide"],[94,"superValidate"],[3,"superValidate options"],[4,"superValidate return type"],[2,"superValidate(adapter | data, adapter? | options?, options?)"],[97,"SuperValidated type parameters have changed"],[141,"superValidateSync"],[98,"superValidateSync is renamed to defaults"],[169,"Switching schemas"],[71,"syncFlashMessage"],[259,"Tainted fields"],[155,"Tainted updates"],[175,"Test it out"],[198,"Test it out"],[227,"Test it out"],[240,"Test it out"],[93,"The biggest change (IMPORTANT)"],[103,"The defaultValidators option has moved"],[219,"The message helper"],[29,"Type narrowing for paths"],[151,"Union support"],[152,"Unions must have an explicit default value"],[261,"Untainting the form"],[111,"Update your imports, in case of problems"],[77,"Updating"],[70,"Usage"],[218,"Usage"],[239,"Usage"],[243,"Usage"],[255,"Usage"],[260,"Usage"],[188,"Usage (client)"],[106,"Use isTainted to check tainted status"],[244,"Using +page.ts instead of +page.server.ts"],[27,"Using a fieldProxy"],[28,"Using a formFieldProxy"],[167,"Using a validation schema"],[30,"Using the componentized field in awesome ways"],[221,"Using the message data programmatically"],[138,"v1.0 - What's new?"],[79,"valid, empty, firstError"],[172,"validate"],[99,"validate method with no arguments is renamed to validateForm"],[146,"Validate the whole form on the client"],[173,"validateForm"],[215,"Validating files manually"],[234,"Validation schemas and nested paths"],[170,"validationMethod"],[168,"validators"],[203,"validators"],[74,"Version 0.x and how to migrate"],[148,"Version 2 - What's new?"],[36,"Video tutorial"],[258,"Visualizing the timers"],[62,"What about the other way around, posting additional data to the server?"],[182,"When to change the defaults?"],[64,"Why am I'm getting TypeError: The body has already been consumed?"],[65,"Why does the form get tainted without any changes, when I use a select element?"],[125,"With a label"],[247,"With initial top-level data"],[246,"Without a +page.ts file"],[225,"Without use:enhance"]],"type":"string"},"hash":{"docs":{"1":2,"2":215,"3":213,"4":214,"5":180,"6":121,"7":49,"8":0,"9":118,"10":209,"11":47,"12":162,"13":109,"14":141,"15":11,"16":43,"17":196,"18":85,"19":5,"20":75,"21":161,"22":202,"23":86,"24":87,"25":72,"26":73,"27":244,"28":245,"29":230,"30":248,"31":32,"32":31,"33":55,"34":51,"35":93,"36":263,"37":190,"38":136,"39":191,"40":84,"41":165,"42":35,"43":50,"44":115,"45":154,"46":45,"47":20,"48":152,"49":70,"50":58,"51":74,"52":101,"53":96,"54":99,"55":16,"56":15,"57":100,"58":14,"59":97,"60":90,"61":89,"62":265,"63":104,"64":267,"65":268,"66":98,"67":17,"68":102,"69":79,"70":236,"71":220,"72":80,"73":107,"74":261,"75":112,"76":124,"77":235,"78":207,"79":251,"80":177,"81":179,"82":1,"83":46,"84":120,"85":122,"86":23,"87":168,"88":63,"89":176,"90":140,"91":211,"92":19,"93":227,"94":212,"95":171,"96":151,"97":216,"98":218,"99":253,"100":103,"101":4,"102":108,"103":228,"104":59,"105":60,"106":243,"107":173,"108":139,"109":76,"110":27,"111":234,"112":210,"113":208,"114":145,"115":81,"116":133,"117":164,"118":200,"119":201,"120":54,"121":205,"122":203,"123":160,"124":68,"125":269,"126":159,"127":28,"128":52,"129":206,"130":37,"131":36,"132":153,"133":95,"134":94,"135":88,"136":25,"137":12,"138":250,"139":9,"140":48,"141":217,"142":195,"143":135,"144":71,"145":10,"146":254,"147":62,"148":262,"149":77,"150":204,"151":231,"152":232,"153":126,"154":82,"155":222,"156":134,"157":143,"158":137,"159":57,"160":183,"161":123,"162":166,"163":24,"164":13,"165":30,"166":189,"167":246,"168":259,"169":219,"170":258,"171":39,"172":252,"173":255,"174":7,"175":223,"176":158,"177":125,"178":3,"179":110,"180":150,"181":169,"182":266,"183":119,"184":61,"185":178,"186":175,"187":106,"188":242,"189":64,"190":174,"191":8,"192":193,"193":40,"194":83,"195":181,"196":114,"197":38,"198":224,"199":66,"200":65,"201":147,"202":111,"203":260,"204":146,"205":26,"206":148,"207":149,"208":144,"209":142,"210":78,"211":170,"212":69,"213":184,"214":127,"215":256,"216":156,"217":192,"218":237,"219":229,"220":197,"221":249,"222":113,"223":128,"224":182,"225":272,"226":29,"227":225,"228":130,"229":41,"230":167,"231":131,"232":67,"233":6,"234":257,"235":163,"236":132,"237":42,"238":187,"239":238,"240":226,"241":185,"242":186,"243":239,"244":247,"245":53,"246":271,"247":270,"248":188,"249":194,"250":18,"251":198,"252":22,"253":129,"254":117,"255":240,"256":199,"257":116,"258":264,"259":221,"260":241,"261":233,"262":21,"263":157,"264":92,"265":91,"266":33,"267":34,"268":172,"270":56,"271":155,"272":105,"274":44,"278":138},"orderedDocs":[[8,"actionresulttype-data-options--status"],[82,"allerrors"],[1,"api-reference"],[178,"applyaction"],[101,"arrayproxy"],[19,"arrayproxysuperform-fieldname-options"],[233,"arrays-with-primitive-values"],[174,"asynchronous-validation-and-debouncing"],[191,"autofocusonerror"],[139,"automatic-form-id"],[145,"better-empty-value-support-for-proxies"],[15,"booleanproxyform-fieldname-options"],[137,"bug-reporting"],[164,"built-in-browser-validation"],[58,"can-a-form-be-factored-out-into-a-separate-component"],[56,"can-i-post-to-an-external-api"],[55,"can-i-use-endpoints-instead-of-form-actions"],[67,"can-you-use-superforms-without-any-data-for-example-with-a-delete-button-on-each-row-in-a-table"],[250,"catch-all-schema"],[92,"changes"],[47,"changing-a-default-value"],[262,"check-if-the-form-is-tainted"],[252,"clearonsubmit"],[86,"client-options"],[163,"client-side-validation"],[136,"commercial-support"],[205,"common-usage"],[110,"components"],[127,"composing-debug-data"],[226,"configuration-and-troubleshooting"],[165,"constraints"],[32,"contributing"],[31,"contributing-donating-and-sponsoring"],[266,"creating-a-superform"],[267,"creating-a-validation-schema"],[42,"creating-and-updating-a-user"],[131,"css-variables-available-for-customization"],[130,"custom-styling"],[197,"customizing-error-messages-in-the-schema"],[171,"customvalidity"],[193,"customvalidity"],[229,"datatype"],[237,"date-input-issues"],[16,"dateproxyform-fieldname-options"],[274,"debugging"],[46,"default-values"],[83,"defaultdata"],[11,"defaults"],[140,"defaultvalues"],[7,"defaultvaluesschema"],[43,"deleting-a-user"],[34,"designing-a-crud-interface"],[128,"displaying-files"],[245,"displaying-the-form"],[120,"donate-to-be-a-sponsor"],[33,"donations"],[270,"empty-form"],[159,"empty-zero-option-for-intproxy-and-numberproxy"],[50,"enums-and-group-inputs"],[104,"enums-in-schemas"],[105,"enums-must-have-an-explicit-default-value"],[184,"error-handling"],[147,"errors-for-arrays-and-objects"],[88,"errorselector"],[189,"errorselector"],[200,"event-flowchart"],[199,"events"],[232,"example"],[124,"examples"],[212,"examples"],[49,"explicit-defaults"],[144,"extra-options-for-reset"],[25,"factoring-out-a-form"],[26,"factoring-out-form-fields"],[51,"faq"],[20,"fieldproxyobject-fieldname"],[109,"fields-with-default-values-arent-required-anymore"],[149,"file-upload-support"],[210,"file-uploads"],[69,"flash-messages"],[72,"flashmessageonerror"],[115,"flashmessageonerror-message-parameter-renamed-to-flashmessage"],[154,"form-is-reset-by-default"],[194,"form-level-and-array-errors"],[40,"form-vs-database-schemas"],[18,"formfieldproxysuperform-fieldname-options"],[23,"forms-and-fields-in-components"],[24,"forms-and-fields-in-components"],[135,"free-support"],[61,"from-a-form-action"],[60,"from-a-load-function"],[265,"get-started"],[264,"get-started---tutorial-for-superforms"],[35,"getting-started"],[134,"help--support"],[133,"help-and-support-for-superforms"],[53,"how-can-i-prevent-the-form-from-being-reset-after-its-submitted"],[59,"how-can-i-return-additional-data-together-with-the-form"],[66,"how-to-customize-error-messages-directly-in-the-validation-schema"],[54,"how-to-handle-file-uploads"],[57,"how-to-submit-the-form-programmatically"],[52,"i-see-the-data-in-form-but-its-not-posted-to-the-server"],[68,"i-want-to-reuse-common-options-how-to-do-that-easily"],[100,"id-option-must-be-a-string"],[63,"im-getting-jsonparse-errors-as-response-when-submitting-a-form-why"],[272,"important-note-about-return-values"],[187,"initial-form-errors"],[73,"integrate-superforms-with-formsnap"],[102,"intproxy-and-numberproxy"],[13,"intproxyform-fieldname-options"],[179,"invalidateall"],[202,"jsondata"],[75,"legacy-version"],[222,"limitations"],[196,"listing-errors"],[44,"listing-the-users"],[257,"loading-indicators"],[254,"loading-timers"],[9,"login-request-example"],[183,"making-the-form-behave-like-the-sveltekit-default"],[84,"message-setmessage"],[6,"messageform-message-options"],[85,"meta"],[161,"migrate-now"],[76,"migration-guide"],[177,"modifying-the-useenhance-behavior"],[153,"multi-type-unions-can-only-be-used-when-datatype-is-json"],[214,"multiple-files"],[223,"multiple-forms-on-the-same-page"],[253,"multiplesubmits"],[228,"nested-data"],[231,"nested-errors-and-constraints"],[236,"nested-proxies"],[116,"new-features"],[156,"new-istainted-method"],[143,"new-posted-store"],[38,"new-sveltekit-project"],[158,"new-validateform-method"],[278,"next-steps"],[108,"no-side-effects-for-default-values"],[90,"noerrors"],[14,"numberproxyform-fieldname-options"],[209,"onchange"],[157,"onchange-event"],[208,"onerror"],[114,"onerror-message-parameter-is-removed"],[204,"onresult"],[201,"onsubmit"],[206,"onupdate"],[207,"onupdated"],[180,"optimistic-updates"],[96,"optimized-client-side-validation"],[48,"optional-vs-nullable"],[132,"page-data"],[45,"playground"],[271,"populate-form-from-database"],[216,"preventing-file-uploads"],[263,"preventing-tainting-the-form"],[176,"progressive-enhancement"],[126,"promise-support"],[123,"props-reference"],[21,"proxy-example"],[12,"proxy-objects"],[235,"proxy-objects"],[117,"rate-limiting"],[41,"reading-a-user-from-the-database"],[162,"release-notes"],[230,"requirements"],[87,"resetform"],[181,"resetform"],[211,"returning-files-in-form-actions"],[95,"schema-caching"],[268,"schema-caching"],[107,"schemavalidation-changes"],[190,"scrolltoerror"],[186,"server-errors"],[89,"server-options"],[80,"seterror"],[185,"seterror"],[81,"seterror-again-validate-proxy-functions"],[5,"seterrorform-field-error-options"],[195,"setting-field-errors-with-refine"],[224,"setting-id-on-the-client"],[160,"simplified-imports"],[213,"single-file-input"],[241,"single-page-application-spa-mode"],[242,"single-page-applications-spa"],[238,"snapshots"],[248,"spa-action-form"],[166,"special-input-formats"],[37,"stackblitz"],[39,"start---creating-a-test-database"],[217,"status-messages"],[192,"stickynavbar"],[249,"strict-mode"],[142,"string-path-accessors"],[17,"stringproxyform-fieldname-options"],[220,"strongly-typed-message"],[251,"submit-behavior"],[256,"submit-state"],[118,"super-sponsors"],[119,"super-sponsors"],[22,"superdebug"],[122,"superdebug"],[150,"superdebug"],[121,"superdebug---the-super-debugging-component"],[129,"superdebug-loves-stores"],[78,"superform"],[113,"superform-does-not-support-untainting-specific-fields-anymore"],[10,"superform-options"],[112,"superformfields-is-removed"],[91,"superforms-v2---migration-guide"],[94,"supervalidate"],[3,"supervalidate-options"],[4,"supervalidate-return-type"],[2,"supervalidateadapter--data-adapter--options-options"],[97,"supervalidated-type-parameters-have-changed"],[141,"supervalidatesync"],[98,"supervalidatesync-is-renamed-to-defaults"],[169,"switching-schemas"],[71,"syncflashmessage"],[259,"tainted-fields"],[155,"tainted-updates"],[175,"test-it-out"],[198,"test-it-out"],[227,"test-it-out"],[240,"test-it-out"],[93,"the-biggest-change-important"],[103,"the-defaultvalidators-option-has-moved"],[219,"the-message-helper"],[29,"type-narrowing-for-paths"],[151,"union-support"],[152,"unions-must-have-an-explicit-default-value"],[261,"untainting-the-form"],[111,"update-your-imports-in-case-of-problems"],[77,"updating"],[70,"usage"],[218,"usage"],[239,"usage"],[243,"usage"],[255,"usage"],[260,"usage"],[188,"usage-client"],[106,"use-istainted-to-check-tainted-status"],[27,"using-a-fieldproxy"],[28,"using-a-formfieldproxy"],[167,"using-a-validation-schema"],[244,"using-pagets-instead-of-pageserverts"],[30,"using-the-componentized-field-in-awesome-ways"],[221,"using-the-message-data-programmatically"],[138,"v10---whats-new"],[79,"valid-empty-firsterror"],[172,"validate"],[99,"validate-method-with-no-arguments-is-renamed-to-validateform"],[146,"validate-the-whole-form-on-the-client"],[173,"validateform"],[215,"validating-files-manually"],[234,"validation-schemas-and-nested-paths"],[170,"validationmethod"],[168,"validators"],[203,"validators"],[74,"version-0x-and-how-to-migrate"],[148,"version-2---whats-new"],[36,"video-tutorial"],[258,"visualizing-the-timers"],[62,"what-about-the-other-way-around-posting-additional-data-to-the-server"],[182,"when-to-change-the-defaults"],[64,"why-am-im-getting-typeerror-the-body-has-already-been-consumed"],[65,"why-does-the-form-get-tainted-without-any-changes-when-i-use-a-select-element"],[125,"with-a-label"],[247,"with-initial-top-level-data"],[246,"without-a-pagets-file"],[225,"without-useenhance"]],"type":"string"},"url":{"docs":{"1":19,"2":10,"3":14,"4":2,"5":17,"6":15,"7":9,"8":20,"9":3,"10":21,"11":1,"12":8,"13":13,"14":11,"15":5,"16":12,"17":7,"18":16,"19":18,"20":4,"21":6,"22":0,"23":22,"24":23,"25":25,"26":28,"27":26,"28":29,"29":27,"30":24,"31":131,"32":133,"33":132,"34":137,"35":134,"36":136,"37":135,"38":138,"39":139,"40":142,"41":144,"42":141,"43":143,"44":140,"45":150,"46":146,"47":149,"48":145,"49":148,"50":147,"51":151,"52":161,"53":156,"54":154,"55":157,"56":159,"57":152,"58":153,"59":158,"60":162,"61":168,"62":167,"63":165,"64":164,"65":163,"66":155,"67":160,"68":166,"69":171,"70":172,"71":169,"72":170,"73":173,"74":184,"75":185,"76":188,"77":196,"78":198,"79":194,"80":199,"81":200,"82":195,"83":193,"84":190,"85":189,"86":186,"87":191,"88":192,"89":187,"90":197,"91":210,"92":203,"93":222,"94":224,"95":216,"96":225,"97":223,"98":226,"99":214,"100":213,"101":201,"102":202,"103":204,"104":215,"105":219,"106":220,"107":207,"108":218,"109":212,"110":221,"111":217,"112":206,"113":208,"114":211,"115":209,"116":205,"117":227,"118":228,"119":230,"120":229,"121":232,"122":241,"123":242,"124":231,"125":237,"126":239,"127":238,"128":233,"129":234,"130":235,"131":236,"132":240,"133":243,"134":244,"135":245,"136":247,"137":246,"138":250,"139":257,"140":253,"141":256,"142":255,"143":248,"144":249,"145":251,"146":252,"147":254,"148":260,"149":263,"150":258,"151":265,"152":267,"153":270,"154":261,"155":269,"156":271,"157":262,"158":268,"159":272,"160":266,"161":264,"162":259,"163":32,"164":30,"165":39,"166":36,"167":37,"168":42,"169":38,"170":41,"171":31,"172":40,"173":33,"174":35,"175":34,"176":49,"177":44,"178":45,"179":46,"180":47,"181":48,"182":43,"183":50,"184":58,"185":64,"186":61,"187":65,"188":60,"189":55,"190":53,"191":54,"192":51,"193":63,"194":59,"195":62,"196":56,"197":57,"198":52,"199":67,"200":66,"201":69,"202":74,"203":68,"204":72,"205":70,"206":75,"207":71,"208":76,"209":73,"210":81,"211":80,"212":78,"213":82,"214":83,"215":79,"216":77,"217":84,"218":85,"219":88,"220":89,"221":87,"222":86,"223":94,"224":92,"225":91,"226":93,"227":90,"228":96,"229":100,"230":95,"231":97,"232":99,"233":101,"234":98,"235":104,"236":102,"237":103,"238":107,"239":106,"240":105,"241":108,"242":109,"243":110,"244":113,"245":114,"246":112,"247":111,"248":115,"249":117,"250":116,"251":118,"252":119,"253":120,"254":126,"255":128,"256":127,"257":130,"258":129,"259":121,"260":125,"261":122,"262":123,"263":124,"264":174,"265":179,"266":175,"267":183,"268":177,"270":176,"271":182,"272":178,"274":180,"278":181},"orderedDocs":[[22,"/api"],[11,"/api"],[4,"/api"],[9,"/api"],[20,"/api"],[15,"/api"],[21,"/api"],[17,"/api"],[12,"/api"],[7,"/api"],[2,"/api"],[14,"/api"],[16,"/api"],[13,"/api"],[3,"/api"],[6,"/api"],[18,"/api"],[5,"/api"],[19,"/api"],[1,"/api"],[8,"/api"],[10,"/api"],[23,"/components"],[24,"/components"],[30,"/components"],[25,"/components"],[27,"/components"],[29,"/components"],[26,"/components"],[28,"/components"],[164,"/concepts/client-validation"],[171,"/concepts/client-validation"],[163,"/concepts/client-validation"],[173,"/concepts/client-validation"],[175,"/concepts/client-validation"],[174,"/concepts/client-validation"],[166,"/concepts/client-validation"],[167,"/concepts/client-validation"],[169,"/concepts/client-validation"],[165,"/concepts/client-validation"],[172,"/concepts/client-validation"],[170,"/concepts/client-validation"],[168,"/concepts/client-validation"],[182,"/concepts/enhance"],[177,"/concepts/enhance"],[178,"/concepts/enhance"],[179,"/concepts/enhance"],[180,"/concepts/enhance"],[181,"/concepts/enhance"],[176,"/concepts/enhance"],[183,"/concepts/enhance"],[192,"/concepts/error-handling"],[198,"/concepts/error-handling"],[190,"/concepts/error-handling"],[191,"/concepts/error-handling"],[189,"/concepts/error-handling"],[196,"/concepts/error-handling"],[197,"/concepts/error-handling"],[184,"/concepts/error-handling"],[194,"/concepts/error-handling"],[188,"/concepts/error-handling"],[186,"/concepts/error-handling"],[195,"/concepts/error-handling"],[193,"/concepts/error-handling"],[185,"/concepts/error-handling"],[187,"/concepts/error-handling"],[200,"/concepts/events"],[199,"/concepts/events"],[203,"/concepts/events"],[201,"/concepts/events"],[205,"/concepts/events"],[207,"/concepts/events"],[204,"/concepts/events"],[209,"/concepts/events"],[202,"/concepts/events"],[206,"/concepts/events"],[208,"/concepts/events"],[216,"/concepts/files"],[212,"/concepts/files"],[215,"/concepts/files"],[211,"/concepts/files"],[210,"/concepts/files"],[213,"/concepts/files"],[214,"/concepts/files"],[217,"/concepts/messages"],[218,"/concepts/messages"],[222,"/concepts/messages"],[221,"/concepts/messages"],[219,"/concepts/messages"],[220,"/concepts/messages"],[227,"/concepts/multiple-forms"],[225,"/concepts/multiple-forms"],[224,"/concepts/multiple-forms"],[226,"/concepts/multiple-forms"],[223,"/concepts/multiple-forms"],[230,"/concepts/nested-data"],[228,"/concepts/nested-data"],[231,"/concepts/nested-data"],[234,"/concepts/nested-data"],[232,"/concepts/nested-data"],[229,"/concepts/nested-data"],[233,"/concepts/nested-data"],[236,"/concepts/proxy-objects"],[237,"/concepts/proxy-objects"],[235,"/concepts/proxy-objects"],[240,"/concepts/snapshots"],[239,"/concepts/snapshots"],[238,"/concepts/snapshots"],[241,"/concepts/spa"],[242,"/concepts/spa"],[243,"/concepts/spa"],[247,"/concepts/spa"],[246,"/concepts/spa"],[244,"/concepts/spa"],[245,"/concepts/spa"],[248,"/concepts/spa"],[250,"/concepts/strict-mode"],[249,"/concepts/strict-mode"],[251,"/concepts/submit-behavior"],[252,"/concepts/submit-behavior"],[253,"/concepts/submit-behavior"],[259,"/concepts/tainted"],[261,"/concepts/tainted"],[262,"/concepts/tainted"],[263,"/concepts/tainted"],[260,"/concepts/tainted"],[254,"/concepts/timers"],[256,"/concepts/timers"],[255,"/concepts/timers"],[258,"/concepts/timers"],[257,"/concepts/timers"],[31,"/contributing"],[33,"/contributing"],[32,"/contributing"],[35,"/crud"],[37,"/crud"],[36,"/crud"],[34,"/crud"],[38,"/crud"],[39,"/crud"],[44,"/crud"],[42,"/crud"],[40,"/crud"],[43,"/crud"],[41,"/crud"],[48,"/default-values"],[46,"/default-values"],[50,"/default-values"],[49,"/default-values"],[47,"/default-values"],[45,"/examples"],[51,"/faq"],[57,"/faq"],[58,"/faq"],[54,"/faq"],[66,"/faq"],[53,"/faq"],[55,"/faq"],[59,"/faq"],[56,"/faq"],[67,"/faq"],[52,"/faq"],[60,"/faq"],[65,"/faq"],[64,"/faq"],[63,"/faq"],[68,"/faq"],[62,"/faq"],[61,"/faq"],[71,"/flash-messages"],[72,"/flash-messages"],[69,"/flash-messages"],[70,"/flash-messages"],[73,"/formsnap"],[264,"/get-started/[...lib]"],[266,"/get-started/[...lib]"],[270,"/get-started/[...lib]"],[268,"/get-started/[...lib]"],[272,"/get-started/[...lib]"],[265,"/get-started/[...lib]"],[274,"/get-started/[...lib]"],[278,"/get-started/[...lib]"],[271,"/get-started/[...lib]"],[267,"/get-started/[...lib]"],[74,"/legacy"],[75,"/legacy"],[86,"/migration"],[89,"/migration"],[76,"/migration"],[85,"/migration"],[84,"/migration"],[87,"/migration"],[88,"/migration"],[83,"/migration"],[79,"/migration"],[82,"/migration"],[77,"/migration"],[90,"/migration"],[78,"/migration"],[80,"/migration"],[81,"/migration"],[101,"/migration-v2"],[102,"/migration-v2"],[92,"/migration-v2"],[103,"/migration-v2"],[116,"/migration-v2"],[112,"/migration-v2"],[107,"/migration-v2"],[113,"/migration-v2"],[115,"/migration-v2"],[91,"/migration-v2"],[114,"/migration-v2"],[109,"/migration-v2"],[100,"/migration-v2"],[99,"/migration-v2"],[104,"/migration-v2"],[95,"/migration-v2"],[111,"/migration-v2"],[108,"/migration-v2"],[105,"/migration-v2"],[106,"/migration-v2"],[110,"/migration-v2"],[93,"/migration-v2"],[97,"/migration-v2"],[94,"/migration-v2"],[96,"/migration-v2"],[98,"/migration-v2"],[117,"/rate-limiting"],[118,"/sponsors"],[120,"/sponsors"],[119,"/sponsors"],[124,"/super-debug"],[121,"/super-debug"],[128,"/super-debug"],[129,"/super-debug"],[130,"/super-debug"],[131,"/super-debug"],[125,"/super-debug"],[127,"/super-debug"],[126,"/super-debug"],[132,"/super-debug"],[122,"/super-debug"],[123,"/super-debug"],[133,"/support"],[134,"/support"],[135,"/support"],[137,"/support"],[136,"/support"],[143,"/whats-new-v1"],[144,"/whats-new-v1"],[138,"/whats-new-v1"],[145,"/whats-new-v1"],[146,"/whats-new-v1"],[140,"/whats-new-v1"],[147,"/whats-new-v1"],[142,"/whats-new-v1"],[141,"/whats-new-v1"],[139,"/whats-new-v1"],[150,"/whats-new-v2"],[162,"/whats-new-v2"],[148,"/whats-new-v2"],[154,"/whats-new-v2"],[157,"/whats-new-v2"],[149,"/whats-new-v2"],[161,"/whats-new-v2"],[151,"/whats-new-v2"],[160,"/whats-new-v2"],[152,"/whats-new-v2"],[158,"/whats-new-v2"],[155,"/whats-new-v2"],[153,"/whats-new-v2"],[156,"/whats-new-v2"],[159,"/whats-new-v2"]],"type":"string"},"content":{"docs":{"1":29,"2":100,"3":149,"4":88,"5":76,"6":37,"7":147,"8":249,"9":160,"10":148,"11":171,"12":48,"13":67,"14":65,"15":63,"16":64,"17":66,"18":140,"19":141,"20":142,"21":82,"22":41,"23":0,"24":58,"25":226,"26":154,"27":269,"28":203,"29":61,"30":236,"31":1,"32":62,"33":101,"34":13,"35":227,"36":116,"37":186,"38":161,"39":250,"40":246,"41":123,"42":253,"43":225,"44":194,"45":17,"46":31,"47":265,"48":71,"49":127,"50":108,"51":2,"52":197,"53":234,"54":79,"55":255,"56":91,"57":235,"58":254,"59":271,"60":117,"61":146,"62":256,"63":216,"64":215,"65":92,"66":257,"67":165,"68":251,"69":24,"70":195,"71":90,"72":86,"73":14,"74":3,"75":164,"76":21,"77":230,"78":78,"79":167,"80":178,"81":35,"82":202,"83":205,"84":179,"85":208,"86":192,"87":145,"88":187,"89":193,"90":38,"91":30,"92":85,"93":183,"94":115,"95":114,"96":185,"97":96,"98":198,"99":138,"100":119,"101":49,"102":172,"103":54,"104":135,"105":70,"106":46,"107":204,"108":89,"109":112,"110":80,"111":166,"112":173,"113":266,"114":137,"115":223,"116":131,"117":26,"118":4,"119":83,"120":55,"121":5,"122":40,"123":139,"124":42,"125":44,"126":229,"127":102,"128":163,"129":261,"130":43,"131":129,"132":68,"133":6,"134":209,"135":107,"136":105,"137":133,"138":12,"139":151,"140":218,"141":248,"142":74,"143":259,"144":260,"145":36,"146":180,"147":136,"148":25,"149":72,"150":130,"151":53,"152":87,"153":232,"154":224,"155":190,"156":45,"157":52,"158":134,"159":75,"160":268,"161":144,"162":182,"163":28,"164":211,"165":231,"166":77,"167":184,"168":152,"169":258,"170":207,"171":220,"172":181,"173":153,"174":206,"175":213,"176":16,"177":188,"178":241,"179":243,"180":210,"181":244,"182":143,"183":56,"184":15,"185":125,"186":113,"187":189,"188":57,"189":217,"190":177,"191":242,"192":94,"193":221,"194":121,"195":270,"196":267,"197":126,"198":214,"199":10,"200":111,"201":175,"202":106,"203":73,"204":93,"205":39,"206":176,"207":97,"208":247,"209":174,"210":18,"211":110,"212":199,"213":168,"214":240,"215":109,"216":228,"217":11,"218":118,"219":262,"220":196,"221":98,"222":156,"223":22,"224":132,"225":128,"226":69,"227":84,"228":19,"229":60,"230":200,"231":252,"232":81,"233":120,"234":237,"235":23,"236":264,"237":170,"238":9,"239":191,"240":124,"241":7,"242":122,"243":59,"244":155,"245":239,"246":157,"247":95,"248":159,"249":27,"250":158,"251":32,"252":169,"253":219,"254":20,"255":34,"256":50,"257":47,"258":162,"259":33,"260":263,"261":245,"262":51,"263":103,"264":8,"265":150,"266":222,"268":201,"270":99,"271":104,"272":233,"274":238,"278":212},"orderedDocs":[[23,"/>"],[31,"/>"],[51,"/>"],[74,"/>"],[118,"/>"],[121,"/>"],[133,"/>"],[241,"/>"],[264,"/>"],[238,"/>\n\nA nice SvelteKit feature is snapshots, which saves and restores data when the user navigates on the site. This is perfect for saving the form state, and with Superforms, you can take advantage of this in one line of code, as an alternative to a tainted form message. Note that it only works for browser history navigation though."],[199,"/>\n\nA number of events give you full control over the submit process. They are triggered every time the form is submitted.\n\nEvents are only available when JavaScript is enabled in the browser and the custom use:enhance is added to the form."],[217,"/>\n\nA status message like \"Form posted\" can be displayed after submitting a form. The validation object contains a `message` store used for this:"],[138,"/>\n\nAfter a lot of work, Superforms 1.0 has been released! Here are the most important new features and improvements."],[34,"/>\n\nAn excellent use case for Superforms is a backend interface, commonly used as in the acronym CRUD (Create, Read, Update, Delete):\n\nDisplay an empty formDisplay an empty formPOST the form, validate the dataPOST the form, validate the dataCreate a new entity with the data **(Create)**Create a new entity with the data (Create)Fetch the entity **(Read)**Fetch the entity (Read)Display it in a formDisplay it in a formPOST the form, validate the dataPOST the form, validate the dataUpdate the entity with the data **(Update)**Update the entity with the data (Update)Delete the entity **(Delete)**Delete the entity (Delete)??????Profit!Profit!\n\nBecause you can send the data model to the `superValidate` function and have the form directly populated, it becomes quite easy to implement the above steps."],[73,"/>\n\nAs you may have seen on the componentization page, quite a bit of boilerplate can add up for a form, and then we haven't even touched on the subject of accessibility.\n\nFortunately, the UI-component guru Hunter Johnston, aka @huntabyte, has done the community a great service with his library Formsnap! It not only simplifies how to put your forms into components, but also adds top-class accessibility with no effort.\n\nThis is the style you can expect when using Formsnap, compared to manually putting attributes on individual form fields:\n\n\n\nIf it suits you, please check out the Formsnap library, it is really nice! 💥"],[184,"/>\n\nBy deconstructing `errors` from `superForm`, you'll get an object with form errors that you can display where it's appropriate:\n\n\n\nThe `aria-invalid` attribute is used to automatically focus on the first error field; see the errorSelector option further below."],[176,"/>\n\nBy using `enhance` returned from `superForm`, we'll get the client-side enhancement expected from a modern website:\n\n\n\nThe `use:enhance` action takes no arguments; instead, events are used to hook into the default SvelteKit use:enhance parameters and more. Check out the events page for details.\n\nWithout `use:enhance` (and JavaScript enabled in the browser), the form will be static. No events, loading timers, auto-focus, etc. The only things that will work are constraints. Also note that SvelteKit's own `use:enhance` cannot be used; you must use the one returned from `superForm`, and it should only be used on a single form element - you cannot share it between forms."],[45,"/>\n\nFor testing Superforms, bug reporting, support questions, or as a start for your project, click on your chosen library to open a SvelteKit project with a basic form in SvelteLab:"],[210,"/>\n\nFrom version 2, Superforms has full support for file uploads. For that, you need a schema that can validate files. Zod has this possibility:"],[228,"/>\n\nHTML forms can only handle string values, and the `<form>` element cannot nest other forms, so there is no standardized way to represent a nested data structure or more complex values like dates. Fortunately, Superforms has a solution for this!"],[254,"/>\n\nIt's important that users understand that things are happening when they submit a form. Loading timers can be used to provide feedback when there is a server response delay, for example by displaying a loading spinner icon."],[76,"/>\n\nLists the breaking changes that you need to address to upgrade from v0.x to v1.0."],[223,"/>\n\nSince there is only one `$page` store per route, multiple forms on the same page, like a register and login form, can cause problems since both form actions will update `$page.form`, possibly affecting the other form.\n\nWith Superforms, multiple forms on the same page are handled automatically if you are using `use:enhance`, and the forms have different schema types. When using the same schema for multiple forms, you need to set the `id` option:\n\n\n\nBy setting an id on the server, you'll ensure that only forms with the matching id on the client will react to the updates.\n\n\"Different schema types\" means \"different fields and types\", so just copying a schema and giving it a different variable name will still count as the same schema. The contents of the schemas have to differ.Here's an example of how to handle a login and registration form on the same page:\n\n+page.server.ts\n\n\n\nThe code above uses named form actions to determine which form was posted. On the client, you'll post to these different form actions for the respective form:\n\n+page.svelte\n\n\n\nNote that there is a separate `use:enhance` for each form - you cannot share the enhance action between forms.The above works well with forms that posts to a dedicated form action. But for more dynamic scenarios, let's say a database table where rows can be edited, the form id should correspond to the row id, and you'd want to communicate to the server which id was sent. This can be done by modifying the `$formId` store, to let the server know what `id` was posted, and what it should respond with."],[235,"/>\n\nSometimes you get a `string` value from an input field or third-party library, and want it to be automatically converted and updated with a non-string value in your schema. This is what proxies are for.\n\n\n\nThe usage for all of them is practically the same. You can use the form store, or the whole superForm as input, which allows you to set a `tainted` option, in case you don't want to taint the form when it updates.\n\n\n\nNow if you bind to `$idProxy` instead of `$form.id`, the value will be converted to and from an integer, and `$form.id` will be updated automatically.\n\nNote that this kind of conversion will usually happen automatically with `bind:value`. `intProxy` and `numberProxy` are rarely needed, as Svelte handles this automatically. But proxies may still be useful if you want to set the value to `undefined` or `null` when the value is falsy, in which case you can use the `empty` option.\n\nSee the API for more details and options for each kind of proxy."],[69,"/>\n\nStatus messages are useful, but redirects will cause them to be lost, because they need to be returned in `{ form }`, usually as a response from a POST request.\n\nSince it's common to redirect after a successful post, especially in backend interfaces, the `form.message` property isn't a general solution for displaying status messages.\n\nThe sister library to Superforms is called sveltekit-flash-message, a useful addon that handles temporary messages sent with redirects. Note that at least version 1.0 is required!"],[148,"/>\n\nSuperforms 2 has finally been released! Here's a presentation of the new features and improvements:"],[117,"/>\n\nSuperforms has a basic client-side prevention of multiple form submissions. But you may want to limit the rate of form submissions on the server as well, to prevent misuse and spamming. \n\nA useful library for this is sveltekit-rate-limiter, which makes it easy to rate limit password resets, account registration, etc. It not only works with forms but all requests, so API limiting is another use for it. With this library, basic rate limiting isn't much harder than:\n\n\n\nIt can be easily expanded with custom limiter plugins and different stores than the built-in ones.\n\nInstallation and usage instructions are available at its Github repo: https://github.com/ciscoheat/sveltekit-rate-limiter"],[249,"/>\n\nSuperforms is quite forgiving with missing fields in the posted data. The assumption is that if you add a field to a schema, it will sooner or later be added to the form, so the default value is applied to all missing schema fields.\n\nBut you may want to be more strict and assert that the input data must exist, otherwise something is wrong. For that, you can use strict mode when calling `superValidate`:\n\n\n\nNow the following will be true:\n\nAny missing **required** field will be reported as an error.Any missing required field will be reported as an error.Errors will be displayed as default (can be changed with the `errors` option).Errors will be displayed as default (can be changed with the `errors` option).\n\nAs checkboxes aren't posted unless checked, they will fail validation in strict mode unless you add an empty hidden field for the checkbox, signifying `false`."],[163,"/>\n\nThere are two client-side validation options with Superforms: \n\nThe built-in browser validation, which doesn't require JavaScript to be enabled in the browser.The built-in browser validation, which doesn't require JavaScript to be enabled in the browser.Using a validation schema, usually the same one as on the server. Requires JavaScript and [use:enhance](/concepts/enhance).Using a validation schema, usually the same one as on the server. Requires JavaScript and use:enhance."],[1,"/>\n\nThroughout the reference, the type `T` represents the type of the validation schema, extending `Record<string, unknown>`. For example, in a form with name and email, name being optional:\n\n\n\nThe `Nested<T, R>` type replaces all primitive values of `T` with `R`, and removes any optional modifier. In the above example:\n\n\n\nThe type `M` represents the status message type, default `any`.\n\n\n\nA `ValidationAdapter<T, In>` and `ClientValidationAdapter<T, In>` are the adapters used to wrap the schema, based on the selected validation library. `In` is the input type of the schema, as transformations and pipes can make it differ from `T`, but usually they are the same. Example:"],[91,"/>\n\nVersion 2 is a big upgrade, because it now has the potential to support virtually every validation library out there. Of course, Zod is still perfectly usable with just a small modification to the code."],[46,"/>\n\nWhen `superValidate` encounters a schema field that isn't optional, and when its supplied data is empty, a default value is returned to the form, to ensure that the type is correct:\n\ntypevaluestring`\"\"`number`0`boolean`false`Array`[]`object`{}`bigint`BigInt(0)`symbol`Symbol()`"],[251,"/>\n\nWhen a form is submitted, it's important for the UX to show that things are happening on the server. Superforms provides you with loading timers and the following options for handling this:"],[259,"/>\n\nWhen the form data is modified, through modifying `$form`, the modified data (and in turn the form), is considered tainted, also known as \"dirty\" in other form libraries.\n\nA Superforms feature is to prevent the user from losing data when navigating away from a tainted form."],[255,"`delayMs` should be positive and always smaller than or equal to `timeoutMs`, otherwise the timer behavior will be undefined. And of course, the Superforms use:enhance must be added to the form element, since this is client-side behavior."],[81,"`FieldPath` is gone - the above methods are now using a string accessor like `tags[2].id` instead of the previous array syntax `['tags', 2, 'id']`.\n\n\n\nThis also applies to generic components. The types have been simplified, so you should change them to this, also described on the componentization page:\n\n\n\nThe `FormPathLeaves` type is there to prevent using a schema field that isn't at the end of the schema (the \"leaves\" of the schema tree)Also note that arrays and objects cannot be used in `formFieldProxy`. So if your schema is defined as:\n\n\n\nThis only applies to `formFieldProxy`, since it maps to errors and constraints as well as the form. If you want to proxy just a form value, `fieldProxy` will work with any part of the schema."],[145,"`intProxy`, `numberProxy`, `dateProxy`, and `stringProxy` now have an `empty` option, so empty values can be automatically set to `null` or `undefined`."],[6,"`message` is a convenience method for setting `form.message`, best explained by an example:\n\n\n\nNote that the `status` option must be in the range `400-599`."],[90,"`noErrors` is removed from the options. Use `errors` instead to determine if errors should be added or not to the validation.\n\n\n\nThe 1.0 release notes have a full list of changes, and as usual, let me know on Github or Discord if something is unclear or not working."],[205,"`onResult` is useful when you have set `applyAction = false` and still want to redirect, since the form doesn't do that automatically in that case. Then you can do:\n\n\n\nAlso, if `applyAction` is `false`, which means that `$page.status` won't update, you'll find the status code for the request in `result.status`."],[122,"`SuperDebug` is a debugging component that gives you colorized and nicely formatted output for any data structure, usually `$form` returned from `superForm`. It also shows the current page status in the top right corner.\n\nIt's not limited to the Superforms data, other use cases includes debugging plain objects, promises, stores and more."],[22,"`SuperDebug` is a must-have debugging component that gives you colorized and nicely formatted output for any data structure, usually `$form`. \n\nMore information and usage examples can be found on the SuperDebug page."],[124,"<Input {form} />"],[130,"<SuperDebug \n  data={$form} \n  theme=\"vscode\" \n  --sd-code-date=\"lightgreen\"\n/>"],[125,"A label is useful when using multiple instance of SuperDebug."],[156,"A new `isTainted` method is available on `superForm`, to check whether any part of the form is tainted. Use it instead of testing against the `$tainted` store, which may give unexpected results."],[106,"A new `superForm.isTainted` method is available, to check whether any part of the form is tainted. Use it instead of checking the `$tainted` store, which may give unexpected results.\n\n\n\nSpeaking of tainted, it now keeps track of the original data, so if you go back to a previous value, it's not considered tainted anymore."],[257,"A perfect use for these timers is to show a loading indicator while the form is submitting:\n\nsrc/routes/+page.svelte\n\n\n\nThe reason for using `delayed` instead of `submitting` is based on the article Response Times: The 3 Important Limits, which states that for short waiting periods, no feedback is required except to display the result. Therefore, `delayed` is used to show a loading indicator after a little while, not instantly."],[12,"A proxy handles bi-directional updates and data transformation of a corresponding form field. Updates in either the proxy or data it points to, will reflect in the other."],[101,"A simple change: `fieldErrors` is renamed to `valueErrors`."],[256,"After a certain time when the form is submitted, determined by `delayMs` and `timeoutMs`, the timers changes state. The states are:\n\nThese states affect the readable stores `submitting`, `delayed` and `timeout`, returned from `superForm`. They are not mutually exclusive, so `submitting` won't change to `false` when `delayed` becomes `true`."],[262,"An `isTainted` method is available on `superForm`, to check whether any part of the form is tainted:"],[157,"An `onChange` event is added to the `superForm` options, so you can track specific fields for changes. Check the events page for the details."],[151,"An oft-requested feature has been support for unions, which has always been a bit difficult to handle with `FormData` parsing and default values. But unions can now be used in schemas, with a few compromises:"],[103,"Another simple change: If you've been using `defaultValidators`, set the value `'clear'` on the `validators` option instead."],[120,"Any $10 or more monthly donation will be listed on this page with a picture and link."],[183,"Any ActionResult with status `error` is transformed into `failure` by Superforms to avoid form data loss. The SvelteKit default is to render the nearest `+error.svelte` page, which will wipe out the form and all data that was just entered. Returning `fail` with a status message or using the onError event is a more user-friendly way of handling server errors.\n\nYou can prevent this by setting the following option. Use with care, since the purpose of the change is to protect the user from data loss."],[188,"As said, errors are available in the `$errors` store. It gives you high flexibility, since you can place error messages anywhere on the page.\n\nIn larger forms, the submit button may be far away from the error, so it's nice to show the user where the first error is. There are a couple of options for that:"],[24,"By looking at the rather simple get started tutorial, it's obvious that quite a bit of boilerplate code adds up for a Superform:\n\n\n\nAnd it also gets bad in the script part when you have more than a couple of forms on the page:\n\n\n\nThis leads to the question of whether a form and its fields can be factored out into components?"],[243,"By setting the `SPA` option to `true`, the form won't be sent to the server when submitted. Instead, the client-side validators option will determine if the form is valid, and you can then use the onUpdate event as a submit handler, for example to call an external API with the form data.\n\nRemember that the Superforms use:enhance must be added to the form for SPA to work."],[229,"By simply setting `dataType` to `'json'`, you can store any data structure allowed by devalue in the `$form` store, and you don't have to worry about failed coercion, converting strings to objects and arrays, etc.\n\nYou don't even have to set a name on the form fields anymore, since the actual data in `$form` is now posted, not the input fields in the HTML. They are now simply UI components for modifying a data model (as they should be).\n\nWhen `dataType` is set to `'json'`, the `onSubmit` event will contain `FormData`, but it cannot be used to modify the posted data. You need to set or update `$form`, or in special cases, use jsonData in onSubmit.This also means that the `disabled` attribute, which normally prevents input fields from being submitted, will not have that effect. Everything in `$form` will be posted when `dataType` is set to `'json'`.Modifying the `form` store programmatically is easy, you can either assign `$form.field = ...` directly, which will taint the affected fields. If you want to prevent the form from being tainted, you can use `form.update` with an extra option:\n\n\n\nThe `taint` options are:\n\n\n\nWhich can be used to not only prevent tainting, but also untaint the modified field(s), or the whole form."],[29,"Checkboxes don't bind with `bind:value` but with `bind:checked`, which requires a `boolean`.\n\nBecause our component is generic, `value` returned from `formFieldProxy` is unknown, but we need a `boolean` here. Then we can add a type parameter to `FormPathLeaves` to narrow it down to a specific type, and use the satisfies operator to specify the type:\n\n\n\nThis will also narrow the `field` prop, so only `boolean` fields in the schema can be selected when using the component.\n\nCheckboxes, especially grouped ones, can be tricky to handle. Read the Svelte tutorial about bind:group, and see the Ice cream example on Stackblitz if you're having trouble with it."],[32,"Contributions to Superforms are very welcome! The issues and discussion pages on Github are always open for comments, and if you want to contribute some code, it's quite easy. Just fork either the Superforms repository or its website, and then you just need to execute the following to be up and running:\n\n\n\n\n\nIf you find a typo on the website, you can make a quick PR directly in its Github repository."],[15,"Creates a string store for a boolean schema field. The option can be used to change what string value should represent `true`. An empty string always represents `false`.\n\n\n\nOptions:"],[16,"Creates a string store for a Date schema field. The option can be used to change the proxied string format of the date.\n\n\n\nOptions:"],[14,"Creates a string store for a number field in the schema. It's rarely needed as Svelte handles this automatically with `bind:value`. \n\n\n\nOptions:\n\n\n\nUse the `empty` option to set the field to some of the defined values. Use `initiallyEmptyIfZero` to set the field to empty if the initial value is zero, to show the placeholder text, usually in combination with the `empty` option being set to `'zero'`."],[17,"Creates a string store for a string schema field. It may look redundant, but the option can be useful if you need to convert an empty string to `null` or `undefined`.\n\n\n\nOptions:"],[13,"Creates a string store for an integer field in the schema. It's rarely needed as Svelte handles this automatically with `bind:value`. \n\n\n\nOptions:\n\n\n\nUse the `empty` option to set the field to some of the defined values. Use `initiallyEmptyIfZero` to set the field to empty if the initial value is zero, to show the placeholder text, usually in combination with the `empty` option being set to `'zero'`."],[132,"Debugging Svelte's `$page` data, when the going gets tough. Since it can contain a lot of data, using the `collapsible` prop is convenient."],[226,"Due to the many different use cases, it's hard to set sensible default options for multiple forms. A common issue is that when one form is submitted, the other forms' data are lost. This is due to the page being invalidated by default on a successful response.\n\nIf you want to preserve their data, you'd almost certainly want to set `invalidateAll: false` or `applyAction: false` on them, as in the example above. The use:enhance option explains the differences between them.\n\nAlso check out the componentization page for ideas on how to place the forms into separate components, to make `+page.svelte` less cluttered."],[105,"Enums don't have a default \"empty\" value unlike other types, so it's not certain what the default value should be. To be able to set an enum as required, the first enum value will be used, unless there is an explicit default."],[48,"Fields set to `null` will take precedence over `undefined`, so a field that is both `nullable` and `optional` will have `null` as its default value. Otherwise, it's `undefined`."],[149,"Finally, it's possible to handle files with Superforms, even with validation on the client. See the dedicated file uploads section for more information."],[203,"For advanced validation, you can change client-side validators for the current form submission with this function."],[142,"For errors and proxies with nested data, the array syntax was a bit clunky. It has now been replaced with a typesafe string path, so you can write it just as you would access an object property in normal JS:"],[159,"For number fields, a UX problem has been that the default value for numbers, `0`, hides the placeholder text, and it's not always wanted to have a number there initially. But it's now possible to make this work, with two new options in `intProxy` and `numberProxy`:\n\n\n\nThe `empty` option, if set to `'zero'`, will set the field to 0 if it's empty, and the unfortunately long `initiallyEmptyIfZero` will ensure the field is empty at first."],[5,"For setting errors on the form after validation. It returns a `fail(status, { form })` so it can be returned immediately, or more errors can be added by calling it multiple times before returning. `form.valid` will also be set to `false`.\n\nUse the `overwrite` option to remove all previously set errors for the field, and `status` to set a different status than the default `400` (which must be in the range 400-599).\n\nTo set a form-level error, the `field` argument can be skipped, or set to an empty string.To set a form-level error, the `field` argument can be skipped, or set to an empty string.To set an array-level error, append `._errors` to the field parameter, like `\"tags._errors\"`.To set an array-level error, append `._errors` to the field parameter, like `\"tags._errors\"`."],[166,"For some input types, a certain format is required. For example with `date` fields, both the underlying data and the constraint needs to be in `yyyy-mm-dd` format, which can be handled by using a proxy and adding attributes after the constraints spread, in which case they will take precedence:\n\n\n\nCheck the validation attributes and their valid values at MDN."],[78,"For type safety reasons, you cannot pass `null`, `undefined`, or arbitrary data to `superForm` anymore. Instead, you should be using `superValidate` to get the initial form object, by returning `{ form }` from a load function and passing it to `superForm`.\n\nNot doing this will result in the following warning:\n\n\n\nWhen this happens, you need to check the call to `superForm` and apply the above fix.\n\nIn client-only scenarios, especially in SPA's, you must use `superValidate` or `superValidateSync` before calling `superForm`. Read more on the SPA page about this."],[54,"From version 2, file uploads are handled by Superforms. Read all about it on the file uploads page."],[110,"Generic components were previously using Zod types for type safety. It is simpler now:\n\nTextInput.svelte\n\n\n\n+page.svelte"],[232,"Given the following schema, which describes an array of tag objects:\n\n\n\nYou can build a HTML form for these tags using an `{#each}` loop:\n\n\n\nTake extra care with the optional chaining operator `?.`, it's easy to miss a question mark, which will lead to confusing errors.Note that we're using the index of the loop, so the value can be bound directly to `$form`. You can't use the each loop variable, hence the underscore. This is what it looks like:"],[21,"Given the following schema:\n\n\n\nA proxy for a HTML date field can be used like this:"],[119,"Here are the kind individuals and organizations that are donating $10 or more monthly to the future development and support of Superforms!\n\nTo them and all of you that have donated a one-time amount - Thank you, it's so appreciated. ❤️ Whenever I have time, I will reach out and say thank you personally."],[227,"Here we have two forms, with separate id's and their `invalidateAll` option set to `false`, to prevent page invalidation, which would otherwise clear the other form when the load function executes again."],[92,"Here's a brief list of the changes, keep reading further down for details."],[72,"If a form error occurs, which happens when `error(...)` is called in a form action (and `use:enhance` is added to the form), the `flashMessage.onError` callback can be used to transform it into your flash message type, so you can display the error at the flash message instead of in `form.message`."],[152,"If a schema field can be more than one type, it's not possible to know what default value should be set for it. Therefore, you must specify a default value for unions explicitly:"],[4,"If data is empty, a `SuperValidated` object with default values for the schema is returned:\n\n\n\nSee this page for a list of default schema values."],[108,"If no data is sent to `superValidate`, and no errors should be displayed, as is default in the load function:\n\n\n\nThen the default values won't be parsed with the schema. In other words, no side-effects like `z.refine` will be executed. If you need initial validation of even the default data, set the `errors` option to `true`, and optionally clear the errors after validation:"],[71,"If set to `true`, when `form.message` is updated, the flash message will be synchronized with it, including honoring the clearOnSubmit option. \n\nIt's important that the flash and form message types are matching, in this case. See this section on how to make the form message strongly typed."],[56,"If the API doesn't return an ActionResult with the form data, you cannot post to it directly. Instead you can use the SPA mode of Superforms and call the API with fetch or similar in the `onUpdate` event."],[65,"If the schema field for the select menu doesn't have an empty string as default value, for example when it's optional, and you have an empty first option, like a \"Please select item\" text, the field will be set to that empty string, tainting the form.\n\nIt can be fixed by setting the option and the default schema value to an empty string, even if it's not its proper type. See this section for an example."],[204,"If the submission isn't cancelled and client-side validation succeeds, the form is posted to the server. It then responds with a SvelteKit ActionResult, triggering the `onResult` event.\n\n`result` contains the ActionResult. You can modify it; changes will be applied further down the event chain. `formElement` is the `HTMLFormElement` of the form. `cancel()` is a function which will cancel the rest of the event chain and any form updates.\n\nIn most cases, you don't have to care about the `ActionResult`. To check if the form validation succeeded, use onUpdated, or onUpdate if you want to modify or cancel the result before it's displayed."],[192,"If you have a sticky navbar, set its CSS selector here and it won't hide any errors due to its height and z-index."],[247,"If you have initial data in the top level of the component, you can pass it as a first parameter to `defaults`, but remember that it won't be validated. There's a trick though; if you want to show errors for the initial data, you can call `validateForm` directly after `superForm`. The `validators` option must be set for this to work:"],[97,"If you have used type parameters for a call to `superValidate` before, or have been using the `SuperValidated` type, you now need to wrap the schema parameter with `Infer`:\n\n\n\n\n\nIf your schema uses transformations or pipes, so the input and output types are different, there's an `InferIn` type and a third type parameter that can be used.\n\n\n\nAlso, `constraints` are now optional in the `SuperValidated` type, since they won't be returned when posting data anymore, only when loading data, to save some bandwidth. This is only relevant if you're changing the constraints before calling `superForm`."],[207,"If you just want to ensure that the form is validated and do something extra afterwards, like showing a toast notification, `onUpdated` is the easiest way.\n\nThe `form` parameter contains the validation result, and should be considered read-only here, since the stores have updated at this point.\n\nExample"],[221,"If you return data that you want to use programmatically instead of just displaying it, like in a toast message, you can do that in the onUpdate or onUpdated event:\n\n\n\n\n\nThe difference between the two events is that you can modify and cancel the update in `onUpdate`, compared to `onUpdated`, where the form data, errors, etc have already updated, making it best for non-store-related things like displaying a toast."],[270,"If you want the form to be initially empty, just pass the adapter as in the example above, and the form will be filled with default values based on the schema. For example, a `string` field results in an empty string, unless you have set a default."],[2,"If you want the form to be initially empty, you can pass the adapter as the first parameter:\n\n\n\nIf you want to populate the form, for example, from a database, `URL` parameters in the load function, or `FormData` in the form actions, send the data as the first parameter and the adapter second:"],[33,"If you want to contribute to the future development of Superforms, you can make a donation:\n\nIf you have appreciated my support on Discord and Github, or want to ensure that things keep rolling, please support open source software in this way."],[127,"If you want to debug multiple stores/objects in the same instance.\n\n\n\n<SuperDebug data={{$form, $errors}} />"],[263,"If you want to modify the `form` store without tainting any fields, you can update it with an extra option:\n\n\n\nThe `taint` options are:\n\n\n\nWhich can be used to not only prevent tainting, but also untaint the modified field(s), or untainting the whole form.\n\nFor login and registration forms, password managers could automatically taint the form when inserting saved usernames and passwords."],[271,"If you want to populate the form, you can send data to `superValidate` as the first parameter, adapter second, like this:\n\n\n\nAs long as the data partially matches the schema, you can pass it directly to `superValidate`. This is useful for backend interfaces, where the form should usually be populated based on a url like `/users/123`.\n\nErrors will be automatically displayed when the form is populated like this, but not when empty. You can modify this behavior with an option."],[136,"If you're making or aiming to make money on your project, a donation proportional to the current profit of the project or the company you work for, will give you a month of commercial support. Donate with one of the options below, then ask in the #commercial-support channel on Discord, or on Github.\n\nFor a longer period, you can make a monthly donation. Any $10 or higher monthly donation will be listed on the Sponsors page with a picture and link, and on Discord as a Sponsor. Many thanks if you want to support Open Source Software in this way!"],[202,"If you're using nested data, the `formData` property cannot be used to modify the posted data, since `$form` is serialized and posted instead. If you want to post something else than `$form`, you can do it with the `jsonData` function:\n\n\n\nNote that if client-side validation is enabled, it's always `$form` that will be validated. Only if it passes validation, the data sent with `jsonData` will be used. It does not work in SPA mode either, as data transformation can be handled in `onUpdate` in that case."],[135,"If you're using Superforms in a personal or non-profit project, support is completely free; a star on Github is more than enough if you want to show your appreciation. Join #free-support on Discord and ask away!"],[50,"If you're using the enum for radio buttons or a select menu, you may not want any option to be initally selected. This can be achieved in a similar way to the misuse of the default value above, by setting it to an empty string and casting it:"],[215,"If your validation library cannot validate files, you can obtain `FormData` from the request and extract the files from there, after validation:\n\n\n\nIf the file field isn't a part of the schema, but you still want errors for it, you can add an optional field to the schema with the same name, and use setError to set and display an error message."],[211,"Important: Because file objects cannot be serialized, you must return the form using `fail`, `message` or `setError` imported from Superforms:\n\n\n\nOtherwise, a `withFiles` helper function is required:\n\n\n\nThis will remove the file objects from the form data, so SvelteKit can serialize it properly."],[200,"In a single-page application, or if client-side validation fails, the validation happens entirely on the client, instead of being returned from the server between `onSubmit` and `onResult`."],[109,"In hindsight, this should have been the default, given the forgiving nature of the data coercion and parsing. When a default value exists, the field is not required anymore. If that field isn't posted, its default value will be added to `form.data`."],[186,"In the case of a server error, Superforms will normalize the different kind of server errors that can occur:\n\nError typeExampleExpected error`error(404, { code: 'user_not_found', message: 'Not found' })`Exception`throw new Error(\"Database connection error\")`JSON response`return json({ code: 'rate_limited', status: 429 }, { status: 429 })`Other response`<!doctype html><html lang=\"en\"><head><meta charset=...`These can be handled with the onError event, assuming the Superforms use:enhance action is applied to the form. If it isn't, the nearest `+error.svelte` page will be rendered.\n\nIn general, returning a status message is recommended instead of calling `error` or throwing exceptions, as this will make even the non-JS users keep their form data."],[95,"In the example above, both the schema and the defaults are defined outside the load function, on the top level of the module. This is very important to make caching work. The adapter is memoized (cached) with its arguments, so they must be kept in memory. Therefore, define the schema, options and eventual default values for the adapter on the top level of a module, so they always refer to the same object."],[94,"Instead of a Zod schema, you now use an adapter for your favorite validation library. The following are currently supported:\n\nLibraryAdapterRequires defaultsArktype`import { arktype } from 'sveltekit-superforms/adapters'`YesJoi`import { joi } from 'sveltekit-superforms/adapters'`NoTypeBox`import { typebox } from 'sveltekit-superforms/adapters'`NoValibot`import { valibot } from 'sveltekit-superforms/adapters'`NoVineJS`import { vine } from 'sveltekit-superforms/adapters'`YesYup`import { yup } from 'sveltekit-superforms/adapters'`NoZod`import { zod } from 'sveltekit-superforms/adapters'`NoWith the library installed and the adapter imported, all you need to do is wrap the schema with it:\n\n\n\nThe libraries in the list that requires defaults don't have full introspection capabilities (yet), in which case you need to supply the default values for the form data as an option:"],[36,"Instead of the text version below, here's the video version. It's using version 1 of Superforms, but the differences are small; use an adapter and add `resetForm: false` to the options."],[60,"It can then be accessed in `PageData` in `+page.svelte`:"],[218,"It is used to display the message on the client, like any other store:\n\n\n\nHowever, we need to send it from the server first. Using the `message` function makes this rather simple."],[100,"It's not possible to set the `id` option to `undefined` anymore, which is very rare anyway. By default, the id is automatically set to a string hash of the schema. It's only for multiple forms on the same page, or dynamically generated schemas, that you may want to change it."],[233,"It's possible to post multiple HTML elements with the same name, so you don't have to use `dataType: 'json'` for arrays of primitive values like numbers and strings. Just add the input fields, all with the same name as the schema field, which can only be at the top level of the schema. Superforms will handle the type coercion to array automatically, as long as the fields have the same name attribute:\n\n\n\n\n\nTo summarize, the index `i` of the `#each` loop is used to access `$form.tags`, where the current values are (you cannot use the loop variable), and then the `name` attribute is set to the schema field `tags`, so its array will be populated when posted.\n\nThis example, having a `max(3)` limitation of the number of tags, also shows how to display array-level errors with the `$errors.tags._errors` field."],[194,"It's possible to set form-level errors by refining the schema, which works better together with client-side validation, as errors added with setError won't persist longer than the first validation of the schema on the client.\n\n\n\nThese can be accessed on the client through `$errors?._errors`. The same goes for array errors, which in the above case can be accessed through `$errors.tags?._errors` (alternatively, use an arrayProxy)."],[242,"It's possible to use the whole Superforms library on the client, for example in single page applications or when you want to call an external API instead of the SvelteKit form actions. A SPA is easy to create with SvelteKit, documented here."],[41,"Let's add a load function to the page, using the SvelteKit route parameters to look up the requested user:\n\nsrc/routes/users/[[id]]/+page.server.ts\n\n\n\nSome simple logic is used to find the user, and then detect if a 404 should be displayed. At the end, we're returning `form` as usual, but also `users`, so they can be displayed as a list.\n\n(Sometimes, CRUDL is used as an acronym, since listing is also fundamental to data management.)\n\nNow that we have loaded the data, let's display it in a page component:\n\nsrc/routes/users/[[id]]/+page.svelte\n\n\n\nThere are plenty of variables extracted from `superForm`; refer to the API reference for a complete list. We've also setting the `resetForm` to `false`, since the data should be kept after editing.\n\nWe've also prepared a status message, using `$page.status` to test for success or failure, and we're using `$form.id` to display a \"Create user\" or \"Update user\" title. Now let's add the form itself:\n\nsrc/routes/users/[[id]]/+page.svelte (continued)\n\n\n\nRemember to use SuperDebug if you want to see your form data live!"],[240,"Modify the form below without submitting, then click the browser back button and then forward again. The form should be restored to its intermediate state."],[185,"Most errors will be set automatically when the data is validated, but you may want to add errors after determining that the data is valid. This is easily done with the `setError` helper function.\n\n\n\n`setError` returns a `fail(400, { form })` so it can be returned immediately, or more errors can be added by calling it multiple times before returning. Check the API for additional options.\n\nIf you're using nested data, a string path is used to specify where in the data structure the error is:\n\n\n\nErrors added with `setError` will be removed when a schema is used in client-side validation and the first validation occurs (such as modifying a field)."],[197,"Most methods in the validation schema has a parameter for a custom error message, so you can just add them there. For example with Zod:\n\n\n\nThis is also a good place for translation strings."],[49,"Multi-type unions must have an explicit default value, or exactly one of the union types must have one. Enums doesn't, otherwise it wouldn't be possible to have a required enum field. If no explicit default, the first enum value will be used.\n\n\n\nIf the field is nullable or optional, there's no need for a default value (but it can still be set)."],[225,"Multiple forms also work without `use:enhance`, though in this case you must add a hidden form field called `__superform_id` with the `$formId` value:\n\n\n\nThis is also required if you're changing schemas in a form action, as can happen in multi-step forms."],[131,"Note that styling the component produces the side-effect described in the Svelte docs."],[150,"Now that file uploads is a feature, SuperDebug displays file objects properly:"],[116,"Of course, there are also new features, so the migration will be worthwhile. Check the what's new page for more information."],[224,"On the client, the id is picked up automatically when you pass `data.form` to `superForm`, so in general, you don't have to add it on the client.\n\n\n\nYou can also change the id dynamically with the `$formId` store, or set it directly in the form with the following method:"],[137,"Please report bugs as an issue on Github.\n\nFixing bugs and working on new features will be handled in due time, but if you want to speed up the process, a donation is welcome, or you can submit a pull request, since with open source, we can also pay with our time."],[158,"Previously you could call `validate()` for retrieving a validation result for the whole form, but you must now use `validateForm()`. There are two options, `{ update?: true, schema?: ValidationAdapter<Partial<T>> }` which can be used to trigger a full client-side validation, and validate the schema partially, which is useful for multi-step forms."],[104,"Previously, it was possible to post the name of the enum as a string, even if it was a numeric enum. That's not possible anymore:\n\n\n\nFor string enums, it works to post strings, of course."],[147,"Previously, it wasn't possible to handle errors for arrays in the schema, like a minimum or maximum number of items. Now it's possible:\n\n\n\n\n\nThe 1.0 release notes have a full list of changes for 1.0, and as usual, let me know on Github or Discord if something is unclear or not working."],[114,"Previously, there was a `message` parameter in the onError event. It's gone now, since it was pointing to the message store, and you might as well just assign it directly:"],[99,"Previously, you could do `const result = await validate()` to get a validation result for the whole form. This overload caused a lot of typing issues, so it has now been split into `validate` for fields, and `validateForm` for the whole form. Just replace the calls to `validate()` with `validateForm()` to fix this."],[123,"PropTypeDefault valueDescriptiondataanyData to be displayed by SuperDebug. The only required prop.displayboolean`true`Whether to show or hide SuperDebug.statusboolean`true`Whether to show or hide the HTTP status code of the current page.labelstring`\"\"`Add a label to SuperDebug, useful when using multiple instances on a page.collapsibleboolean`false`Makes the component collapsible on a per-route basis.collapsedboolean`false`If the component is `collapsible`, sets it to initially collapsed.stringTruncatenumber`120`Truncate long string field valuns of the data prop. Set to `0` to disable truncating.rawboolean`false`Skip promise and store detection when `true`.functionsboolean`false`Enables the display of fields of the data prop that are functions.theme\"default\", \"vscode\"`\"default\"`Display theme, which can also be customized with CSS variables.refHTMLPreElementReference to the pre element that contains the data."],[18,"Proxies a form field, returning stores similar to `superForm` but for a single field. For arrays in the schema, see below for how to create an `arrayProxy`.\n\nThe whole object returned from `superForm` is required here, not just the `$form` store.\n\nOptions:\n\n\n\nThe option can be used to prevent tainting the form when modifying the proxy.\n\nFor more details about formFieldProxy, see the components page."],[19,"Proxies an array in a form, returning stores similar to `superForm` but for the array.\n\nThe whole object returned from `superForm` is required here, not just the `$form` store.\n\n`errors` displays errors for the *array itself*, for example if the number of items are too few.`errors` displays errors for the array itself, for example if the number of items are too few.`valueErrors` is an array that lists errors for the *content* of the array.`valueErrors` is an array that lists errors for the content of the array.\n\nOptions:\n\n\n\nThe option can be used to prevent tainting the form when modifying the proxy.\n\nAn example of how to use `arrayProxy` in a component is available on Stackblitz."],[20,"Proxies field access in any object, usually in `$form`, but in that case `formFieldProxy` and `arrayProxy` are more convenient.\n\n\n\nOptions:"],[182,"Quite rarely! If you have a single form on the page and nothing else is causing the page to invalidate, you'll probably be fine as it is. For multiple forms on the same page, you have to experiment with these three options. Read more on the multiple forms page."],[161,"Read the detailed migration guide to convert your projects to Superforms version 2. Ask any migration questions in the #v2-migration Discord channel, or open an issue on Github"],[87,"Resetting the form now works without `use:enhance` and without JavaScript! Just set the `resetForm` option to `true`.\n\nIf you have used the function version of `resetForm`, `() => boolean`, it is now synchronous."],[61,"Returning extra data from a form action is convenient with a status message if the data is simple, but for larger data structures you can also return it directly, in which case it can be accessed in the onUpdate event, or in `ActionData`:\n\n\n\nUsing onUpdate\n\n\n\nUsing ActionData"],[7,"Returns the default values for a schema, either the Superforms defaults or the ones you set on the schema yourself.\n\n\n\nThis corresponds to the `form.data` returned from `const form = await superValidate(zod(schema))`."],[10,"See [SubmitFunction](https://kit.svelte.dev/docs/types#public-types-submitfunction) for details about the `onSubmit` arguments, and [ActionResult](https://kit.svelte.dev/docs/types#public-types-actionresult) for `onResult`.See SubmitFunction for details about the `onSubmit` arguments, and ActionResult for `onResult`.See [SPA action form](/concepts/spa#spa-action-form) for details about the `string` value for the `SPA` option.See SPA action form for details about the `string` value for the `SPA` option."],[3,"See the page about multiple forms for information about when to use `id`."],[265,"Select your environment above and run the install command in your project folder.\n\nIf you're starting from scratch, create a new SvelteKit project: \n\n{#if $settings.pm == 'npm i -D'}{:else if $settings.pm == 'pnpm i -D'}{:else if $settings.pm == 'yarn add --dev'}{/if}\n\n{#if ['', 'ajv', 'superstruct', 'n/a'].includes($settings.lib)}\n\nPlease select a validation library above before continuing, as the tutorial changes depending on that.{/if}"],[139,"Setting a form `id` for multiple forms on the same page is not required anymore when using `use:enhance`.\n\n\n\nThe one exception is if the forms are using the same schema (identical content), then you'll need an id:\n\n\n\nMultiple forms without `use:enhance` work as well, but an id must be manually specified, either as an option, or in a hidden form field called `__superform_id`.\n\nFor extra safety, a warning will be emitted if identical id's are detected."],[168,"Setting the `validators` option to an adapter with the same schema as on the server, is the most convenient and recommended way. Just put the schema in a shared directory, `$lib/schemas` for example, and import it on the client as well as on the server.\n\nAdding a adapter on the client will increase the client bundle size a bit, since the validation library now has to be imported there too. But the client-side adapter is optimized to be as small as possible, so it shouldn't be too much of an issue. To use it, append `Client` to the adapter import, for example:\n\n\n\nThis works only with the same schema as the one used on the server. If you need to switch schemas on the client, you need the full adapter (for example `zod` instead of `zodClient`).As a super-simple alternative to an adapter, you can also set the option to `'clear'`, to remove errors for a field as soon as it's modified."],[173,"Similar to `validate`, `validateForm` lets you validate the whole form and return a `SuperValidated` result:"],[26,"Since `bind` is available on Svelte components, we can make a `TextInput` component quite easily:\n\nTextInput.svelte\n\n\n\nThe `type` attribute on input elements must be hard-coded in Svelte 4, explained here. Especially important for `type=\"number\"`.+page.svelte\n\n\n\n(Note that you must bind directly to `$form.tags` with the index, you cannot use the each loop variable, hence the underscore.)\n\nThis is a bit better and will certainly help when the components require some styling, but there are still plenty of attributes. Can we do even better?\n\nThings will get a bit advanced from here, so an alternative is to use the Formsnap library, which simplifies componentization a lot."],[244,"Since SPA pages don't have a server representation, you can use +page.ts to load initial data. Combined with a route parameter, we can make a CRUD-like page in a straightforward manner:\n\nsrc/routes/user/[id]/+page.ts\n\n\n\nIf no data should be loaded from `+page.ts`, read further down about the `defaults` function."],[222,"Since there is no form data returned when redirecting, in that case the message will be lost. It's quite common to redirect after a successful post, so the `message` property isn't a general solution for displaying status messages.\n\nThe library sveltekit-flash-message is a complete solution that works with redirects, however. It can be directly integrated into Superforms, documented here."],[246,"Since you can't use top-level await in Svelte components, you can't use `superValidate` directly in `+page.svelte`, as it is async. But if you want the default values only for the schema, you can import `defaults` to avoid having a `+page.ts`."],[250,"Some validation libraries have a \"catch-all\" feature, allowing extra fields to be posted and validated. Here's an example of how to use it with Zod:"],[248,"Sometimes you want a fetch function for a form field or a list of items, for example checking if a username is valid while entering it, or deleting rows in a list of data. Instead of doing this manually with fetch, which cannot take advantage of Superforms' loading timers, events and other functionality, you can create a \"SPA action form\", a hidden form that does most of the work, with the convenience you get from `superForm`:\n\n\n\nA SPA action form takes a `SuperValidated` object as usual as the first parameter, or you can specify default values directly as in the example. Then you specify the form action URL in the `SPA` option, and you have a hidden form that you can populate in the `onSubmit` event, or its `enhance` method can be used on any number of forms on the page (one for each row in a list of data).\n\nAs you'd usually want no page updates for this, a SPA action form has invalidateAll and applyAction set to false as default, but it can be changed with the `superForm` options as usual.Create a form action for it:\n\n\n\nAnd finally, an `on:input` event on the input field:\n\n\n\nA full example of a username check is available on SvelteLab."],[9,"src/routes/login/+server.ts"],[38,"Start from scratch in a new SvelteKit project by executing one of the following commands in your project directory:\n\n\n\n\n\nSelect Skeleton project and Typescript syntax at the prompts, the rest is up to you. Then add this to `<head>` in src/app.html for a much nicer visual experience:"],[258,"Submit the following form and play around with the different settings. Different loading spinners are set to display when `delayed` and `timeout` are true respectively. \n\nThe default multipleSubmits setting prevents the form from being submitted multiple times, until the `timeout` state is reached. Click multiple times to see the effect of that.\n\nBy experimenting with the timers and the delay between them, it's certainly possible to prevent the feeling of unresponsiveness."],[128,"SuperDebug displays `File` and `FileList` objects as well:"],[75,"Superforms 1.x is available, so if you're still on version 0.x, please upgrade! No support can be given for the 0.x version.\n\n[Migration guide 0.x -> 1.0](/migration)Migration guide 0.x -> 1.0[What's new in 1.0?](/whats-new-v1)What's new in 1.0?[0.x documentation](https://superforms-legacy.vercel.app/)0.x documentation"],[67,"That's possible with an empty schema, or using the `$formId` store with the button to set the form id dynamically. See this SvelteLab project for an example."],[111,"The `/client` and `/server` paths for imports aren't needed anymore, but are kept for backwards compatibility. If you're having problems with loading pages, import everything except adapters from `sveltekit-superforms`. The same goes for `SuperDebug`, which is now the default export of the library."],[79,"The `$valid`, `$empty`, and `$firstError` stores are removed from the client; they weren't that useful. `$allErrors` can be used instead, together with the new `$posted` store (which shows if the form has been previously posted or not).\n\n`empty` is removed from the object returned from `superValidate`, which type was previously called `Validation` but is now called `SuperValidated`."],[213,"The `as File` casting is needed since `null` is the value for \"no file\", so be aware that `$form.image` may be `null` even though the schema type says otherwise. If you want the upload to be optional, set the field to `nullable` and it will be type-safe."],[252,"The `clearOnSubmit` option decides what should happen to the form when submitting. It can clear the status message, all the errors, both, or none. The default is to clear the message.\n\nIf you don't want any jumping content, which could occur when errors and messages are removed from the DOM, setting it to `none` can be useful."],[237,"The `date` input type is a bit special. Its underlying data is a string in `yyyy-mm-dd` format, but the `dateProxy` returns an ISO date string as default, so you need to use the `format` option to return the date part only:\n\n\n\n\n\nWe're also taking using the `min` and `max` constraints to limit the date picker selection. The following example limits the date from today and forward, and also uses the empty option of the proxy, to set an invalid date to `undefined`:"],[11,"The `defaults` function can be useful on the client in Svelte components and SPA mode, since components cannot have top-level `await`."],[102,"The `emptyIfZero` setting is removed from `numberProxy` and `intProxy`."],[112,"The `fields` object returned from `superForm` was an inferior version of formFieldProxy, and has now been removed. Use `formFieldProxy` to create your own instead."],[209,"The `onChange` event is not triggered when submitting, but every time `$form` is modified, both as a html event (when modified with `bind:value`) and programmatically (direct assignment to `$form`). \n\nThe event is a discriminated union that you can distinguish between using the `target` property:\n\n\n\nIf you want to handle all change events, you can access `event.paths` without distinguishing."],[201,"The `onSubmit` event is the first one triggered, being essentially the same as SvelteKit's own `use:enhance` function. It gives you a chance to cancel the submission altogether. See the SvelteKit docs for most of the SubmitFunction signature. There are two extra properties in the Superforms `onSubmit` event:"],[206,"The `onUpdate` event is triggered right before the form update is being applied, giving you the option to modify the validation result in `form`, or use `cancel()` to negate the update altogether. You also have access to the form's `HTMLFormElement` with `formElement`. \n\nIf your app is a single-page application, `onUpdate` is the most convenient to process the form data. See the SPA page for more details.\n\nThe `form` parameter is deliberately named \"form\", to avoid using the `$form` store, as changes to the form parameter are applied to `$form` and the other stores, when the event is completed.You can also access the `ActionResult` in `result`, which is narrowed to type `'success'` or `'failure'` here. You can use it together with the `FormResult` helper type to more conventiently access any additional form action data:"],[190,"The `scrollToError` option determines how to scroll to the first error message in the form. `smooth` and `auto` are values from Window.scroll. If the non-string options are used, Element.scrollIntoView will be called with the option. This is mostly used with nested scrollbars, in which case Window.scroll won't work."],[80,"The `setError` function works as before, except that you must use an empty string instead of `null` for form-level errors.\n\nNote, however, that `setError` conflicts with client-side validation, the errors will be removed when a Zod schema is used for validation. Therefore, rely on the schema for most validation, if you're using it client-side.\n\n\n\nThe above error set in `refine` will be available on the client as `$errors._errors` as before, and will be automatically removed (or added) during client-side validation.\n\nIf you'd like a form-level message to persist, using `message` instead of `setError` will persist it until the next form submission:\n\n\n\nFinally, the status option for `setError` (and `message`) must be in the `400-599` range."],[84,"The `valid` option is removed from `message/setMessage`; any status >= 400 will return a fail. As with `setError`, the status code must be in the `400-599` range."],[146,"The `validate` function can be used to validate a specific field in the form, but now you can also call validate with no arguments, and get a validation result back for the whole form."],[172,"The `validate` function, deconstructed from `superForm`, gives you complete control over the validation process for specific fields. Examples of how to use it:"],[162,"The 2.0 release notes have a full list of changes."],[93,"The biggest breaking change is that two options now follow the SvelteKit defaults more closely:\n\nresetForm is now `true` as defaultresetForm is now `true` as defaulttaintedMessage is now `false` as defaulttaintedMessage is now `false` as default\n\nBut don't worry, there's no need to change these options on every form to migrate. Instead, add the following define in `vite.config.ts` to keep the original behavior:\n\n\n\nYou can do the same on a form-by-form basis by setting the `legacy` option on `superForm` to `true` as well.\n\nWhen legacy mode is set and you want to use the new file uploads feature, you need to add `{ allowFiles: true }` as an option to `superValidate` in form actions."],[167,"The built-in browser validation can be a bit constrained; for example, you can't easily control the position and appearance of the error messages. Instead (or supplementary), you can use a validation schema and customize the validation with a number of options, so the form errors will be displayed in real-time.\n\nAs with most client-side functionality, use:enhance is required for real-time validation."],[96,"The client-side validation is using the smallest possible part of the adapter, to minimize the bundle size for the client. To use it, append `Client` to the adapter import, for example:\n\n\n\nThis works with the same schema as the one used on the server. If you need to switch schemas on the client (with `options.validators`), you need the full adapter.The built-in Superforms validator is now deprecated, since it requires you to do much of the type checking yourself. To keep using it, import `superformClient` and use the new `Infer` type to type it correctly with the schema, as in the following example. The input parameter can now be `undefined` as well, be sure to check for that case.\n\n\n\nAs said, this adapter requires you to do much of the error-prone type checking manually, so in general it is not a replacement for the other validation libraries. Use it only for a very good reason!"],[37,"The code is available on Stackblitz. Just click the link, and you're up and running in the browser in less than 30 seconds!"],[88,"The default `errorSelector` is now `[aria-invalid=\"true\"],[data-invalid]`, so if you want to be more accessibility-friendly:"],[177,"The default `use:enhance` behavior can be modified, there are three options available, here shown with the default values; you don't need to add them unless you want to change a value."],[187,"The default data in an empty form is usually invalid, but displaying lots of errors upon page load doesn't look good. Superforms handles it like this:\n\nIf no data was posted or sent to `superValidate`, no errors will be returned unless the `errors` option in `superValidate` is `true`. This is what happens in load functions when the only the schema is sent to `superValidate`:\n\n\n\nIf data was sent to `superValidate`, either posted or populated with data, errors will be returned unless the `errors` option is `false`.\n\n\n\nThe `errors` option does not affect the `valid` property of the `SuperValidated` object, which always indicates whether validation succeeded or not."],[155,"The default for `taintedMessage` changed too, it is now `false`, so no message will be displayed if the form is modified, unless you set it to either `true`, a string message, or a function that returns a promise resolved to `true` if navigation should proceed (so you can now use a custom dialog for displaying the message).\n\nThe tainted store is also smarter, keeping track of the original data, so if you go back to a previous value, it's not considered tainted anymore."],[239,"The export has to be on a `+page.svelte` page to work, it cannot be in a component.\n\nThe `options` object contains functions and cannot be serialized for a snapshot. If you modify the options dynamically, make a custom version of the methods to handle the changes."],[86,"The following `superForm` options have changed:"],[89,"The following `superValidate` options have changed:"],[44,"The last loose thread is to display a list of the users. It'll be quite trivial; add this to the top of `+page.svelte`:\n\nsrc/routes/+page.svelte\n\n\n\nAnd some styling for everything at the end:\n\n\n\nThat's it! Thank you for following along, the code is available here on Stackblitz.\n\nIf you have any questions, see the help & support page."],[70,"The library works together with Superforms without any extra configuration, usually you can replace the Superforms status messages with the flash message, and that will work very well.\n\nBut if you have some special use case where you need to integrate the flash message more closely with a form, you can do that by importing its module when calling `superForm`:\n\n\n\nThen the following options are available:"],[220,"The message is of type `any` by default, but you can type it using the `superValidate` type parameters:\n\n\n\nA string can be a bit limiting though; more realistically, there will be some kind of status for the form submission, so making a `Message` type can be useful for consistency.\n\n\n\nTo simplify this even further, if you have the same type for all status messages across the project, you can add a `Message` type to the `App.Superforms` namespace in src/app.d.ts, and it will be automatically set, no need for generic type parameters:\n\nsrc/app.d.ts\n\n\n\nsrc/routes/+page.svelte\n\n\n\nThough if you want to keep it simple with a string or the default `any`, you can use `$page.status` to style the message appropriately:"],[52,"The most common mistake is to forget the `name` attribute on the input field. If you're not using `dataType: 'json'` (see nested data), the form is treated as a normal HTML form, which requires a name attribute for posting the form data."],[98,"The quite popular `superValidateSync` function has changed, since it's not possible to make a synchronous validation anymore (not all validation libaries are synchronous). So if you've validated data with `superValidateSync` (in its first parameter), be aware that superValidateSync cannot do validation anymore. You need to use a `+page.ts` to do proper validation, as described on the SPA page.\n\nSince this is a bit of a security issue, `superValidateSync` has been renamed to `defaults`.\n\nFortunately though, a quick Github search reveals that most of its usages are with the schema only, which requires no validation and no `+page.ts`. In that case, just call `defaults` with your adapter and eventual initial data, and you're good to go:\n\n\n\n\n\nNote that `superValidate` can be used anywhere but on the top-level of Svelte components, so it's not completely removed from the client and SPA usage. But client-side validation is more of a convenience than ensuring data integrity. Always let an external API or a server request do a proper validation of the data before it's stored or used somewhere."],[212,"The recommended way to bind the file input to the form data is through a `fileProxy` or `filesProxy`, but you can also do it with an `on:input` handler. Here are examples for both, which also shows how to add client-side validation for files, which can save plenty of bandwidth!"],[230,"The requirements for nested data to work are as follows:\n\n**JavaScript is enabled in the browser.**JavaScript is enabled in the browser.**The form has the Superforms [use:enhance](/concepts/enhance) applied.**The form has the Superforms use:enhance applied."],[268,"The schema should be defined outside the load function, in this case on the top level of the module. This is very important to make caching work. The adapter is memoized (cached) with its arguments, so they must be kept in memory. Therefore, define the schema, its options and eventual defaults on the top level of a module, so they always refer to the same object."],[82,"The signature for `allErrors` has changed, to make it easier to group related messages:\n\n\n\nThe path follows the same format as the above-described string accessor path. If you want to display all messages grouped:\n\n\n\nOr as before, separate for each error:"],[28,"The solution is to use a `formFieldProxy`, which is a helper function for producing the above proxies from a form. To do this, we cannot immediately deconstruct what we need from `superForm`, since `formFieldProxy` takes the form itself as an argument:\n\n\n\nBut we didn't want to pass all those proxies, so let's imagine a component that will handle even the above proxy creation for us.\n\n\n\nHow nice would this be? This can actually be pulled off in a typesafe way with a bit of Svelte magic:\n\n\n\nThe Svelte syntax requires `Record<string, unknown>` to be defined before its used in the `generics` attribute, so we have to import it in a module context. Now when `T` is defined (the schema object type), we can use it in the `form` prop to ensure that only a `SuperForm` matching the `field` prop is used.\n\nThe `FormPathLeaves` type prevents using a field that isn't at the end of the schema (the \"leaves\" of the schema tree). This means that arrays and objects cannot be used in `formFieldProxy`. Array-level errors are handled like this."],[107,"The underlying data model for Superforms is now JSON Schema, which is what makes it possible to support all the validation libraries. Some changes had to be made for this to work:"],[83,"The undocumented `defaultData` function is now called `defaultValues`. You can use this to get the default values for a schema.\n\n\n\nSee the API for documentation."],[174,"The validation is asynchronous, but a slow validator will delay the final result, so for a server round-trip validation, like checking if a username is available, you might want to consider a SPA action form, or handle it with `on:input` and a package like throttle-debounce. Errors can be set manually by updating the `$errors` store:"],[170,"The validation is triggered when a value is changed, not just when focusing on, or tabbing through a field. The default validation method is based on the \"reward early, validate late\" pattern, a researched way of validating input data that makes for a high user satisfaction:\n\nIf entering data in a field that has or previously had errors, validate on `input`If entering data in a field that has or previously had errors, validate on `input`Otherwise, validate on `blur`.Otherwise, validate on `blur`.\n\nBut you can instead use the `oninput` or `onblur` settings to always validate on one of these respective events, or `onsubmit` to validate only on submit.\n\nBe aware that the whole schema will be validated, not just the modified field, because errors can be added to any field in the schema during validation with Zod's refine or similar, so the whole schema must be validated to know the final result."],[85,"The virtually unused `meta` store, which containted some basic metadata about the schema, has been removed. Use the Zod schema directly instead for reflection."],[134,"There are two ways of getting support with using Superforms:"],[180,"There can be a conflict between the data returned in the form action and the new data from the load function. The form action data is \"optimistic\", meaning that what's returned will be displayed, assuming that all data was supposed to be updated. But if you update the form partially, the form data will be out of sync with the load function data, in which case you may want to wait for the load function data. This can be achieved with by setting `invalidateAll: 'force'`. Now the load function data will be prioritized, and the `reset` function will also use the latest load function data when called."],[164,"There is a web standard for form input, which doesn't require JavaScript and is virtually effortless to use with Superforms:"],[278,"This concludes the tutorial! To learn the details, keep reading under the Concepts section in the navigation. Status messages are very common to add, for example. Also, if you plan to use nested data (objects and arrays within the schema), read the nested data page carefully. The same goes for having multiple forms on the same page.\n\nWhen you're ready for something more advanced, check out the CRUD tutorial, which shows how to make a fully working backend in about 150 lines of code."],[175,"This example demonstrates how validators are used to check if tags are of the correct length.\n\nSet a tag name to blank and see that no errors show up until you move focus outside the field (blur). When you go back and correct the mistake, the error is removed as soon as you enter more than one character (input)."],[198,"This form has `aria-invalid` set on erroneous fields, and lists all errors on top of the form using `$allErrors`. Try to submit and see that the first error field gets focus automatically (unless on mobile)."],[64,"This happens if you access the form data of the request several times, which could happen when calling `superValidate` multiple times during the same request.\n\nTo fix that problem, extract the formData before calling superValidate, and use that as an argument instead of `request` or `event`:"],[63,"This is related to the previous question. You must always return an `ActionResult` as a response to a form submission, either through a form action, where it's done automatically, or by constructing one with the actionResult helper. \n\nIf for some reason a html page or plain text is returned, for example when a proxy server fails to handle the request and returns its own error page, the parsing of the result will fail with the slightly cryptic JSON error message."],[189,"This is the CSS selector used to locate the invalid input fields after form submission. The default is `[aria-invalid=\"true\"],[data-invalid]`, and the first one found in the form will be scrolled to and focused on, depending on the other settings. You usually set it on the input fields as such:"],[140,"This method will provide you with the default values for a schema.\n\n\n\nThis was previously an undocumented function called `defaultData`. If you've used it, rename it to `defaultValues`."],[253,"This one handles the occurence of multiple form submissions, before a result has been returned.\n\nWhen set to the default `prevent`, the form cannot be submitted again until a result is returned, or the `timeout` state is reached (see the section about [loading timers](/concepts/timers)).When set to the default `prevent`, the form cannot be submitted again until a result is returned, or the `timeout` state is reached (see the section about loading timers).`abort` is the next sensible approach, which will cancel the previous request before submitting again.`abort` is the next sensible approach, which will cancel the previous request before submitting again.Finally, `allow` will pass through any number of frenetic clicks on the submit button!Finally, `allow` will pass through any number of frenetic clicks on the submit button!"],[171,"This option uses the browser built-in tooltip to display validation errors, so neither `$errors` nor `$constraints` are required on the form. See the error handling page for details and an example."],[193,"This option uses the Constraint Validation API to display validation errors. By enabling this, with use:enhance added to the form, instead of the standard messages, the Zod validation errors will now be displayed in the browser validation tooltip. Submit the following form without entering any data to see it in action:\n\n<CustomValidity {data} />\n\nSince validation is handled by Superforms, there is no need for spreading `$constraints` on the field. But the biggest win is that there is no need to display `$errors`, making for a minimal html:\n\n\n\nThe `name` attribute is required on the input fields. If you want to exclude a field from displaying the tooltip, add a `data-no-custom-validity` attribute to it.\n\nJust be aware that since `use:enhance` is needed, `customValidity` requires JavaScript to be enabled, unlike browser constraints."],[266,"This tutorial will create a Superform containing a name and an email address, ready to be expanded with more form data."],[115,"To be more consistent with the message parameter, the rarely used `flashMessage` option in `superForm` has an `onError` event with a `message` parameter, but it is now renamed to `flashMessage` to signify which message can actually be updated."],[154,"To better follow the SvelteKit defaults, the `resetForm` option for `superForm` is now `true` as default."],[43,"To delete a user, we can make use of the HTML `button` element, which can have a name and a value that will be passed only if that specific button was used to post the form. Add this at the end of the form:\n\nsrc/routes/users/[[id]]/+page.svelte\n\n\n\nIn the form action, we now use the `FormData` from the request to check if the delete button was pressed.\n\nWe can also add a delayed button in the form to mimick the behavior of a slow network call:\n\n\n\nWe shouldn't use the schema since `delete` and `delayed` are not a part of the user, but it's not a big change:\n\nsrc/routes/users/[[id]]/+page.server.ts\n\n\n\nNow all four CRUD operations are complete! An issue, however, is that we have to redirect after deleting to avoid a 404, so we cannot use `form.message` to show \"User deleted\", since the validation data won't exist after redirecting.\n\nRedirecting with a message is a general problem; for example, maybe we'd like to redirect to the newly created user after it's been created. Fortunately, there is a solution; the sister library to Superforms handles this. Read more about it here."],[25,"To do this, you need the type of the schema, which can be defined as follows:\n\nsrc/lib/schemas.ts\n\n\n\nNow you can import and use this type in a separate component:\n\nsrc/routes/LoginForm.svelte\n\n\n\nUse it by passing the form data from `+page.svelte` to the component, making it much less cluttered:\n\n+page.svelte\n\n\n\nIf your schema input and output types differ, or you have a strongly typed status message, you can add two additional type parameters:"],[35,"To follow along, there are three ways:"],[216,"To prevent file uploads, set the `{ allowFiles: false }` option in `superValidate`. This will set all files to `undefined`, so you don't have to use `withFiles`. \n\nThis will also happen if you have migrated from version 1 and defined SUPERFORMS_LEGACY. In that case, set `{ allowFiles: true }` to allow files."],[126,"To see this in action, scroll to the product data below and hit refresh."],[77,"To update, change your `package.json` entry for `sveltekit-superforms` to `^1.0.0`:\n\n\n\n(If you're using Svelte 4, you'll need at least version `^1.1.2` of Superforms.)\n\nThe guide is written with the affected methods in the headlines, so you can scan through this page and apply the changes if you're using them in your code."],[165,"To use the built-in browser validation, just spread the `$constraints` store for a schema field on its input field:\n\n\n\nThe constraints is an object with validation properties mapped from the schema:"],[153,"Unions are also quite difficult to make assumptions about in `FormData`. If `\"123\"` was posted (as all posted values are strings), should it be parsed as a string or a number in the above case?\n\nThere is no obvious answer, so unions with more than one type can only be used when the `dataType` option is set to `'json'` (which will bypass the whole `FormData` parsing by serializing the form data)."],[272,"Unless you call the SvelteKit `redirect` or `error` functions, you should always return the form object to the client, either directly or through a helper function. The name of the variable doesn't matter; you can call it `{ loginForm }` or anything else, but it needs to be returned like this in all code paths that returns, both in load functions and form actions."],[53,"Use the `resetForm: false` option for `superForm`, as described on the use:enhance page."],[57,"Use the `submit` method on the `superForm` object."],[30,"Using this component is now as simple as:\n\n\n\nBut to show off some super proxy power, let's recreate the tags example above with the `TextField` component:\n\n\n\nWe can now produce a type-safe text field for any object inside our data, which will update the `$form` store.\n\nIn general, nested data requires the `dataType` option to be set to `'json'`, but this example works without it, and even without `use:enhance`, since arrays of primitive values are coerced automatically.\n\nI hope you now feel under your fingers the superpowers that Superforms bring! 💥"],[234,"Validation libraries like Zod can refine the validation, the classic example is to check if two password fields are identical when updating a password. Usually there's a `path` specifier for setting errors on those fields in the refine function:\n\n\n\n  This works fine for top-level properties, but for nested data you must usually specify that path as an array, each segment in its own element, not as a string path as you can do in the `FormPathLeaves` type!"],[274,"We can see that the form has been populated with the default values. But let's add the debugging component SuperDebug to look behind the scenes:\n\nsrc/routes/+page.svelte\n\n\n\nThis should be displayed:\n\nWhen editing the form fields (try in the form above), the data is automatically updated. The component also displays a copy button and the current page status in the right corner. There are many configuration options available."],[245,"We display the form in `+page.svelte` like before, but with the `SPA` option added, and the `onUpdate` event now being used to validate the form data, instead of on the server:\n\nsrc/routes/user/[id]/+page.svelte\n\n\n\nThe validation in `onUpdate` is almost the same as validating in a form action on the server. Nothing needs to be returned at the end since all modifications to the `form` parameter in `onUpdate` will update the form.\n\nOf course, since this validation is done on the client, it's easy to tamper with. See it as a convenient way of collecting the form data before doing a proper server validation through an external API."],[214,"We need an array to validate multiple files:\n\n\n\n\n\n\n\nAs there is no `bind:files` attribute on the input field, note that it cannot be hidden with an `{#if}` block. Use css instead to hide it.To use the file proxies in a component, `fileFieldProxy` and `filesFieldProxy` are available as a complement to `formFieldProxy`."],[178,"When `applyAction` is `true`, the form will have the default SvelteKit behavior of both updating and reacting on `$page.form` and `$page.status`, and also redirecting automatically.\n\nTurning this behavior off can be useful when you want to isolate the form from other sources updating the page, for example Supabase events, a known source of confusing form behavior. Read more about `applyAction` in the SvelteKit docs."],[191,"When `autoFocusOnError` is set to its default value `detect`, it checks if the user is on a mobile device; if not, it will automatically focus on the first error input field. It's prevented on mobile devices since focusing will open the on-screen keyboard, causing the viewport to shift, which could hide the validation error."],[179,"When `invalidateAll` is `true` (the default) and a successful validation result is returned from the server, the page will be invalidated and the load functions will run again. A login form takes advantage of this to update user information on the page, but the default setting may cause problems with multiple forms on the same page, since the load function will reload the data for all forms defined there."],[181,"When `true`, reset the form upon a successful validation result.\n\nNote however, that since we're using `bind:value` on the input fields, a HTML form reset (clearing all fields in the DOM) won't have any effect. So in Superforms, resetting means going back to the initial state of the form data, basically setting `$form` to what was initially sent to `superForm`.\n\nFor a custom reset, you can instead modify the `data` field returned from `superValidate` on the server, or use the events together with the reset function on the client."],[261,"When a successful validation result is returned for the form, with a `valid` status set to `true`, the form is automatically marked as untainted.\n\nTry that by posting the form with valid values. The tainted message should not appear when browsing away from the page."],[40,"When starting on the server page, we'll encounter a thing about validation schemas. Our `userSchema` is for database integrity, so an `id` must exist there. But we want to create an entity, and must therefore allow `id` not to exist when creating users.\n\nFortunately, Zod makes it quite easy to append a modifier to a field without duplicating the whole schema by extending it:\n\nsrc/routes/users/[[id]]/+page.server.ts\n\n\n\n(Of course, the original `userSchema` is kept intact.)\n\nWith this, Create and Update can now use the same schema, which means that they can share the same user interface. This is a fundamental idea in Superforms: you can pass either empty data or an entity partially matching the schema to `superValidate`, and it will generate default values for any non-specified fields, ensuring type safety."],[208,"When the SvelteKit error function is called on the server, you can use the `onError` event to catch it. `result` is the error ActionResult, with its `error` property:\n\n\n\nDepending on what kind of error occurs, it will have a different shape.\n\nError typeShapeExpected error`App.Error`Server exception`{ message: string }`JSON responseUnexpected JSON responses, such as from a proxy server, should be included in `App.Error` to be type-safe.Other responseIf a fetch fails, or HTML is returned for example, result.error will be of type `Error` (MDN), usually with a JSON parse error. It has a `message` property.In this simple example, the message store is set to the error message or a fallback:\n\n\n\nIf JSON is returned, the HTTP status code will be taken from its `status` property, instead of the default status `500` for unexpected errors.\n\nYou can also set `onError` to the string value `'apply'`, in which case the default SvelteKit error behaviour will be used, which is to render the nearest +error page, also wiping out the form. To avoid data loss even for non-JavaScript users, returning a status message instead of throwing an error is recommended."],[141,"When using `superValidate` on the client, you previously had to use a `+page.ts` file to call `superValidate`, since it is asynchronous. Now you can import `superValidateSync` and use it in components directly (which assumes that there is no async validation in the schema). It can be very convenient in SPA's, just be aware that the client bundle size will increase a bit compared to using `superValidate` only on the server."],[8,"When using an endpoint (a `+server.ts` file) instead of form actions, you must return an `ActionResult` to a form that has `use:enhance` applied. Anything else won't work, not even throwing a redirect, since superForm expects an ActionResult.\n\nThe `actionResult` function helps you construct one in a `Response` object, so you can return a validation object from your API/endpoints.\n\n\n\nThe default status codes for each result type are shown, so you don't need to include them if they're the same.\n\nAdditionally, the `redirect` version can send a flash message as a third parameter, in case you're using flash messages. It can also set options for the flash cookie that's being set."],[39,"When you have the code up and running, we need a user schema, and a mock database for testing. We will use Zod as a validation library, but its schema can easily be converted to others.\n\nsrc/lib/users.ts"],[68,"When you start to configure the library to suit your stack, you can create an object with default options that you will refer to instead of `superForm`:"],[231,"When your schema contains arrays or objects, you can access them through `$form` as an ordinary object. But how does it work with errors and constraints?\n\n`$errors` and `$constraints` actually mirror the `$form` data, but with every field or \"leaf\" in the object replaced with `string[]` and `InputConstraints` respectively."],[42,"With this, the form should be ready for creating a user. Let's add the form action for that:\n\nsrc/routes/users/[[id]]/+page.server.ts\n\n\n\nThis is where you should access your database API. In our case, we're only doing some array manipulations.\n\nWith this, we have 3 out of 4 letters of CRUD in about 150 lines of code, half of it HTML!"],[58,"Yes - the answer has its own article page here."],[55,"Yes, there is a helper function for constructing an `ActionResult` that can be returned from SvelteKit endpoints. See the API reference for more information."],[62,"You can add additional input fields to the form that aren't part of the schema, including files (see the next question), to send extra data to the server. They can then be accessed with `request.formData()` in the form action:\n\n\n\nYou can also add form data programmatically in the onSubmit event:\n\n\n\nThe onSubmit event is also a good place to modify `$form`, in case you're using nested data with `dataType: 'json'`."],[66,"You can add them as parameters to most schema methods. Here's an example."],[169,"You can even switch schemas dynamically, with the `options` object. `options.validators` accepts a partial validator, which can be very useful for multi-step forms:\n\n\n\nAs mentioned, you need the full adapter to switch schemas dynamically. An exception will be thrown if a client adapter is detected different from the initial `validators` option."],[143,"You can now test if the form has been previously posted by deconstructing the boolean `$posted` store from `superForm`."],[144,"You can now use the `data` and `id` options when calling reset, to reset the form to different data and id than the initial one. `data` can be partial."],[129,"You can pass a store directly to SuperDebug:"],[219,"You can return any type with the message, like an object, if you want to send more information than a string:\n\n\n\nSee right below for how to make this data strongly typed.\n\nA successful form action in SvelteKit can only return status code `200`, so the status option for `message` must be in the range `400-599`, otherwise `{ form }` will be returned with a status of `200`, no matter what the status option is set to."],[260,"You can set the option to `true` to have a default message (in english) shown when navigating away from a tainted form, or set your own message with a `string` value. Note that this message will only be displayed when navigating to a page within the same site. When closing the tab or reloading the page, a browser default message will be shown instead.\n\nAlternatively, you can set `taintedMessage` to a `() => Promise<boolean>` function that should resolve to `true` if navigating away is ok. This enables you to provide your own dialog:\n\n\n\nThe code demonstrates the custom dialog with a Skeleton modal. Try it out below! Modify the form, then click the back button. A modal should pop up, preventing you from losing the changes:"],[236,"You can use a proxy for nested data, like `'user.profile.email'`, in which case parent objects will be created if they don't exist."],[47,"You can, of course, set your own default values in the schema, using the `default` method in Zod, for example. You can even abuse the typing system a bit to handle the classic \"agree to terms\" checkbox:\n\n\n\nThis looks a bit strange, but will ensure that the age isn't set to 0 as default (which will hide placeholder text in the input field), and also ensure that the agree checkbox is unchecked as default while also only accepting `true` (checked) as a value.\n\nSince the default value will not correspond to the type, this will not work when using Zod's refine on the whole schema. Validation itself is no problem though, `form.valid` will be `false` if these values are posted, which should be the main determinant of whether the data is trustworthy."],[113,"You could previously choose what specific fields to untaint with a `fields` option, when updating `$form`. It was a rarely used feature that has now been removed."],[196,"You may also want to list the errors above the form. The `$allErrors` store can be used for this. It's an array that contains all errors and their field names:\n\n\n\n`$allErrors.length` can also be useful to disable the submit button if there are any errors."],[160,"You may have noticed in the examples that `/client` and `/server` isn't needed anymore. Simply import everything except adapters from `sveltekit-superforms`. The same goes for `SuperDebug`, which is now the default export of the library:"],[27,"You may have seen proxy objects being used for converting an input field string like `\"2023-04-12\"` into a `Date`, but that's a special usage of proxies. They can actually be used for any part of the form data, to have a store that can modify a part of the `$form` store. If you want to update just `$form.name`, for example:\n\n\n\nAny updates to `$name` will reflect in `$form.name`, and vice versa. Note that this will also taint that field, so if this is not intended, you can use the whole superForm object and add an option:\n\n\n\nA `fieldProxy` isn't enough here, however. We'd still have to make proxies for `form`, `errors`, and `constraints`, resulting in the same problem again."],[195,"You may want to set the error on the password or the confirm field instead of a form-level error. In that case you can add a path to the Zod refine option:\n\n\n\nFor nested data, use multiple elements like `[\"user\", \"email\"]`, which corresponds to `user.email` in the schema.\n\nAs said, setting errors on the schema like this is preferred, but it may not always be possible. When you need to set errors after validation, use the setError function.\n\nIf you would like a message to persist until the next form submission regardless of validation, use a status message instead."],[59,"You're not limited to just `return { form }` in load functions and form actions; you can return anything else together with the form variables (which can also be called anything you'd like)."],[267,"The main thing required to create a Superform is a validation schema, representing the form data for a single form.\n\n{#if $settings.lib == 'arktype'}{:else if $settings.lib == 'joi'}{:else if $settings.lib == 'json-schema'}{:else if $settings.lib == '@sinclair/typebox'}{:else if $settings.lib == 'valibot'}{:else if $settings.lib == '@vinejs/vine'}{:else if $settings.lib == 'yup'}{:else if $settings.lib == 'zod'}{:else}\n\nSelect a validation library at the top of the page to see the example code.{/if}"]],"type":"string"},"code":{"docs":{"1":269,"2":265,"3":267,"4":266,"5":264,"6":253,"7":224,"8":221,"9":222,"10":268,"11":205,"12":219,"13":237,"14":238,"15":235,"16":236,"17":239,"18":154,"19":150,"20":152,"21":196,"22":0,"23":1,"24":134,"25":213,"26":157,"27":153,"28":158,"29":139,"30":165,"31":2,"32":257,"33":3,"34":7,"35":4,"36":6,"37":5,"38":255,"39":250,"40":247,"41":245,"42":206,"43":127,"44":136,"45":8,"46":10,"47":195,"48":9,"49":197,"50":204,"51":11,"52":21,"53":16,"54":14,"55":17,"56":19,"57":12,"58":13,"59":18,"60":211,"61":210,"62":208,"63":23,"64":207,"65":22,"66":15,"67":20,"68":233,"69":26,"70":251,"71":24,"72":25,"73":135,"74":27,"75":28,"76":31,"77":125,"78":254,"79":35,"80":194,"81":179,"82":123,"83":124,"84":33,"85":32,"86":29,"87":34,"88":122,"89":30,"90":129,"91":45,"92":38,"93":216,"94":243,"95":49,"96":249,"97":252,"98":223,"99":48,"100":47,"101":36,"102":37,"103":39,"104":130,"105":217,"106":175,"107":42,"108":188,"109":46,"110":140,"111":240,"112":41,"113":43,"114":183,"115":44,"116":40,"117":227,"118":50,"119":52,"120":51,"121":54,"122":56,"123":159,"124":53,"125":164,"126":128,"127":161,"128":162,"129":163,"130":160,"131":55,"132":147,"133":57,"134":58,"135":59,"136":61,"137":60,"138":64,"139":190,"140":225,"141":148,"142":231,"143":62,"144":63,"145":65,"146":66,"147":202,"148":69,"149":72,"150":67,"151":74,"152":203,"153":77,"154":70,"155":76,"156":142,"157":71,"158":75,"159":200,"160":241,"161":73,"162":68,"163":80,"164":78,"165":146,"166":137,"167":173,"168":271,"169":248,"170":270,"171":79,"172":178,"173":180,"174":132,"175":81,"176":141,"177":176,"178":83,"179":84,"180":85,"181":86,"182":82,"183":169,"184":144,"185":232,"186":91,"187":212,"188":174,"189":138,"190":89,"191":90,"192":87,"193":171,"194":192,"195":193,"196":126,"197":199,"198":88,"199":93,"200":92,"201":260,"202":242,"203":234,"204":259,"205":170,"206":261,"207":262,"208":258,"209":181,"210":133,"211":229,"212":95,"213":214,"214":198,"215":209,"216":94,"217":96,"218":182,"219":230,"220":246,"221":263,"222":97,"223":187,"224":131,"225":149,"226":99,"227":98,"228":101,"229":218,"230":100,"231":102,"232":201,"233":215,"234":185,"235":220,"236":103,"237":191,"238":105,"239":167,"240":104,"241":106,"242":107,"243":168,"244":228,"245":155,"246":151,"247":189,"248":184,"249":186,"250":244,"251":108,"252":109,"253":110,"254":111,"255":177,"256":112,"257":145,"258":113,"259":114,"260":172,"261":115,"262":143,"263":166,"264":116,"265":256,"266":117,"268":119,"270":118,"271":226,"272":120,"274":156,"278":121},"orderedDocs":[[22,""],[23,""],[31,""],[33,""],[35,""],[37,""],[36,""],[34,""],[45,""],[48,""],[46,""],[51,""],[57,""],[58,""],[54,""],[66,""],[53,""],[55,""],[59,""],[56,""],[67,""],[52,""],[65,""],[63,""],[71,""],[72,""],[69,""],[74,""],[75,""],[86,""],[89,""],[76,""],[85,""],[84,""],[87,""],[79,""],[101,""],[102,""],[92,""],[103,""],[116,""],[112,""],[107,""],[113,""],[115,""],[91,""],[109,""],[100,""],[99,""],[95,""],[118,""],[120,""],[119,""],[124,""],[121,""],[131,""],[122,""],[133,""],[134,""],[135,""],[137,""],[136,""],[143,""],[144,""],[138,""],[145,""],[146,""],[150,""],[162,""],[148,""],[154,""],[157,""],[149,""],[161,""],[151,""],[158,""],[155,""],[153,""],[164,""],[171,""],[163,""],[175,""],[182,""],[178,""],[179,""],[180,""],[181,""],[192,""],[198,""],[190,""],[191,""],[186,""],[200,""],[199,""],[216,""],[212,""],[217,""],[222,""],[227,""],[226,""],[230,""],[228,""],[231,""],[236,""],[240,""],[238,""],[241,""],[242,""],[251,""],[252,""],[253,""],[254,""],[256,""],[258,""],[259,""],[261,""],[264,""],[266,""],[270,""],[268,""],[272,""],[278,""],[88," <input\n   name=\"name\"\n   bind:value={$form.name}\n-  data-invalid={$errors.name}\n+  aria-invalid={$errors.name ? 'true' : undefined}\n />\n"],[82,"- { path: string[]; message: string[] }\n+ { path: string; messages: string[] }\n{#if $allErrors.length}\n  <ul>\n    {#each $allErrors as error}\n      <li>\n        <b>{error.path}:</b>\n        {error.messages.join('. ')}.\n      </li>\n    {/each}\n  </ul>\n{/if}\n{#if $allErrors.length}\n  <ul>\n    {#each $allErrors as error}\n      {#each error.messages as message}\n        <li>\n          <b>{error.path}:</b>\n          {message}.\n        </li>\n      {/each}\n    {/each}\n  </ul>\n{/if}\n"],[83,"- import { defaultData } from 'sveltekit-superforms/server`\n+ import { defaultValues } from 'sveltekit-superforms/server`\n"],[77,"{\n  \"devDependencies\": {\n    \"sveltekit-superforms\": \"^1.0.0\"\n  }\n}\n"],[196,"{#if $allErrors.length}\n  <ul>\n    {#each $allErrors as error}\n      <li>\n        <b>{error.path}:</b>\n        {error.messages.join('. ')}\n      </li>\n    {/each}\n  </ul>\n{/if}\n"],[43,"{#if $form.id}\n  <button\n    name=\"delete\"\n    on:click={(e) => !confirm('Are you sure?') && e.preventDefault()}\n    class=\"danger\">Delete user</button>\n{/if}\n<button name=\"delay\" class=\"delay\">Submit delayed</button>\nexport const actions: Actions = {\n  default: async ({ request }) => {\n    const formData = await request.formData();\n    const form = await superValidate(formData, zod(crudSchema));\n\n    if (formData.has('delay')) {\n      await new Promise((r) => setTimeout(r, 2000));\n    }\n\n    if (!form.valid) return fail(400, { form });\n\n    if (!form.data.id) {\n      // CREATE user\n      const user = { ...form.data, id: userId() };\n      users.push(user);\n\n      return message(form, 'User created!');\n    } else {\n      const index = users.findIndex((u) => u.id == form.data.id);\n      if (index == -1) throw error(404, 'User not found.');\n\n      if (formData.has('delete')) {\n        // DELETE user\n        users.splice(index, 1);\n        throw redirect(303, '/users');\n      } else {\n        // UPDATE user\n        users[index] = { ...form.data, id: form.data.id };\n        return message(form, 'User updated!');\n      }\n    }\n  }\n};\n"],[126,"// +page.ts\nexport const load = (async ({ fetch }) => {\n  const promiseProduct = fetch('https://dummyjson.com/products/1')\n    .then(response => response.json())\n\n  return { promiseProduct }\n})\n<SuperDebug label=\"Dummyjson product\" data={data.promiseProduct} />\n"],[90,"// Add errors to an empty form\nconst form = await superValidate(zod(schema), { errors: true });\n"],[104,"// Cannot post the string \"Delayed\" and expect it to be parsed as 2 anymore.\nenum FetchStatus {\n  Idle = 0,\n  Submitting = 1,\n  Delayed = 2,\n  Timeout = 3\n}\n"],[224,"// Default behavior: The id is sent along with the form data\n// sent from the load function.\nconst { form, enhance, formId } = superForm(data.loginForm);\n\n// In advanced cases, you can set the id as an option\n// and it will take precedence.\nconst { form, enhance, formId } = superForm(data.form, {\n  id: 'custom-id'\n});\n"],[174,"// Needs to be a string[]\n$errors.username = ['Username is already taken.'];\n"],[210,"// NOTE: Import fail from Superforms, not from @sveltejs/kit!\nimport { superValidate, fail, message } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  image: z\n    .instanceof(File, { message: 'Please upload a file.'})\n    .refine((f) => f.size < 100_000, 'Max 100 kB upload size.')\n});\n\nexport const load = async () => {\n  return { \n    form: await superValidate(zod(schema))\n  }\n};\n\nexport const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) {\n      return fail(400, { form });\n    }\n\n    // TODO: Do something with the image\n    console.log(form.data.image);\n\n    return message(form, 'You have uploaded a valid file!');\n  }\n};\n"],[24,"<!-- For each form field -->\n<label for=\"name\">Name</label>\n<input\n  type=\"text\"\n  name=\"name\"\n  aria-invalid={$errors.name ? 'true' : undefined}\n  bind:value={$form.name}\n  {...$constraints.name} \n/>\n{#if $errors.name}\n  <span class=\"invalid\">{$errors.name}</span>\n{/if}\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms'\n\n  export let data;\n\n  const {\n    form: loginForm,\n    errors: loginErrors,\n    enhance: loginEnhance,\n    //...\n  } = superForm(data.loginForm);\n\n  const {\n    form: registerForm,\n    errors: registerErrors,\n    enhance: registerEnhance,\n    // ...\n  } = superForm(data.registerForm);\n</script>\n"],[73,"<form method=\"POST\" use:enhance>\n  <Field {form} name=\"name\">\n    <Control let:attrs>\n      <Label>Name</Label>\n      <input {...attrs} bind:value={$formData.name} />\n    </Control>\n    <Description>Be sure to use your real name.</Description>\n    <FieldErrors />\n  </Field>\n  <Field {form} name=\"email\">\n    <Control let:attrs>\n      <Label>Email</Label>\n      <input {...attrs} type=\"email\" bind:value={$formData.email} />\n    </Control>\n    <Description>It's preferred that you use your company email.</Description>\n    <FieldErrors />\n  </Field>\n  <Field {form} name=\"password\">\n    <Control let:attrs>\n      <Label>Password</Label>\n      <input {...attrs} type=\"password\" bind:value={$formData.password} />\n    </Control>\n    <Description>Ensure the password is at least 10 characters.</Description>\n    <FieldErrors />\n  </Field>\n</form>\n"],[44,"<h3>Users</h3>\n<div class=\"users\">\n  {#each data.users as user}\n    <a href=\"/users/{user.id}\">{user.name}</a>\n  {/each}\n</div>\n<style>\n  .invalid {\n    color: red;\n  }\n\n  .danger {\n    background-color: brown;\n  }\n\n  .delay {\n    background-color: lightblue;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 1em;\n    align-items: flex-start;\n    margin-bottom: 2em;\n  }\n\n  hr {\n    width: 100%;\n    margin-block: 2em;\n  }\n\n  .users {\n    columns: 3 150px;\n  }\n\n  .users > * {\n    display: block;\n    white-space: nowrap;\n    overflow-x: hidden;\n  }\n</style>\n"],[166,"<input\n  name=\"date\"\n  type=\"date\"\n  aria-invalid={$errors.date ? 'true' : undefined}\n  bind:value={$proxyDate}\n  {...$constraints.date}\n  min={$constraints.date?.min?.toString().slice(0, 10)} \n/>\n"],[189,"<input\n  type=\"email\"\n  name=\"email\"\n  bind:value={$form.email}\n  aria-invalid={$errors.email ? 'true' : undefined} />\n"],[29,"<script lang=\"ts\" context=\"module\">\n  type T = Record<string, unknown>;\n</script>\n\n<script lang=\"ts\" generics=\"T extends Record<string, unknown>\">\n  import { \n    formFieldProxy, type FormFieldProxy,\n    type SuperForm, type FormPathLeaves\n  } from 'sveltekit-superforms';\n\n  export let superform: SuperForm<T>;\n  export let field: FormPathLeaves<T, boolean>;\n\n  const { value, errors, constraints } = formFieldProxy(superform, field) satisfies FormFieldProxy<boolean>;\n</script>\n\n<input\n  name={field}\n  type=\"checkbox\"\n  class=\"checkbox\"\n  bind:checked={$value}\n  {...$constraints}\n  {...$$restProps} \n/>\n"],[110,"<script lang=\"ts\" context=\"module\">\n  type T = Record<string, unknown>;\n</script>\n\n<script lang=\"ts\" generics=\"T extends Record<string, unknown>\">\n  import { formFieldProxy, type SuperForm, type FormPathLeaves } from 'sveltekit-superforms';\n\n  export let superform: SuperForm<T>;\n  export let field: FormPathLeaves<T>;\n  export let label = '';\n\n  const { value, errors, constraints } = formFieldProxy(superform, field);\n</script>\n\n<label>\n  {#if label}{label}<br />{/if}\n  <input\n    name={field}\n    type=\"text\"\n    aria-invalid={$errors ? 'true' : undefined}\n    bind:value={$value}\n    {...$constraints}\n    {...$$restProps}\n  />\n  {#if $errors}<span class=\"invalid\">{$errors}</span>{/if}\n</label>\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms';\n  import TextInput from './TextInput.svelte';\n\n  export let data;\n\n  const superform = superForm(data.form);\n  const { enhance } = superform;\n</script>\n\n<form method=\"POST\" use:enhance>\n  <TextInput {superform} field=\"name\" />\n  <button>Submit</button>\n</form>\n"],[176,"<script lang=\"ts\">\n  const { form, enhance } = superForm(data.form);\n  //            ^^^^^^^\n</script>\n\n<form method=\"POST\" use:enhance>\n"],[156,"<script lang=\"ts\">\n  const { form, enhance, tainted, isTainted } = superForm(form.data);\n\n  // Check the whole form\n  if(isTainted()) {\n    console.log('The form is tainted')\n  }\n\n  // Check a part of the form\n  if(isTainted('name')) {\n    console.log('The name field is tainted')\n  }\n</script>\n\n<!-- Make the function reactive by passing the $tainted store -->\n<button disabled={!isTainted($tainted)}>Submit</button>\n\n<!-- It even works with individual fields -->\n<button disabled={!isTainted($tainted.name)}>Submit name</button>\n"],[262,"<script lang=\"ts\">\n  const { form, enhance, tainted, isTainted } = superForm(form.data);\n\n  // Check the whole form\n  if(isTainted()) {\n    console.log('The form is tainted')\n  }\n\n  // Check a part of the form\n  if(isTainted('name')) {\n    console.log('The name field is tainted')\n  }\n</script>\n\n<!-- Make the function reactive by passing the $tainted store -->\n<button disabled={!isTainted($tainted)}>Submit</button>\n\n<!-- It even works with individual fields -->\n<button disabled={!isTainted($tainted.name)}>Submit name</button>\n"],[184,"<script lang=\"ts\">\n  const { form, errors } = superForm(data.form);\n</script>\n\n<form method=\"POST\">\n  <label for=\"name\">Name</label>\n  <input\n    name=\"name\"\n    aria-invalid={$errors.name ? 'true' : undefined}\n    bind:value={$form.name}\n  />\n  {#if $errors.name}<span class=\"invalid\">{$errors.name}</span>{/if}\n\n  <div><button>Submit</button></div>\n</form>\n"],[257,"<script lang=\"ts\">\n  const { form, errors, enhance, delayed } = superForm(data.form);\n  import spinner from '$lib/assets/spinner.svg';\n</script>\n\n<form method=\"POST\" use:enhance>\n  <button>Submit</button>\n  {#if $delayed}<img src={spinner} />{/if}\n</form>\n"],[165,"<script lang=\"ts\">\n  export let data;\n  const { form, constraints } = superForm(data.form);\n</script>\n\n<input\n  name=\"email\"\n  type=\"email\"\n  bind:value={$form.email}\n  {...$constraints.email} />\n{\n  pattern?: string;      // The *first* string validator with a RegExp pattern\n  step?: number | 'any'; // number with a step validator\n  minlength?: number;    // string with a minimum length\n  maxlength?: number;    // string with a maximum length\n  min?: number | string; // number if number validator, ISO date string if date validator\n  max?: number | string; // number if number validator, ISO date string if date validator\n  required?: true;       // true if not nullable, nullish or optional\n}\n"],[132,"<script lang=\"ts\">\n  import { page } from '$app/stores';\n</script>\n\n<SuperDebug label=\"$page data\" data={$page} collapsible />\n"],[141,"<script lang=\"ts\">\n  import { schema } from '$lib/schemas';\n  import { superValidateSync, superForm } from 'sveltekit-superforms/client';\n\n  // Same as returning { form } in a load function\n  const form = superForm(superValidateSync(schema));\n</script>\n"],[225,"<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms/client';\n  import type { PageData } from './$types.js';\n\n  export let data: PageData;\n\n  const { form, errors, formId } = superForm(data.form);\n</script>\n\n<form method=\"POST\" action=\"?/login\">\n  <input type=\"hidden\" name=\"__superform_id\" bind:value={$formId} />\n</form>\n"],[19,"<script lang=\"ts\">\n  import { superForm, arrayProxy } from 'sveltekit-superforms';\n\n  export let data;\n\n  const superform = superForm(data.form); // The whole superForm object is required\n  const { form } = superform; // Deconstruct as usual here\n\n  const { path, values, errors, valueErrors } = arrayProxy(superform, 'tags');\n</script>\n{\n  taint?: boolean | 'untaint' | 'untaint-all';\n}\n"],[246,"<script lang=\"ts\">\n  import { superForm, defaults } from 'sveltekit-superforms';\n  import { zod } from 'sveltekit-superforms/adapters';\n  import { loginSchema } from '$lib/schemas';\n\n  const { form, errors, enhance } = superForm(defaults(zod(loginSchema)), {\n    SPA: true,\n    validators: zod(loginSchema),\n    onUpdate({ form }) {\n      if (form.valid) {\n        // TODO: Call an external API with form.data, await the result and update form\n      }\n    }\n  });\n</script>\n"],[20,"<script lang=\"ts\">\n  import { superForm, fieldProxy } from 'sveltekit-superforms';\n  export let data;\n\n  const { form } = superForm(data.form);\n\n  // Proxy any field in an object\n  const nameProxy = fieldProxy(form, 'name');\n</script>\n{\n  taint?: boolean | 'untaint' | 'untaint-all';\n}\n"],[27,"<script lang=\"ts\">\n  import { superForm, fieldProxy } from 'sveltekit-superforms/client';\n\n  export let data;\n\n  const { form } = superForm(data.form);\n  const name = fieldProxy(form, 'name');\n</script>\n\n<div>Name: {$name}</div>\n<button on:click={() => ($name = '')}>Clear name</button>\nconst superform = superForm(data.form);\nconst { form } = superform;\n\nconst name = fieldProxy(superform, 'name', { taint: false });\n"],[18,"<script lang=\"ts\">\n  import { superForm, formFieldProxy } from 'sveltekit-superforms';\n\n  export let data;\n\n  const superform = superForm(data.form); // The whole superForm object is required\n  const { form } = superform; // Deconstruct as usual here\n\n  const { path, value, errors, constraints, tainted } = formFieldProxy(superform, 'name');\n</script>\n{\n  taint?: boolean | 'untaint' | 'untaint-all';\n}\n"],[245,"<script lang=\"ts\">\n  import { superForm, setMessage, setError } from 'sveltekit-superforms';\n  import { _userSchema } from './+page.js';\n  import { zod } from 'sveltekit-superforms/adapters';\n\n  export let data;\n\n  const { form, errors, message, constraints, enhance } = superForm(\n    data.form,\n    {\n      SPA: true,\n      validators: zod(_userSchema),\n      onUpdate({ form }) {\n        // Form validation\n        if (form.data.email.includes('spam')) {\n          setError(form, 'email', 'Suspicious email address.');\n        } else if (form.valid) {\n          // TODO: Call an external API with form.data, await the result and update form\n          setMessage(form, 'Valid data!');\n        }\n      }\n    }\n  );\n</script>\n\n<h1>Edit user</h1>\n\n{#if $message}<h3>{$message}</h3>{/if}\n\n<form method=\"POST\" use:enhance>\n  <label>\n    Name<br />\n    <input\n      aria-invalid={$errors.name ? 'true' : undefined}\n      bind:value={$form.name}\n      {...$constraints.name} />\n  </label>\n  {#if $errors.name}<span class=\"invalid\">{$errors.name}</span>{/if}\n\n  <label>\n    E-mail<br />\n    <input\n      type=\"email\"\n      aria-invalid={$errors.email ? 'true' : undefined}\n      bind:value={$form.email}\n      {...$constraints.email} />\n  </label>\n  {#if $errors.email}<span class=\"invalid\">{$errors.email}</span>{/if}\n\n  <button>Submit</button>\n</form>\n"],[274,"<script lang=\"ts\">\n  import SuperDebug from 'sveltekit-superforms';\n</script>\n\n<SuperDebug data={$form} />\n"],[26,"<script lang=\"ts\">\n  import type { InputConstraint } from 'sveltekit-superforms';\n\n  export let value: string;\n  export let label: string | undefined = undefined;\n  export let errors: string[] | undefined = undefined;\n  export let constraints: InputConstraint | undefined = undefined;\n</script>\n\n<label>\n  {#if label}<span>{label}</span><br />{/if}\n  <input\n    type=\"text\"\n    bind:value\n    aria-invalid={errors ? 'true' : undefined}\n    {...constraints}\n    {...$$restProps} \n  />\n</label>\n{#if errors}<span class=\"invalid\">{errors}</span>{/if}\n<form method=\"POST\" use:enhance>\n  <TextInput\n    name=\"name\"\n    label=\"name\"\n    bind:value={$form.name}\n    errors={$errors.name}\n    constraints={$constraints.name} \n  />\n\n  <h4>Tags</h4>\n\n  {#each $form.tags as _, i}\n    <TextInput\n      name=\"tags\"\n      label=\"Name\"\n      bind:value={$form.tags[i].name}\n      errors={$errors.tags?.[i]?.name}\n      constraints={$constraints.tags?.name} \n    />\n  {/each}\n</form>\n"],[28,"<script lang=\"ts\">\n  import type { PageData } from './$types.js';\n  import { superForm, formFieldProxy } from 'sveltekit-superforms/client';\n\n  export let data: PageData;\n\n  const superform = superForm(data.form);\n\n  const { path, value, errors, constraints } = formFieldProxy(superform, 'name');\n</script>\n<TextField {superform} field=\"name\" />\n<script lang=\"ts\" context=\"module\">\n  type T = Record<string, unknown>;\n</script>\n\n<script lang=\"ts\" generics=\"T extends Record<string, unknown>\">\n  import { formFieldProxy, type SuperForm, type FormPathLeaves  } from 'sveltekit-superforms';\n\n  export let superform: SuperForm<T>;\n  export let field: FormPathLeaves<T>;\n\n  const { value, errors, constraints } = formFieldProxy(superform, field);\n</script>\n\n<label>\n  {field}<br />\n  <input\n    name={field}\n    type=\"text\"\n    aria-invalid={$errors ? 'true' : undefined}\n    bind:value={$value}\n    {...$constraints}\n    {...$$restProps} />\n</label>\n{#if $errors}<span class=\"invalid\">{$errors}</span>{/if}\n"],[123,"<SuperDebug\n  data={any}\n  display={true}\n  status={true}\n  label=''\n  collapsible={false}\n  collapsed={false}\n  stringTruncate={120}\n  raw={false}\n  functions={false}\n  theme='default'\n  ref={HTMLPreElement} \n/>\n"],[130,"<SuperDebug \n  data={$form} \n  theme=\"vscode\" \n  --sd-code-date=\"lightgreen\" \n/>\n"],[127,"<SuperDebug data={{$form, $errors}} />\n"],[128,"<SuperDebug data={$form} />\n"],[129,"<SuperDebug data={form} />\n"],[125,"<SuperDebug label=\"Useful label\" data={$form} />\n"],[30,"<TextField {superform} field=\"name\" />\n<form method=\"POST\" use:enhance>\n  <TextField name=\"name\" {superform} field=\"name\" />\n\n  <h4>Tags</h4>\n\n  {#each $form.tags as _, i}\n    <TextField name=\"tags\" {superform} field=\"tags[{i}].name\" />\n  {/each}\n</form>\n"],[263,"const { form } = superForm(data.form);\n\nform.update(\n  ($form) => {\n    $form.name = \"New name\";\n    return $form;\n  },\n  { taint: false }\n);\n{ taint: boolean | 'untaint' | 'untaint-form' }\n"],[239,"const { form, capture, restore } = superForm(data.form);\n\nexport const snapshot = { capture, restore };\n"],[243,"const { form, enhance } = superForm(data, {\n  SPA: true | { failStatus: number }\n  validators: false | ClientValidationAdapter<S>\n})\n"],[183,"const { form, enhance } = superForm(data.form, {\n  // On ActionResult error, render the nearest +error.svelte page\n  onError: 'apply',\n});\n"],[205,"const { form, enhance } = superForm(data.form, {\n  applyAction: false,\n  onResult({ result }) {\n    if (result.type === 'redirect') {\n      goto(result.location);\n    }\n  }\n});\n"],[193,"const { form, enhance } = superForm(data.form, {\n  customValidity: true,\n  // Not required, but will use client-side validation for real-time error display:\n  validators: schema\n});\n<input type=\"text\" name=\"name\" bind:value={$form.name} />\n"],[260,"const { form, enhance } = superForm(data.form, {\n  taintedMessage: string | (() => Promise<boolean>) | boolean = false\n})\nconst { form, enhance } = superForm(data.form, {\n  taintedMessage: () => {\n    return new Promise((resolve) => {\n      modalStore.trigger({\n        type: 'confirm',\n        title: 'Do you want to leave?',\n        body: 'Changes you made may not be saved.',\n        response: resolve\n      });\n    });\n  }\n});\n"],[167,"const { form, enhance, constraints, validate, validateForm } = superForm(data.form, {\n  validators: ClientValidationAdapter<S> | 'clear' | false,\n  validationMethod: 'auto' | 'oninput' | 'onblur' | 'submit-only' = 'auto',\n  customValidity: boolean = false\n})\n"],[188,"const { form, enhance, errors, allErrors } = superForm(data.form, {\n  errorSelector: string | undefined = '[aria-invalid=\"true\"],[data-invalid]',\n  scrollToError: 'auto' | 'smooth' | 'off' | boolean | ScrollIntoViewOptions = 'smooth',\n  autoFocusOnError: boolean | 'detect' = 'detect',\n  stickyNavbar: string | undefined = undefined,\n  customValidity: boolean = false\n})\n"],[106,"const { form, enhance, isTainted } = superForm(form.data);\n\n// Check the whole form\nif(isTainted())\n\n// Check a part of the form\nif(isTainted('name'))\n"],[177,"const { form, enhance, reset } = superForm(data.form, {\n  applyAction: true,\n  invalidateAll: true | 'force',\n  resetForm: true\n});\n"],[255,"const { form, enhance, submitting, delayed, timeout } = superForm(data.form, {\n  delayMs?: 500\n  timeoutMs?: 8000\n})\n"],[172,"const { form, enhance, validate } = superForm(data.form, {\n  validators: zod(schema) // Required option for validate to work\n});\n\n// Simplest case, validate what's in the field right now\nvalidate('name');\n\n// Validate without updating, for error checking\nconst nameErrors = await validate('name', { update: false });\n\n// Validate and update field with a custom value\nvalidate('name', { value: 'Test' });\n\n// Validate a custom value, update errors only\nvalidate('name', { value: 'Test', update: 'errors' });\n\n// Validate and update nested data, and also taint the field\nvalidate('tags[1].name', { value: 'Test', taint: true });\n"],[81,"const { form, enhance, validate } = superForm(data.form)\n\n- validate(['tags', i, 'name'], { update: false });\n+ validate(`tags[${i}].name`, { update: false });\n<script lang=\"ts\">\n  import type { z, AnyZodObject } from 'zod';\n  import type { ZodValidation, FormPathLeaves } from 'sveltekit-superforms';\n  import { formFieldProxy, type SuperForm } from 'sveltekit-superforms/client';\n\n  type T = $$Generic<AnyZodObject>;\n\n  export let form: SuperForm<ZodValidation<T>, unknown>;\n  export let field: FormPathLeaves<z.infer<T>>;\n\n  const { value, errors, constraints } = formFieldProxy(form, field);\n</script>\nimport { formFieldProxy } from 'sveltekit-superforms/client';\n\nconst schema = z.object({\n  tags: z\n    .object({\n      id: z.number(),\n      name: z.string().min(1)\n    })\n    .array()\n});\n\nconst formData = superForm(data.form);\n\n// This won't work\nconst tags = formFieldProxy(formData, 'tags');\n\n// Not this either\nconst tag = formFieldProxy(formData, 'tags[0]');\n\n// But this will work since it's a field at the \"end\" of the schema\nconst tagName = formFieldProxy(formData, 'tags[0].name');\nimport { fieldProxy } from 'sveltekit-superforms/client';\n\nconst { form } = superForm(data.form);\nconst tags = fieldProxy(form, 'tags');\n"],[173,"const { form, enhance, validateForm } = superForm(data.form, {\n  validators: zod(schema) // Required option for validate to work\n});\n\nconst result = await validateForm();\n\nif (result.valid) {\n  // ...\n}\n\n// You can use the update option to trigger a client-side validation\nawait validateForm({ update: true });\n\n// Or the schema option to validate the form partially\nconst result2 = await validateForm({ schema: zod(partialSchema) });\n"],[209,"const { form, errors, enhance } = superForm(data.form, {\n  onChange(event) {\n    if(event.target) {\n      // Form input event\n      console.log(\n        event.path, 'was changed with', event.target, \n        'in form', event.formElement\n      );\n    } else {\n      // Programmatic event\n      console.log('Fields updated:', event.paths)\n    }\n  }\n})\n"],[218,"const { form, message } = superForm(data.form);\n{#if $message}\n  <div class=\"message\">{$message}</div>\n{/if}\n"],[114,"const { form, message, enhance } = superForm(data.form, {\n  onError({ result }) {\n    $message = result.error.message\n  }\n})\n"],[248,"const { submitting, submit } = superForm(\n  { username: '' },\n  {\n    SPA: '?/check',\n    onSubmit({ cancel, formData }) {\n      if (!$form.username) cancel();\n      formData.set('username', $form.username);\n    },\n    onUpdated({ form }) {\n      $errors.username = form.errors.username;\n    }\n  }\n);\n\nconst checkUsername = debounce(300, submit);\nconst usernameSchema = fullSchema.pick({ username: true });\n\nexport const actions: Actions = {\n  check: async ({ request }) => {\n    const form = await superValidate(request, zod(usernameSchema));\n\n    if (!form.valid) return fail(400, { form });\n    \n    if(!checkUsername(form.data.username)) {\n      setError(form, 'username', 'Username is already taken.');\n    }\n\n    return { form };\n  }\n};\n<input\n  name=\"username\"\n  aria-invalid={$errors.username ? 'true' : undefined}\n  bind:value={$form.username}\n  on:input={checkUsername}\n/>\n{#if $submitting}<img src={spinner} alt=\"Checking availability\" />\n{:else if $errors.username}<div class=\"invalid\">{$errors.username}</div>{/if}\n"],[234,"const confirmPassword = z\n  .object({\n    password: z.string(),\n    confirm: z.string(),\n  })\n  .refine((data) => data.password === data.confirm, {\n    message: \"Passwords don't match\",\n    path: [\"confirm\"], // path of error\n  });\n// OK:\npath: ['form', 'tags', 3]\n// Will not work with Zod refine and superRefine:\npath ['form.tags[3]']\n"],[249,"const form = await superValidate(request, zod(schema), { strict: true });\n"],[223,"const form = await superValidate(zod(schema), {\n  id: string | undefined\n});\nimport { z } from 'zod';\nimport { fail } from '@sveltejs/kit';\nimport { message, superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\nconst loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8)\n});\n\nconst registerSchema = z.object({\n  email: z.string().email(),\n  password: z.string.min(8),\n  confirmPassword: z.string.min(8)\n});\n\nexport const load = async () => {\n  // Different schemas, no id required.\n  const loginForm = await superValidate(zod(loginSchema));\n  const registerForm = await superValidate(zod(registerSchema));\n\n  // Return them both\n  return { loginForm, registerForm };\n};\n\nexport const actions = {\n  login: async ({ request }) => {\n    const loginForm = await superValidate(request, zod(loginSchema));\n\n    if (!loginForm.valid) return fail(400, { loginForm });\n\n    // TODO: Login user\n    return message(loginForm, 'Login form submitted');\n  },\n\n  register: async ({ request }) => {\n    const registerForm = await superValidate(request, zod(registerSchema));\n\n    if (!registerForm.valid) return fail(400, { registerForm });\n\n    // TODO: Register user\n    return message(registerForm, 'Register form submitted');\n  }\n};\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms/client';\n  import type { PageData } from './$types.js';\n\n  export let data: PageData;\n\n  const { form, errors, enhance, message } = superForm(data.loginForm, {\n    resetForm: true\n  });\n\n  const {\n    form: registerForm,\n    errors: registerErrors,\n    enhance: registerEnhance,\n    message: registerMessage\n  } = superForm(data.registerForm, {\n    resetForm: true\n  });\n</script>\n\n{#if $message}<h3>{$message}</h3>{/if}\n\n<form method=\"POST\" action=\"?/login\" use:enhance>\n  E-mail: <input name=\"email\" type=\"email\" bind:value={$form.email} />\n  Password:\n  <input name=\"password\" type=\"password\" bind:value={$form.password} />\n  <button>Submit</button>\n</form>\n\n<hr />\n\n{#if $registerMessage}<h3>{$registerMessage}</h3>{/if}\n\n<form method=\"POST\" action=\"?/register\" use:registerEnhance>\n  E-mail: <input name=\"email\" type=\"email\" bind:value={$registerForm.email} />\n  Password:\n  <input name=\"password\" type=\"password\" bind:value={$registerForm.password} />\n  Confirm password:\n  <input\n    name=\"confirmPassword\"\n    type=\"password\"\n    bind:value={$registerForm.confirmPassword} />\n  <button>Submit</button>\n</form>\n"],[108,"const form = await superValidate(zod(schema));\nconst form = await superValidate(zod(schema), { errors: true });\nform.errors = {}\n"],[247,"const initialData = { name: 'New user' };\n\nconst { form, errors, enhance, validateForm } = superForm(\n  defaults(initialData, zod(loginSchema)), {\n    SPA: true,\n    validators: zod(loginSchema)\n    // ...\n  }\n);\n\nvalidateForm({ update: true });\n"],[139,"const loginForm = await superValidate(loginSchema, {\n-  id: 'loginForm'\n});\n\nconst registerForm = await superValidate(registerSchema, {\n-  id: 'registerForm'\n});\n\nreturn { loginForm, registerForm }\nconst form1 = await superValidate(schema, { id: 'form1' });\nconst form2 = await superValidate(schema, { id: 'form2' });\n\nreturn { form1, form2 };\n"],[237,"const proxyDate = dateProxy(form, 'date', { format: 'date' });\n<input\n  name=\"date\"\n  type=\"date\"\n  bind:value={$proxyDate}\n  aria-invalid={$errors.date ? 'true' : undefined}\n  {...$constraints.date}\n  min={$constraints.date?.min?.toString().slice(0, 10)}\n  max={$constraints.date?.max?.toString().slice(0, 10)}\n/>\n"],[194,"const refined = z.object({\n  tags: z.string().array().max(3)\n  password: z.string().min(8),\n  confirm: z.string().min(8)\n})\n.refine((data) => data.password == data.confirm, \"Passwords didn't match.\");\n"],[195,"const refined = z.object({\n  tags: z.string().array().max(3)\n  password: z.string().min(8),\n  confirm: z.string().min(8)\n})\n.refine((data) => data.password == data.confirm, {\n  message: \"Passwords didn't match\",\n  path: [\"confirm\"]\n});\n"],[80,"const schema = z\n  .object({\n    password: z.string().min(8),\n    confirmPassword: z.string()\n  })\n  .refine((data) => password == confirmPassword, `Passwords doesn't match.`);\nconst form = await superValidate(request, zod(schema));\n\nif (!form.valid) return fail(400, { form });\n\nif (form.data.password != form.data.confirmPassword) {\n  // Stays until form is posted again, regardless of client-side validation\n  return message(form, `Passwords doesn't match`, { status: 400 });\n}\n"],[47,"const schema = z.object({\n  age: z.number().positive().default('' as unknown as number),\n  agree: z.literal(true).default(false as true)\n});\n"],[21,"const schema = z.object({\n  date: z.date().optional()\n});\n<script lang=\"ts\">\n  import { superForm, dateProxy } from 'sveltekit-superforms';\n  import type { PageData } from './$types.js';\n\n  export let data: PageData;\n\n  const { form, enhance } = superForm(data.form);\n  const date = dateProxy(form, 'date', { format: 'date', empty: 'undefined' });\n</script>\n\n<input name=\"date\" type=\"date\" bind:value={$date} />\n"],[49,"const schema = z.object({\n  either: z.union([z.number(), z.string()]).default(123),\n  fish: z.enum(['Salmon', 'Tuna', 'Trout']) // Default will be 'Salmon'\n});\nconst schema2 = z.object({\n  fish: z.enum(['Salmon', 'Tuna', 'Trout']).nullable()\n});\n"],[214,"const schema = z.object({\n  images: z\n    .instanceof(File, { message: 'Please upload a file.'})\n    .refine((f) => f.size < 100_000, 'Max 100 kB upload size.')\n    .array()\n});\n<script lang=\"ts\">\n  import { superForm, filesProxy } from 'sveltekit-superforms'\n  import { zodClient } from 'sveltekit-superforms/adapters'\n  import { schema } from './schema.js'\n\n  export let data;\n\n  const { form, enhance, errors } = superForm(data.form, {\n    validators: zodClient(schema)\n  })\n\n  const files = filesProxy(form, 'images');\n</script>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" use:enhance>\n  <input\n    type=\"file\"\n    multiple\n    name=\"images\"\n    accept=\"image/png, image/jpeg\"\n    bind:files={$files}\n  />\n  {#if $errors.images}<span>{$errors.images}</span>{/if}\n  <button>Submit</button>\n</form>\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms'\n  import { zodClient } from 'sveltekit-superforms/adapters'\n  import { schema } from './schema.js'\n\n  export let data;\n\n  const { form, enhance, errors } = superForm(data.form, {\n    validators: zodClient(schema)\n  })\n</script>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" use:enhance>\n  <input\n    type=\"file\"\n    multiple\n    name=\"images\"\n    accept=\"image/png, image/jpeg\"\n    on:input={(e) => ($form.images = Array.from(e.currentTarget.files ?? []))}\n  />\n  {#if $errors.images}<span>{$errors.images}</span>{/if}\n  <button>Submit</button>\n</form>\n"],[197,"const schema = z.object({\n  name: z.string().min(2, \"Name is too short.\"),\n  email: z.string().email(\"That's a strange email.\")\n});\n"],[159,"const schema = z.object({\n  num: z.number()\n})\n\nconst proxy = intProxy(form, 'num', { empty: 'zero', initiallyEmptyIfZero: true })\n"],[232,"const schema = z.object({\n  tags: z\n    .object({\n      id: z.number().int().min(1),\n      name: z.string().min(2)\n    })\n    .array()\n});\n\nconst tags = [{ id: 1, name: 'test' }];\n\nexport const load = async () => {\n  const form = await superValidate({ tags }, zod(schema));\n  return { form };\n};\n<script lang=\"ts\">\n  const { form, errors, enhance } = superForm(data.form, {\n    dataType: 'json'\n  });\n</script>\n\n<form method=\"POST\" use:enhance>\n  {#each $form.tags as _, i}\n    <div>\n      Id\n      <input\n        type=\"number\"\n        data-invalid={$errors.tags?.[i]?.id}\n        bind:value={$form.tags[i].id} />\n      Name\n      <input\n        data-invalid={$errors.tags?.[i]?.name}\n        bind:value={$form.tags[i].name} />\n      {#if $errors.tags?.[i]?.id}\n        <br />\n        <span class=\"invalid\">{$errors.tags[i].id}</span>\n      {/if}\n      {#if $errors.tags?.[i]?.name}\n        <br />\n        <span class=\"invalid\">{$errors.tags[i].name}</span>\n      {/if}\n    </div>\n  {/each}\n  <button>Submit</button>\n</form>\n"],[147,"const schema = z.object({\n  tags: z.string().array().max(3)\n});\n\nconst { form, errors } = superForm(data.form);\n{#if $errors.tags._errors}\n  {$errors.tags._errors}\n{/if}\n"],[152,"const schema = z.object({\n  undecided: z.union([z.string(), z.number()]).default(0)\n})\n"],[50,"const schema2 = z.object({\n  fish: z.enum(['Salmon', 'Tuna', 'Trout']).default('' as 'Salmon')\n});\n"],[11,"defaults<T, M = any>(\n  data:\n    | Partial<T>\n    | null\n    | undefined,\n  schema: ClientValidationAdapter<T>,\n  options?: SuperValidateOptions\n): SuperValidated<T, M, In>\n"],[42,"export const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(crudSchema));\n    if (!form.valid) return fail(400, { form });\n\n    if (!form.data.id) {\n      // CREATE user\n      const user = { ...form.data, id: userId() };\n      users.push(user);\n\n      return message(form, 'User created!');\n    } else {\n      // UPDATE user\n      const index = users.findIndex((u) => u.id == form.data.id);\n      if (index == -1) throw error(404, 'User not found.');\n\n      users[index] = { ...form.data, id: form.data.id };\n      return message(form, 'User updated!');\n    }\n\n    return { form };\n  }\n};\n"],[64,"export const actions = {\n  default: async ({ request }) => {\n    const formData = await request.formData();\n\n    const form = await superValidate(formData, zod(schema));\n    const form2 = await superValidate(formData, zod(anotherSchema));\n\n    // Business as usual\n  }\n};\n"],[62,"export const actions = {\n  default: async ({ request }) => {\n    const formData = await request.formData();\n    const form = await superValidate(formData, zod(schema));\n\n    if (!form.valid) return fail(400, { form });\n\n    if (formData.has('extra')) {\n      // Do something with the extra data\n    }\n\n    return { form };\n  }\n};\nconst { form, errors, enhance } = superForm(data.loginForm, {\n  onSubmit({ formData }) {\n    formData.set('extra', 'value')\n  }\n})\n"],[215,"export const actions = {\n  default: async ({ request }) => {\n    const formData = await request.formData();\n    const form = await superValidate(formData, zod(schema));\n\n    if (!form.valid) return fail(400, withFiles({ form }));\n\n    const image = formData.get('image');\n    if (image instanceof File) {\n      // Validate and process the image.\n    }\n\n    return withFiles({ form });\n  }\n};\n"],[61,"export const actions = {\n  default: async ({ request, locals }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) return fail(400, { form });\n\n    // Return the username as extra data:\n    const userName = locals.currentUser.name;\n    return { form, userName };\n  }\n};\n<script lang=\"ts\">\n  import { superForm, type FormResult } from 'sveltekit-superforms';\n  import type { ActionData } from './$types.js';\n\n  export let data;\n\n  const { form, errors, message, enhance } = superForm(data.form, {\n    onUpdate({ form, result }) {\n      const action = result.data as FormResult<ActionData>;\n      if (form.valid && action.userName) {\n        // Do something with the extra data\n      }\n    }\n  });\n</script>\n<script lang=\"ts\">\n  import type { PageData, ActionData } from './$types.js';\n  import { superForm } from 'sveltekit-superforms/client'\n\n  export let data: PageData;\n  export let form: ActionData;\n\n  // Need to rename form here, since it's used by ActionData.\n  const { form: formData, errors, enhance } = superForm(data.form);\n</script>\n\n{#if form?.userName}\n  <p>Currently logged in as {form.userName}</p>\n{/if}\n"],[60,"export const load = (async ({ locals }) => {\n  const loginForm = await superValidate(zod(loginSchema));\n  const userName = locals.currentUser.name;\n  \n  return { loginForm, userName };\n})\n\n<script lang=\"ts\">\n  import type { PageData } from './$types.js';\n  export let data: PageData;\n\n  const { form, errors, enhance } = superForm(data.loginForm);\n</script>\n\n<p>Currently logged in as {data.userName}</p>\n"],[187,"export const load = async () => {\n  // No errors set, since no data is sent to superValidate\n  const form = await superValidate(zod(schema));\n\n  // No data, but errors can still be added with an option\n  const form2 = await superValidate(zod(schema), { errors: true });\n};\nexport const load = async () => {\n  const initialData = { test: 123 };\n\n  // Form is populated, so errors will be set if validation fails\n  const form = await superValidate(initialData, zod(schema));\n\n  // No errors will be set, even if validation fails\n  const form2 = await superValidate(initialData, zod(schema), { errors: false });\n};\n\nexport const actions = {\n  default: async ({ request }) => {\n    // Data is posted, so form.errors will be populated\n    const form = await superValidate(request, zod(schema));\n\n    // Unless we turn them off (which is rare in form actions)\n    const form2 = await superValidate(request, zod(schema), { errors: false });\n  }\n};\n"],[25,"export const loginSchema = z.object({\n  email: z.string().email(),\n  password: // ...\n});\n\nexport type LoginSchema = typeof loginSchema;\n<script lang=\"ts\">\n  import type { SuperValidated, Infer } from 'sveltekit-superforms';\n  import { superForm } from 'sveltekit-superforms'\n  import type { LoginSchema } from '$lib/schemas';\n\n  export let data: SuperValidated<Infer<LoginSchema>>;\n\n  const { form, errors, enhance } = superForm(data);\n</script>\n\n<form method=\"POST\" use:enhance>\n  <!-- Business as usual -->\n</form>\n<script lang=\"ts\">\n  export let data;\n</script>\n\n<LoginForm data={data.loginForm} />\n<RegisterForm data={data.registerForm} />\n<script lang=\"ts\">\n  import type { SuperValidated, Infer, InferIn } from 'sveltekit-superforms';\n  import { superForm } from 'sveltekit-superforms'\n  import type { LoginSchema } from '$lib/schemas';\n\n  export let data: SuperValidated<Infer<LoginSchema>, { status: number, text: string }, InferIn<LoginSchema>>;\n\n  const { form, errors, enhance, message } = superForm(data);\n</script>\n\n{#if $message.text}\n  ...\n{/if}\n\n<form method=\"POST\" use:enhance>\n  <!-- Business as usual -->\n</form>\n"],[213,"export const schema = z.object({\n  image: z\n    .instanceof(File, { message: 'Please upload a file.'})\n    .refine((f) => f.size < 100_000, 'Max 100 kB upload size.')\n});\n<script lang=\"ts\">\n  import { superForm, fileProxy } from 'sveltekit-superforms'\n  import { zodClient } from 'sveltekit-superforms/adapters'\n  import { schema } from './schema.js'\n\n  export let data;\n\n  const { form, enhance, errors } = superForm(data.form, {\n    validators: zodClient(schema)\n  })\n\n  const file = fileProxy(form, 'image')\n</script>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" use:enhance>\n  <input\n    type=\"file\"\n    name=\"image\"\n    accept=\"image/png, image/jpeg\"\n    bind:files={$file}\n  />\n  {#if $errors.image}<span>{$errors.image}</span>{/if}\n  <button>Submit</button>\n</form>\n<script lang=\"ts\">\n  import { superForm } from 'sveltekit-superforms'\n  import { zodClient } from 'sveltekit-superforms/adapters'\n  import { schema } from './schema.js'\n\n  export let data;\n\n  const { form, enhance, errors } = superForm(data.form, {\n    validators: zodClient(schema)\n  })\n</script>\n\n<form method=\"POST\" enctype=\"multipart/form-data\" use:enhance>\n  <input\n    type=\"file\"\n    name=\"image\"\n    accept=\"image/png, image/jpeg\"\n    on:input={(e) => ($form.image = e.currentTarget.files?.item(0) as File)}\n  />\n  {#if $errors.image}<span>{$errors.image}</span>{/if}\n  <button>Submit</button>\n</form>\n"],[233,"export const schema = z.object({\n  tags: z.string().min(2).array().max(3)\n});\n<script lang=\"ts\">\n  const { form, errors } = superForm(data.form);\n</script>\n\n<form method=\"POST\">\n  <div>Tags</div>\n  {#if $errors.tags?._errors}\n    <div class=\"invalid\">{$errors.tags._errors}</div>\n  {/if}\n\n  {#each $form.tags as _, i}\n    <div>\n      <input name=\"tags\" bind:value={$form.tags[i]} />\n      {#if $errors.tags?.[i]}\n        <span class=\"invalid\">{$errors.tags[i]}</span>\n      {/if}\n    </div>\n  {/each}\n\n  <button>Submit</button>\n</form>\n"],[93,"export default defineConfig({\n   plugins: [sveltekit()],\n   test: {\n     include: ['src/**/*.{test,spec}.{js,ts}']\n   },\n+  define: {\n+    SUPERFORMS_LEGACY: true\n+  }\n});\n"],[105,"export enum Foo {\n  A = 2,\n  B = 3\n}\n\nconst schema = z.object({\n  foo: z.nativeEnum(Foo), // Default is Foo.A, field is required\n  zodEnum: z.enum(['a', 'b', 'c']).default('b') // Explicit default 'b', field is optional\n})\n"],[229,"form.update(\n  ($form) => {\n    $form.name = \"New name\";\n    return $form;\n  },\n  { taint: false }\n);\n{ taint: boolean | 'untaint' | 'untaint-form' }\n"],[12,"import {\n  // The primitives return a Writable<string>:\n  booleanProxy,\n  dateProxy,\n  intProxy,\n  numberProxy,\n  stringProxy,\n  // File proxies\n  fileProxy,\n  fileFieldProxy, // formFieldProxy\n  // File[] proxies\n  filesProxy,\n  filesFieldProxy, // arrayProxy\n  // The type of the others depends on the field:\n  formFieldProxy,\n  arrayProxy,\n  fieldProxy      \n} from 'sveltekit-superforms';\n"],[235,"import {\n  // The primitives return a Writable<string>:\n  booleanProxy,\n  dateProxy,\n  intProxy,\n  numberProxy,\n  stringProxy,\n  // The type of the other three depends on the field:\n  formFieldProxy,\n  arrayProxy,\n  fieldProxy      \n} from 'sveltekit-superforms';\nimport { superForm, intProxy } from 'sveltekit-superforms';\n\n// Assume the following schema:\n// { id: number }\n\nconst superform = superForm(data.form);\nconst { form, errors, enhance } = superform;\n\n// Returns a Writable<string>\nconst idProxy = intProxy(form, 'id');\n\n// Use the whole superForm object to prevent tainting\nconst idProxy2 = intProxy(superform, 'id', { taint: false });\n"],[8,"import { actionResult } from 'sveltekit-superforms';\n\nactionResult('success', { form }, 200);\nactionResult('failure', { form }, 400);\nactionResult('redirect', '/', 303);\nactionResult('error', 'Error message', 500);\nactionResult('redirect', '/', {\n  message: { type: 'success', text: 'Posted successfully!' },\n  cookieOptions: { sameSite: 'lax' }\n});\n"],[9,"import { actionResult, superValidate } from '$lib/server';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(5)\n});\n\nexport const POST = async ({ request }) => {\n  const form = await superValidate(request, zod(loginSchema));\n  if (!form.valid) return actionResult('failure', { form });\n\n  // Verify login here //\n\n  return actionResult('success', { form });\n};\n"],[98,"import { defaults } from 'sveltekit-superforms'\n\n// Getting the default values from the schema:\nconst { form, errors, enhance } = superForm(defaults(zod(schema)), {\n  SPA: true,\n  validators: zod(schema),\n  // ...\n})\nimport { defaults } from 'sveltekit-superforms'\n\n// Supplying initial data (can be partial, won't be validated)\nconst initialData = { name: 'New user' }\nconst { form, errors, enhance } = superForm(defaults(initialData, zod(schema)), {\n  SPA: true,\n  validators: zod(schema),\n  // ...\n})\n"],[7,"import { defaultValues } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().min(2),\n  tags: z.string().min(1).array().default(['a', 'b'])\n});\n\n// Returns { name: '', tags: ['a', 'b'] }\nconst defaults = defaultValues(zod(schema));\n"],[140,"import { defaultValues } from 'sveltekit-superforms/server';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().min(2),\n  tags: z.string().min(1).array().default(['a', 'b'])\n});\n\n// Returns { name: '', tags: ['a', 'b'] }\nconst defaults = defaultValues(schema);\n\n// Which is the same as form.data in superValidate\n// when called with only the schema:\nconst form = await superValidate(schema);\n"],[271,"import { error } from '@sveltejs/kit';\n\nexport const load = async ({ params }) => {\n  // Replace with your database\n  const user = db.users.findUnique({\n    where: { id: params.id }\n  });\n\n  if (!user) error(404, 'Not found');\n\n  const form = await superValidate(user, your_adapter(schema));\n\n  // Always return { form } in load functions\n  return { form };\n};\n"],[117,"import { error } from '@sveltejs/kit';\nimport { RateLimiter } from 'sveltekit-rate-limiter/server';\n\nconst limiter = new RateLimiter({\n  IP: [10, 'h'], // IP address limiter\n  IPUA: [5, 'm'], // IP + User Agent limiter\n});\n\nexport const actions = {\n  default: async (event) => {\n    // Every call to isLimited counts as a hit towards the rate limit for the event.\n    if (await limiter.isLimited(event)) error(429);\n  }\n};\n"],[244,"import { error } from '@sveltejs/kit';\nimport { superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nexport const _userSchema = z.object({\n  id: z.number().int().positive(),\n  name: z.string().min(2),\n  email: z.string().email()\n});\n\nexport const load = async ({ params, fetch }) => {\n  const id = parseInt(params.id);\n\n  const request = await fetch(\n    `https://jsonplaceholder.typicode.com/users/${id}`\n  );\n  if (request.status >= 400) throw error(request.status);\n\n  const userData = await request.json();\n  const form = await superValidate(userData, zod(_userSchema));\n\n  return { form };\n};\n"],[211,"import { message, setError, fail } from 'sveltekit-superforms';\n\n// message, setError and the custom fail handles this automatically:\nif (!form.valid) return fail(400, { form });\nreturn message(form, 'Posted OK!');\nreturn setError(form, 'image', 'Could not process file.');\n// Importing the default fail\nimport { fail } from '@sveltejs/kit';\nimport { withFiles } from 'sveltekit-superforms';\n\n// With the @sveltejs/kit fail:\nif (!form.valid) {\n  return fail(400, withFiles({ form }));\n}\n\n// When returning just the form:\nreturn withFiles({ form })\n"],[219,"import { message, superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\nexport const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) {\n      // Will return fail(400, { form }) since form isn't valid\n      return message(form, 'Invalid form');\n    }\n\n    if (form.data.email.includes('spam')) {\n      // Will also return fail, since status is >= 400\n      // form.valid will also be set to false.\n      return message(form, 'No spam please', {\n        status: 403\n      });\n    }\n\n    // Just returns { form } with the message (and status code 200).\n    return message(form, 'Valid form!');\n  }\n};\nreturn message(form, { text: 'User created', id: newId })\n"],[142,"import { setError } from 'sveltekit-superforms/server'\n\nconst i = 1;\n\n- setError(form, ['tags', i, 'name'], 'Incorrect name');\n+ setError(form, `tags[${i}].name`, 'Incorrect name');\nimport { intProxy } from 'sveltekit-superforms/client'\n\nconst { form } = superForm(data.form);\n\n- const idProxy = intProxy(form, ['user', 'profile', 'id']);\n+ const idProxy = intProxy(form, 'user.profile.id');\n"],[185,"import { setError, superValidate, fail } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\nexport const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) {\n      return fail(400, { form });\n    }\n\n    if (db.users.find({ where: { email: form.data.email } })) {\n      return setError(form, 'email', 'E-mail already exists.');\n    }\n\n    return { form };\n  }\n};\nsetError(form, `post.tags[${i}].name`, 'Invalid tag name.');\n"],[68,"import { superForm } from 'sveltekit-superforms';\n\nexport type Message = {\n  status: 'success' | 'error' | 'warning';\n  text: string;\n};\n\n// If no strongly type message is needed, leave out the M type parameter\nexport function mySuperForm<T extends Record<string, unknown>, M = Message>(\n  ...params: Parameters<typeof superForm<T, M>>\n) {\n  return superForm<T, M>(params[0], {\n    // Your defaults here\n    errorSelector: '.has-error',\n    delayMs: 300,\n    ...params[1]\n  });\n}\n"],[203,"import { superForm } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { customSchema } from './schemas.js';\n\nlet step = 1;\nconst lastStep = 5;\n\nconst { form, enhance } = superForm(data.form, {\n  onSubmit({ validators }) {\n    if(step == 1) validators(zod(customSchema));\n    else if(step == lastStep) validators(false);\n  }\n});\n"],[15,"import { superForm, booleanProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = booleanProxy(form, 'field', { options });\n{\n  trueStringValue = 'true';\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"],[16,"import { superForm, dateProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = dateProxy(form, 'field', { options });\n{\n  format:\n    // Extract the part of the date as a substring:\n    | 'date' | 'datetime' | 'time'\n    // Convert the date to UTC:\n    | 'date-utc' | 'datetime-utc' | 'time-utc'\n    // Convert the date to local time:\n    | 'date-local' | 'datetime-local' | 'time-local'\n    // The default ISODateString:\n    | 'iso' = 'iso';\n  empty?: 'null' | 'undefined';\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"],[13,"import { superForm, intProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = intProxy(form, 'field', { options });\n{ \n  empty?: 'null' | 'undefined' | 'zero';\n  initiallyEmptyIfZero?: boolean;\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"],[14,"import { superForm, numberProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = numberProxy(form, 'field', { options });\n{ \n  empty?: 'null' | 'undefined' | 'zero';\n  initiallyEmptyIfZero?: boolean;\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"],[17,"import { superForm, stringProxy } from 'sveltekit-superforms';\nexport let data;\n\nconst { form } = superForm(data.form);\nconst proxy = stringProxy(form, 'field', { options });\n{\n  empty: 'null' | 'undefined';\n  taint?: boolean | 'untaint' | 'untaint-form';\n}\n"],[111,"import { superForm, superValidate, dateProxy } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport SuperDebug from 'sveltekit-superforms';\n"],[160,"import { superForm, superValidate, dateProxy } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport SuperDebug from 'sveltekit-superforms';\n"],[202,"import { superForm, type FormPath } from 'sveltekit-superforms'\n\nconst { form, enhance, isTainted } = superForm(data.form, {\n  dataType: 'json',\n  onSubmit({ jsonData }) {\n    // Only post tainted (top-level) fields\n    const taintedData = Object.fromEntries(\n      Object.entries($form).filter(([key]) => {\n        return isTainted(key as FormPath<typeof $form>)\n      })\n    )\n    // Set data to be posted\n    jsonData(taintedData);\n  }\n});\n"],[94,"import { superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\nconst form = await superValidate(zod(schema));\nimport { type } from 'arktype';\n\n// Arktype schema, powerful stuff\nconst schema = type({\n  name: 'string',\n  email: 'email',\n  tags: '(string>=2)[]>=3',\n  score: 'integer>=0'\n});\n\nconst defaults = { name: '', email: '', tags: [], score: 0 };\n\nexport const load = async () => {\n  const form = await superValidate(arktype(schema, { defaults }));\n  return { form };\n};\n"],[250,"import { superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().min(1)\n})\n.catchall(z.number().int()); // All unknown fields should be integers\n\nexport const actions = {\n  default: async ({ request }) => {\n    const form = await superValidate(request, zod(schema));\n\n    if (!form.valid) {\n      return fail(400, { form });\n    }\n\n    // Typed as string, as expected\n    console.log(form.data.name);\n    // All other keys are typed as number\n    console.log(form.data.first, form.data.second);\n\n    return { form };\n  }\n};\n"],[41,"import { superValidate, message } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\nimport { error, fail, redirect } from '@sveltejs/kit';\nimport { users, userId } from '$lib/users';\n\nexport const load = async ({ url, params }) => {\n  // READ user\n  const user = users.find((u) => u.id == params.id);\n\n  if (params.id && !user) throw error(404, 'User not found.');\n\n  // If user is null, default values for the schema will be returned.\n  const form = await superValidate(user, zod(crudSchema));\n  return { form, users };\n};\n<script lang=\"ts\">\n  import type { PageData } from './$types.js';\n  import { page } from '$app/stores';\n  import { superForm } from 'sveltekit-superforms';\n\n  export let data: PageData;\n\n  const { form, errors, constraints, enhance, delayed, message } = superForm(\n    data.form, {\n      resetForm: false\n    }\n  );\n</script>\n\n{#if $message}\n  <h3 class:invalid={$page.status >= 400}>{$message}</h3>\n{/if}\n\n<h2>{!$form.id ? 'Create' : 'Update'} user</h2>\n<form method=\"POST\" use:enhance>\n  <input type=\"hidden\" name=\"id\" bind:value={$form.id} />\n\n  <label>\n    Name<br />\n    <input\n      name=\"name\"\n      aria-invalid={$errors.name ? 'true' : undefined}\n      bind:value={$form.name}\n      {...$constraints.name} />\n    {#if $errors.name}<span class=\"invalid\">{$errors.name}</span>{/if}\n  </label>\n\n  <label>\n    E-mail<br />\n    <input\n      name=\"email\"\n      type=\"email\"\n      aria-invalid={$errors.email ? 'true' : undefined}\n      bind:value={$form.email}\n      {...$constraints.email} />\n    {#if $errors.email}<span class=\"invalid\">{$errors.email}</span>{/if}\n  </label>\n\n  <button>Submit</button> {#if $delayed}Working...{/if}\n</form>\n\n<style>\n  .invalid {\n    color: red;\n  }\n</style>\n<script>\n  import SuperDebug from 'sveltekit-superforms';\n</script>\n\n<SuperDebug data={$form} />\n"],[220,"import { type Infer, superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\n// Inferred schema type as first parameter, message type second\nconst form = await superValidate<Infer<typeof schema>, string>(event, zod(schema));\nimport { type Infer, superValidate } from 'sveltekit-superforms';\nimport { zod } from 'sveltekit-superforms/adapters';\n\ntype Message = { status: 'error' | 'success' | 'warning'; text: string };\n\nconst form = await superValidate<Infer<typeof schema>, Message>(event, zod(schema));\ndeclare global {\n  namespace App {\n    // interface Error {}\n    // interface Locals {}\n    // interface PageData {}\n    // interface Platform {}\n    namespace Superforms {\n      type Message = {\n        type: 'error' | 'success', text: string\n      }\n    }\n  }\n}\n<script lang=\"ts\">\n  import type { PageData } from './$types.js';\n  export let data: PageData;\n\n  const { form, message } = superForm(data.form);\n</script>\n\n{#if $message}\n  <div \n    class:success={$message.status == 'success'} \n    class:error={$message.status == 'error'}\n  >\n    {$message.text}\n  </div>\n{/if}\n<script lang=\"ts\">\n  import { page } from '$app/stores';\n  import type { PageData } from './$types.js';\n\n  export let data: PageData;\n\n  const { form, message } = superForm(data.form);\n</script>\n\n{#if $message}\n  <div \n    class:success={$page.status == 200} \n    class:error={$page.status >= 400}\n  >\n    {$message}\n  </div>\n{/if}\n"],[40,"import { userSchema } from '$lib/users';\n\nconst crudSchema = userSchema.extend({\n  id: userSchema.shape.id.optional()\n});\n"],[169,"import { valibot } from 'sveltekit-superforms/adapters';\nimport { schema, partialSchema } from './schema.js';\n\nconst { form, errors, enhance, options } = superForm(data.form, {\n  // Validate the first step of the form\n  validators: valibot(partialSchema)\n});\n\n// When moving to the last step of the form\noptions.validators = valibot(schema)\n"],[96,"import { valibotClient } from 'sveltekit-superforms/adapters';\nimport { schema } from './schema.js';\n\nconst { form, errors, enhance, options } = superForm(data.form, {\n  validators: valibotClient(schema)\n});\nimport type { Infer } from 'sveltekit-superforms';\nimport type { schema } from './schema.js';\nimport { superformClient } from 'sveltekit-superforms/adapters';\n\nconst { form, errors, enhance } = superForm(data.form, {\n  validators: superformClient<Infer<typeof schema>>({\n    name: (name?) => { \n      if(!name || name.length < 2) return 'Name must be at least two characters' \n    }\n  })\n});\n"],[39,"import { z } from 'zod';\n\n// See https://zod.dev/?id=primitives for schema syntax\nexport const userSchema = z.object({\n  id: z.string().regex(/^\\\\d+$/),\n  name: z.string().min(2),\n  email: z.string().email()\n});\n\ntype UserDB = z.infer<typeof userSchema>[];\n\n// Let's worry about id collisions later\nexport const userId = () => String(Math.random()).slice(2);\n\n// A simple user \"database\"\nexport const users: UserDB = [\n  {\n    id: userId(),\n    name: 'Important Customer',\n    email: 'important@example.com'\n  },\n  {\n    id: userId(),\n    name: 'Super Customer',\n    email: 'super@example.com'\n  }\n];\n"],[70,"import * as flashModule from 'sveltekit-flash-message/client';\n\nconst { form, errors, enhance } = superForm(data.form, {\n  flashMessage: {\n    module: flashModule,\n    onError?: ({ result, flashMessage }) => {\n      // Error handling for the flash message:\n      // - result is the ActionResult\n      // - flashMessage is the flash store (not the status message store)\n      const errorMessage = result.error.message\n      flashMessage.set(/* Your flash message type */);\n    }\n  },\n  syncFlashMessage: false\n}\n"],[97,"import type { Infer } from 'sveltekit-superforms'\nimport { zod } from 'sveltekit-superforms/adapters'\nimport { schema } from './schema.js'\n\ntype Message = { status: 'success' | 'failure', text: string }\n\nconst form = await superValidate<Infer<typeof schema>, Message>(zod(schema));\nimport type { LoginSchema } from '$lib/schemas';\nimport type { Infer } from 'sveltekit-superforms'\n\nexport let data: SuperValidated<Infer<LoginSchema>>;\nimport type { Infer, InferIn } from 'sveltekit-superforms'\nimport { zod } from 'sveltekit-superforms/adapters'\nimport { schema } from './schema.js'\n\ntype Message = { status: 'success' | 'failure', text: string }\ntype Validated = SuperValidated<Infer<typeof schema>, Message, InferIn<typeof schema>>;\n\nconst form : Validated = await superValidate(zod(schema));\n"],[6,"message(\n  form: SuperValidated<T, M, In>,\n  message: M,\n  options?: { status? : NumericRange<400, 599> }\n) : { form: SuperValidated<T, M, In> } | ActionFailure<{form: SuperValidated<T, M, In>}>\nimport { message, superValidate } from 'sveltekit-superforms/server';\n\nexport const actions = {\n  default: async (event) => {\n    const form = await superValidate<typeof schema, string>(event, schema);\n\n    if (!form.valid) {\n      // Will return fail(400, { form }) since form isn't valid\n      return message(form, 'Invalid form');\n    }\n\n    if (form.data.email.includes('spam')) {\n      // Will return fail and set form.valid = false, since status is >= 400\n      return message(form, 'No spam please', {\n        status: 403\n      });\n    }\n\n    // Returns { form }\n    return message(form, 'Valid form!');\n  }\n};\n"],[78,"No form data sent to superForm, schema type safety cannot be guaranteed. Also, no constraints will exist for the form.\nSet the warnings.noValidationAndConstraints option to false to disable this warning.\n"],[38,"npm create svelte@latest\npnpm create svelte@latest\n<link rel=\"stylesheet\" href=\"https://unpkg.com/normalize.css@8.0.1/normalize.css\" />\n<link rel=\"stylesheet\" href=\"https://unpkg.com/sakura.css/css/sakura.css\" />\n"],[265,"npm create svelte@latest\npnpm create svelte@latest\nyarn create svelte@latest\n"],[32,"npm install\nnpm run dev\npnpm install\npnpm dev\n"],[208,"onError: (({ result }) => void) | 'apply'\nApp.Error | Error | { message: string }\nconst { form, enhance, message } = superForm(data.form, {\n  onError({ result }) {\n    $message = result.error.message || \"Unknown error\";\n  }\n});\n"],[204,"onResult: ({ result, formElement, cancel }) => void\n"],[201,"onSubmit: ({\n  action, formData, formElement, controller, submitter, cancel,\n  jsonData, validators\n}) => void;\n"],[206,"onUpdate: ({ form, formElement, cancel, result }) => void\nimport { superForm, type FormResult } from 'sveltekit-superforms';\nimport type { ActionData, PageData } from './$types.js';\n\nexport let data: PageData;\n\nconst { form, errors, message, enhance } = superForm(data.form, {\n  onUpdate({ form, result }) {\n    const action = result.data as FormResult<ActionData>;\n    // If you've returned from the form action:\n    // return { form, extra: 123 }\n    if (form.valid && action.extra) {\n      // Do something with the extra data\n    }\n  }\n});\n"],[207,"onUpdated: ({ form }) => void\nconst { form, enhance } = superForm(data.form, {\n  onUpdated({ form }) {\n    if (form.valid) {\n      // Successful post! Do some more client-side stuff,\n      // like showing a toast notification.\n      toast(form.message, { icon: '✅' });\n    }\n  }\n});\n"],[221,"return message(form, { status: 'success', text: 'All went well' });\nconst { form, enhance } = superForm(data.form, {\n  onUpdated({ form }) {\n    if (form.message) {\n      // Display the message using a toast library\n      toast(form.message.text, {\n        icon: form.message.status == 'success' ? '✅' : '❌'\n      });\n    }\n  }\n});\n"],[5,"setError(\n  form: SuperValidated<T, M, In>,\n  field: '' | FormPathLeaves<T>,\n  error: string | string[],\n  options?: { overwrite = false, status : ErrorStatus = 400 }\n) : ActionFailure<{form: SuperValidated<T, M, In>}>\n"],[2,"superValidate<T, M = any, In = T>(\n  adapter: ValidationAdapter<T, In>,\n  options?: SuperValidateOptions\n): Promise<SuperValidated<T, M, In>>\nsuperValidate<T, M = any, In = T>(\n  data:\n    | RequestEvent\n    | Request\n    | FormData\n    | URL\n    | URLSearchParams\n    | Partial<In>\n    | null\n    | undefined,\n  adapter: ValidationAdapter<T, In>,\n  options?: SuperValidateOptions\n): Promise<SuperValidated<T, M, In>>\n"],[4,"SuperValidated<T, M = any, In = T> = {\n  id: string;\n  valid: boolean;\n  posted: boolean;\n  data: T;\n  errors: Nested<T, string[] | undefined>;\n  constraints?: Nested<T, InputConstraints | undefined>;\n  message?: M;\n};\n{\n  id: string;\n  valid: false;\n  posted: false;\n  errors: options.errors ? Nested<T, string[] | undefined> : {};\n  data: T;\n  constraints: Nested<T, InputConstraints>;\n}\n"],[3,"SuperValidateOptions = {\n  errors?: boolean;           // Add or remove errors from output (valid status is always preserved)\n  id?: string;                // Form id, for multiple forms support. Set automatically by default\n  preprocessed?: (keyof T)[]; // Bypass superValidate data coercion for posted fields in this array\n  defaults?: T;               // Override default values from the schema\n  jsonSchema?: JSONSchema;    // Override JSON schema from the adapter\n  strict?: boolean;           // If true, validate exactly the posted data, no defaults added\n  allowFiles?: boolean;       // If false, set all posted File objects to undefined\n}\n"],[10,"type FormOptions<T, M, In> = Partial<{\n  // Basics\n  id: string;\n  applyAction: boolean;\n  invalidateAll: boolean | 'force';\n  resetForm: boolean | (() => boolean);\n  taintedMessage: boolean | string | (() => Promise<boolean>);\n  dataType: 'form' | 'json';\n  multipleSubmits: 'prevent' | 'allow' | 'abort';\n  SPA: true | { failStatus?: number } | string;\n\n  // Error handling\n  scrollToError: 'auto' | 'smooth' | 'off' | boolean | ScrollIntoViewOptions;\n  autoFocusOnError: 'detect' | boolean;\n  errorSelector: string;\n  selectErrorText: boolean;\n  stickyNavbar: string;\n\n  // Events\n  onSubmit: (\n    submit: Parameters<SubmitFunction> & { \n      jsonData: (data: Record<string, unknown>) => void,\n      validators: (validators: ValidationAdapter<Partial<T>, Record<string, unknown>> | false) => void\n    }\n  ) => MaybePromise<unknown | void>;\n  onResult: (event: {\n    result: ActionResult;\n    formEl: HTMLFormElement;\n    cancel: () => void;\n  }) => MaybePromise<unknown | void>;\n  onUpdate: (event: {\n    form: SuperValidated<T, M, In>;\n    formEl: HTMLFormElement;\n    cancel: () => void;\n    result: Extract<ActionResult, { type: 'success' | 'failure' }>;\n  }) => MaybePromise<unknown | void>;\n  onUpdated: (event: {\n    form: Readonly<SuperValidated<T, M, In>>;\n  }) => MaybePromise<unknown | void>;\n  onChange: (event: ChangeEvent) => void;\n  onError:\n    | 'apply'\n    | ((event: {\n        result: {\n          type: 'error';\n          status?: number;\n          error: App.Error | Error | { message: string };\n        };\n        message: Writable<SuperValidated<T, M, In>['message']>;\n      }) => MaybePromise<unknown | void>);\n\n  // Client-side validation\n  validators:\n    | ClientValidationAdapter<Partial<T>, Record<string, unknown>>\n    | ValidationAdapter<Partial<T>, Record<string, unknown>>\n    | false\n    | 'clear';\n  validationMethod: 'auto' | 'oninput' | 'onblur' | 'onsubmit';\n  clearOnSubmit: 'errors-and-message' | 'message' | 'errors' | 'none';\n  delayMs: number;\n  timeoutMs: number;\n\n  // Special flash message integration (not usually required)\n  syncFlashMessage?: boolean;\n  flashMessage: {\n    module: import * as flashModule from 'sveltekit-flash-message/client';\n    onError?: (event: {\n      result: {\n        type: 'error';\n        status?: number;\n        error: App.Error;\n      };\n      message: Writable<App.PageData['flash']>;\n    }) => MaybePromise<unknown | void>;\n    cookiePath?: string;\n    cookieName?: string;\n  };\n\n  // Disable warnings\n  warnings: {\n    duplicateId?: boolean;\n  };\n}>;\n\ntype ChangeEvent<T> =\n{\n  path: FormPath<T>;\n  paths: FormPath<T>[];\n  formElement: HTMLFormElement;\n  target: Element;\n  set: <Path extends FormPath<T>>(\n    path: Path,\n    value: FormPathType<T, Path>,\n    options?: { taint?: boolean | 'untaint' | 'untaint-form' }\n  ) => void;\n  get: <Path extends FormPath<T>>(path: Path) => FormPathType<T, Path>;\n} | {\n  target: undefined;\n  paths: FormPath<T>[];\n  set: <Path extends FormPath<T>>(\n    path: Path,\n    value: FormPathType<T, Path>,\n    options?: { taint?: boolean | 'untaint' | 'untaint-form' }\n  ) => void;\n  get: <Path extends FormPath<T>>(path: Path) => FormPathType<T, Path>;\n};\n"],[1,"type T = {\n  name?: string | undefined,\n  email: string\n};\ntype Nested<T, string[]> = {\n  name: string[],\n  email: string[]\n};\ntype M = any;\nimport type { Infer, InferIn } from 'sveltekit-superforms';\nimport { zod, zodClient } from 'sveltekit-superforms/adapters';\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().min(3)\n})\n\n// Type is now ValidationAdapter<Infer<typeof schema>, InferIn<typeof schema>>\n// Which is the same as ValidationAdapter<{name: string}, {name: string}>\nconst adapter = zod(schema);\n"],[170,"validationMethod: 'auto' | 'oninput' | 'onblur' | 'onsubmit',\n"],[168,"validators: ClientValidationAdapter<S> | 'clear' | false\nimport { valibotClient } from 'sveltekit-superforms/adapters';\nimport { schema } from './schema.js';\n\nconst { form, errors, enhance } = superForm(data.form, {\n  validators: valibotClient(schema)\n});\n"],[267,"import { type } from 'arktype';\n\nconst schema = type({\n  name: 'string',\n  email: 'email'\n});\nimport Joi from 'joi';\n\nconst schema = Joi.object({\n  name: Joi.string().default('Hello world!'),\n  email: Joi.string().email().required()\n});\nimport type { JSONSchema } from 'sveltekit-superforms';\n\nexport const schema = {\n  type: 'object',\n  properties: {\n    name: { type: 'string', minLength: 2, default: 'Hello world!' },\n    email: { type: 'string', format: 'email' }\n  },\n  required: ['name', 'email'],\n  additionalProperties: false,\n  $schema: 'http://json-schema.org/draft-07/schema#'\n} as const satisfies JSONSchema; // Define as const to get type inference\nimport { Type } from '@sinclair/typebox';\n\nconst schema = Type.Object({\n  name: Type.String({ default: 'Hello world!' }),\n  email: Type.String({ format: 'email' }),\n});\nimport { object, string, email, optional } from 'valibot';\n\nconst schema = object({\n  name: optional(string(), 'Hello world!'),\n  email: string([email()]),\n});\nimport Vine from '@vinejs/vine';\n\nconst schema = Vine.object({\n  name: Vine.string(),\n  email: Vine.string().email()\n});\nimport { object, string } from 'yup';\n\nconst schema = object({\n  name: string().default('Hello world!'),\n  email: string().email().required(),\n});\nimport { z } from 'zod';\n\nconst schema = z.object({\n  name: z.string().default('Hello world!'),\n  email: z.string().email()\n});\n"]],"type":"string"}},"enabled":true,"isSorted":true},"language":"english"}